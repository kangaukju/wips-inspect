!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
ABORT	aireplay-ng.c	83;"	d	file:
ABORT	tkiptun-ng.c	82;"	d	file:
ABS	common.h	74;"	d
AC	MD5_std.h	/^	MD5_word AC[64];$/;"	m	struct:__anon32
AC2IFP	include/if_arp.h	110;"	d
ACCESS_NETWORK_QUERY_PROTOCOL	ieee802_11_defs.h	/^	ACCESS_NETWORK_QUERY_PROTOCOL = 0,$/;"	e	enum:adv_proto_id
AC_ROOT	Makefile	/^AC_ROOT		= ..$/;"	m
AC_ROOT	osdep/Makefile	/^AC_ROOT	= ..\/..$/;"	m
ADAPTER_KEY	osdep/tap-win32/common.h	63;"	d
ADV_PROTO_VENDOR_SPECIFIC	ieee802_11_defs.h	/^	ADV_PROTO_VENDOR_SPECIFIC = 221$/;"	e	enum:adv_proto_id
AES_KEY	gcrypt-openssl-wrapper.h	50;"	d
AES_encrypt	gcrypt-openssl-wrapper.h	51;"	d
AES_set_encrypt_key	gcrypt-openssl-wrapper.h	52;"	d
AIRCAP_DATA	aircapture.h	/^} __packed AIRCAP_DATA;$/;"	t	typeref:struct:_AIRCAP_DATA
AIRCAP_G	aircapture.h	/^} AIRCAP_G;$/;"	t	typeref:struct:_AIRCAP_G
AIRCAP_SAMPLE_DATA	aircapture.h	/^} __packed AIRCAP_SAMPLE_DATA;$/;"	t	typeref:struct:_AIRCAP_SAMPLE_DATA
AIRCRACK_NG_BIG_ENDIAN	osdep/byteorder.h	249;"	d
AIRCRACK_NG_BIG_ENDIAN	osdep/byteorder.h	251;"	d
AIRCRACK_NG_BIG_ENDIAN	osdep/byteorder.h	253;"	d
AIRCRACK_NG_BYTE_ORDER	osdep/byteorder.h	210;"	d
AIRCRACK_NG_BYTE_ORDER	osdep/byteorder.h	262;"	d
AIRCRACK_NG_BYTE_ORDER	osdep/byteorder.h	264;"	d
AIRCRACK_NG_BYTE_ORDER	osdep/byteorder.h	268;"	d
AIRCRACK_NG_BYTE_ORDER	osdep/byteorder.h	270;"	d
AIRCRACK_NG_BYTE_ORDER	osdep/byteorder.h	274;"	d
AIRCRACK_NG_BYTE_ORDER	osdep/byteorder.h	276;"	d
AIRCRACK_NG_BYTE_ORDER_DEFINED	osdep/byteorder.h	121;"	d
AIRCRACK_NG_BYTE_ORDER_DEFINED	osdep/byteorder.h	176;"	d
AIRCRACK_NG_BYTE_ORDER_DEFINED	osdep/byteorder.h	208;"	d
AIRCRACK_NG_BYTE_ORDER_DEFINED	osdep/byteorder.h	223;"	d
AIRCRACK_NG_BYTE_ORDER_DEFINED	osdep/byteorder.h	97;"	d
AIRCRACK_NG_LITTLE_ENDIAN	osdep/byteorder.h	241;"	d
AIRCRACK_NG_LITTLE_ENDIAN	osdep/byteorder.h	243;"	d
AIRCRACK_NG_LITTLE_ENDIAN	osdep/byteorder.h	245;"	d
AIRODUMP_NG_CAP_EXT	airodump-ng.h	129;"	d
AIRODUMP_NG_CSV_EXT	airodump-ng.h	125;"	d
AIRODUMP_NG_GPS_EXT	airodump-ng.h	128;"	d
AIRSHOOT_G	airshooter.h	/^} AIRSHOOT_G;$/;"	t	typeref:struct:_AIRSHOOT_G
AIRSHOOT_RESULT	airshooter.h	/^} AIRSHOOT_RESULT;$/;"	t	typeref:struct:_AIRSHOOT_RESULT
AIR_COMM_SOCK_H_	airsock.h	9;"	d
ALLOW_MACS	airbase-ng.c	101;"	d	file:
ALL_WPA1_TAGS	airbase-ng.c	150;"	d	file:
ALL_WPA2_TAGS	airbase-ng.c	145;"	d	file:
ANQP_3GPP_CELLULAR_NETWORK	ieee802_11_defs.h	/^	ANQP_3GPP_CELLULAR_NETWORK = 264,$/;"	e	enum:anqp_info_id
ANQP_ADVICE_OF_CHARGE	ieee802_11_defs.h	/^	ANQP_ADVICE_OF_CHARGE = 278,$/;"	e	enum:anqp_info_id
ANQP_AP_CIVIC_LOCATION	ieee802_11_defs.h	/^	ANQP_AP_CIVIC_LOCATION = 266,$/;"	e	enum:anqp_info_id
ANQP_AP_GEOSPATIAL_LOCATION	ieee802_11_defs.h	/^	ANQP_AP_GEOSPATIAL_LOCATION = 265,$/;"	e	enum:anqp_info_id
ANQP_AP_LOCATION_PUBLIC_URI	ieee802_11_defs.h	/^	ANQP_AP_LOCATION_PUBLIC_URI = 267,$/;"	e	enum:anqp_info_id
ANQP_CAPABILITY_LIST	ieee802_11_defs.h	/^	ANQP_CAPABILITY_LIST = 257,$/;"	e	enum:anqp_info_id
ANQP_DOMAIN_NAME	ieee802_11_defs.h	/^	ANQP_DOMAIN_NAME = 268,$/;"	e	enum:anqp_info_id
ANQP_EMERGENCY_ALERT_URI	ieee802_11_defs.h	/^	ANQP_EMERGENCY_ALERT_URI = 269,$/;"	e	enum:anqp_info_id
ANQP_EMERGENCY_CALL_NUMBER	ieee802_11_defs.h	/^	ANQP_EMERGENCY_CALL_NUMBER = 259,$/;"	e	enum:anqp_info_id
ANQP_EMERGENCY_NAI	ieee802_11_defs.h	/^	ANQP_EMERGENCY_NAI = 271,$/;"	e	enum:anqp_info_id
ANQP_IP_ADDR_TYPE_AVAILABILITY	ieee802_11_defs.h	/^	ANQP_IP_ADDR_TYPE_AVAILABILITY = 262,$/;"	e	enum:anqp_info_id
ANQP_LOCAL_CONTENT	ieee802_11_defs.h	/^	ANQP_LOCAL_CONTENT = 279,$/;"	e	enum:anqp_info_id
ANQP_NAI_REALM	ieee802_11_defs.h	/^	ANQP_NAI_REALM = 263,$/;"	e	enum:anqp_info_id
ANQP_NEIGHBOR_REPORT	ieee802_11_defs.h	/^	ANQP_NEIGHBOR_REPORT = 272,$/;"	e	enum:anqp_info_id
ANQP_NETWORK_AUTH_TYPE	ieee802_11_defs.h	/^	ANQP_NETWORK_AUTH_TYPE = 260,$/;"	e	enum:anqp_info_id
ANQP_QUERY_LIST	ieee802_11_defs.h	/^	ANQP_QUERY_LIST = 256,$/;"	e	enum:anqp_info_id
ANQP_ROAMING_CONSORTIUM	ieee802_11_defs.h	/^	ANQP_ROAMING_CONSORTIUM = 261,$/;"	e	enum:anqp_info_id
ANQP_TDLS_CAPABILITY	ieee802_11_defs.h	/^	ANQP_TDLS_CAPABILITY = 270,$/;"	e	enum:anqp_info_id
ANQP_VENDOR_SPECIFIC	ieee802_11_defs.h	/^	ANQP_VENDOR_SPECIFIC = 56797$/;"	e	enum:anqp_info_id
ANQP_VENUE_NAME	ieee802_11_defs.h	/^	ANQP_VENUE_NAME = 258,$/;"	e	enum:anqp_info_id
ANQP_VENUE_URL	ieee802_11_defs.h	/^	ANQP_VENUE_URL = 277,$/;"	e	enum:anqp_info_id
AP_INFO	airnodes.c	/^typedef struct AP_INFO {$/;"	s	file:
AP_INFO	airnodes.c	/^} AP_INFO;$/;"	t	typeref:struct:AP_INFO	file:
AP_conf	airbase-ng.c	/^struct AP_conf$/;"	s	file:
AP_info	aircrack-ng.h	/^struct AP_info$/;"	s
AP_info	airodump-ng.h	/^struct AP_info$/;"	s
AP_info	ivstools.c	/^struct AP_info$/;"	s	file:
APt	aireplay-ng.c	/^struct APt$/;"	s	file:
APt	tkiptun-ng.c	/^struct APt$/;"	s	file:
AR	ezxml/Makefile	/^AR = ar$/;"	m
ARCH_ALLOWS_UNALIGNED	arch.h	98;"	d
ARCH_BITS	arch.h	91;"	d
ARCH_BITS_LOG	arch.h	92;"	d
ARCH_BITS_STR	arch.h	93;"	d
ARCH_INDEX	arch.h	99;"	d
ARCH_INT_GT_32	arch.h	95;"	d
ARCH_LITTLE_ENDIAN	arch.h	94;"	d
ARCH_SIZE	arch.h	90;"	d
ARCH_WORD	arch.h	86;"	d
ARCH_WORD	arch.h	88;"	d
ARCH_WORD_32	jcommon.h	/^typedef unsigned int ARCH_WORD_32;$/;"	t
ARCH_WORD_32	jcommon.h	/^typedef unsigned short ARCH_WORD_32;$/;"	t
ARCH_WORD_64	jcommon.h	/^typedef unsigned int ARCH_WORD_64;$/;"	t
ARCH_WORD_64	jcommon.h	/^typedef unsigned long long ARCH_WORD_64;$/;"	t
ARPHRD_ARCNET	include/if_arp.h	50;"	d
ARPHRD_ETHER	include/if_arp.h	48;"	d
ARPHRD_FRELAY	include/if_arp.h	51;"	d
ARPHRD_IEEE1394	include/if_arp.h	52;"	d
ARPHRD_IEEE802	include/if_arp.h	49;"	d
ARPHRD_IEEE80211	osdep/linux.c	146;"	d	file:
ARPHRD_IEEE80211_FULL	osdep/linux.c	148;"	d	file:
ARPHRD_IEEE80211_PRISM	osdep/linux.c	147;"	d	file:
ARPHRD_INFINIBAND	include/if_arp.h	53;"	d
ARPOP_INVREPLY	include/if_arp.h	63;"	d
ARPOP_INVREQUEST	include/if_arp.h	62;"	d
ARPOP_REPLY	include/if_arp.h	59;"	d
ARPOP_REQUEST	include/if_arp.h	58;"	d
ARPOP_REVREPLY	include/if_arp.h	61;"	d
ARPOP_REVREQUEST	include/if_arp.h	60;"	d
ARPSTAT_ADD	include/if_arp.h	139;"	d
ARPSTAT_DEC	include/if_arp.h	143;"	d
ARPSTAT_INC	include/if_arp.h	142;"	d
ARPSTAT_SUB	include/if_arp.h	141;"	d
ARP_REQ	packetforge-ng.c	49;"	d	file:
ARP_req	airbase-ng.c	/^struct ARP_req$/;"	s	file:
ARP_req	aireplay-ng.c	/^struct ARP_req$/;"	s	file:
ARP_req	airtun-ng.c	/^struct ARP_req$/;"	s	file:
ARP_req	tkiptun-ng.c	/^struct ARP_req$/;"	s	file:
ASCII_DISREGARD_STRENGTH	aircrack-ng.h	63;"	d
ASCII_HIGH_T	aircrack-ng.h	61;"	d
ASCII_LOW_T	aircrack-ng.h	60;"	d
ASCII_VOTE_STRENGTH_T	aircrack-ng.h	62;"	d
ASEL_CAP_ANT_INDICES_FEEDBACK_BASED_TX_AS_CAP	ieee802_11_defs.h	897;"	d
ASEL_CAP_ANT_INDICES_FEEDBACK_CAP	ieee802_11_defs.h	899;"	d
ASEL_CAP_ASEL_CAPABLE	ieee802_11_defs.h	895;"	d
ASEL_CAP_EXPLICIT_CSI_FEEDBACK_BASED_TX_AS_CAP	ieee802_11_defs.h	896;"	d
ASEL_CAP_EXPLICIT_CSI_FEEDBACK_CAP	ieee802_11_defs.h	898;"	d
ASEL_CAP_RX_AS_CAP	ieee802_11_defs.h	900;"	d
ASEL_CAP_TX_SOUNDING_PPDUS_CAP	ieee802_11_defs.h	901;"	d
ASM_AC	Makefile	/^ASM_AC		= sha1-sse2.S$/;"	m
ASSOCIATION_REQUEST	airdecloak-ng.h	76;"	d
ASSOCIATION_RESPONSE	airdecloak-ng.h	77;"	d
ASSOC_REQ	airbase-ng.c	112;"	d	file:
ASSOC_REQ	aireplay-ng.c	93;"	d	file:
ASSOC_REQ	tkiptun-ng.c	92;"	d	file:
ASTATE_DEAUTH	besside-ng.c	/^	ASTATE_DEAUTH,$/;"	e	enum:__anon19	file:
ASTATE_DONE	besside-ng.c	/^	ASTATE_DONE,$/;"	e	enum:__anon19	file:
ASTATE_NONE	besside-ng.c	/^	ASTATE_NONE = 0,$/;"	e	enum:__anon19	file:
ASTATE_PING	besside-ng.c	/^	ASTATE_PING,$/;"	e	enum:__anon19	file:
ASTATE_READY	besside-ng.c	/^	ASTATE_READY,$/;"	e	enum:__anon19	file:
ASTATE_UNREACH	besside-ng.c	/^	ASTATE_UNREACH,$/;"	e	enum:__anon19	file:
ASTATE_WEP_FLOOD	besside-ng.c	/^	ASTATE_WEP_FLOOD,$/;"	e	enum:__anon19	file:
ASTATE_WEP_PRGA_GET	besside-ng.c	/^	ASTATE_WEP_PRGA_GET,$/;"	e	enum:__anon19	file:
ASTATE_WPA_CRACK	besside-ng.c	/^	ASTATE_WPA_CRACK,$/;"	e	enum:__anon19	file:
AS_CHECK_INET	easside-ng.c	/^	AS_CHECK_INET,$/;"	e	enum:__anon63	file:
AS_DECRYPT_ARP	easside-ng.c	/^	AS_DECRYPT_ARP,$/;"	e	enum:__anon63	file:
AS_DECRYPT_IP	easside-ng.c	/^	AS_DECRYPT_IP,$/;"	e	enum:__anon63	file:
AS_FIND_IP	easside-ng.c	/^	AS_FIND_IP,$/;"	e	enum:__anon63	file:
AS_FIND_RTR_MAC	easside-ng.c	/^	AS_FIND_RTR_MAC,$/;"	e	enum:__anon63	file:
AS_NOPRGA	easside-ng.c	/^	AS_NOPRGA = 0,$/;"	e	enum:__anon63	file:
AS_PRGA_EXPAND	easside-ng.c	/^	AS_PRGA_EXPAND,$/;"	e	enum:__anon63	file:
AS_REDIRECT	easside-ng.c	/^	AS_REDIRECT$/;"	e	enum:__anon63	file:
ATF_COM	include/if_arp.h	95;"	d
ATF_INUSE	include/if_arp.h	94;"	d
ATF_PERM	include/if_arp.h	96;"	d
ATF_PUBL	include/if_arp.h	97;"	d
ATF_USETRAILERS	include/if_arp.h	98;"	d
ATHEROS_CAP_BOOST	include/ieee80211.h	538;"	d
ATHEROS_CAP_COMPRESSION	include/ieee80211.h	535;"	d
ATHEROS_CAP_FAST_FRAME	include/ieee80211.h	536;"	d
ATHEROS_CAP_TURBO_PRIME	include/ieee80211.h	534;"	d
ATH_OUI	include/ieee80211.h	540;"	d
ATH_OUI_TYPE	include/ieee80211.h	541;"	d
ATH_OUI_VERSION	include/ieee80211.h	542;"	d
ATTRIBUTE_NO_ADDRESS_SAFETY_ANALYSIS	misc.h	197;"	d
ATTRIBUTE_NO_ADDRESS_SAFETY_ANALYSIS	misc.h	202;"	d
AUTHENTICATION	airdecloak-ng.h	75;"	d
AUTH_FIELD	airodump-ng.h	68;"	d
AUTH_MGT	airodump-ng.h	66;"	d
AUTH_OPN	airodump-ng.h	64;"	d
AUTH_PSK	airodump-ng.h	65;"	d
AUTH_REQ	airbase-ng.c	108;"	d	file:
AUTH_REQ	aireplay-ng.c	89;"	d	file:
AUTH_REQ	tkiptun-ng.c	88;"	d	file:
A_4_s13	aircrack-ng.h	/^	A_4_s13,					 \/* stable       13% on q = 4    *\/$/;"	e	enum:KoreK_attacks
A_4_s13	kstats.c	/^    A_4_s13,                    \/* stable       13% on q = 4    *\/$/;"	e	enum:KoreK_attacks	file:
A_4_u5_1	aircrack-ng.h	/^	A_4_u5_1,					 \/* unstable      5% on q = 4    *\/$/;"	e	enum:KoreK_attacks
A_4_u5_1	kstats.c	/^    A_4_u5_1,                   \/* unstable      5% on q = 4    *\/$/;"	e	enum:KoreK_attacks	file:
A_4_u5_2	aircrack-ng.h	/^	A_4_u5_2,					 \/* unstable      5% on q = 4    *\/$/;"	e	enum:KoreK_attacks
A_4_u5_2	kstats.c	/^    A_4_u5_2,                   \/* unstable      5% on q = 4    *\/$/;"	e	enum:KoreK_attacks	file:
A_neg	aircrack-ng.h	/^	A_neg						 \/* helps reject false positives *\/$/;"	e	enum:KoreK_attacks
A_neg	kstats.c	/^    A_neg                       \/* helps reject false positives *\/$/;"	e	enum:KoreK_attacks	file:
A_s13	aircrack-ng.h	/^	A_s13,						 \/* stable       13%             *\/$/;"	e	enum:KoreK_attacks
A_s13	kstats.c	/^    A_s13,                      \/* stable       13%             *\/$/;"	e	enum:KoreK_attacks	file:
A_s3	aircrack-ng.h	/^	A_s3,						 \/* stable        3%             *\/$/;"	e	enum:KoreK_attacks
A_s3	kstats.c	/^    A_s3,                       \/* stable        3%             *\/$/;"	e	enum:KoreK_attacks	file:
A_s5_1	aircrack-ng.h	/^	A_s5_1,						 \/* standard      5% (~FMS)      *\/$/;"	e	enum:KoreK_attacks
A_s5_1	kstats.c	/^    A_s5_1,                     \/* standard      5% (~FMS)      *\/$/;"	e	enum:KoreK_attacks	file:
A_s5_2	aircrack-ng.h	/^	A_s5_2,						 \/* other stable  5%             *\/$/;"	e	enum:KoreK_attacks
A_s5_2	kstats.c	/^    A_s5_2,                     \/* other stable  5%             *\/$/;"	e	enum:KoreK_attacks	file:
A_s5_3	aircrack-ng.h	/^	A_s5_3,						 \/* other stable  5%             *\/$/;"	e	enum:KoreK_attacks
A_s5_3	kstats.c	/^    A_s5_3,                     \/* other stable  5%             *\/$/;"	e	enum:KoreK_attacks	file:
A_u13_1	aircrack-ng.h	/^	A_u13_1,					 \/* unstable     13%             *\/$/;"	e	enum:KoreK_attacks
A_u13_1	kstats.c	/^    A_u13_1,                    \/* unstable     13%             *\/$/;"	e	enum:KoreK_attacks	file:
A_u13_2	aircrack-ng.h	/^	A_u13_2,					 \/* unstable ?   13%             *\/$/;"	e	enum:KoreK_attacks
A_u13_2	kstats.c	/^    A_u13_2,                    \/* unstable ?   13%             *\/$/;"	e	enum:KoreK_attacks	file:
A_u13_3	aircrack-ng.h	/^	A_u13_3,					 \/* unstable ?   13%             *\/$/;"	e	enum:KoreK_attacks
A_u13_3	kstats.c	/^    A_u13_3,                    \/* unstable ?   13%             *\/$/;"	e	enum:KoreK_attacks	file:
A_u15	aircrack-ng.h	/^	A_u15,						 \/* semi-stable  15%             *\/$/;"	e	enum:KoreK_attacks
A_u15	kstats.c	/^    A_u15,                      \/* semi-stable  15%             *\/$/;"	e	enum:KoreK_attacks	file:
A_u5_1	aircrack-ng.h	/^	A_u5_1,						 \/* unstable      5% no good ?   *\/$/;"	e	enum:KoreK_attacks
A_u5_1	kstats.c	/^    A_u5_1,                     \/* unstable      5% no good ?   *\/$/;"	e	enum:KoreK_attacks	file:
A_u5_2	aircrack-ng.h	/^	A_u5_2,						 \/* unstable      5%             *\/$/;"	e	enum:KoreK_attacks
A_u5_2	kstats.c	/^    A_u5_2,                     \/* unstable      5%             *\/$/;"	e	enum:KoreK_attacks	file:
A_u5_3	aircrack-ng.h	/^	A_u5_3,						 \/* unstable      5% no good     *\/$/;"	e	enum:KoreK_attacks
A_u5_3	kstats.c	/^    A_u5_3,                     \/* unstable      5% no good     *\/$/;"	e	enum:KoreK_attacks	file:
A_u5_4	aircrack-ng.h	/^	A_u5_4,						 \/* unstable      5%             *\/$/;"	e	enum:KoreK_attacks
A_u5_4	kstats.c	/^    A_u5_4,                     \/* unstable      5%             *\/$/;"	e	enum:KoreK_attacks	file:
BEACON_FRAME	airdecloak-ng.h	73;"	d
BF_ASM	arch.h	465;"	d
BF_SCALE	arch.h	466;"	d
BF_X2	arch.h	489;"	d
BF_X2	arch.h	491;"	d
BINFILES	Makefile	/^BINFILES        = aircrack-ng$(EXE) airdecap-ng$(EXE) packetforge-ng$(EXE) \\$/;"	m
BITALIGN	simd-intrinsics.c	479;"	d	file:
BITALIGN	simd-intrinsics.c	481;"	d	file:
BITS	simd-intrinsics.h	106;"	d
BITS	simd-intrinsics.h	108;"	d
BITS	simd-intrinsics.h	110;"	d
BITS	simd-intrinsics.h	112;"	d
BITWISE_MASK	uniqueiv.h	47;"	d
BITWISE_OFFT	uniqueiv.h	43;"	d
BLOCK_MACS	airbase-ng.c	102;"	d	file:
BOOLEAN	airdecloak-ng.h	/^typedef enum {false, true} BOOLEAN;$/;"	t	typeref:enum:__anon68
BROADCAST	airnodes.c	19;"	d	file:
BROADCAST	common.h	126;"	d
BROADCAST	crypto.h	62;"	d
BSS_MEMBERSHIP_SELECTOR_HT_PHY	ieee802_11_defs.h	936;"	d
BSS_MEMBERSHIP_SELECTOR_VHT_PHY	ieee802_11_defs.h	935;"	d
BUFFER_TIME	airodump-ng.h	118;"	d
CACHE_BANK_SHIFT	jcommon.h	102;"	d
CC	ezxml/Makefile	/^CC = gcc$/;"	m
CC_CACHE_ALIGN	jcommon.h	88;"	d
CC_CACHE_ALIGN	jcommon.h	91;"	d
CDP_VTP	crypto.h	64;"	d
CFC_base_filter	airdecloak-ng.h	194;"	d
CFC_filter_consecutive_sn	airdecloak-ng.c	/^int CFC_filter_consecutive_sn() {$/;"	f
CFC_filter_consecutive_sn_ap	airdecloak-ng.c	/^int CFC_filter_consecutive_sn_ap() {$/;"	f
CFC_filter_consecutive_sn_client	airdecloak-ng.c	/^int CFC_filter_consecutive_sn_client() {$/;"	f
CFC_filter_duplicate_iv	airdecloak-ng.c	/^int CFC_filter_duplicate_iv() {$/;"	f
CFC_filter_duplicate_sn	airdecloak-ng.c	/^int CFC_filter_duplicate_sn() {$/;"	f
CFC_filter_duplicate_sn_ap	airdecloak-ng.c	/^int CFC_filter_duplicate_sn_ap() {$/;"	f
CFC_filter_duplicate_sn_client	airdecloak-ng.c	/^int CFC_filter_duplicate_sn_client() {$/;"	f
CFC_filter_signal	airdecloak-ng.c	/^int CFC_filter_signal() {$/;"	f
CFC_filter_signal_duplicate_and_consecutive_sn	airdecloak-ng.c	/^int CFC_filter_signal_duplicate_and_consecutive_sn() {$/;"	f
CFC_mark_all_frames_with_status_to	airdecloak-ng.c	/^int CFC_mark_all_frames_with_status_to(int original_status, int new_status) {$/;"	f
CFC_with_valid_packets_mark_others_with_identical_sn_cloaked	airdecloak-ng.c	/^int CFC_with_valid_packets_mark_others_with_identical_sn_cloaked() {$/;"	f
CFLAGS	ezxml/Makefile	/^CFLAGS = -Wall -O2$/;"	m
CF_packet	airbase-ng.c	/^struct CF_packet$/;"	s	file:
CHAN_SWITCH_MODE_ALLOW_TX	ieee802_11_defs.h	1587;"	d
CHAN_SWITCH_MODE_BLOCK_TX	ieee802_11_defs.h	1588;"	d
CLOAKED_FRAME	airdecloak-ng.h	61;"	d
CLOAKING	uniqueiv.h	55;"	d
CLOSE_IT	aircrack-ng.h	74;"	d
CONTROLSESSIONS	aircrack-ptw-lib.c	46;"	d	file:
CORETEMP_PATH	cpuid.c	51;"	d	file:
CPUFREQ_CPU0C	cpuid.c	49;"	d	file:
CPUFREQ_CPU0M	cpuid.c	50;"	d	file:
CPUID	common.h	83;"	d
CPUID	common.h	85;"	d
CPUID_MMX_AVAILABLE	common.h	78;"	d
CPUID_NOTHING_AVAILABLE	common.h	80;"	d
CPUID_SSE2_AVAILABLE	common.h	79;"	d
CPU_DETECT	arch.h	101;"	d
CPU_DETECT	arch.h	108;"	d
CPU_DETECT	arch.h	109;"	d
CPU_DETECT	arch.h	121;"	d
CPU_DETECT	arch.h	122;"	d
CPU_DETECT	arch.h	134;"	d
CPU_DETECT	arch.h	135;"	d
CPU_DETECT	arch.h	147;"	d
CPU_DETECT	arch.h	148;"	d
CPU_DETECT	arch.h	182;"	d
CPU_DETECT	arch.h	183;"	d
CPU_DETECT	arch.h	238;"	d
CPU_FALLBACK_BINARY	arch.h	115;"	d
CPU_FALLBACK_BINARY	arch.h	128;"	d
CPU_FALLBACK_BINARY	arch.h	141;"	d
CPU_FALLBACK_BINARY	arch.h	154;"	d
CPU_FALLBACK_BINARY	arch.h	189;"	d
CPU_FALLBACK_BINARY	arch.h	242;"	d
CPU_FALLBACK_BINARY	arch.h	302;"	d
CPU_FALLBACK_BINARY	arch.h	303;"	d
CPU_FALLBACK_BINARY_DEFAULT	arch.h	116;"	d
CPU_FALLBACK_BINARY_DEFAULT	arch.h	129;"	d
CPU_FALLBACK_BINARY_DEFAULT	arch.h	142;"	d
CPU_FALLBACK_BINARY_DEFAULT	arch.h	155;"	d
CPU_FALLBACK_BINARY_DEFAULT	arch.h	190;"	d
CPU_FALLBACK_BINARY_DEFAULT	arch.h	243;"	d
CPU_IA32	johnswap.h	64;"	d
CPU_IA32	johnswap.h	65;"	d
CPU_INTEL_LE	johnswap.h	67;"	d
CPU_INTEL_LE	johnswap.h	68;"	d
CPU_NAME	arch.h	104;"	d
CPU_NAME	arch.h	112;"	d
CPU_NAME	arch.h	113;"	d
CPU_NAME	arch.h	125;"	d
CPU_NAME	arch.h	126;"	d
CPU_NAME	arch.h	138;"	d
CPU_NAME	arch.h	139;"	d
CPU_NAME	arch.h	151;"	d
CPU_NAME	arch.h	152;"	d
CPU_NAME	arch.h	186;"	d
CPU_NAME	arch.h	187;"	d
CPU_NAME	arch.h	236;"	d
CPU_NAME	arch.h	237;"	d
CPU_NAME	arch.h	299;"	d
CPU_NAME	arch.h	300;"	d
CPU_REQ	arch.h	110;"	d
CPU_REQ	arch.h	123;"	d
CPU_REQ	arch.h	136;"	d
CPU_REQ	arch.h	149;"	d
CPU_REQ	arch.h	184;"	d
CPU_REQ	arch.h	239;"	d
CPU_REQ_AVX	arch.h	185;"	d
CPU_REQ_AVX2	arch.h	240;"	d
CPU_REQ_AVX512BW	arch.h	150;"	d
CPU_REQ_AVX512F	arch.h	137;"	d
CPU_REQ_SSE4_1	arch.h	124;"	d
CPU_REQ_SSSE3	arch.h	111;"	d
CPU_REQ_XOP	arch.h	298;"	d
CPU_X64	johnswap.h	61;"	d
CPU_X64	johnswap.h	62;"	d
CRYPTO_NONE	besside-ng.c	/^	CRYPTO_NONE = 0,$/;"	e	enum:__anon18	file:
CRYPTO_WEP	besside-ng.c	/^	CRYPTO_WEP,$/;"	e	enum:__anon18	file:
CRYPTO_WPA	besside-ng.c	/^	CRYPTO_WPA,$/;"	e	enum:__anon18	file:
CRYPTO_WPA_MGT	besside-ng.c	/^	CRYPTO_WPA_MGT,$/;"	e	enum:__anon18	file:
CRYPT_NONE	airbase-ng.c	82;"	d	file:
CRYPT_NONE	airdecap-ng.c	49;"	d	file:
CRYPT_NONE	airtun-ng.c	70;"	d	file:
CRYPT_WEP	airbase-ng.c	83;"	d	file:
CRYPT_WEP	airdecap-ng.c	50;"	d	file:
CRYPT_WEP	airtun-ng.c	71;"	d	file:
CRYPT_WPA	airdecap-ng.c	51;"	d	file:
CRYPT_WPA	airtun-ng.c	72;"	d	file:
CYGWIN_DLL_CLOSE	osdep/cygwin.h	30;"	d
CYGWIN_DLL_GET_MAC	osdep/cygwin.h	28;"	d
CYGWIN_DLL_INIT	osdep/cygwin.h	23;"	d
CYGWIN_DLL_INJECT	osdep/cygwin.h	26;"	d
CYGWIN_DLL_SET_CHAN	osdep/cygwin.h	24;"	d
CYGWIN_DLL_SET_FREQ	osdep/cygwin.h	25;"	d
CYGWIN_DLL_SET_MAC	osdep/cygwin.h	29;"	d
CYGWIN_DLL_SNIFF	osdep/cygwin.h	27;"	d
Ch	simd-intrinsics.c	1656;"	d	file:
Ch	simd-intrinsics.c	2238;"	d	file:
Ch	sse-intrinsics.c	1520;"	d	file:
Ch	sse-intrinsics.c	1904;"	d	file:
ChannelFlags	osdep/airpcap.c	/^	u_int16_t	ChannelFlags;$/;"	m	struct:_PPI_FIELD_802_11_COMMON	file:
ChannelFrequency	osdep/airpcap.c	/^	u_int16_t	ChannelFrequency;$/;"	m	struct:_PPI_FIELD_802_11_COMMON	file:
D	hashtable.c	/^struct D {$/;"	s	file:
DEAUTH_REQ	airbase-ng.c	104;"	d	file:
DEAUTH_REQ	aireplay-ng.c	85;"	d	file:
DEAUTH_REQ	tkiptun-ng.c	84;"	d	file:
DEBUG_CFLAGS	ezxml/Makefile	/^DEBUG_CFLAGS = -O0 -g$/;"	m
DEFAULT_CWIDTH	airodump-ng.h	41;"	d
DEFAULT_HOPFREQ	airodump-ng.h	40;"	d
DEFAULT_MIC_FAILURE_INTERVAL	tkiptun-ng.c	126;"	d	file:
DES_128K	arch.h	167;"	d
DES_ASM	arch.h	166;"	d
DES_BS	arch.h	173;"	d
DES_BS	arch.h	210;"	d
DES_BS	arch.h	211;"	d
DES_BS	arch.h	251;"	d
DES_BS	arch.h	252;"	d
DES_BS	arch.h	261;"	d
DES_BS	arch.h	262;"	d
DES_BS_ALGORITHM_NAME	arch.h	176;"	d
DES_BS_ALGORITHM_NAME	arch.h	212;"	d
DES_BS_ALGORITHM_NAME	arch.h	214;"	d
DES_BS_ALGORITHM_NAME	arch.h	221;"	d
DES_BS_ALGORITHM_NAME	arch.h	226;"	d
DES_BS_ALGORITHM_NAME	arch.h	232;"	d
DES_BS_ALGORITHM_NAME	arch.h	245;"	d
DES_BS_ALGORITHM_NAME	arch.h	253;"	d
DES_BS_ALGORITHM_NAME	arch.h	255;"	d
DES_BS_ALGORITHM_NAME	arch.h	263;"	d
DES_BS_ALGORITHM_NAME	arch.h	265;"	d
DES_BS_ALGORITHM_NAME	arch.h	272;"	d
DES_BS_ALGORITHM_NAME	arch.h	276;"	d
DES_BS_ALGORITHM_NAME	arch.h	281;"	d
DES_BS_ALGORITHM_NAME	arch.h	285;"	d
DES_BS_ALGORITHM_NAME	arch.h	288;"	d
DES_BS_ALGORITHM_NAME	arch.h	293;"	d
DES_BS_ASM	arch.h	192;"	d
DES_BS_ASM	arch.h	269;"	d
DES_BS_ASM	arch.h	291;"	d
DES_BS_EXPAND	arch.h	295;"	d
DES_BS_NO_AVX128	arch.h	218;"	d
DES_BS_NO_AVX256	arch.h	248;"	d
DES_BS_NO_MMX	arch.h	229;"	d
DES_BS_NO_MMX	arch.h	278;"	d
DES_BS_NO_MMX	arch.h	283;"	d
DES_BS_VECTOR	arch.h	175;"	d
DES_BS_VECTOR	arch.h	207;"	d
DES_BS_VECTOR	arch.h	220;"	d
DES_BS_VECTOR	arch.h	225;"	d
DES_BS_VECTOR	arch.h	231;"	d
DES_BS_VECTOR	arch.h	235;"	d
DES_BS_VECTOR	arch.h	249;"	d
DES_BS_VECTOR	arch.h	259;"	d
DES_BS_VECTOR	arch.h	271;"	d
DES_BS_VECTOR	arch.h	274;"	d
DES_BS_VECTOR	arch.h	279;"	d
DES_BS_VECTOR	arch.h	284;"	d
DES_BS_VECTOR	arch.h	287;"	d
DES_BS_VECTOR	arch.h	292;"	d
DES_BS_VECTOR_SIZE	arch.h	206;"	d
DES_BS_VECTOR_SIZE	arch.h	219;"	d
DES_BS_VECTOR_SIZE	arch.h	224;"	d
DES_BS_VECTOR_SIZE	arch.h	230;"	d
DES_BS_VECTOR_SIZE	arch.h	275;"	d
DES_BS_VECTOR_SIZE	arch.h	280;"	d
DES_COPY	arch.h	172;"	d
DES_EXTB	arch.h	171;"	d
DES_MASK	arch.h	169;"	d
DES_SCALE	arch.h	170;"	d
DES_X2	arch.h	168;"	d
DEVICE_COMMON_PART	osdep/airpcap.c	80;"	d	file:
DEVICE_PREFIX	osdep/airpcap.c	79;"	d	file:
DIRECTION_BACKWARD	airdecloak-ng.h	54;"	d
DIRECTION_FORWARD	airdecloak-ng.h	55;"	d
DLL_EXTENSION	osdep/cygwin.c	43;"	d	file:
DOPCAP	osdep/Makefile	/^	DOPCAP		= $(AR) x $(AC_ROOT)\/..\/developers\/Airpcap_Devpack\/lib\/libairpcap.a$/;"	m
DOPCAP	osdep/Makefile	/^	DOPCAP		=$/;"	m
DRIVER_TYPE	osdep/linux.c	/^} DRIVER_TYPE;$/;"	t	typeref:enum:__anon65	file:
DROPPED_FRAME	airdecloak-ng.h	63;"	d
DT_ACX	osdep/linux.c	/^        DT_ACX,$/;"	e	enum:__anon65	file:
DT_AT76USB	osdep/linux.c	/^        DT_AT76USB,$/;"	e	enum:__anon65	file:
DT_BCM43XX	osdep/linux.c	/^        DT_BCM43XX,$/;"	e	enum:__anon65	file:
DT_HOSTAP	osdep/linux.c	/^        DT_HOSTAP,$/;"	e	enum:__anon65	file:
DT_IPW2200	osdep/linux.c	/^        DT_IPW2200$/;"	e	enum:__anon65	file:
DT_MAC80211_RT	osdep/linux.c	/^        DT_MAC80211_RT,$/;"	e	enum:__anon65	file:
DT_MADWIFI	osdep/linux.c	/^        DT_MADWIFI,$/;"	e	enum:__anon65	file:
DT_MADWIFING	osdep/linux.c	/^        DT_MADWIFING,$/;"	e	enum:__anon65	file:
DT_NULL	osdep/linux.c	/^        DT_NULL = 0,$/;"	e	enum:__anon65	file:
DT_ORINOCO	osdep/linux.c	/^        DT_ORINOCO,$/;"	e	enum:__anon65	file:
DT_WLANNG	osdep/linux.c	/^        DT_WLANNG,$/;"	e	enum:__anon65	file:
DT_ZD1211RW	osdep/linux.c	/^        DT_ZD1211RW,$/;"	e	enum:__anon65	file:
DbmAntNoise	osdep/airpcap.c	/^	int8_t		DbmAntNoise;$/;"	m	struct:_PPI_FIELD_802_11_COMMON	file:
DbmAntSignal	osdep/airpcap.c	/^	int8_t		DbmAntSignal;$/;"	m	struct:_PPI_FIELD_802_11_COMMON	file:
Di	hashtable.c	/^	int Di;$/;"	m	struct:D	file:
Dp	hashtable.c	/^	char *Dp;$/;"	m	struct:D	file:
EAGAIN_DELAY	airsock.c	26;"	d	file:
EAP_detected	airnodes.c	/^	int EAP_detected;$/;"	m	struct:AP_INFO	file:
EAP_detected	airodump-ng.h	/^	int EAP_detected;$/;"	m	struct:AP_info
EMERGENCY_ALERT_SYSTEM	ieee802_11_defs.h	/^	EMERGENCY_ALERT_SYSTEM = 3,$/;"	e	enum:adv_proto_id
ENC_CCMP	airodump-ng.h	58;"	d
ENC_FIELD	airodump-ng.h	62;"	d
ENC_TKIP	airodump-ng.h	56;"	d
ENC_WEP	airodump-ng.h	55;"	d
ENC_WEP104	airodump-ng.h	60;"	d
ENC_WEP40	airodump-ng.h	59;"	d
ENC_WRAP	airodump-ng.h	57;"	d
END_PIC	sha1-sse2.S	/^#define END_PIC()   popq  %rbx$/;"	d
END_PIC	sha1-sse2.S	/^#define END_PIC()$/;"	d
ERP_INFO_BARKER_PREAMBLE_MODE	ieee802_11_defs.h	832;"	d
ERP_INFO_NON_ERP_PRESENT	ieee802_11_defs.h	830;"	d
ERP_INFO_USE_PROTECTION	ieee802_11_defs.h	831;"	d
ESSID	ivstools.c	51;"	d	file:
ESSID_list	airbase-ng.c	/^struct ESSID_list$/;"	s	file:
ETHERMIN	include/ethernet.h	345;"	d
ETHERMTU	include/ethernet.h	344;"	d
ETHERMTU_JUMBO	include/ethernet.h	346;"	d
ETHERTYPE_8023	include/ethernet.h	80;"	d
ETHERTYPE_AARP	include/ethernet.h	241;"	d
ETHERTYPE_ACCTON	include/ethernet.h	295;"	d
ETHERTYPE_AEONIC	include/ethernet.h	183;"	d
ETHERTYPE_ALPHA	include/ethernet.h	263;"	d
ETHERTYPE_AMBER	include/ethernet.h	153;"	d
ETHERTYPE_AMOEBA	include/ethernet.h	258;"	d
ETHERTYPE_APOLLO	include/ethernet.h	243;"	d
ETHERTYPE_APOLLODOMAIN	include/ethernet.h	179;"	d
ETHERTYPE_APPLETALK	include/ethernet.h	222;"	d
ETHERTYPE_APPLITEK	include/ethernet.h	230;"	d
ETHERTYPE_ARGONAUT	include/ethernet.h	187;"	d
ETHERTYPE_ARP	include/ethernet.h	96;"	d
ETHERTYPE_AT	include/ethernet.h	221;"	d
ETHERTYPE_ATALK	include/ethernet.h	220;"	d
ETHERTYPE_ATOMIC	include/ethernet.h	304;"	d
ETHERTYPE_ATT	include/ethernet.h	208;"	d
ETHERTYPE_ATTSTANFORD	include/ethernet.h	173;"	d
ETHERTYPE_AUTOPHON	include/ethernet.h	209;"	d
ETHERTYPE_AXIS	include/ethernet.h	319;"	d
ETHERTYPE_BCLOOP	include/ethernet.h	328;"	d
ETHERTYPE_BOFL	include/ethernet.h	246;"	d
ETHERTYPE_CABLETRON	include/ethernet.h	168;"	d
ETHERTYPE_CHAOS	include/ethernet.h	94;"	d
ETHERTYPE_COMDESIGN	include/ethernet.h	210;"	d
ETHERTYPE_COMPUGRAPHIC	include/ethernet.h	211;"	d
ETHERTYPE_COUNTERPOINT	include/ethernet.h	204;"	d
ETHERTYPE_CRONUS	include/ethernet.h	170;"	d
ETHERTYPE_CRONUSVLN	include/ethernet.h	169;"	d
ETHERTYPE_DCA	include/ethernet.h	117;"	d
ETHERTYPE_DDE	include/ethernet.h	214;"	d
ETHERTYPE_DEBNI	include/ethernet.h	329;"	d
ETHERTYPE_DECAM	include/ethernet.h	198;"	d
ETHERTYPE_DECCUST	include/ethernet.h	151;"	d
ETHERTYPE_DECDIAG	include/ethernet.h	150;"	d
ETHERTYPE_DECDNS	include/ethernet.h	189;"	d
ETHERTYPE_DECDTS	include/ethernet.h	191;"	d
ETHERTYPE_DECEXPER	include/ethernet.h	144;"	d
ETHERTYPE_DECLAST	include/ethernet.h	194;"	d
ETHERTYPE_DECLTM	include/ethernet.h	192;"	d
ETHERTYPE_DECMUMPS	include/ethernet.h	154;"	d
ETHERTYPE_DECNETBIOS	include/ethernet.h	193;"	d
ETHERTYPE_DECnet	include/ethernet.h	147;"	d
ETHERTYPE_DELTACON	include/ethernet.h	303;"	d
ETHERTYPE_DIDDLE	include/ethernet.h	141;"	d
ETHERTYPE_DLOG1	include/ethernet.h	88;"	d
ETHERTYPE_DLOG2	include/ethernet.h	89;"	d
ETHERTYPE_DN	include/ethernet.h	148;"	d
ETHERTYPE_DOGFIGHT	include/ethernet.h	119;"	d
ETHERTYPE_DSMD	include/ethernet.h	186;"	d
ETHERTYPE_ECMA	include/ethernet.h	93;"	d
ETHERTYPE_ENCRYPT	include/ethernet.h	190;"	d
ETHERTYPE_ES	include/ethernet.h	202;"	d
ETHERTYPE_EXCELAN	include/ethernet.h	174;"	d
ETHERTYPE_EXPERDATA	include/ethernet.h	199;"	d
ETHERTYPE_FLIP	include/ethernet.h	259;"	d
ETHERTYPE_FLOWCONTROL	include/ethernet.h	313;"	d
ETHERTYPE_FRARP	include/ethernet.h	98;"	d
ETHERTYPE_GENDYN	include/ethernet.h	207;"	d
ETHERTYPE_HAYES	include/ethernet.h	251;"	d
ETHERTYPE_HIPPI_FP	include/ethernet.h	273;"	d
ETHERTYPE_HITACHI	include/ethernet.h	316;"	d
ETHERTYPE_HP	include/ethernet.h	171;"	d
ETHERTYPE_IEEEPUP	include/ethernet.h	102;"	d
ETHERTYPE_IEEEPUPAT	include/ethernet.h	103;"	d
ETHERTYPE_IMLBL	include/ethernet.h	142;"	d
ETHERTYPE_IMLBLDIAG	include/ethernet.h	140;"	d
ETHERTYPE_IP	include/ethernet.h	90;"	d
ETHERTYPE_IPAS	include/ethernet.h	311;"	d
ETHERTYPE_IPV6	include/ethernet.h	302;"	d
ETHERTYPE_IPX	include/ethernet.h	254;"	d
ETHERTYPE_IPXNEW	include/ethernet.h	184;"	d
ETHERTYPE_KALPANA	include/ethernet.h	297;"	d
ETHERTYPE_LANBRIDGE	include/ethernet.h	185;"	d
ETHERTYPE_LANPROBE	include/ethernet.h	322;"	d
ETHERTYPE_LAT	include/ethernet.h	149;"	d
ETHERTYPE_LBACK	include/ethernet.h	325;"	d
ETHERTYPE_LITTLE	include/ethernet.h	203;"	d
ETHERTYPE_LOGICRAFT	include/ethernet.h	261;"	d
ETHERTYPE_LOOPBACK	include/ethernet.h	324;"	d
ETHERTYPE_MATRA	include/ethernet.h	213;"	d
ETHERTYPE_MAX	include/ethernet.h	334;"	d
ETHERTYPE_MERIT	include/ethernet.h	215;"	d
ETHERTYPE_MICP	include/ethernet.h	308;"	d
ETHERTYPE_MOPDL	include/ethernet.h	145;"	d
ETHERTYPE_MOPRC	include/ethernet.h	146;"	d
ETHERTYPE_MOTOROLA	include/ethernet.h	277;"	d
ETHERTYPE_MPLS	include/ethernet.h	317;"	d
ETHERTYPE_MPLS_MCAST	include/ethernet.h	318;"	d
ETHERTYPE_MUMPS	include/ethernet.h	257;"	d
ETHERTYPE_NBPCC	include/ethernet.h	128;"	d
ETHERTYPE_NBPCLAIM	include/ethernet.h	133;"	d
ETHERTYPE_NBPCLREQ	include/ethernet.h	129;"	d
ETHERTYPE_NBPCLRSP	include/ethernet.h	130;"	d
ETHERTYPE_NBPCREQ	include/ethernet.h	126;"	d
ETHERTYPE_NBPCRSP	include/ethernet.h	127;"	d
ETHERTYPE_NBPDG	include/ethernet.h	131;"	d
ETHERTYPE_NBPDGB	include/ethernet.h	132;"	d
ETHERTYPE_NBPDLTE	include/ethernet.h	134;"	d
ETHERTYPE_NBPRAR	include/ethernet.h	136;"	d
ETHERTYPE_NBPRAS	include/ethernet.h	135;"	d
ETHERTYPE_NBPRST	include/ethernet.h	137;"	d
ETHERTYPE_NBPSCD	include/ethernet.h	125;"	d
ETHERTYPE_NBPVCD	include/ethernet.h	124;"	d
ETHERTYPE_NBS	include/ethernet.h	92;"	d
ETHERTYPE_NCD	include/ethernet.h	262;"	d
ETHERTYPE_NESTAR	include/ethernet.h	172;"	d
ETHERTYPE_NETBEUI	include/ethernet.h	278;"	d
ETHERTYPE_NOVELL	include/ethernet.h	255;"	d
ETHERTYPE_NS	include/ethernet.h	86;"	d
ETHERTYPE_NSAT	include/ethernet.h	87;"	d
ETHERTYPE_NSCOMPAT	include/ethernet.h	97;"	d
ETHERTYPE_NTRAILER	include/ethernet.h	115;"	d
ETHERTYPE_NTRAILER	include/ethernet.h	342;"	d
ETHERTYPE_OS9	include/ethernet.h	163;"	d
ETHERTYPE_OS9NET	include/ethernet.h	164;"	d
ETHERTYPE_PACER	include/ethernet.h	229;"	d
ETHERTYPE_PAE	include/ethernet.h	323;"	d
ETHERTYPE_PCS	include/ethernet.h	139;"	d
ETHERTYPE_PLANNING	include/ethernet.h	196;"	d
ETHERTYPE_PPP	include/ethernet.h	315;"	d
ETHERTYPE_PPPOE	include/ethernet.h	321;"	d
ETHERTYPE_PPPOEDISC	include/ethernet.h	320;"	d
ETHERTYPE_PRIMENTS	include/ethernet.h	167;"	d
ETHERTYPE_PUP	include/ethernet.h	82;"	d
ETHERTYPE_PUPAT	include/ethernet.h	83;"	d
ETHERTYPE_RACAL	include/ethernet.h	166;"	d
ETHERTYPE_RATIONAL	include/ethernet.h	267;"	d
ETHERTYPE_RAWFR	include/ethernet.h	157;"	d
ETHERTYPE_RCL	include/ethernet.h	120;"	d
ETHERTYPE_RDP	include/ethernet.h	307;"	d
ETHERTYPE_RETIX	include/ethernet.h	240;"	d
ETHERTYPE_REVARP	include/ethernet.h	182;"	d
ETHERTYPE_SCA	include/ethernet.h	152;"	d
ETHERTYPE_SECTRA	include/ethernet.h	301;"	d
ETHERTYPE_SECUREDATA	include/ethernet.h	312;"	d
ETHERTYPE_SGITW	include/ethernet.h	272;"	d
ETHERTYPE_SG_BOUNCE	include/ethernet.h	178;"	d
ETHERTYPE_SG_DIAG	include/ethernet.h	175;"	d
ETHERTYPE_SG_NETGAMES	include/ethernet.h	176;"	d
ETHERTYPE_SG_RESV	include/ethernet.h	177;"	d
ETHERTYPE_SIMNET	include/ethernet.h	143;"	d
ETHERTYPE_SLOW	include/ethernet.h	314;"	d
ETHERTYPE_SNA	include/ethernet.h	235;"	d
ETHERTYPE_SNMP	include/ethernet.h	264;"	d
ETHERTYPE_SONIX	include/ethernet.h	330;"	d
ETHERTYPE_SPIDER	include/ethernet.h	224;"	d
ETHERTYPE_SPRITE	include/ethernet.h	84;"	d
ETHERTYPE_STP	include/ethernet.h	274;"	d
ETHERTYPE_TALARIS	include/ethernet.h	249;"	d
ETHERTYPE_TALARISMC	include/ethernet.h	296;"	d
ETHERTYPE_TCPCOMP	include/ethernet.h	310;"	d
ETHERTYPE_TCPSM	include/ethernet.h	327;"	d
ETHERTYPE_TEC	include/ethernet.h	266;"	d
ETHERTYPE_TIGAN	include/ethernet.h	181;"	d
ETHERTYPE_TRAIL	include/ethernet.h	114;"	d
ETHERTYPE_TRAIL	include/ethernet.h	341;"	d
ETHERTYPE_TRANSETHER	include/ethernet.h	156;"	d
ETHERTYPE_TYMSHARE	include/ethernet.h	180;"	d
ETHERTYPE_UBBST	include/ethernet.h	162;"	d
ETHERTYPE_UBDEBUG	include/ethernet.h	101;"	d
ETHERTYPE_UBDIAGLOOP	include/ethernet.h	160;"	d
ETHERTYPE_UBDL	include/ethernet.h	158;"	d
ETHERTYPE_UBNIU	include/ethernet.h	159;"	d
ETHERTYPE_UBNMC	include/ethernet.h	161;"	d
ETHERTYPE_VALID	include/ethernet.h	118;"	d
ETHERTYPE_VARIAN	include/ethernet.h	236;"	d
ETHERTYPE_VAXELN	include/ethernet.h	188;"	d
ETHERTYPE_VEECO	include/ethernet.h	206;"	d
ETHERTYPE_VEXP	include/ethernet.h	200;"	d
ETHERTYPE_VGLAB	include/ethernet.h	252;"	d
ETHERTYPE_VINES	include/ethernet.h	104;"	d
ETHERTYPE_VINESECHO	include/ethernet.h	106;"	d
ETHERTYPE_VINESLOOP	include/ethernet.h	105;"	d
ETHERTYPE_VITAL	include/ethernet.h	331;"	d
ETHERTYPE_VLAN	include/ethernet.h	244;"	d
ETHERTYPE_VLTLMAN	include/ethernet.h	217;"	d
ETHERTYPE_VPROD	include/ethernet.h	201;"	d
ETHERTYPE_VURESERVED	include/ethernet.h	260;"	d
ETHERTYPE_WATERLOO	include/ethernet.h	250;"	d
ETHERTYPE_WELLFLEET	include/ethernet.h	247;"	d
ETHERTYPE_X25	include/ethernet.h	95;"	d
ETHERTYPE_X75	include/ethernet.h	91;"	d
ETHERTYPE_XNSSM	include/ethernet.h	326;"	d
ETHERTYPE_XTP	include/ethernet.h	271;"	d
ETHER_ADDR_LEN	include/ethernet.h	14;"	d
ETHER_ALIGN	include/ethernet.h	29;"	d
ETHER_BPF_MTAP	include/ethernet.h	354;"	d
ETHER_CRC_LEN	include/ethernet.h	16;"	d
ETHER_CRC_POLY_BE	include/ethernet.h	49;"	d
ETHER_CRC_POLY_LE	include/ethernet.h	48;"	d
ETHER_HDR_LEN	include/ethernet.h	17;"	d
ETHER_IS_MULTICAST	include/ethernet.h	73;"	d
ETHER_IS_VALID_LEN	include/ethernet.h	54;"	d
ETHER_MAX_FRAME	include/ethernet.h	35;"	d
ETHER_MAX_LEN	include/ethernet.h	19;"	d
ETHER_MAX_LEN_JUMBO	include/ethernet.h	20;"	d
ETHER_MIN_LEN	include/ethernet.h	18;"	d
ETHER_TYPE_LEN	include/ethernet.h	15;"	d
ETHER_VLAN_ENCAP_LEN	include/ethernet.h	22;"	d
ETH_ALEN	ieee802_11_defs.h	40;"	d
ETH_HLEN	ieee802_11_defs.h	43;"	d
ETH_P_80211_ENCAP	ieee802_11_defs.h	55;"	d
ETH_P_80211_RAW	osdep/linux.c	143;"	d	file:
ETH_P_ALL	ieee802_11_defs.h	49;"	d
ETH_P_EAPOL	ieee802_11_defs.h	61;"	d
ETH_P_IP	ieee802_11_defs.h	52;"	d
ETH_P_PAE	ieee802_11_defs.h	58;"	d
ETH_P_RRB	ieee802_11_defs.h	67;"	d
ETH_P_RSN_PREAUTH	ieee802_11_defs.h	64;"	d
EVENT_SYS	aircapture.h	/^} EVENT_SYS;$/;"	t	typeref:struct:_EVENT_SYS
EVP_md5	gcrypt-openssl-wrapper.h	47;"	d
EVP_sha1	gcrypt-openssl-wrapper.h	48;"	d
EXTENDED_RATES	airbase-ng.c	126;"	d	file:
EXTERNC	linecount.h	37;"	d
EXTERNC	linecount.h	39;"	d
EXT_HT_CAP_INFO_HTC_SUPPORT	ieee802_11_defs.h	865;"	d
EXT_HT_CAP_INFO_MCS_FEEDBACK_MASK	ieee802_11_defs.h	863;"	d
EXT_HT_CAP_INFO_MCS_FEEDBACK_OFFSET	ieee802_11_defs.h	864;"	d
EXT_HT_CAP_INFO_PCO	ieee802_11_defs.h	859;"	d
EXT_HT_CAP_INFO_PCO_TRANS_TIME_MASK	ieee802_11_defs.h	860;"	d
EXT_HT_CAP_INFO_RD_RESPONDER	ieee802_11_defs.h	866;"	d
EXT_HT_CAP_INFO_TRANS_TIME_OFFSET	ieee802_11_defs.h	861;"	d
EXT_IN	airbase-ng.c	85;"	d	file:
EXT_OUT	airbase-ng.c	86;"	d	file:
EZXML_BUFSIZE	ezxml/ezxml.h	37;"	d
EZXML_DUP	ezxml/ezxml.h	40;"	d
EZXML_ERRL	ezxml/ezxml.c	39;"	d	file:
EZXML_NAMEM	ezxml/ezxml.h	38;"	d
EZXML_NIL	ezxml/ezxml.c	/^char *EZXML_NIL[] = { NULL }; \/\/ empty, null terminated array of strings$/;"	v
EZXML_TXTM	ezxml/ezxml.h	39;"	d
EZXML_WS	ezxml/ezxml.c	38;"	d	file:
F0	sha1-sse2.S	/^#define F0(x,y,z)       \\$/;"	d
F1	sha1-sse2.S	/^#define F1(x,y,z)       \\$/;"	d
F2	sha1-sse2.S	/^#define F2(x,y,z)       \\$/;"	d
FAILURE	aircrack-ng.h	51;"	d
FAILURE	ivstools.c	48;"	d	file:
FALSE	common.h	/^typedef enum {FALSE, TRUE} boolean;$/;"	e	enum:__anon14
FILL_MAC_ARRAY	common.h	130;"	d
FILTER_CONSECUTIVE_SN	airdecloak-ng.h	85;"	d
FILTER_DUPLICATE_IV	airdecloak-ng.h	86;"	d
FILTER_DUPLICATE_SN	airdecloak-ng.h	82;"	d
FILTER_DUPLICATE_SN_AP	airdecloak-ng.h	83;"	d
FILTER_DUPLICATE_SN_CLIENT	airdecloak-ng.h	84;"	d
FILTER_SIGNAL	airdecloak-ng.h	81;"	d
FILTER_SIGNAL_DUPLICATE_AND_CONSECUTIVE_SN	airdecloak-ng.h	87;"	d
FIND_VICTIM	wesside-ng.c	70;"	d	file:
FORMAT_CAP	pcap.h	38;"	d
FORMAT_IVS	pcap.h	39;"	d
FORMAT_IVS2	pcap.h	40;"	d
FOUND_VICTIM	wesside-ng.c	71;"	d	file:
FRAG_TIMEOUT	airbase-ng.c	97;"	d	file:
FRAG_TIMEOUT	airtun-ng.c	75;"	d	file:
FRAME_TYPE_CONTROL	airdecloak-ng.h	70;"	d
FRAME_TYPE_DATA	airdecloak-ng.h	71;"	d
FRAME_TYPE_MANAGEMENT	airdecloak-ng.h	69;"	d
FST_ACTION_ACK_REQUEST	ieee802_11_defs.h	/^	FST_ACTION_ACK_REQUEST = 3,$/;"	e	enum:fst_action
FST_ACTION_ACK_RESPONSE	ieee802_11_defs.h	/^	FST_ACTION_ACK_RESPONSE = 4,$/;"	e	enum:fst_action
FST_ACTION_ON_CHANNEL_TUNNEL	ieee802_11_defs.h	/^	FST_ACTION_ON_CHANNEL_TUNNEL = 5,$/;"	e	enum:fst_action
FST_ACTION_SETUP_REQUEST	ieee802_11_defs.h	/^	FST_ACTION_SETUP_REQUEST = 0,$/;"	e	enum:fst_action
FST_ACTION_SETUP_RESPONSE	ieee802_11_defs.h	/^	FST_ACTION_SETUP_RESPONSE = 1,$/;"	e	enum:fst_action
FST_ACTION_TEAR_DOWN	ieee802_11_defs.h	/^	FST_ACTION_TEAR_DOWN = 2,$/;"	e	enum:fst_action
FhssHopset	osdep/airpcap.c	/^	u_int8_t	FhssHopset;$/;"	m	struct:_PPI_FIELD_802_11_COMMON	file:
FhssPattern	osdep/airpcap.c	/^	u_int8_t	FhssPattern;$/;"	m	struct:_PPI_FIELD_802_11_COMMON	file:
FileRead	linecount.cpp	/^unsigned int FileRead(istream &is, vector <char> &buff) {$/;"	f
Flags	osdep/airpcap.c	/^	u_int16_t	Flags;$/;"	m	struct:_PPI_FIELD_802_11_COMMON	file:
Fragment_list	airbase-ng.c	/^struct Fragment_list$/;"	s	file:
Fragment_list	airtun-ng.c	/^struct Fragment_list$/;"	s	file:
G	airodump-ng.h	/^G;$/;"	v	typeref:struct:globals
G	ivstools.c	/^G;$/;"	v	typeref:struct:globals
GATHER	pseudo_intrinsics.h	244;"	d
GATHER	pseudo_intrinsics.h	402;"	d
GATHER	pseudo_intrinsics.h	546;"	d
GATHER	sse-intrinsics.c	212;"	d	file:
GATHER64	pseudo_intrinsics.h	129;"	d
GATHER64	pseudo_intrinsics.h	179;"	d
GATHER64	pseudo_intrinsics.h	253;"	d
GATHER64	pseudo_intrinsics.h	409;"	d
GATHER64	pseudo_intrinsics.h	555;"	d
GATHER64	sse-intrinsics.c	220;"	d	file:
GATHER_2x	pseudo_intrinsics.h	236;"	d
GATHER_2x	pseudo_intrinsics.h	396;"	d
GATHER_2x	pseudo_intrinsics.h	539;"	d
GATHER_2x	sse-intrinsics.c	205;"	d	file:
GATHER_4x	pseudo_intrinsics.h	228;"	d
GATHER_4x	pseudo_intrinsics.h	390;"	d
GATHER_4x	pseudo_intrinsics.h	532;"	d
GATHER_4x	sse-intrinsics.c	198;"	d	file:
GCC_VERSION	arch.h	312;"	d
GENPMKMAGIC	aircrack-ng.h	76;"	d
GETOUTPOS	memory.c	473;"	d	file:
GETPOS	memory.c	472;"	d	file:
GETPOS	simd-intrinsics.c	453;"	d	file:
GETPOS	sse-intrinsics.c	488;"	d	file:
GETPOS	wpapsk.c	144;"	d	file:
GETPOS	wpapsk.c	146;"	d	file:
GETPOSMPARA	memory.c	525;"	d	file:
GET_SUBTYPE	crypto.h	73;"	d
GET_UINT32_BE	crypto.c	60;"	d	file:
GET_UINT32_LE	crypto.c	44;"	d	file:
GOT_ASSOC	wesside-ng.c	76;"	d	file:
GOT_AUTH	wesside-ng.c	73;"	d	file:
GOT_IV	aircrack-ng.c	130;"	d	file:
GetCacheTotalLize	cpuid.c	/^unsigned long GetCacheTotalLize(unsigned ebx, unsigned ecx) {$/;"	f
HAVE_PCAP	Makefile	/^	HAVE_PCAP	= $(shell ld -lpcap 2> \/dev\/null && echo yes)$/;"	m
HEX_BASE	common.c	54;"	d	file:
HI16	crypto.c	1098;"	d	file:
HI8	crypto.c	1097;"	d	file:
HIGHEST_CHANNEL	osdep/common.h	45;"	d
HMAC	gcrypt-openssl-wrapper.h	76;"	d
HMAC_CTX	gcrypt-openssl-wrapper.h	57;"	d
HMAC_CTX_cleanup	gcrypt-openssl-wrapper.h	58;"	d
HMAC_CTX_init	gcrypt-openssl-wrapper.h	59;"	d
HMAC_Final	gcrypt-openssl-wrapper.h	70;"	d
HMAC_Init	gcrypt-openssl-wrapper.h	61;"	d
HMAC_Init_ex	gcrypt-openssl-wrapper.h	60;"	d
HMAC_Update	gcrypt-openssl-wrapper.h	69;"	d
HS20_ANQP_DOMAIN_ID_PRESENT	ieee802_11_defs.h	1144;"	d
HS20_ANQP_OUI_TYPE	ieee802_11_defs.h	1129;"	d
HS20_DEAUTH_REASON_CODE_BSS	ieee802_11_defs.h	1151;"	d
HS20_DEAUTH_REASON_CODE_ESS	ieee802_11_defs.h	1152;"	d
HS20_DGAF_DISABLED	ieee802_11_defs.h	1142;"	d
HS20_IE_VENDOR_TYPE	ieee802_11_defs.h	1008;"	d
HS20_INDICATION_OUI_TYPE	ieee802_11_defs.h	1128;"	d
HS20_OSEN_OUI_TYPE	ieee802_11_defs.h	1130;"	d
HS20_PPS_MO_ID_PRESENT	ieee802_11_defs.h	1143;"	d
HS20_STYPE_CAPABILITY_LIST	ieee802_11_defs.h	1132;"	d
HS20_STYPE_CONNECTION_CAPABILITY	ieee802_11_defs.h	1135;"	d
HS20_STYPE_ICON_BINARY_FILE	ieee802_11_defs.h	1140;"	d
HS20_STYPE_ICON_REQUEST	ieee802_11_defs.h	1139;"	d
HS20_STYPE_NAI_HOME_REALM_QUERY	ieee802_11_defs.h	1136;"	d
HS20_STYPE_OPERATING_CLASS	ieee802_11_defs.h	1137;"	d
HS20_STYPE_OPERATOR_FRIENDLY_NAME	ieee802_11_defs.h	1133;"	d
HS20_STYPE_OSU_PROVIDERS_LIST	ieee802_11_defs.h	1138;"	d
HS20_STYPE_QUERY_LIST	ieee802_11_defs.h	1131;"	d
HS20_STYPE_WAN_METRICS	ieee802_11_defs.h	1134;"	d
HS20_VERSION	ieee802_11_defs.h	1145;"	d
HS20_WNM_DEAUTH_IMMINENT_NOTICE	ieee802_11_defs.h	1149;"	d
HS20_WNM_SUB_REM_NEEDED	ieee802_11_defs.h	1148;"	d
HT_CAP_INFO_40MHZ_INTOLERANT	ieee802_11_defs.h	855;"	d
HT_CAP_INFO_DELAYED_BA	ieee802_11_defs.h	851;"	d
HT_CAP_INFO_DSSS_CCK40MHZ	ieee802_11_defs.h	853;"	d
HT_CAP_INFO_GREEN_FIELD	ieee802_11_defs.h	843;"	d
HT_CAP_INFO_LDPC_CODING_CAP	ieee802_11_defs.h	837;"	d
HT_CAP_INFO_LSIG_TXOP_PROTECT_SUPPORT	ieee802_11_defs.h	856;"	d
HT_CAP_INFO_MAX_AMSDU_SIZE	ieee802_11_defs.h	852;"	d
HT_CAP_INFO_RX_STBC_1	ieee802_11_defs.h	848;"	d
HT_CAP_INFO_RX_STBC_12	ieee802_11_defs.h	849;"	d
HT_CAP_INFO_RX_STBC_123	ieee802_11_defs.h	850;"	d
HT_CAP_INFO_RX_STBC_MASK	ieee802_11_defs.h	847;"	d
HT_CAP_INFO_SHORT_GI20MHZ	ieee802_11_defs.h	844;"	d
HT_CAP_INFO_SHORT_GI40MHZ	ieee802_11_defs.h	845;"	d
HT_CAP_INFO_SMPS_DISABLED	ieee802_11_defs.h	842;"	d
HT_CAP_INFO_SMPS_DYNAMIC	ieee802_11_defs.h	841;"	d
HT_CAP_INFO_SMPS_MASK	ieee802_11_defs.h	839;"	d
HT_CAP_INFO_SMPS_STATIC	ieee802_11_defs.h	840;"	d
HT_CAP_INFO_SUPP_CHANNEL_WIDTH_SET	ieee802_11_defs.h	838;"	d
HT_CAP_INFO_TX_STBC	ieee802_11_defs.h	846;"	d
HT_INFO_HT_PARAM_RIFS_MODE	ieee802_11_defs.h	909;"	d
HT_INFO_HT_PARAM_SECONDARY_CHNL_ABOVE	ieee802_11_defs.h	906;"	d
HT_INFO_HT_PARAM_SECONDARY_CHNL_BELOW	ieee802_11_defs.h	907;"	d
HT_INFO_HT_PARAM_SECONDARY_CHNL_OFF_MASK	ieee802_11_defs.h	905;"	d
HT_INFO_HT_PARAM_STA_CHNL_WIDTH	ieee802_11_defs.h	908;"	d
HT_OPER_OP_MODE_HT_PROT_MASK	ieee802_11_defs.h	919;"	d
HT_OPER_OP_MODE_NON_GF_HT_STAS_PRESENT	ieee802_11_defs.h	920;"	d
HT_OPER_OP_MODE_OBSS_NON_HT_STAS_PRESENT	ieee802_11_defs.h	922;"	d
HT_OPER_PARAM_DUAL_BEACON	ieee802_11_defs.h	927;"	d
HT_OPER_PARAM_DUAL_CTS_PROTECTION	ieee802_11_defs.h	928;"	d
HT_OPER_PARAM_LSIG_TXOP_PROT_FULL_SUPP	ieee802_11_defs.h	930;"	d
HT_OPER_PARAM_PCO_ACTIVE	ieee802_11_defs.h	931;"	d
HT_OPER_PARAM_PCO_PHASE	ieee802_11_defs.h	932;"	d
HT_OPER_PARAM_STBC_BEACON	ieee802_11_defs.h	929;"	d
HT_PROT_20MHZ_PROTECTION	ieee802_11_defs.h	915;"	d
HT_PROT_NONMEMBER_PROTECTION	ieee802_11_defs.h	914;"	d
HT_PROT_NON_HT_MIXED	ieee802_11_defs.h	916;"	d
HT_PROT_NO_PROTECTION	ieee802_11_defs.h	913;"	d
ICMP_PACKET	packetforge-ng.c	62;"	d	file:
IEEE80211RADIOTAP_H	osdep/radiotap/radiotap.h	36;"	d
IEEE80211_ACK_LEN	include/ieee80211.h	692;"	d
IEEE80211_ADDR_LEN	include/ieee80211.h	42;"	d
IEEE80211_AID	include/ieee80211.h	707;"	d
IEEE80211_AID_DEF	include/ieee80211.h	705;"	d
IEEE80211_AID_MAX	include/ieee80211.h	704;"	d
IEEE80211_AUTH_ALGORITHM	include/ieee80211.h	593;"	d
IEEE80211_AUTH_ALG_LEAP	include/ieee80211.h	602;"	d
IEEE80211_AUTH_ALG_OPEN	include/ieee80211.h	600;"	d
IEEE80211_AUTH_ALG_SHARED	include/ieee80211.h	601;"	d
IEEE80211_AUTH_OPEN_REQUEST	include/ieee80211.h	/^	IEEE80211_AUTH_OPEN_REQUEST		= 1,$/;"	e	enum:__anon3
IEEE80211_AUTH_OPEN_RESPONSE	include/ieee80211.h	/^	IEEE80211_AUTH_OPEN_RESPONSE		= 2$/;"	e	enum:__anon3
IEEE80211_AUTH_SHARED_CHALLENGE	include/ieee80211.h	/^	IEEE80211_AUTH_SHARED_CHALLENGE		= 2,$/;"	e	enum:__anon4
IEEE80211_AUTH_SHARED_PASS	include/ieee80211.h	/^	IEEE80211_AUTH_SHARED_PASS		= 4$/;"	e	enum:__anon4
IEEE80211_AUTH_SHARED_REQUEST	include/ieee80211.h	/^	IEEE80211_AUTH_SHARED_REQUEST		= 1,$/;"	e	enum:__anon4
IEEE80211_AUTH_SHARED_RESPONSE	include/ieee80211.h	/^	IEEE80211_AUTH_SHARED_RESPONSE		= 3,$/;"	e	enum:__anon4
IEEE80211_AUTH_STATUS	include/ieee80211.h	597;"	d
IEEE80211_AUTH_TRANSACTION	include/ieee80211.h	595;"	d
IEEE80211_BEACON_CAPABILITY	include/ieee80211.h	425;"	d
IEEE80211_BEACON_INTERVAL	include/ieee80211.h	423;"	d
IEEE80211_BSSID_FROMDS	ieee802_11_defs.h	580;"	d
IEEE80211_CAPINFO_CF_POLLABLE	include/ieee80211.h	430;"	d
IEEE80211_CAPINFO_CF_POLLREQ	include/ieee80211.h	431;"	d
IEEE80211_CAPINFO_CHNL_AGILITY	include/ieee80211.h	435;"	d
IEEE80211_CAPINFO_DSSSOFDM	include/ieee80211.h	440;"	d
IEEE80211_CAPINFO_ESS	include/ieee80211.h	428;"	d
IEEE80211_CAPINFO_IBSS	include/ieee80211.h	429;"	d
IEEE80211_CAPINFO_PBCC	include/ieee80211.h	434;"	d
IEEE80211_CAPINFO_PRIVACY	include/ieee80211.h	432;"	d
IEEE80211_CAPINFO_RSN	include/ieee80211.h	438;"	d
IEEE80211_CAPINFO_SHORT_PREAMBLE	include/ieee80211.h	433;"	d
IEEE80211_CAPINFO_SHORT_SLOTTIME	include/ieee80211.h	437;"	d
IEEE80211_CHALLENGE_LEN	include/ieee80211.h	523;"	d
IEEE80211_CHAN_2GHZ	osdep/radiotap/radiotap.h	220;"	d
IEEE80211_CHAN_5GHZ	osdep/radiotap/radiotap.h	221;"	d
IEEE80211_CHAN_CCK	osdep/radiotap/radiotap.h	218;"	d
IEEE80211_CHAN_DYN	osdep/radiotap/radiotap.h	223;"	d
IEEE80211_CHAN_GFSK	osdep/radiotap/radiotap.h	224;"	d
IEEE80211_CHAN_OFDM	osdep/radiotap/radiotap.h	219;"	d
IEEE80211_CHAN_PASSIVE	osdep/radiotap/radiotap.h	222;"	d
IEEE80211_CHAN_TURBO	osdep/radiotap/radiotap.h	217;"	d
IEEE80211_CRC_LEN	include/ieee80211.h	678;"	d
IEEE80211_DA_FROMDS	ieee802_11_defs.h	579;"	d
IEEE80211_DUR_DS_DIFS	include/ieee80211.h	753;"	d
IEEE80211_DUR_DS_EIFS	include/ieee80211.h	755;"	d
IEEE80211_DUR_DS_FAST_ACK	include/ieee80211.h	746;"	d
IEEE80211_DUR_DS_FAST_CTS	include/ieee80211.h	748;"	d
IEEE80211_DUR_DS_FAST_PLCPHDR	include/ieee80211.h	744;"	d
IEEE80211_DUR_DS_LONG_PREAMBLE	include/ieee80211.h	740;"	d
IEEE80211_DUR_DS_PIFS	include/ieee80211.h	752;"	d
IEEE80211_DUR_DS_SHORT_PREAMBLE	include/ieee80211.h	741;"	d
IEEE80211_DUR_DS_SIFS	include/ieee80211.h	751;"	d
IEEE80211_DUR_DS_SLOT	include/ieee80211.h	750;"	d
IEEE80211_DUR_DS_SLOW_ACK	include/ieee80211.h	745;"	d
IEEE80211_DUR_DS_SLOW_CTS	include/ieee80211.h	747;"	d
IEEE80211_DUR_DS_SLOW_PLCPHDR	include/ieee80211.h	743;"	d
IEEE80211_DUR_TU	include/ieee80211.h	737;"	d
IEEE80211_ELEMID_CCKM	include/ieee80211.h	/^	IEEE80211_ELEMID_CCKM		= 156,$/;"	e	enum:__anon2
IEEE80211_ELEMID_CFPARMS	include/ieee80211.h	/^	IEEE80211_ELEMID_CFPARMS	= 4,$/;"	e	enum:__anon2
IEEE80211_ELEMID_CHALLENGE	include/ieee80211.h	/^	IEEE80211_ELEMID_CHALLENGE	= 16,$/;"	e	enum:__anon2
IEEE80211_ELEMID_CHANSWITCHANN	include/ieee80211.h	/^	IEEE80211_ELEMID_CHANSWITCHANN	= 37,$/;"	e	enum:__anon2
IEEE80211_ELEMID_COUNTRY	include/ieee80211.h	/^	IEEE80211_ELEMID_COUNTRY	= 7,$/;"	e	enum:__anon2
IEEE80211_ELEMID_DSPARMS	include/ieee80211.h	/^	IEEE80211_ELEMID_DSPARMS	= 3,$/;"	e	enum:__anon2
IEEE80211_ELEMID_EDCAPARMS	include/ieee80211.h	/^	IEEE80211_ELEMID_EDCAPARMS	= 12,$/;"	e	enum:__anon2
IEEE80211_ELEMID_ERP	include/ieee80211.h	/^	IEEE80211_ELEMID_ERP		= 42,$/;"	e	enum:__anon2
IEEE80211_ELEMID_FHPARMS	include/ieee80211.h	/^	IEEE80211_ELEMID_FHPARMS	= 2,$/;"	e	enum:__anon2
IEEE80211_ELEMID_HTCAP	include/ieee80211.h	/^	IEEE80211_ELEMID_HTCAP		= 45,	\/* 11n *\/$/;"	e	enum:__anon2
IEEE80211_ELEMID_HTINFO	include/ieee80211.h	/^	IEEE80211_ELEMID_HTINFO		= 61,	\/* 11n *\/$/;"	e	enum:__anon2
IEEE80211_ELEMID_IBSSDFS	include/ieee80211.h	/^	IEEE80211_ELEMID_IBSSDFS	= 41,$/;"	e	enum:__anon2
IEEE80211_ELEMID_IBSSPARMS	include/ieee80211.h	/^	IEEE80211_ELEMID_IBSSPARMS	= 6,$/;"	e	enum:__anon2
IEEE80211_ELEMID_MEASREP	include/ieee80211.h	/^	IEEE80211_ELEMID_MEASREP	= 39,$/;"	e	enum:__anon2
IEEE80211_ELEMID_MEASREQ	include/ieee80211.h	/^	IEEE80211_ELEMID_MEASREQ	= 38,$/;"	e	enum:__anon2
IEEE80211_ELEMID_MMIE	include/ieee80211.h	/^	IEEE80211_ELEMID_MMIE		= 76,	\/* 11w *\/$/;"	e	enum:__anon2
IEEE80211_ELEMID_PWRCAP	include/ieee80211.h	/^	IEEE80211_ELEMID_PWRCAP		= 33,$/;"	e	enum:__anon2
IEEE80211_ELEMID_PWRCNSTR	include/ieee80211.h	/^	IEEE80211_ELEMID_PWRCNSTR	= 32,$/;"	e	enum:__anon2
IEEE80211_ELEMID_QOS_CAP	include/ieee80211.h	/^	IEEE80211_ELEMID_QOS_CAP	= 46,$/;"	e	enum:__anon2
IEEE80211_ELEMID_QUIET	include/ieee80211.h	/^	IEEE80211_ELEMID_QUIET		= 40,$/;"	e	enum:__anon2
IEEE80211_ELEMID_RATES	include/ieee80211.h	/^	IEEE80211_ELEMID_RATES		= 1,$/;"	e	enum:__anon2
IEEE80211_ELEMID_RSN	include/ieee80211.h	/^	IEEE80211_ELEMID_RSN		= 48,$/;"	e	enum:__anon2
IEEE80211_ELEMID_SSID	include/ieee80211.h	/^	IEEE80211_ELEMID_SSID		= 0,$/;"	e	enum:__anon2
IEEE80211_ELEMID_SUPPCHAN	include/ieee80211.h	/^	IEEE80211_ELEMID_SUPPCHAN	= 36,$/;"	e	enum:__anon2
IEEE80211_ELEMID_TIE	include/ieee80211.h	/^	IEEE80211_ELEMID_TIE		= 56,	\/* 11r *\/$/;"	e	enum:__anon2
IEEE80211_ELEMID_TIM	include/ieee80211.h	/^	IEEE80211_ELEMID_TIM		= 5,$/;"	e	enum:__anon2
IEEE80211_ELEMID_TPC	include/ieee80211.h	/^	IEEE80211_ELEMID_TPC		= 150,$/;"	e	enum:__anon2
IEEE80211_ELEMID_TPCREP	include/ieee80211.h	/^	IEEE80211_ELEMID_TPCREP		= 35,$/;"	e	enum:__anon2
IEEE80211_ELEMID_TPCREQ	include/ieee80211.h	/^	IEEE80211_ELEMID_TPCREQ		= 34,$/;"	e	enum:__anon2
IEEE80211_ELEMID_VENDOR	include/ieee80211.h	/^	IEEE80211_ELEMID_VENDOR		= 221	\/* vendor private *\/$/;"	e	enum:__anon2
IEEE80211_ELEMID_XRATES	include/ieee80211.h	/^	IEEE80211_ELEMID_XRATES		= 50,$/;"	e	enum:__anon2
IEEE80211_ERP_LONG_PREAMBLE	include/ieee80211.h	531;"	d
IEEE80211_ERP_NON_ERP_PRESENT	include/ieee80211.h	529;"	d
IEEE80211_ERP_USE_PROTECTION	include/ieee80211.h	530;"	d
IEEE80211_FC	ieee802_11_defs.h	585;"	d
IEEE80211_FC0_SUBTYPE_ACK	include/ieee80211.h	137;"	d
IEEE80211_FC0_SUBTYPE_ASSOC_REQ	include/ieee80211.h	122;"	d
IEEE80211_FC0_SUBTYPE_ASSOC_RESP	include/ieee80211.h	123;"	d
IEEE80211_FC0_SUBTYPE_ATIM	include/ieee80211.h	129;"	d
IEEE80211_FC0_SUBTYPE_AUTH	include/ieee80211.h	131;"	d
IEEE80211_FC0_SUBTYPE_BEACON	include/ieee80211.h	128;"	d
IEEE80211_FC0_SUBTYPE_CFACK	include/ieee80211.h	146;"	d
IEEE80211_FC0_SUBTYPE_CFPOLL	include/ieee80211.h	147;"	d
IEEE80211_FC0_SUBTYPE_CF_ACK	include/ieee80211.h	142;"	d
IEEE80211_FC0_SUBTYPE_CF_ACK_CF_ACK	include/ieee80211.h	148;"	d
IEEE80211_FC0_SUBTYPE_CF_ACPL	include/ieee80211.h	144;"	d
IEEE80211_FC0_SUBTYPE_CF_END	include/ieee80211.h	138;"	d
IEEE80211_FC0_SUBTYPE_CF_END_ACK	include/ieee80211.h	139;"	d
IEEE80211_FC0_SUBTYPE_CF_POLL	include/ieee80211.h	143;"	d
IEEE80211_FC0_SUBTYPE_CTS	include/ieee80211.h	136;"	d
IEEE80211_FC0_SUBTYPE_DATA	include/ieee80211.h	141;"	d
IEEE80211_FC0_SUBTYPE_DEAUTH	include/ieee80211.h	132;"	d
IEEE80211_FC0_SUBTYPE_DISASSOC	include/ieee80211.h	130;"	d
IEEE80211_FC0_SUBTYPE_MASK	crypto.h	66;"	d
IEEE80211_FC0_SUBTYPE_MASK	include/ieee80211.h	119;"	d
IEEE80211_FC0_SUBTYPE_NODATA	include/ieee80211.h	145;"	d
IEEE80211_FC0_SUBTYPE_PROBE_REQ	include/ieee80211.h	126;"	d
IEEE80211_FC0_SUBTYPE_PROBE_RESP	include/ieee80211.h	127;"	d
IEEE80211_FC0_SUBTYPE_PS_POLL	include/ieee80211.h	134;"	d
IEEE80211_FC0_SUBTYPE_QOS	crypto.h	70;"	d
IEEE80211_FC0_SUBTYPE_QOS	include/ieee80211.h	149;"	d
IEEE80211_FC0_SUBTYPE_QOS_NULL	crypto.h	71;"	d
IEEE80211_FC0_SUBTYPE_QOS_NULL	include/ieee80211.h	150;"	d
IEEE80211_FC0_SUBTYPE_REASSOC_REQ	include/ieee80211.h	124;"	d
IEEE80211_FC0_SUBTYPE_REASSOC_RESP	include/ieee80211.h	125;"	d
IEEE80211_FC0_SUBTYPE_RTS	include/ieee80211.h	135;"	d
IEEE80211_FC0_SUBTYPE_SHIFT	crypto.h	67;"	d
IEEE80211_FC0_SUBTYPE_SHIFT	include/ieee80211.h	120;"	d
IEEE80211_FC0_TYPE_CTL	include/ieee80211.h	116;"	d
IEEE80211_FC0_TYPE_DATA	include/ieee80211.h	117;"	d
IEEE80211_FC0_TYPE_MASK	include/ieee80211.h	113;"	d
IEEE80211_FC0_TYPE_MGT	include/ieee80211.h	115;"	d
IEEE80211_FC0_TYPE_SHIFT	include/ieee80211.h	114;"	d
IEEE80211_FC0_VERSION_0	include/ieee80211.h	112;"	d
IEEE80211_FC0_VERSION_MASK	include/ieee80211.h	110;"	d
IEEE80211_FC0_VERSION_SHIFT	include/ieee80211.h	111;"	d
IEEE80211_FC1_DIR_DSTODS	include/ieee80211.h	171;"	d
IEEE80211_FC1_DIR_FROMDS	aircrack-ng.h	120;"	d
IEEE80211_FC1_DIR_FROMDS	crypto.h	56;"	d
IEEE80211_FC1_DIR_FROMDS	include/ieee80211.h	170;"	d
IEEE80211_FC1_DIR_MASK	include/ieee80211.h	167;"	d
IEEE80211_FC1_DIR_NODS	include/ieee80211.h	168;"	d
IEEE80211_FC1_DIR_TODS	include/ieee80211.h	169;"	d
IEEE80211_FC1_MORE_DATA	include/ieee80211.h	176;"	d
IEEE80211_FC1_MORE_FRAG	include/ieee80211.h	173;"	d
IEEE80211_FC1_ORDER	include/ieee80211.h	179;"	d
IEEE80211_FC1_PROTECTED	include/ieee80211.h	177;"	d
IEEE80211_FC1_PWR_MGT	include/ieee80211.h	175;"	d
IEEE80211_FC1_RETRY	include/ieee80211.h	174;"	d
IEEE80211_FC1_WEP	include/ieee80211.h	178;"	d
IEEE80211_FRAG_MAX	include/ieee80211.h	723;"	d
IEEE80211_FRAG_MIN	include/ieee80211.h	722;"	d
IEEE80211_HDRLEN	ieee802_11_defs.h	583;"	d
IEEE80211_HT_MCS_MASK_LEN	ieee802_11_defs.h	758;"	d
IEEE80211_IOC_CHANNEL	osdep/netbsd.c	53;"	d	file:
IEEE80211_IOC_CHANNEL	osdep/openbsd.c	60;"	d	file:
IEEE80211_IS_MULTICAST	include/ieee80211.h	44;"	d
IEEE80211_LLC_SNAP	airbase-ng.c	1651;"	d	file:
IEEE80211_LLC_SNAP	airtun-ng.c	796;"	d	file:
IEEE80211_MAX_LEN	include/ieee80211.h	690;"	d
IEEE80211_MAX_MMPDU_SIZE	ieee802_11_defs.h	755;"	d
IEEE80211_MIN_LEN	include/ieee80211.h	694;"	d
IEEE80211_MTU_MAX	include/ieee80211.h	687;"	d
IEEE80211_MTU_MIN	include/ieee80211.h	688;"	d
IEEE80211_NWID_LEN	include/ieee80211.h	186;"	d
IEEE80211_PLCP_SERVICE	include/ieee80211.h	56;"	d
IEEE80211_PLCP_SFD	include/ieee80211.h	55;"	d
IEEE80211_QOS_ACKPOLICY	include/ieee80211.h	197;"	d
IEEE80211_QOS_ACKPOLICY_BA	include/ieee80211.h	200;"	d
IEEE80211_QOS_ACKPOLICY_MASK	include/ieee80211.h	199;"	d
IEEE80211_QOS_ACKPOLICY_NOACK	include/ieee80211.h	195;"	d
IEEE80211_QOS_ACKPOLICY_NOEXPLACK	include/ieee80211.h	196;"	d
IEEE80211_QOS_ACKPOLICY_NORMAL	include/ieee80211.h	194;"	d
IEEE80211_QOS_ACKPOLICY_S	include/ieee80211.h	198;"	d
IEEE80211_QOS_AMSDU	include/ieee80211.h	193;"	d
IEEE80211_QOS_ESOP	include/ieee80211.h	201;"	d
IEEE80211_QOS_ESOP_S	include/ieee80211.h	202;"	d
IEEE80211_QOS_TID	include/ieee80211.h	203;"	d
IEEE80211_QOS_TXOP	include/ieee80211.h	192;"	d
IEEE80211_RADIOTAP_AMPDU_DELIM_CRC_ERR	osdep/radiotap/radiotap.h	261;"	d
IEEE80211_RADIOTAP_AMPDU_DELIM_CRC_KNOWN	osdep/radiotap/radiotap.h	262;"	d
IEEE80211_RADIOTAP_AMPDU_IS_LAST	osdep/radiotap/radiotap.h	260;"	d
IEEE80211_RADIOTAP_AMPDU_IS_ZEROLEN	osdep/radiotap/radiotap.h	258;"	d
IEEE80211_RADIOTAP_AMPDU_LAST_KNOWN	osdep/radiotap/radiotap.h	259;"	d
IEEE80211_RADIOTAP_AMPDU_REPORT_ZEROLEN	osdep/radiotap/radiotap.h	257;"	d
IEEE80211_RADIOTAP_AMPDU_STATUS	osdep/radiotap/radiotap.h	/^	IEEE80211_RADIOTAP_AMPDU_STATUS = 20,$/;"	e	enum:ieee80211_radiotap_type
IEEE80211_RADIOTAP_ANTENNA	osdep/radiotap/radiotap.h	/^	IEEE80211_RADIOTAP_ANTENNA = 11,$/;"	e	enum:ieee80211_radiotap_type
IEEE80211_RADIOTAP_CHANNEL	osdep/radiotap/radiotap.h	/^	IEEE80211_RADIOTAP_CHANNEL = 3,$/;"	e	enum:ieee80211_radiotap_type
IEEE80211_RADIOTAP_DATA_RETRIES	osdep/radiotap/radiotap.h	/^	IEEE80211_RADIOTAP_DATA_RETRIES = 17,$/;"	e	enum:ieee80211_radiotap_type
IEEE80211_RADIOTAP_DBM_ANTNOISE	osdep/radiotap/radiotap.h	/^	IEEE80211_RADIOTAP_DBM_ANTNOISE = 6,$/;"	e	enum:ieee80211_radiotap_type
IEEE80211_RADIOTAP_DBM_ANTSIGNAL	osdep/radiotap/radiotap.h	/^	IEEE80211_RADIOTAP_DBM_ANTSIGNAL = 5,$/;"	e	enum:ieee80211_radiotap_type
IEEE80211_RADIOTAP_DBM_TX_POWER	osdep/radiotap/radiotap.h	/^	IEEE80211_RADIOTAP_DBM_TX_POWER = 10,$/;"	e	enum:ieee80211_radiotap_type
IEEE80211_RADIOTAP_DB_ANTNOISE	osdep/radiotap/radiotap.h	/^	IEEE80211_RADIOTAP_DB_ANTNOISE = 13,$/;"	e	enum:ieee80211_radiotap_type
IEEE80211_RADIOTAP_DB_ANTSIGNAL	osdep/radiotap/radiotap.h	/^	IEEE80211_RADIOTAP_DB_ANTSIGNAL = 12,$/;"	e	enum:ieee80211_radiotap_type
IEEE80211_RADIOTAP_DB_TX_ATTENUATION	osdep/radiotap/radiotap.h	/^	IEEE80211_RADIOTAP_DB_TX_ATTENUATION = 9,$/;"	e	enum:ieee80211_radiotap_type
IEEE80211_RADIOTAP_EXT	osdep/radiotap/radiotap.h	/^	IEEE80211_RADIOTAP_EXT = 31$/;"	e	enum:ieee80211_radiotap_type
IEEE80211_RADIOTAP_FHSS	osdep/radiotap/radiotap.h	/^	IEEE80211_RADIOTAP_FHSS = 4,$/;"	e	enum:ieee80211_radiotap_type
IEEE80211_RADIOTAP_FLAGS	osdep/radiotap/radiotap.h	/^	IEEE80211_RADIOTAP_FLAGS = 1,$/;"	e	enum:ieee80211_radiotap_type
IEEE80211_RADIOTAP_F_BADFCS	osdep/radiotap/radiotap.h	245;"	d
IEEE80211_RADIOTAP_F_CFP	osdep/radiotap/radiotap.h	227;"	d
IEEE80211_RADIOTAP_F_DATAPAD	osdep/radiotap/radiotap.h	241;"	d
IEEE80211_RADIOTAP_F_FCS	osdep/netbsd.c	49;"	d	file:
IEEE80211_RADIOTAP_F_FCS	osdep/openbsd.c	56;"	d	file:
IEEE80211_RADIOTAP_F_FCS	osdep/radiotap/radiotap.h	240;"	d
IEEE80211_RADIOTAP_F_FRAG	osdep/radiotap/radiotap.h	237;"	d
IEEE80211_RADIOTAP_F_RX_BADPLCP	osdep/radiotap/radiotap.h	248;"	d
IEEE80211_RADIOTAP_F_SHORTPRE	osdep/radiotap/radiotap.h	230;"	d
IEEE80211_RADIOTAP_F_TX_CTS	osdep/radiotap/radiotap.h	253;"	d
IEEE80211_RADIOTAP_F_TX_FAIL	osdep/radiotap/radiotap.h	251;"	d
IEEE80211_RADIOTAP_F_TX_RTS	osdep/radiotap/radiotap.h	254;"	d
IEEE80211_RADIOTAP_F_WEP	osdep/radiotap/radiotap.h	234;"	d
IEEE80211_RADIOTAP_LOCK_QUALITY	osdep/radiotap/radiotap.h	/^	IEEE80211_RADIOTAP_LOCK_QUALITY = 7,$/;"	e	enum:ieee80211_radiotap_type
IEEE80211_RADIOTAP_MCS	osdep/radiotap/radiotap.h	/^	IEEE80211_RADIOTAP_MCS = 19,$/;"	e	enum:ieee80211_radiotap_type
IEEE80211_RADIOTAP_MCS_BW_20	osdep/radiotap/radiotap.h	276;"	d
IEEE80211_RADIOTAP_MCS_BW_20L	osdep/radiotap/radiotap.h	278;"	d
IEEE80211_RADIOTAP_MCS_BW_20U	osdep/radiotap/radiotap.h	279;"	d
IEEE80211_RADIOTAP_MCS_BW_40	osdep/radiotap/radiotap.h	277;"	d
IEEE80211_RADIOTAP_MCS_BW_MASK	osdep/radiotap/radiotap.h	275;"	d
IEEE80211_RADIOTAP_MCS_FEC_LDPC	osdep/radiotap/radiotap.h	282;"	d
IEEE80211_RADIOTAP_MCS_FMT_GF	osdep/radiotap/radiotap.h	281;"	d
IEEE80211_RADIOTAP_MCS_HAVE_BW	osdep/radiotap/radiotap.h	265;"	d
IEEE80211_RADIOTAP_MCS_HAVE_FEC	osdep/radiotap/radiotap.h	269;"	d
IEEE80211_RADIOTAP_MCS_HAVE_FMT	osdep/radiotap/radiotap.h	268;"	d
IEEE80211_RADIOTAP_MCS_HAVE_GI	osdep/radiotap/radiotap.h	267;"	d
IEEE80211_RADIOTAP_MCS_HAVE_MCS	osdep/radiotap/radiotap.h	266;"	d
IEEE80211_RADIOTAP_MCS_HAVE_NESS	osdep/radiotap/radiotap.h	271;"	d
IEEE80211_RADIOTAP_MCS_HAVE_STBC	osdep/radiotap/radiotap.h	270;"	d
IEEE80211_RADIOTAP_MCS_NESS_BIT0	osdep/radiotap/radiotap.h	288;"	d
IEEE80211_RADIOTAP_MCS_NESS_BIT1	osdep/radiotap/radiotap.h	272;"	d
IEEE80211_RADIOTAP_MCS_SGI	osdep/radiotap/radiotap.h	280;"	d
IEEE80211_RADIOTAP_MCS_STBC_1	osdep/radiotap/radiotap.h	285;"	d
IEEE80211_RADIOTAP_MCS_STBC_2	osdep/radiotap/radiotap.h	286;"	d
IEEE80211_RADIOTAP_MCS_STBC_3	osdep/radiotap/radiotap.h	287;"	d
IEEE80211_RADIOTAP_MCS_STBC_MASK	osdep/radiotap/radiotap.h	283;"	d
IEEE80211_RADIOTAP_MCS_STBC_SHIFT	osdep/radiotap/radiotap.h	284;"	d
IEEE80211_RADIOTAP_RADIOTAP_NAMESPACE	osdep/radiotap/radiotap.h	/^	IEEE80211_RADIOTAP_RADIOTAP_NAMESPACE = 29,$/;"	e	enum:ieee80211_radiotap_type
IEEE80211_RADIOTAP_RATE	osdep/radiotap/radiotap.h	/^	IEEE80211_RADIOTAP_RATE = 2,$/;"	e	enum:ieee80211_radiotap_type
IEEE80211_RADIOTAP_RTS_RETRIES	osdep/radiotap/radiotap.h	/^	IEEE80211_RADIOTAP_RTS_RETRIES = 16,$/;"	e	enum:ieee80211_radiotap_type
IEEE80211_RADIOTAP_RX_FLAGS	osdep/radiotap/radiotap.h	/^	IEEE80211_RADIOTAP_RX_FLAGS = 14,$/;"	e	enum:ieee80211_radiotap_type
IEEE80211_RADIOTAP_TSFT	osdep/radiotap/radiotap.h	/^	IEEE80211_RADIOTAP_TSFT = 0,$/;"	e	enum:ieee80211_radiotap_type
IEEE80211_RADIOTAP_TX_ATTENUATION	osdep/radiotap/radiotap.h	/^	IEEE80211_RADIOTAP_TX_ATTENUATION = 8,$/;"	e	enum:ieee80211_radiotap_type
IEEE80211_RADIOTAP_TX_FLAGS	osdep/radiotap/radiotap.h	/^	IEEE80211_RADIOTAP_TX_FLAGS = 15,$/;"	e	enum:ieee80211_radiotap_type
IEEE80211_RADIOTAP_VENDOR_NAMESPACE	osdep/radiotap/radiotap.h	/^	IEEE80211_RADIOTAP_VENDOR_NAMESPACE = 30,$/;"	e	enum:ieee80211_radiotap_type
IEEE80211_RATE_BASIC	include/ieee80211.h	525;"	d
IEEE80211_RATE_VAL	include/ieee80211.h	526;"	d
IEEE80211_REASON_ASSOC_EXPIRE	include/ieee80211.h	/^	IEEE80211_REASON_ASSOC_EXPIRE		= 4,$/;"	e	enum:__anon5
IEEE80211_REASON_ASSOC_LEAVE	include/ieee80211.h	/^	IEEE80211_REASON_ASSOC_LEAVE		= 8,$/;"	e	enum:__anon5
IEEE80211_REASON_ASSOC_NOT_AUTHED	include/ieee80211.h	/^	IEEE80211_REASON_ASSOC_NOT_AUTHED	= 9,$/;"	e	enum:__anon5
IEEE80211_REASON_ASSOC_TOOMANY	include/ieee80211.h	/^	IEEE80211_REASON_ASSOC_TOOMANY		= 5,$/;"	e	enum:__anon5
IEEE80211_REASON_AUTH_EXPIRE	include/ieee80211.h	/^	IEEE80211_REASON_AUTH_EXPIRE		= 2,$/;"	e	enum:__anon5
IEEE80211_REASON_AUTH_LEAVE	include/ieee80211.h	/^	IEEE80211_REASON_AUTH_LEAVE		= 3,$/;"	e	enum:__anon5
IEEE80211_REASON_IE_INVALID	include/ieee80211.h	/^	IEEE80211_REASON_IE_INVALID		= 13,$/;"	e	enum:__anon5
IEEE80211_REASON_MIC_FAILURE	include/ieee80211.h	/^	IEEE80211_REASON_MIC_FAILURE		= 14,$/;"	e	enum:__anon5
IEEE80211_REASON_NOT_ASSOCED	include/ieee80211.h	/^	IEEE80211_REASON_NOT_ASSOCED		= 7,$/;"	e	enum:__anon5
IEEE80211_REASON_NOT_AUTHED	include/ieee80211.h	/^	IEEE80211_REASON_NOT_AUTHED		= 6,$/;"	e	enum:__anon5
IEEE80211_REASON_RSN_INCONSISTENT	include/ieee80211.h	/^	IEEE80211_REASON_RSN_INCONSISTENT	= 12,$/;"	e	enum:__anon5
IEEE80211_REASON_RSN_REQUIRED	include/ieee80211.h	/^	IEEE80211_REASON_RSN_REQUIRED		= 11,$/;"	e	enum:__anon5
IEEE80211_REASON_UNSPECIFIED	include/ieee80211.h	/^	IEEE80211_REASON_UNSPECIFIED		= 1,$/;"	e	enum:__anon5
IEEE80211_RTS_MAX	include/ieee80211.h	716;"	d
IEEE80211_RTS_MIN	include/ieee80211.h	715;"	d
IEEE80211_SA_FROMDS	ieee802_11_defs.h	581;"	d
IEEE80211_SEQ_FRAG_MASK	include/ieee80211.h	181;"	d
IEEE80211_SEQ_FRAG_SHIFT	include/ieee80211.h	182;"	d
IEEE80211_SEQ_SEQ_MASK	include/ieee80211.h	183;"	d
IEEE80211_SEQ_SEQ_SHIFT	include/ieee80211.h	184;"	d
IEEE80211_STATUS_ALG	include/ieee80211.h	/^	IEEE80211_STATUS_ALG			= 13,$/;"	e	enum:__anon5
IEEE80211_STATUS_BASIC_RATE	include/ieee80211.h	/^	IEEE80211_STATUS_BASIC_RATE		= 18,$/;"	e	enum:__anon5
IEEE80211_STATUS_CAPINFO	include/ieee80211.h	/^	IEEE80211_STATUS_CAPINFO		= 10,$/;"	e	enum:__anon5
IEEE80211_STATUS_CA_REQUIRED	include/ieee80211.h	/^	IEEE80211_STATUS_CA_REQUIRED		= 21,$/;"	e	enum:__anon5
IEEE80211_STATUS_CHALLENGE	include/ieee80211.h	/^	IEEE80211_STATUS_CHALLENGE		= 15,$/;"	e	enum:__anon5
IEEE80211_STATUS_DSSSOFDM_REQUIRED	include/ieee80211.h	/^	IEEE80211_STATUS_DSSSOFDM_REQUIRED	= 26$/;"	e	enum:__anon5
IEEE80211_STATUS_NOT_ASSOCED	include/ieee80211.h	/^	IEEE80211_STATUS_NOT_ASSOCED		= 11,$/;"	e	enum:__anon5
IEEE80211_STATUS_OTHER	include/ieee80211.h	/^	IEEE80211_STATUS_OTHER			= 12,$/;"	e	enum:__anon5
IEEE80211_STATUS_PBCC_REQUIRED	include/ieee80211.h	/^	IEEE80211_STATUS_PBCC_REQUIRED		= 20,$/;"	e	enum:__anon5
IEEE80211_STATUS_RATES	include/ieee80211.h	/^	IEEE80211_STATUS_RATES			= 23,$/;"	e	enum:__anon5
IEEE80211_STATUS_SEQUENCE	include/ieee80211.h	/^	IEEE80211_STATUS_SEQUENCE		= 14,$/;"	e	enum:__anon5
IEEE80211_STATUS_SHORTSLOT_REQUIRED	include/ieee80211.h	/^	IEEE80211_STATUS_SHORTSLOT_REQUIRED	= 25,$/;"	e	enum:__anon5
IEEE80211_STATUS_SP_REQUIRED	include/ieee80211.h	/^	IEEE80211_STATUS_SP_REQUIRED		= 19,$/;"	e	enum:__anon5
IEEE80211_STATUS_SUCCESS	include/ieee80211.h	/^	IEEE80211_STATUS_SUCCESS		= 0,$/;"	e	enum:__anon5
IEEE80211_STATUS_TIMEOUT	include/ieee80211.h	/^	IEEE80211_STATUS_TIMEOUT		= 16,$/;"	e	enum:__anon5
IEEE80211_STATUS_TOOMANY	include/ieee80211.h	/^	IEEE80211_STATUS_TOOMANY		= 17,$/;"	e	enum:__anon5
IEEE80211_STATUS_TOO_MANY_STATIONS	include/ieee80211.h	/^	IEEE80211_STATUS_TOO_MANY_STATIONS	= 22,$/;"	e	enum:__anon5
IEEE80211_STATUS_UNSPECIFIED	include/ieee80211.h	/^	IEEE80211_STATUS_UNSPECIFIED		= 1,$/;"	e	enum:__anon5
IEEE80211_WEP_CRCLEN	include/ieee80211.h	661;"	d
IEEE80211_WEP_EXTIV	include/ieee80211.h	674;"	d
IEEE80211_WEP_EXTIVLEN	include/ieee80211.h	675;"	d
IEEE80211_WEP_IVLEN	include/ieee80211.h	659;"	d
IEEE80211_WEP_KEYLEN	include/ieee80211.h	658;"	d
IEEE80211_WEP_KIDLEN	include/ieee80211.h	660;"	d
IEEE80211_WEP_MICLEN	include/ieee80211.h	676;"	d
IEEE80211_WEP_NKID	include/ieee80211.h	665;"	d
IEEE80211_WEP_TOTLEN	include/ieee80211.h	662;"	d
IEEE802_11_DEFS_H	ieee802_11_defs.h	11;"	d
IFNAMSIZ	ieee802_11_defs.h	46;"	d
IFP2AC	include/if_arp.h	109;"	d
IMPORT_COWPATTY	airolib-ng.c	57;"	d	file:
IMPORT_ESSID	airolib-ng.c	55;"	d	file:
IMPORT_PASSWD	airolib-ng.c	56;"	d	file:
INIT_A	simd-intrinsics.c	145;"	d	file:
INIT_A	simd-intrinsics.c	157;"	d	file:
INIT_A	simd-intrinsics.c	1684;"	d	file:
INIT_A	simd-intrinsics.c	1759;"	d	file:
INIT_A	simd-intrinsics.c	2265;"	d	file:
INIT_A	simd-intrinsics.c	2340;"	d	file:
INIT_A	simd-intrinsics.c	789;"	d	file:
INIT_A	simd-intrinsics.c	823;"	d	file:
INIT_B	simd-intrinsics.c	1685;"	d	file:
INIT_B	simd-intrinsics.c	1758;"	d	file:
INIT_B	simd-intrinsics.c	2266;"	d	file:
INIT_B	simd-intrinsics.c	2339;"	d	file:
INIT_B	simd-intrinsics.c	790;"	d	file:
INIT_B	simd-intrinsics.c	822;"	d	file:
INIT_C	simd-intrinsics.c	1686;"	d	file:
INIT_C	simd-intrinsics.c	1757;"	d	file:
INIT_C	simd-intrinsics.c	2267;"	d	file:
INIT_C	simd-intrinsics.c	2338;"	d	file:
INIT_C	simd-intrinsics.c	791;"	d	file:
INIT_C	simd-intrinsics.c	821;"	d	file:
INIT_D	simd-intrinsics.c	1687;"	d	file:
INIT_D	simd-intrinsics.c	1756;"	d	file:
INIT_D	simd-intrinsics.c	1761;"	d	file:
INIT_D	simd-intrinsics.c	1773;"	d	file:
INIT_D	simd-intrinsics.c	2268;"	d	file:
INIT_D	simd-intrinsics.c	2337;"	d	file:
INIT_D	simd-intrinsics.c	2342;"	d	file:
INIT_D	simd-intrinsics.c	2354;"	d	file:
INIT_D	simd-intrinsics.c	792;"	d	file:
INIT_D	simd-intrinsics.c	820;"	d	file:
INIT_E	simd-intrinsics.c	1237;"	d	file:
INIT_E	simd-intrinsics.c	1251;"	d	file:
INIT_E	simd-intrinsics.c	1688;"	d	file:
INIT_E	simd-intrinsics.c	1755;"	d	file:
INIT_E	simd-intrinsics.c	2269;"	d	file:
INIT_E	simd-intrinsics.c	2336;"	d	file:
INIT_F	simd-intrinsics.c	1689;"	d	file:
INIT_F	simd-intrinsics.c	1754;"	d	file:
INIT_F	simd-intrinsics.c	2270;"	d	file:
INIT_F	simd-intrinsics.c	2335;"	d	file:
INIT_G	simd-intrinsics.c	1690;"	d	file:
INIT_G	simd-intrinsics.c	1753;"	d	file:
INIT_G	simd-intrinsics.c	2271;"	d	file:
INIT_G	simd-intrinsics.c	2334;"	d	file:
INIT_H	simd-intrinsics.c	1691;"	d	file:
INIT_H	simd-intrinsics.c	1752;"	d	file:
INIT_H	simd-intrinsics.c	2272;"	d	file:
INIT_H	simd-intrinsics.c	2333;"	d	file:
INIT_PIC	sha1-sse2.S	/^#define INIT_PIC()  pushq %rbx$/;"	d
INIT_PIC	sha1-sse2.S	/^#define INIT_PIC() \\$/;"	d
INIT_PIC	sha1-sse2.S	/^#define INIT_PIC()$/;"	d
INLINE	pseudo_intrinsics.h	599;"	d
INLINE	pseudo_intrinsics.h	602;"	d
INTERWORKING_ANO_ACCESS_NETWORK_MASK	ieee802_11_defs.h	442;"	d
INTERWORKING_ANO_ASRA	ieee802_11_defs.h	444;"	d
INTERWORKING_ANO_ESR	ieee802_11_defs.h	445;"	d
INTERWORKING_ANO_INTERNET	ieee802_11_defs.h	443;"	d
INTERWORKING_ANO_UESA	ieee802_11_defs.h	446;"	d
INTERWORKING_ANT_CHARGEABLE_PUBLIC	ieee802_11_defs.h	450;"	d
INTERWORKING_ANT_EMERGENCY_SERVICES	ieee802_11_defs.h	453;"	d
INTERWORKING_ANT_FREE_PUBLIC	ieee802_11_defs.h	451;"	d
INTERWORKING_ANT_PERSONAL_DEVICE	ieee802_11_defs.h	452;"	d
INTERWORKING_ANT_PRIVATE	ieee802_11_defs.h	448;"	d
INTERWORKING_ANT_PRIVATE_WITH_GUEST	ieee802_11_defs.h	449;"	d
INTERWORKING_ANT_TEST	ieee802_11_defs.h	454;"	d
INTERWORKING_ANT_WILDCARD	ieee802_11_defs.h	455;"	d
IS_MCAST_IP	common.h	100;"	d
IS_MCAST_IP	common.h	106;"	d
IS_X	aircrack-ng.c	587;"	d	file:
IS_X	aircrack-ng.c	774;"	d	file:
IV	MD5_std.h	/^	MD5_word IV[4];$/;"	m	struct:__anon32
IVBYTES	aircrack-ptw-lib.c	48;"	d	file:
IVS	ivstools.c	49;"	d	file:
IVS2_BSSID	pcap.h	59;"	d
IVS2_CLR	pcap.h	76;"	d
IVS2_ESSID	pcap.h	62;"	d
IVS2_EXTENSION	pcap.h	46;"	d
IVS2_MAGIC	pcap.h	45;"	d
IVS2_PTW	pcap.h	73;"	d
IVS2_VERSION	pcap.h	47;"	d
IVS2_WPA	pcap.h	65;"	d
IVS2_XOR	pcap.h	68;"	d
IVSONLY_MAGIC	pcap.h	44;"	d
IV_NOTHERE	uniqueiv.h	38;"	d
IV_PRESENT	uniqueiv.h	39;"	d
JOHNSWAP	johnswap.h	72;"	d
JOHNSWAP	johnswap.h	76;"	d
JOHNSWAP	johnswap.h	79;"	d
JOHNSWAP	johnswap.h	82;"	d
JOHNSWAP64	johnswap.h	73;"	d
JOHNSWAP64	johnswap.h	77;"	d
JOHNSWAP64	johnswap.h	80;"	d
JOHNSWAP64	johnswap.h	83;"	d
JOHN_AVX	arch.h	163;"	d
JOHN_XOP	arch.h	160;"	d
JTR_ALIGN	aligned.h	56;"	d
JTR_ALIGN	aligned.h	58;"	d
JTR_ALIGN	aligned.h	60;"	d
K01_IV	aircrack-ng.c	132;"	d	file:
K02_IV	aircrack-ng.c	133;"	d	file:
K03_IV	aircrack-ng.c	134;"	d	file:
K04_IV	aircrack-ng.c	135;"	d	file:
K05_IV	aircrack-ng.c	136;"	d	file:
K06_IV	aircrack-ng.c	137;"	d	file:
K07_IV	aircrack-ng.c	138;"	d	file:
K08_IV	aircrack-ng.c	139;"	d	file:
K09_IV	aircrack-ng.c	140;"	d	file:
K10_IV	aircrack-ng.c	141;"	d	file:
K11_IV	aircrack-ng.c	142;"	d	file:
K12_IV	aircrack-ng.c	143;"	d	file:
K13_IV	aircrack-ng.c	144;"	d	file:
K14_IV	aircrack-ng.c	145;"	d	file:
K15_IV	aircrack-ng.c	146;"	d	file:
K16_IV	aircrack-ng.c	147;"	d	file:
K17_IV	aircrack-ng.c	148;"	d	file:
KEYHSBYTES	aircrack-ng.h	70;"	d
KEYHSBYTES	wesside-ng.c	166;"	d	file:
KEYLIMIT	aircrack-ng.h	121;"	d
KEYLIMIT	wesside-ng.c	91;"	d	file:
KEY_ARROW_DOWN	airodump-ng.c	204;"	d	file:
KEY_ARROW_LEFT	airodump-ng.c	206;"	d	file:
KEY_ARROW_RIGHT	airodump-ng.c	205;"	d	file:
KEY_ARROW_UP	airodump-ng.c	203;"	d	file:
KEY_FILE	wesside-ng.c	89;"	d	file:
KEY_SPACE	airodump-ng.c	202;"	d	file:
KEY_TAB	airodump-ng.c	201;"	d	file:
KEY_a	airodump-ng.c	207;"	d	file:
KEY_c	airodump-ng.c	208;"	d	file:
KEY_d	airodump-ng.c	209;"	d	file:
KEY_i	airodump-ng.c	210;"	d	file:
KEY_m	airodump-ng.c	211;"	d	file:
KEY_n	airodump-ng.c	212;"	d	file:
KEY_r	airodump-ng.c	213;"	d	file:
KEY_s	airodump-ng.c	214;"	d	file:
KISMET_CSV_EXT	airodump-ng.h	126;"	d
KISMET_HEADER	airodump-ng.c	4608;"	d	file:
KISMET_NETXML_EXT	airodump-ng.h	127;"	d
KISMET_NETXML_HEADER_BEGIN	airodump-ng.c	4088;"	d	file:
KISMET_NETXML_HEADER_END	airodump-ng.c	4089;"	d	file:
KISMET_NETXML_TRAILER	airodump-ng.c	4091;"	d	file:
KSBYTES	aircrack-ptw-lib.c	47;"	d	file:
K_COEFF	aircrack-ng.c	/^int K_COEFF[N_ATTACKS] =$/;"	v
K_COEFF	kstats.c	/^int K_COEFF[N_ATTACKS] =$/;"	v
KoreK_attacks	aircrack-ng.h	/^enum KoreK_attacks$/;"	g
KoreK_attacks	kstats.c	/^enum KoreK_attacks$/;"	g	file:
LCI_REQ_SUBELEM_AZIMUTH_REQ	ieee802_11_defs.h	/^	LCI_REQ_SUBELEM_AZIMUTH_REQ = 1,$/;"	e	enum:lci_req_subelem
LCI_REQ_SUBELEM_MAX_AGE	ieee802_11_defs.h	/^	LCI_REQ_SUBELEM_MAX_AGE = 4,$/;"	e	enum:lci_req_subelem
LCI_REQ_SUBELEM_ORIGINATOR_MAC_ADDR	ieee802_11_defs.h	/^	LCI_REQ_SUBELEM_ORIGINATOR_MAC_ADDR = 2,$/;"	e	enum:lci_req_subelem
LCI_REQ_SUBELEM_TARGET_MAC_ADDR	ieee802_11_defs.h	/^	LCI_REQ_SUBELEM_TARGET_MAC_ADDR = 3,$/;"	e	enum:lci_req_subelem
LIB	ezxml/Makefile	/^LIB = libezxml.a$/;"	m
LIB	osdep/Makefile	/^LIB		= libosdep.a $/;"	m
LIBLINECOUNT	Makefile	/^LIBLINECOUNT	= liblinecount.a$/;"	m
LIBOSD	Makefile	/^LIBOSD		= $(OSD)\/lib$(OSD).a$/;"	m
LIBPCAP	Makefile	/^		LIBPCAP		= -lpcap$/;"	m
LIBPCRE	Makefile	/^	LIBPCRE = $(shell $(PKG_CONFIG) --libs libpcre)$/;"	m
LIBPCRE	Makefile	/^LIBPCRE		=$/;"	m
LIBS	Makefile	/^LIBS		:= -L$(OSD) -l$(OSD) $(LIBS)$/;"	m
LIBSQL	Makefile	/^	LIBSQL		= -L\/usr\/local\/lib -lsqlite3$/;"	m
LIBSQL	Makefile	/^	LIBSQL		=$/;"	m
LIBSSL	Makefile	/^	LIBSSL		= -lgcrypt $(LDFLAGS)$/;"	m
LIBSSL	Makefile	/^	LIBSSL		= -lssl -lcrypto $(LDFLAGS)$/;"	m
LIBSSL	Makefile	/^LIBSSL		= -lssl -lcrypto$/;"	m
LIBSTDCXX	Makefile	/^LIBSTDCXX	= -lstdc++$/;"	m
LIBXML	Makefile	/^LIBXML      = $(XML)\/lib$(XML).a$/;"	m
LINECOUNT_H	linecount.h	34;"	d
LINKTYPE_ETHERNET	osdep/osdep.h	52;"	d
LINKTYPE_ETHERNET	osdep/osdep.h	53;"	d
LINKTYPE_ETHERNET	pcap.h	52;"	d
LINKTYPE_IEEE802_11	osdep/osdep.h	48;"	d
LINKTYPE_IEEE802_11	osdep/osdep.h	49;"	d
LINKTYPE_IEEE802_11	pcap.h	53;"	d
LINKTYPE_IEEE802_11	wesside-ng.c	78;"	d	file:
LINKTYPE_PPI_HDR	osdep/osdep.h	54;"	d
LINKTYPE_PPI_HDR	osdep/osdep.h	55;"	d
LINKTYPE_PPI_HDR	pcap.h	56;"	d
LINKTYPE_PRISM_HEADER	osdep/osdep.h	50;"	d
LINKTYPE_PRISM_HEADER	osdep/osdep.h	51;"	d
LINKTYPE_PRISM_HEADER	pcap.h	54;"	d
LINKTYPE_RADIOTAP_HDR	osdep/osdep.h	46;"	d
LINKTYPE_RADIOTAP_HDR	osdep/osdep.h	47;"	d
LINKTYPE_RADIOTAP_HDR	pcap.h	55;"	d
LITTLE_ENDIAN	osdep/byteorder.h	211;"	d
LLC_8021D_LSAP	include/if_llc.h	151;"	d
LLC_DISC	include/if_llc.h	121;"	d
LLC_DISC_P	include/if_llc.h	122;"	d
LLC_DM	include/if_llc.h	129;"	d
LLC_DM_P	include/if_llc.h	130;"	d
LLC_FRMR	include/if_llc.h	127;"	d
LLC_FRMRLEN	include/if_llc.h	113;"	d
LLC_FRMR_P	include/if_llc.h	128;"	d
LLC_INFO	include/if_llc.h	146;"	d
LLC_ISFRAMELEN	include/if_llc.h	111;"	d
LLC_ISO_LSAP	include/if_llc.h	154;"	d
LLC_REJ	include/if_llc.h	141;"	d
LLC_RNR	include/if_llc.h	140;"	d
LLC_RR	include/if_llc.h	139;"	d
LLC_SABME	include/if_llc.h	133;"	d
LLC_SABME_P	include/if_llc.h	134;"	d
LLC_SNAPFRAMELEN	include/if_llc.h	114;"	d
LLC_SNAP_LSAP	include/if_llc.h	153;"	d
LLC_TEST	include/if_llc.h	125;"	d
LLC_TEST_P	include/if_llc.h	126;"	d
LLC_UA	include/if_llc.h	123;"	d
LLC_UA_P	include/if_llc.h	124;"	d
LLC_UFRAMELEN	include/if_llc.h	112;"	d
LLC_UI	include/if_llc.h	119;"	d
LLC_UI_P	include/if_llc.h	120;"	d
LLC_X25_LSAP	include/if_llc.h	152;"	d
LLC_XID	include/if_llc.h	131;"	d
LLC_XID_BASIC_MINLEN	include/if_llc.h	161;"	d
LLC_XID_CLASS_I	include/if_llc.h	163;"	d
LLC_XID_CLASS_II	include/if_llc.h	164;"	d
LLC_XID_CLASS_III	include/if_llc.h	165;"	d
LLC_XID_CLASS_IV	include/if_llc.h	166;"	d
LLC_XID_FORMAT_BASIC	include/if_llc.h	160;"	d
LLC_XID_P	include/if_llc.h	132;"	d
LLIST_OBJ_FREE	llist.h	11;"	d
LLIST_OBJ_NOT_FREE	llist.h	12;"	d
LLd	misc.h	67;"	d
LLd	misc.h	73;"	d
LLu	misc.h	66;"	d
LLu	misc.h	72;"	d
LLx	misc.h	68;"	d
LLx	misc.h	74;"	d
LO16	crypto.c	1096;"	d	file:
LO8	crypto.c	1095;"	d	file:
LOCATION_SUBJECT_3RD_PARTY	ieee802_11_defs.h	/^	LOCATION_SUBJECT_3RD_PARTY = 2,$/;"	e	enum:location_subject
LOCATION_SUBJECT_LOCAL	ieee802_11_defs.h	/^	LOCATION_SUBJECT_LOCAL = 0,$/;"	e	enum:location_subject
LOCATION_SUBJECT_REMOTE	ieee802_11_defs.h	/^	LOCATION_SUBJECT_REMOTE = 1,$/;"	e	enum:location_subject
LOG_CTX	log.h	/^} LOG_CTX;$/;"	t	typeref:struct:_LOG_CTX
LOWEST_CHANNEL	osdep/common.h	46;"	d
L_ALL	log.h	26;"	d
L_CONSOLE	log.h	/^	L_CONSOLE = 1,$/;"	e	enum:__anon16
L_CRI	log.h	22;"	d
L_DBG	log.h	25;"	d
L_ERR	log.h	23;"	d
L_FILE	log.h	/^	L_FILE    = 2,$/;"	e	enum:__anon16
L_INF	log.h	24;"	d
L_SYS	log.h	/^} L_SYS;$/;"	t	typeref:enum:__anon16
L_SYSLOG	log.h	/^	L_SYSLOG  = 4,$/;"	e	enum:__anon16
MACUINT64	common.h	109;"	d
MAC_list	airbase-ng.c	/^struct MAC_list$/;"	s	file:
MANGLE	sha1-sse2.S	/^#define MANGLE(x)   (%rbx)$/;"	d
MANGLE	sha1-sse2.S	/^#define MANGLE(x)   x ## @GOTOFF(%ebx)$/;"	d
MANGLE	sha1-sse2.S	/^#define MANGLE(x) x$/;"	d
MANGLE	sha1-sse2.S	/^#define MANGLE(x) x(%rip)$/;"	d
MANUF_SIZE	airodump-ng.c	4006;"	d	file:
MANUF_SIZE	airodump-ng.c	4085;"	d	file:
MAX	common.h	66;"	d
MAX_APS	aireplay-ng.c	79;"	d	file:
MAX_APS	tkiptun-ng.c	78;"	d	file:
MAX_CARDS	airodump-ng.h	46;"	d
MAX_CF_XMIT	airbase-ng.c	89;"	d	file:
MAX_DICTS	aircrack-ng.h	58;"	d
MAX_FRAME_EXTENSION	airbase-ng.c	94;"	d	file:
MAX_IE_ELEMENT_SIZE	pcap.h	79;"	d
MAX_IE_ELEMENT_SIZE	wi_packet.h	14;"	d
MAX_IE_SIZE	airnodes.c	17;"	d	file:
MAX_IFACE_NAME	osdep/osdep.h	85;"	d
MAX_KEYS_PER_CRYPT	wpapsk.c	121;"	d	file:
MAX_KEYS_PER_CRYPT	wpapsk.c	123;"	d	file:
MAX_NUM_2G_CHANNEL	osdep/channel.h	5;"	d
MAX_NUM_5G_CHANNEL	osdep/channel.h	8;"	d
MAX_NUM_BUCKETS	hashtable.h	14;"	d
MAX_NUM_CHANNEL	osdep/channel.h	17;"	d
MAX_SIGNAL_VARIATION	airdecloak-ng.c	957;"	d	file:
MAX_SIGNAL_VARIATION_POTENTIALLY_CLOAKED	airdecloak-ng.c	958;"	d	file:
MAX_SORT	airodump-ng.h	87;"	d
MAX_TAP_DEVS	osdep/darwin_tap.c	36;"	d	file:
MAX_THREADS	aircrack-ng.h	72;"	d
MAX_WIFI_CARDS	wifi_setup.h	14;"	d
MAYBE_INLINE	jcommon.h	75;"	d
MAYBE_INLINE	jcommon.h	77;"	d
MAYBE_INLINE	jcommon.h	79;"	d
MAYBE_INLINE	jcommon.h	82;"	d
MAYBE_INLINE	jcommon.h	84;"	d
MBO_ANQP_OUI_TYPE	ieee802_11_defs.h	1240;"	d
MBO_ANQP_SUBTYPE_CELL_CONN_PREF	ieee802_11_defs.h	1241;"	d
MBO_AP_CAPA_CELL_AWARE	ieee802_11_defs.h	1169;"	d
MBO_ASSOC_DISALLOW_REASON_AIR_INTERFERENCE	ieee802_11_defs.h	/^	MBO_ASSOC_DISALLOW_REASON_AIR_INTERFERENCE = 3,$/;"	e	enum:mbo_assoc_disallow_reason
MBO_ASSOC_DISALLOW_REASON_AUTH_SERVER_OVERLOAD	ieee802_11_defs.h	/^	MBO_ASSOC_DISALLOW_REASON_AUTH_SERVER_OVERLOAD = 4,$/;"	e	enum:mbo_assoc_disallow_reason
MBO_ASSOC_DISALLOW_REASON_LOW_RSSI	ieee802_11_defs.h	/^	MBO_ASSOC_DISALLOW_REASON_LOW_RSSI = 5,$/;"	e	enum:mbo_assoc_disallow_reason
MBO_ASSOC_DISALLOW_REASON_MAX_STA	ieee802_11_defs.h	/^	MBO_ASSOC_DISALLOW_REASON_MAX_STA = 2,$/;"	e	enum:mbo_assoc_disallow_reason
MBO_ASSOC_DISALLOW_REASON_UNSPECIFIED	ieee802_11_defs.h	/^	MBO_ASSOC_DISALLOW_REASON_UNSPECIFIED = 1,$/;"	e	enum:mbo_assoc_disallow_reason
MBO_ATTR_ID_AP_CAPA_IND	ieee802_11_defs.h	/^	MBO_ATTR_ID_AP_CAPA_IND = 1,$/;"	e	enum:mbo_attr_id
MBO_ATTR_ID_ASSOC_DISALLOW	ieee802_11_defs.h	/^	MBO_ATTR_ID_ASSOC_DISALLOW = 4,$/;"	e	enum:mbo_attr_id
MBO_ATTR_ID_ASSOC_RETRY_DELAY	ieee802_11_defs.h	/^	MBO_ATTR_ID_ASSOC_RETRY_DELAY = 8,$/;"	e	enum:mbo_attr_id
MBO_ATTR_ID_CELL_DATA_CAPA	ieee802_11_defs.h	/^	MBO_ATTR_ID_CELL_DATA_CAPA = 3,$/;"	e	enum:mbo_attr_id
MBO_ATTR_ID_CELL_DATA_PREF	ieee802_11_defs.h	/^	MBO_ATTR_ID_CELL_DATA_PREF = 5,$/;"	e	enum:mbo_attr_id
MBO_ATTR_ID_NON_PREF_CHAN_REPORT	ieee802_11_defs.h	/^	MBO_ATTR_ID_NON_PREF_CHAN_REPORT = 2,$/;"	e	enum:mbo_attr_id
MBO_ATTR_ID_TRANSITION_REASON	ieee802_11_defs.h	/^	MBO_ATTR_ID_TRANSITION_REASON = 6,$/;"	e	enum:mbo_attr_id
MBO_ATTR_ID_TRANSITION_REJECT_REASON	ieee802_11_defs.h	/^	MBO_ATTR_ID_TRANSITION_REJECT_REASON = 7,$/;"	e	enum:mbo_attr_id
MBO_CELL_CAPA_AVAILABLE	ieee802_11_defs.h	/^	MBO_CELL_CAPA_AVAILABLE = 1,$/;"	e	enum:mbo_cellular_capa
MBO_CELL_CAPA_NOT_AVAILABLE	ieee802_11_defs.h	/^	MBO_CELL_CAPA_NOT_AVAILABLE = 2,$/;"	e	enum:mbo_cellular_capa
MBO_CELL_CAPA_NOT_SUPPORTED	ieee802_11_defs.h	/^	MBO_CELL_CAPA_NOT_SUPPORTED = 3,$/;"	e	enum:mbo_cellular_capa
MBO_CELL_PREF_EXCLUDED	ieee802_11_defs.h	/^	MBO_CELL_PREF_EXCLUDED = 0,$/;"	e	enum:mbo_cell_pref
MBO_CELL_PREF_NO_USE	ieee802_11_defs.h	/^	MBO_CELL_PREF_NO_USE = 1,$/;"	e	enum:mbo_cell_pref
MBO_CELL_PREF_USE	ieee802_11_defs.h	/^	MBO_CELL_PREF_USE = 255$/;"	e	enum:mbo_cell_pref
MBO_IE_VENDOR_TYPE	ieee802_11_defs.h	1010;"	d
MBO_NON_PREF_CHAN_REASON_EXT_INTERFERENCE	ieee802_11_defs.h	/^	MBO_NON_PREF_CHAN_REASON_EXT_INTERFERENCE = 2,$/;"	e	enum:mbo_non_pref_chan_reason
MBO_NON_PREF_CHAN_REASON_INT_INTERFERENCE	ieee802_11_defs.h	/^	MBO_NON_PREF_CHAN_REASON_INT_INTERFERENCE = 3,$/;"	e	enum:mbo_non_pref_chan_reason
MBO_NON_PREF_CHAN_REASON_RSSI	ieee802_11_defs.h	/^	MBO_NON_PREF_CHAN_REASON_RSSI = 1,$/;"	e	enum:mbo_non_pref_chan_reason
MBO_NON_PREF_CHAN_REASON_UNSPECIFIED	ieee802_11_defs.h	/^	MBO_NON_PREF_CHAN_REASON_UNSPECIFIED = 0,$/;"	e	enum:mbo_non_pref_chan_reason
MBO_OUI_TYPE	ieee802_11_defs.h	1011;"	d
MBO_TRANSITION_REASON_BANDWIDTH	ieee802_11_defs.h	/^	MBO_TRANSITION_REASON_BANDWIDTH = 3,$/;"	e	enum:mbo_transition_reason
MBO_TRANSITION_REASON_DELAY	ieee802_11_defs.h	/^	MBO_TRANSITION_REASON_DELAY = 2,$/;"	e	enum:mbo_transition_reason
MBO_TRANSITION_REASON_FRAME_LOSS	ieee802_11_defs.h	/^	MBO_TRANSITION_REASON_FRAME_LOSS = 1,$/;"	e	enum:mbo_transition_reason
MBO_TRANSITION_REASON_GRAY_ZONE	ieee802_11_defs.h	/^	MBO_TRANSITION_REASON_GRAY_ZONE = 8,$/;"	e	enum:mbo_transition_reason
MBO_TRANSITION_REASON_INTERFERENCE	ieee802_11_defs.h	/^	MBO_TRANSITION_REASON_INTERFERENCE = 7,$/;"	e	enum:mbo_transition_reason
MBO_TRANSITION_REASON_LOAD_BALANCE	ieee802_11_defs.h	/^	MBO_TRANSITION_REASON_LOAD_BALANCE = 4,$/;"	e	enum:mbo_transition_reason
MBO_TRANSITION_REASON_PREMIUM_AP	ieee802_11_defs.h	/^	MBO_TRANSITION_REASON_PREMIUM_AP = 9,$/;"	e	enum:mbo_transition_reason
MBO_TRANSITION_REASON_RETRANSMISSIONS	ieee802_11_defs.h	/^	MBO_TRANSITION_REASON_RETRANSMISSIONS = 6,$/;"	e	enum:mbo_transition_reason
MBO_TRANSITION_REASON_RSSI	ieee802_11_defs.h	/^	MBO_TRANSITION_REASON_RSSI = 5,$/;"	e	enum:mbo_transition_reason
MBO_TRANSITION_REASON_UNSPECIFIED	ieee802_11_defs.h	/^	MBO_TRANSITION_REASON_UNSPECIFIED = 0,$/;"	e	enum:mbo_transition_reason
MBO_TRANSITION_REJECT_REASON_DELAY	ieee802_11_defs.h	/^	MBO_TRANSITION_REJECT_REASON_DELAY = 2,$/;"	e	enum:mbo_transition_reject_reason
MBO_TRANSITION_REJECT_REASON_FRAME_LOSS	ieee802_11_defs.h	/^	MBO_TRANSITION_REJECT_REASON_FRAME_LOSS = 1,$/;"	e	enum:mbo_transition_reject_reason
MBO_TRANSITION_REJECT_REASON_INTERFERENCE	ieee802_11_defs.h	/^	MBO_TRANSITION_REJECT_REASON_INTERFERENCE = 5,$/;"	e	enum:mbo_transition_reject_reason
MBO_TRANSITION_REJECT_REASON_QOS_CAPACITY	ieee802_11_defs.h	/^	MBO_TRANSITION_REJECT_REASON_QOS_CAPACITY = 3,$/;"	e	enum:mbo_transition_reject_reason
MBO_TRANSITION_REJECT_REASON_RSSI	ieee802_11_defs.h	/^	MBO_TRANSITION_REJECT_REASON_RSSI = 4,$/;"	e	enum:mbo_transition_reject_reason
MBO_TRANSITION_REJECT_REASON_SERVICES	ieee802_11_defs.h	/^	MBO_TRANSITION_REJECT_REASON_SERVICES = 6,$/;"	e	enum:mbo_transition_reject_reason
MBO_TRANSITION_REJECT_REASON_UNSPECIFIED	ieee802_11_defs.h	/^	MBO_TRANSITION_REJECT_REASON_UNSPECIFIED = 0,$/;"	e	enum:mbo_transition_reject_reason
MB_BAND_ID_WIFI_2_4GHZ	ieee802_11_defs.h	/^	MB_BAND_ID_WIFI_2_4GHZ = 2, \/* 2.4 GHz *\/$/;"	e	enum:mb_band_id
MB_BAND_ID_WIFI_5GHZ	ieee802_11_defs.h	/^	MB_BAND_ID_WIFI_5GHZ = 4, \/* 4.9 and 5 GHz *\/$/;"	e	enum:mb_band_id
MB_BAND_ID_WIFI_60GHZ	ieee802_11_defs.h	/^	MB_BAND_ID_WIFI_60GHZ = 5, \/* 60 GHz *\/$/;"	e	enum:mb_band_id
MB_CONNECTION_CAPABILITY_AP	ieee802_11_defs.h	1658;"	d
MB_CONNECTION_CAPABILITY_DLS	ieee802_11_defs.h	1660;"	d
MB_CONNECTION_CAPABILITY_IBSS	ieee802_11_defs.h	1662;"	d
MB_CONNECTION_CAPABILITY_PCP	ieee802_11_defs.h	1659;"	d
MB_CONNECTION_CAPABILITY_TDLS	ieee802_11_defs.h	1661;"	d
MB_CTRL_PAIRWISE_CIPHER_SUITE_PRESENT	ieee802_11_defs.h	1650;"	d
MB_CTRL_ROLE	ieee802_11_defs.h	1648;"	d
MB_CTRL_ROLE_MASK	ieee802_11_defs.h	1647;"	d
MB_CTRL_STA_MAC_PRESENT	ieee802_11_defs.h	1649;"	d
MB_STA_ROLE_AP	ieee802_11_defs.h	/^	MB_STA_ROLE_AP = 0,$/;"	e	enum:mb_ctrl_sta_role
MB_STA_ROLE_IBSS_STA	ieee802_11_defs.h	/^	MB_STA_ROLE_IBSS_STA = 2,$/;"	e	enum:mb_ctrl_sta_role
MB_STA_ROLE_NON_PCP_NON_AP	ieee802_11_defs.h	/^	MB_STA_ROLE_NON_PCP_NON_AP = 4$/;"	e	enum:mb_ctrl_sta_role
MB_STA_ROLE_PCP	ieee802_11_defs.h	/^	MB_STA_ROLE_PCP = 3,$/;"	e	enum:mb_ctrl_sta_role
MB_STA_ROLE_TDLS_STA	ieee802_11_defs.h	/^	MB_STA_ROLE_TDLS_STA = 1,$/;"	e	enum:mb_ctrl_sta_role
MCAST_PREF	wesside-ng.c	86;"	d	file:
MD4_ALGORITHM_NAME	simd-intrinsics.h	130;"	d
MD4_ALGORITHM_NAME	simd-intrinsics.h	132;"	d
MD4_ALGORITHM_NAME	sse-intrinsics.h	101;"	d
MD4_ALGORITHM_NAME	sse-intrinsics.h	98;"	d
MD4_F	simd-intrinsics.c	732;"	d	file:
MD4_F	sse-intrinsics.c	635;"	d	file:
MD4_G	simd-intrinsics.c	736;"	d	file:
MD4_G	simd-intrinsics.c	739;"	d	file:
MD4_G	simd-intrinsics.c	743;"	d	file:
MD4_G	sse-intrinsics.c	638;"	d	file:
MD4_H	simd-intrinsics.c	751;"	d	file:
MD4_H	simd-intrinsics.c	757;"	d	file:
MD4_H	simd-intrinsics.c	764;"	d	file:
MD4_H	sse-intrinsics.c	644;"	d	file:
MD4_H2	simd-intrinsics.c	754;"	d	file:
MD4_H2	simd-intrinsics.c	761;"	d	file:
MD4_H2	simd-intrinsics.c	768;"	d	file:
MD4_N_STR	arch.h	427;"	d
MD4_N_STR	arch.h	429;"	d
MD4_PARA_DO	simd-intrinsics.c	730;"	d	file:
MD4_PARA_DO	sse-intrinsics.c	633;"	d	file:
MD4_REV_STEP	simd-intrinsics.c	782;"	d	file:
MD4_SSE_NUM_KEYS	simd-intrinsics.c	729;"	d	file:
MD4_SSE_NUM_KEYS	sse-intrinsics.c	632;"	d	file:
MD4_SSE_type	sse-intrinsics.h	100;"	d
MD4_SSE_type	sse-intrinsics.h	97;"	d
MD4_STEP	simd-intrinsics.c	773;"	d	file:
MD4_STEP	sse-intrinsics.c	648;"	d	file:
MD5_ALGORITHM_NAME	MD5_std.h	112;"	d
MD5_ALGORITHM_NAME	MD5_std.h	115;"	d
MD5_ALGORITHM_NAME	MD5_std.h	118;"	d
MD5_ALGORITHM_NAME	simd-intrinsics.h	120;"	d
MD5_ALGORITHM_NAME	simd-intrinsics.h	122;"	d
MD5_ALGORITHM_NAME	sse-intrinsics.h	88;"	d
MD5_ALGORITHM_NAME	sse-intrinsics.h	91;"	d
MD5_ASM	arch.h	307;"	d
MD5_F	simd-intrinsics.c	78;"	d	file:
MD5_F	sse-intrinsics.c	231;"	d	file:
MD5_G	simd-intrinsics.c	81;"	d	file:
MD5_G	sse-intrinsics.c	234;"	d	file:
MD5_H	simd-intrinsics.c	85;"	d	file:
MD5_H	simd-intrinsics.c	91;"	d	file:
MD5_H	simd-intrinsics.c	98;"	d	file:
MD5_H	sse-intrinsics.c	237;"	d	file:
MD5_H2	simd-intrinsics.c	102;"	d	file:
MD5_H2	simd-intrinsics.c	88;"	d	file:
MD5_H2	simd-intrinsics.c	95;"	d	file:
MD5_I	simd-intrinsics.c	108;"	d	file:
MD5_I	simd-intrinsics.c	111;"	d	file:
MD5_I	simd-intrinsics.c	115;"	d	file:
MD5_I	simd-intrinsics.c	119;"	d	file:
MD5_I	sse-intrinsics.c	241;"	d	file:
MD5_IMM	arch.h	309;"	d
MD5_N	MD5_std.h	110;"	d
MD5_N	MD5_std.h	114;"	d
MD5_N	MD5_std.h	117;"	d
MD5_N_STR	arch.h	432;"	d
MD5_N_STR	arch.h	434;"	d
MD5_PARA_DO	simd-intrinsics.c	76;"	d	file:
MD5_PARA_DO	sse-intrinsics.c	229;"	d	file:
MD5_SSE_NUM_KEYS	simd-intrinsics.c	75;"	d	file:
MD5_SSE_NUM_KEYS	sse-intrinsics.c	228;"	d	file:
MD5_SSE_type	sse-intrinsics.h	87;"	d
MD5_SSE_type	sse-intrinsics.h	90;"	d
MD5_STEP	simd-intrinsics.c	125;"	d	file:
MD5_STEP	sse-intrinsics.c	246;"	d	file:
MD5_STEP_r16	simd-intrinsics.c	135;"	d	file:
MD5_STEP_r16	sse-intrinsics.c	254;"	d	file:
MD5_TYPE_AIX	MD5_std.h	183;"	d
MD5_TYPE_APACHE	MD5_std.h	181;"	d
MD5_TYPE_STD	MD5_std.h	182;"	d
MD5_X2	arch.h	308;"	d
MD5_binary	MD5_std.h	/^typedef MD5_word MD5_binary[4];$/;"	t
MD5_block	MD5_std.h	/^} MD5_block;$/;"	t	typeref:union:__anon26
MD5_data	MD5_std.h	/^} MD5_data;$/;"	t	typeref:struct:__anon32
MD5_out	MD5_std.h	178;"	d
MD5_pattern	MD5_std.h	/^} MD5_pattern;$/;"	t	typeref:struct:__anon27
MD5_pool	MD5_std.h	/^} MD5_pool;$/;"	t	typeref:struct:__anon28
MD5_std_all	MD5_std.h	148;"	d
MD5_std_all	MD5_std.h	160;"	d
MD5_std_all_align	MD5_std.h	143;"	d
MD5_std_all_size	MD5_std.h	144;"	d
MD5_std_combined	MD5_std.h	/^} MD5_std_combined;$/;"	t	typeref:struct:__anon33
MD5_std_cpt	MD5_std.h	138;"	d
MD5_std_mt	MD5_std.h	137;"	d
MD5_std_mt	MD5_std.h	169;"	d
MD5_std_mt_max	MD5_std.h	139;"	d
MD5_u32plus	md5.h	/^typedef unsigned int MD5_u32plus;$/;"	t
MD5_word	MD5_std.h	/^typedef ARCH_WORD_32 MD5_word;$/;"	t
MEASURE_TYPE_BASIC	ieee802_11_defs.h	/^	MEASURE_TYPE_BASIC = 0,$/;"	e	enum:measure_type
MEASURE_TYPE_BEACON	ieee802_11_defs.h	/^	MEASURE_TYPE_BEACON = 5,$/;"	e	enum:measure_type
MEASURE_TYPE_CCA	ieee802_11_defs.h	/^	MEASURE_TYPE_CCA = 1,$/;"	e	enum:measure_type
MEASURE_TYPE_CHANNEL_LOAD	ieee802_11_defs.h	/^	MEASURE_TYPE_CHANNEL_LOAD = 3,$/;"	e	enum:measure_type
MEASURE_TYPE_DIRECTIONAL_CHAN_QUALITY	ieee802_11_defs.h	/^	MEASURE_TYPE_DIRECTIONAL_CHAN_QUALITY = 13,$/;"	e	enum:measure_type
MEASURE_TYPE_DIRECTIONAL_MEASURE	ieee802_11_defs.h	/^	MEASURE_TYPE_DIRECTIONAL_MEASURE = 14,$/;"	e	enum:measure_type
MEASURE_TYPE_DIRECTIONAL_STATS	ieee802_11_defs.h	/^	MEASURE_TYPE_DIRECTIONAL_STATS = 15,$/;"	e	enum:measure_type
MEASURE_TYPE_FRAME	ieee802_11_defs.h	/^	MEASURE_TYPE_FRAME = 6,$/;"	e	enum:measure_type
MEASURE_TYPE_FTM_RANGE	ieee802_11_defs.h	/^	MEASURE_TYPE_FTM_RANGE = 16,$/;"	e	enum:measure_type
MEASURE_TYPE_LCI	ieee802_11_defs.h	/^	MEASURE_TYPE_LCI = 8,$/;"	e	enum:measure_type
MEASURE_TYPE_LOCATION_CIVIC	ieee802_11_defs.h	/^	MEASURE_TYPE_LOCATION_CIVIC = 11,$/;"	e	enum:measure_type
MEASURE_TYPE_LOCATION_ID	ieee802_11_defs.h	/^	MEASURE_TYPE_LOCATION_ID = 12,$/;"	e	enum:measure_type
MEASURE_TYPE_MEASURE_PAUSE	ieee802_11_defs.h	/^	MEASURE_TYPE_MEASURE_PAUSE = 255,$/;"	e	enum:measure_type
MEASURE_TYPE_MULTICAST_DIAG	ieee802_11_defs.h	/^	MEASURE_TYPE_MULTICAST_DIAG = 10,$/;"	e	enum:measure_type
MEASURE_TYPE_NOISE_HIST	ieee802_11_defs.h	/^	MEASURE_TYPE_NOISE_HIST = 4,$/;"	e	enum:measure_type
MEASURE_TYPE_RPI_HIST	ieee802_11_defs.h	/^	MEASURE_TYPE_RPI_HIST = 2,$/;"	e	enum:measure_type
MEASURE_TYPE_STA_STATISTICS	ieee802_11_defs.h	/^	MEASURE_TYPE_STA_STATISTICS = 7,$/;"	e	enum:measure_type
MEASURE_TYPE_TRANSMIT_STREAM	ieee802_11_defs.h	/^	MEASURE_TYPE_TRANSMIT_STREAM = 9,$/;"	e	enum:measure_type
MEMDBG_HANDLE	memdbg.h	/^} MEMDBG_HANDLE;$/;"	t	typeref:struct:MEMDBG_HANDLE_t
MEMDBG_HANDLE	memdbg.h	223;"	d
MEMDBG_HANDLE_t	memdbg.h	/^typedef struct MEMDBG_HANDLE_t {$/;"	s
MEMDBG_PROGRAM_EXIT_CHECKS	memdbg.h	161;"	d
MEMDBG_PROGRAM_EXIT_CHECKS	memdbg.h	220;"	d
MEMDBG_VALIDATE_DEEP	memdbg.h	54;"	d
MEMDBG_VALIDATE_DEEPER	memdbg.h	55;"	d
MEMDBG_VALIDATE_DEEPEST	memdbg.h	56;"	d
MEMDBG_VALIDATE_MIN	memdbg.h	53;"	d
MEMDBG_checkSnapshot	memdbg.h	225;"	d
MEMDBG_checkSnapshot_possible_exit_on_error	memdbg.h	226;"	d
MEMDBG_getSnapshot	memdbg.h	224;"	d
MEMDBG_tag_mem_from_alloc_tiny	memdbg.h	221;"	d
MEM_ALIGN_CACHE	memory.h	89;"	d
MEM_ALIGN_CACHE	memory.h	91;"	d
MEM_ALIGN_NONE	memory.h	81;"	d
MEM_ALIGN_PAGE	memory.h	93;"	d
MEM_ALIGN_SIMD	memory.h	100;"	d
MEM_ALIGN_SIMD	memory.h	102;"	d
MEM_ALIGN_SIMD	memory.h	105;"	d
MEM_ALIGN_SIMD	pseudo_intrinsics.h	598;"	d
MEM_ALIGN_SIMD	pseudo_intrinsics.h	601;"	d
MEM_ALIGN_WORD	memory.h	82;"	d
MEM_ALLOC_MAX_WASTE	memory.h	120;"	d
MEM_ALLOC_SIZE	memory.c	174;"	d	file:
MEM_ALLOC_SIZE	memory.c	175;"	d	file:
MEM_ALLOC_SIZE	memory.h	111;"	d
MEM_FREE	memory.h	184;"	d
MEM_FREE	memory.h	190;"	d
MEM_FREE	memory.h	198;"	d
MEM_FREE	memory.h	208;"	d
MESH_CAP_ACCEPT_ADDITIONAL_PEER	ieee802_11_defs.h	1401;"	d
MESH_CAP_FORWARDING	ieee802_11_defs.h	1404;"	d
MESH_CAP_MBCA_ENABLED	ieee802_11_defs.h	1405;"	d
MESH_CAP_MCCA_ENABLED	ieee802_11_defs.h	1403;"	d
MESH_CAP_MCCA_SUPPORTED	ieee802_11_defs.h	1402;"	d
MESH_CAP_MESH_PS_LEVEL	ieee802_11_defs.h	1407;"	d
MESH_CAP_TBTT_ADJUSTING	ieee802_11_defs.h	1406;"	d
MESH_PATH_METRIC_AIRTIME	ieee802_11_defs.h	1398;"	d
MESH_PATH_METRIC_VENDOR	ieee802_11_defs.h	1399;"	d
MESH_PATH_PROTOCOL_HWMP	ieee802_11_defs.h	1396;"	d
MESH_PATH_PROTOCOL_VENDOR	ieee802_11_defs.h	1397;"	d
MESH_SYNC_METHOD_NEIGHBOR_OFFSET	ieee802_11_defs.h	1394;"	d
MESH_SYNC_METHOD_VENDOR	ieee802_11_defs.h	1395;"	d
MIH_CMD_AND_EVENT_DISCOVERY	ieee802_11_defs.h	/^	MIH_CMD_AND_EVENT_DISCOVERY = 2,$/;"	e	enum:adv_proto_id
MIH_INFO_SERVICE	ieee802_11_defs.h	/^	MIH_INFO_SERVICE = 1,$/;"	e	enum:adv_proto_id
MIN	common.h	70;"	d
MIN_KEYS_PER_CRYPT	wpapsk.c	119;"	d	file:
MIN_RAM_SIZE_LOAD_OUI_RAM	airodump-ng.h	159;"	d
MK16	crypto.c	1099;"	d	file:
MMX_COEF	arch.h	458;"	d
MMX_COEF	sse-intrinsics.c	224;"	d	file:
MMX_COEF	sse-intrinsics.h	54;"	d
MMX_COEF_SHA256	arch.h	459;"	d
MMX_COEF_SHA512	arch.h	460;"	d
MMX_TYPE	arch.h	457;"	d
MNF_SETUP_REQ	include/ieee80211.h	312;"	d
MNF_SETUP_RESP	include/ieee80211.h	313;"	d
MNF_TEARDOWN	include/ieee80211.h	314;"	d
M_HASFCS	include/ethernet.h	43;"	d
Maj	simd-intrinsics.c	1649;"	d	file:
Maj	simd-intrinsics.c	1651;"	d	file:
Maj	simd-intrinsics.c	1653;"	d	file:
Maj	simd-intrinsics.c	2231;"	d	file:
Maj	simd-intrinsics.c	2233;"	d	file:
Maj	simd-intrinsics.c	2235;"	d	file:
Maj	sse-intrinsics.c	1518;"	d	file:
Maj	sse-intrinsics.c	1902;"	d	file:
MemDbg_Display	memdbg.h	216;"	d
MemDbg_Used	memdbg.h	215;"	d
MemDbg_Validate	memdbg.h	217;"	d
MemDbg_Validate_msg	memdbg.h	218;"	d
MemDbg_Validate_msg2	memdbg.h	219;"	d
Michael	crypto.h	/^struct Michael$/;"	s
NAI_REALM_CRED_TYPE_ANONYMOUS	ieee802_11_defs.h	/^	NAI_REALM_CRED_TYPE_ANONYMOUS = 9,$/;"	e	enum:nai_realm_eap_cred_type
NAI_REALM_CRED_TYPE_CERTIFICATE	ieee802_11_defs.h	/^	NAI_REALM_CRED_TYPE_CERTIFICATE = 6,$/;"	e	enum:nai_realm_eap_cred_type
NAI_REALM_CRED_TYPE_HARDWARE_TOKEN	ieee802_11_defs.h	/^	NAI_REALM_CRED_TYPE_HARDWARE_TOKEN = 4,$/;"	e	enum:nai_realm_eap_cred_type
NAI_REALM_CRED_TYPE_NFC_SECURE_ELEMENT	ieee802_11_defs.h	/^	NAI_REALM_CRED_TYPE_NFC_SECURE_ELEMENT = 3,$/;"	e	enum:nai_realm_eap_cred_type
NAI_REALM_CRED_TYPE_NONE	ieee802_11_defs.h	/^	NAI_REALM_CRED_TYPE_NONE = 8,$/;"	e	enum:nai_realm_eap_cred_type
NAI_REALM_CRED_TYPE_SIM	ieee802_11_defs.h	/^	NAI_REALM_CRED_TYPE_SIM = 1,$/;"	e	enum:nai_realm_eap_cred_type
NAI_REALM_CRED_TYPE_SOFTOKEN	ieee802_11_defs.h	/^	NAI_REALM_CRED_TYPE_SOFTOKEN = 5,$/;"	e	enum:nai_realm_eap_cred_type
NAI_REALM_CRED_TYPE_USERNAME_PASSWORD	ieee802_11_defs.h	/^	NAI_REALM_CRED_TYPE_USERNAME_PASSWORD = 7,$/;"	e	enum:nai_realm_eap_cred_type
NAI_REALM_CRED_TYPE_USIM	ieee802_11_defs.h	/^	NAI_REALM_CRED_TYPE_USIM = 2,$/;"	e	enum:nai_realm_eap_cred_type
NAI_REALM_CRED_TYPE_VENDOR_SPECIFIC	ieee802_11_defs.h	/^	NAI_REALM_CRED_TYPE_VENDOR_SPECIFIC = 10$/;"	e	enum:nai_realm_eap_cred_type
NAI_REALM_EAP_AUTH_CRED_TYPE	ieee802_11_defs.h	/^	NAI_REALM_EAP_AUTH_CRED_TYPE = 5,$/;"	e	enum:nai_realm_eap_auth_param
NAI_REALM_EAP_AUTH_EXPANDED_EAP_METHOD	ieee802_11_defs.h	/^	NAI_REALM_EAP_AUTH_EXPANDED_EAP_METHOD = 1,$/;"	e	enum:nai_realm_eap_auth_param
NAI_REALM_EAP_AUTH_EXPANDED_INNER_EAP_METHOD	ieee802_11_defs.h	/^	NAI_REALM_EAP_AUTH_EXPANDED_INNER_EAP_METHOD = 4,$/;"	e	enum:nai_realm_eap_auth_param
NAI_REALM_EAP_AUTH_INNER_AUTH_EAP_METHOD	ieee802_11_defs.h	/^	NAI_REALM_EAP_AUTH_INNER_AUTH_EAP_METHOD = 3,$/;"	e	enum:nai_realm_eap_auth_param
NAI_REALM_EAP_AUTH_NON_EAP_INNER_AUTH	ieee802_11_defs.h	/^	NAI_REALM_EAP_AUTH_NON_EAP_INNER_AUTH = 2,$/;"	e	enum:nai_realm_eap_auth_param
NAI_REALM_EAP_AUTH_TUNNELED_CRED_TYPE	ieee802_11_defs.h	/^	NAI_REALM_EAP_AUTH_TUNNELED_CRED_TYPE = 6,$/;"	e	enum:nai_realm_eap_auth_param
NAI_REALM_EAP_AUTH_VENDOR_SPECIFIC	ieee802_11_defs.h	/^	NAI_REALM_EAP_AUTH_VENDOR_SPECIFIC = 221$/;"	e	enum:nai_realm_eap_auth_param
NAI_REALM_INNER_NON_EAP_CHAP	ieee802_11_defs.h	/^	NAI_REALM_INNER_NON_EAP_CHAP = 2,$/;"	e	enum:nai_realm_eap_auth_inner_non_eap
NAI_REALM_INNER_NON_EAP_MSCHAP	ieee802_11_defs.h	/^	NAI_REALM_INNER_NON_EAP_MSCHAP = 3,$/;"	e	enum:nai_realm_eap_auth_inner_non_eap
NAI_REALM_INNER_NON_EAP_MSCHAPV2	ieee802_11_defs.h	/^	NAI_REALM_INNER_NON_EAP_MSCHAPV2 = 4$/;"	e	enum:nai_realm_eap_auth_inner_non_eap
NAI_REALM_INNER_NON_EAP_PAP	ieee802_11_defs.h	/^	NAI_REALM_INNER_NON_EAP_PAP = 1,$/;"	e	enum:nai_realm_eap_auth_inner_non_eap
NA_info	airodump-ng.h	/^struct NA_info$/;"	s
NBKEYS	wpapsk.c	100;"	d	file:
NBKEYS	wpapsk.c	105;"	d	file:
NBKEYS	wpapsk.c	88;"	d	file:
NBKEYS	wpapsk.c	93;"	d	file:
NB_EXTENSIONS	airodump-ng.h	131;"	d
NB_PRB	airbase-ng.c	88;"	d	file:
NB_PRB	aircapture.h	25;"	d
NB_PRB	airnodes.c	16;"	d	file:
NB_PRB	airodump-ng.h	44;"	d
NB_PWR	aircapture.h	24;"	d
NB_PWR	airnodes.c	15;"	d	file:
NB_PWR	airodump-ng.h	43;"	d
NEI_REP_BSSID_INFO_APSD	ieee802_11_defs.h	1697;"	d
NEI_REP_BSSID_INFO_AP_NOT_REACH	ieee802_11_defs.h	1690;"	d
NEI_REP_BSSID_INFO_AP_REACHABLE	ieee802_11_defs.h	1692;"	d
NEI_REP_BSSID_INFO_AP_UNKNOWN_REACH	ieee802_11_defs.h	1691;"	d
NEI_REP_BSSID_INFO_DELAYED_BA	ieee802_11_defs.h	1699;"	d
NEI_REP_BSSID_INFO_FTM	ieee802_11_defs.h	1704;"	d
NEI_REP_BSSID_INFO_HT	ieee802_11_defs.h	1702;"	d
NEI_REP_BSSID_INFO_IMM_BA	ieee802_11_defs.h	1700;"	d
NEI_REP_BSSID_INFO_KEY_SCOPE	ieee802_11_defs.h	1694;"	d
NEI_REP_BSSID_INFO_MOBILITY_DOMAIN	ieee802_11_defs.h	1701;"	d
NEI_REP_BSSID_INFO_QOS	ieee802_11_defs.h	1696;"	d
NEI_REP_BSSID_INFO_RM	ieee802_11_defs.h	1698;"	d
NEI_REP_BSSID_INFO_SECURITY	ieee802_11_defs.h	1693;"	d
NEI_REP_BSSID_INFO_SPECTRUM_MGMT	ieee802_11_defs.h	1695;"	d
NEI_REP_BSSID_INFO_VHT	ieee802_11_defs.h	1703;"	d
NETWORK_CONNECTIONS_KEY	osdep/tap-win32/common.h	65;"	d
NETXML_ENCRYPTION_TAG	airodump-ng.c	4243;"	d	file:
NET_GET_CHAN	osdep/network.h	/^	NET_GET_CHAN,$/;"	e	enum:__anon66
NET_GET_MAC	osdep/network.h	/^	NET_GET_MAC,$/;"	e	enum:__anon66
NET_GET_MONITOR	osdep/network.h	/^	NET_GET_MONITOR,$/;"	e	enum:__anon66
NET_GET_RATE	osdep/network.h	/^	NET_GET_RATE,$/;"	e	enum:__anon66
NET_MAC	osdep/network.h	/^	NET_MAC,$/;"	e	enum:__anon66
NET_PACKET	osdep/network.h	/^	NET_PACKET,		\/* 5 *\/$/;"	e	enum:__anon66
NET_RC	osdep/network.h	/^	NET_RC = 1,$/;"	e	enum:__anon66
NET_SET_CHAN	osdep/network.h	/^	NET_SET_CHAN,$/;"	e	enum:__anon66
NET_SET_RATE	osdep/network.h	/^	NET_SET_RATE,$/;"	e	enum:__anon66
NET_WRITE	osdep/network.h	/^	NET_WRITE,$/;"	e	enum:__anon66
NEW_IV	aireplay-ng.c	81;"	d	file:
NEW_IV	tkiptun-ng.c	80;"	d	file:
NODES_INFO	airnodes.c	/^typedef struct NODES_INFO {$/;"	s	file:
NODES_INFO	airnodes.c	/^} NODES_INFO;$/;"	t	typeref:struct:NODES_INFO	file:
NO_CLOAKING	uniqueiv.h	54;"	d
NO_KLEIN	aircrack-ptw-lib.h	59;"	d
NO_PTW	aircrack-ptw-lib.h	60;"	d
NR_CHAN_WIDTH_160	ieee802_11_defs.h	/^	NR_CHAN_WIDTH_160 = 3,$/;"	e	enum:nr_chan_width
NR_CHAN_WIDTH_20	ieee802_11_defs.h	/^	NR_CHAN_WIDTH_20 = 0,$/;"	e	enum:nr_chan_width
NR_CHAN_WIDTH_40	ieee802_11_defs.h	/^	NR_CHAN_WIDTH_40 = 1,$/;"	e	enum:nr_chan_width
NR_CHAN_WIDTH_80	ieee802_11_defs.h	/^	NR_CHAN_WIDTH_80 = 2,$/;"	e	enum:nr_chan_width
NR_CHAN_WIDTH_80P80	ieee802_11_defs.h	/^	NR_CHAN_WIDTH_80P80 = 4,$/;"	e	enum:nr_chan_width
NT_X86_64	arch.h	454;"	d
NULL_DATA	airbase-ng.c	116;"	d	file:
NULL_DATA	aireplay-ng.c	101;"	d	file:
NULL_DATA	tkiptun-ng.c	96;"	d	file:
NULL_FRAME	airdecloak-ng.h	78;"	d
NULL_MAC	airnodes.c	18;"	d	file:
NULL_MAC	common.h	122;"	d
NULL_MAC	crypto.h	61;"	d
NULL_MAC	makeivs-ng.c	34;"	d	file:
NULL_MAC	osdep/linux.c	151;"	d	file:
NULL_PACKET	packetforge-ng.c	68;"	d	file:
N_ATTACKS	aircrack-ng.h	123;"	d
N_ATTACKS	kstats.c	28;"	d	file:
OBJS	ezxml/Makefile	/^OBJS = ezxml.o$/;"	m
OBJS	osdep/Makefile	/^OBJS		= osdep.o $(OBJS_COMMON)$/;"	m
OBJS_AB	Makefile	/^OBJS_AB		= airbase-ng.o common.o crypto.o osdep\/radiotap\/radiotap.o$/;"	m
OBJS_AC	Makefile	/^OBJS_AC		= aircrack-ng.o cpuid.o crypto.o common.o $(SSEO_INT) uniqueiv.o $(OBJS_PTW) $(LIBLINECOUNT)$/;"	m
OBJS_AC_MULTI	Makefile	/^OBJS_AC_MULTI	= crypto.o common.o uniqueiv.o $(OBJS_PTW)$/;"	m
OBJS_AD	Makefile	/^OBJS_AD		= airdecap-ng.o crypto.o common.o$/;"	m
OBJS_ADU	Makefile	/^OBJS_ADU	= airodump-ng.o common.o crypto.o uniqueiv.o osdep\/radiotap\/radiotap.o$/;"	m
OBJS_AH	Makefile	/^OBJS_AH		= airshooter-main.o airshooter.o common.o osdep\/radiotap\/radiotap.o hashtable.o wifi_setup.o llist.o log.o airconf-parse.o airsock.o$/;"	m
OBJS_AL	Makefile	/^OBJS_AL		= airolib-ng.o crypto.o common.o$/;"	m
OBJS_AP	Makefile	/^OBJS_AP		= aircapture-main.o aircapture.o common.o osdep\/radiotap\/radiotap.o hashtable.o wifi_setup.o llist.o log.o airconf-parse.o airsock.o$/;"	m
OBJS_APCAP	osdep/Makefile	/^OBJS_APCAP	= airpcap.o$/;"	m
OBJS_AR	Makefile	/^OBJS_AR		= aireplay-ng.o common.o crypto.o osdep\/radiotap\/radiotap.o$/;"	m
OBJS_AS	Makefile	/^OBJS_AS		= airserv-ng.o common.o osdep\/radiotap\/radiotap.o$/;"	m
OBJS_AT	Makefile	/^OBJS_AT		= airtun-ng.o common.o crypto.o osdep\/radiotap\/radiotap.o$/;"	m
OBJS_AU	Makefile	/^OBJS_AU		= airdecloak-ng.o common.o osdep\/radiotap\/radiotap.o$/;"	m
OBJS_BC	Makefile	/^OBJS_BC		= besside-ng-crawler.o$/;"	m
OBJS_BS	Makefile	/^OBJS_BS		= besside-ng.o crypto.o common.o osdep\/radiotap\/radiotap.o $(OBJS_PTW)$/;"	m
OBJS_BUDDY	Makefile	/^OBJS_BUDDY	= buddy-ng.o common.o$/;"	m
OBJS_COMMON	osdep/Makefile	/^OBJS_COMMON	= network.o file.o$/;"	m
OBJS_CYGWIN	osdep/Makefile	/^OBJS_CYGWIN	= $(OBJS) cygwin.o cygwin_tap.o radiotap\/radiotap.o$/;"	m
OBJS_DARWIN	osdep/Makefile	/^OBJS_DARWIN = $(OBJS) darwin.o darwin_tap.o radiotap\/radiotap.o$/;"	m
OBJS_DUMMY	osdep/Makefile	/^OBJS_DUMMY	= $(OBJS) dummy.o dummy_tap.o$/;"	m
OBJS_ES	Makefile	/^OBJS_ES		= easside-ng.o common.o osdep\/radiotap\/radiotap.o$/;"	m
OBJS_FBSD	osdep/Makefile	/^OBJS_FBSD	= $(OBJS) freebsd.o freebsd_tap.o$/;"	m
OBJS_IV	Makefile	/^OBJS_IV		= ivstools.o common.o crypto.o uniqueiv.o$/;"	m
OBJS_LINUX	osdep/Makefile	/^OBJS_LINUX	= $(OBJS) linux.o linux_tap.o radiotap\/radiotap.o common.o$/;"	m
OBJS_MI	Makefile	/^OBJS_MI		= makeivs-ng.o common.o uniqueiv.o$/;"	m
OBJS_NBSD	osdep/Makefile	/^OBJS_NBSD	= $(OBJS) netbsd.o netbsd_tap.o$/;"	m
OBJS_OBSD	osdep/Makefile	/^OBJS_OBSD	= $(OBJS) openbsd.o openbsd_tap.o$/;"	m
OBJS_PF	Makefile	/^OBJS_PF		= packetforge-ng.o common.o crypto.o$/;"	m
OBJS_PTW	Makefile	/^OBJS_PTW	= aircrack-ptw-lib.o$/;"	m
OBJS_SC	Makefile	/^OBJS_SC		= set_channel.o$/;"	m
OBJS_SSE_COMMON	Makefile	/^OBJS_SSE_COMMON = memory.o wpapsk.o$/;"	m
OBJS_TT	Makefile	/^OBJS_TT		= tkiptun-ng.o common.o crypto.o osdep\/radiotap\/radiotap.o$/;"	m
OBJS_WC	Makefile	/^OBJS_WC		= wpaclean.o osdep\/radiotap\/radiotap.o$/;"	m
OBJS_WCLOSE	Makefile	/^OBJS_WCLOSE = wi_close.o$/;"	m
OBJS_WI	Makefile	/^OBJS_WI		= wips-inspect.o aircapture.o airshooter.o common.o osdep\/radiotap\/radiotap.o hashtable.o wifi_setup.o llist.o log.o airconf-parse.o airsock.o$/;"	m
OBJS_WS	Makefile	/^OBJS_WS		= wesside-ng.o crypto.o common.o osdep\/radiotap\/radiotap.o $(OBJS_PTW)$/;"	m
OBJ_MEMORY	Makefile	/^OBJ_MEMORY	= memory.o$/;"	m
OBJ_SIMD_CORE	Makefile	/^OBJ_SIMD_CORE	= simd-intrinsics.o$/;"	m
OBJ_SSE_CORE	Makefile	/^OBJ_SSE_CORE	= sse-intrinsics.o$/;"	m
OPTFILES	Makefile	/^OPTFILES	= aircrack-ng-opt-prof_gen aircrack-ng-opt \\$/;"	m
OSD	Makefile	/^OSD		= osdep$/;"	m
OSEN_IE_VENDOR_TYPE	ieee802_11_defs.h	1009;"	d
OUI_BROADCOM	ieee802_11_defs.h	1415;"	d
OUI_MICROSOFT	ieee802_11_defs.h	999;"	d
OUI_PATHS	airodump-ng.h	/^const char *OUI_PATHS[] = {$/;"	v
OUI_STR_SIZE	airodump-ng.c	4005;"	d	file:
OUI_STR_SIZE	airodump-ng.c	4084;"	d	file:
OUI_WFA	ieee802_11_defs.h	1004;"	d
OVERLAPPING_BSS_TRANS_DELAY_FACTOR	ieee802_11_defs.h	834;"	d
O_BINARY	aircrack-ng.h	55;"	d
P2PS_FEATURE_CAPAB_MAC_TRANSPORT	ieee802_11_defs.h	1301;"	d
P2PS_FEATURE_CAPAB_UDP_TRANSPORT	ieee802_11_defs.h	1300;"	d
P2P_ATTR_ADVERTISED_SERVICE	ieee802_11_defs.h	/^	P2P_ATTR_ADVERTISED_SERVICE = 25,$/;"	e	enum:p2p_attr_id
P2P_ATTR_ADVERTISEMENT_ID	ieee802_11_defs.h	/^	P2P_ATTR_ADVERTISEMENT_ID = 24,$/;"	e	enum:p2p_attr_id
P2P_ATTR_CAPABILITY	ieee802_11_defs.h	/^	P2P_ATTR_CAPABILITY = 2,$/;"	e	enum:p2p_attr_id
P2P_ATTR_CHANNEL_LIST	ieee802_11_defs.h	/^	P2P_ATTR_CHANNEL_LIST = 11,$/;"	e	enum:p2p_attr_id
P2P_ATTR_CONFIGURATION_TIMEOUT	ieee802_11_defs.h	/^	P2P_ATTR_CONFIGURATION_TIMEOUT = 5,$/;"	e	enum:p2p_attr_id
P2P_ATTR_CONNECTION_CAPABILITY	ieee802_11_defs.h	/^	P2P_ATTR_CONNECTION_CAPABILITY = 23,$/;"	e	enum:p2p_attr_id
P2P_ATTR_DEVICE_ID	ieee802_11_defs.h	/^	P2P_ATTR_DEVICE_ID = 3,$/;"	e	enum:p2p_attr_id
P2P_ATTR_DEVICE_INFO	ieee802_11_defs.h	/^	P2P_ATTR_DEVICE_INFO = 13,$/;"	e	enum:p2p_attr_id
P2P_ATTR_EXT_LISTEN_TIMING	ieee802_11_defs.h	/^	P2P_ATTR_EXT_LISTEN_TIMING = 8,$/;"	e	enum:p2p_attr_id
P2P_ATTR_FEATURE_CAPABILITY	ieee802_11_defs.h	/^	P2P_ATTR_FEATURE_CAPABILITY = 27,$/;"	e	enum:p2p_attr_id
P2P_ATTR_GROUP_BSSID	ieee802_11_defs.h	/^	P2P_ATTR_GROUP_BSSID = 7,$/;"	e	enum:p2p_attr_id
P2P_ATTR_GROUP_ID	ieee802_11_defs.h	/^	P2P_ATTR_GROUP_ID = 15,$/;"	e	enum:p2p_attr_id
P2P_ATTR_GROUP_INFO	ieee802_11_defs.h	/^	P2P_ATTR_GROUP_INFO = 14,$/;"	e	enum:p2p_attr_id
P2P_ATTR_GROUP_OWNER_INTENT	ieee802_11_defs.h	/^	P2P_ATTR_GROUP_OWNER_INTENT = 4,$/;"	e	enum:p2p_attr_id
P2P_ATTR_INTENDED_INTERFACE_ADDR	ieee802_11_defs.h	/^	P2P_ATTR_INTENDED_INTERFACE_ADDR = 9,$/;"	e	enum:p2p_attr_id
P2P_ATTR_INTERFACE	ieee802_11_defs.h	/^	P2P_ATTR_INTERFACE = 16,$/;"	e	enum:p2p_attr_id
P2P_ATTR_INVITATION_FLAGS	ieee802_11_defs.h	/^	P2P_ATTR_INVITATION_FLAGS = 18,$/;"	e	enum:p2p_attr_id
P2P_ATTR_LISTEN_CHANNEL	ieee802_11_defs.h	/^	P2P_ATTR_LISTEN_CHANNEL = 6,$/;"	e	enum:p2p_attr_id
P2P_ATTR_MANAGEABILITY	ieee802_11_defs.h	/^	P2P_ATTR_MANAGEABILITY = 10,$/;"	e	enum:p2p_attr_id
P2P_ATTR_MINOR_REASON_CODE	ieee802_11_defs.h	/^	P2P_ATTR_MINOR_REASON_CODE = 1,$/;"	e	enum:p2p_attr_id
P2P_ATTR_NOTICE_OF_ABSENCE	ieee802_11_defs.h	/^	P2P_ATTR_NOTICE_OF_ABSENCE = 12,$/;"	e	enum:p2p_attr_id
P2P_ATTR_OOB_GO_NEG_CHANNEL	ieee802_11_defs.h	/^	P2P_ATTR_OOB_GO_NEG_CHANNEL = 19,$/;"	e	enum:p2p_attr_id
P2P_ATTR_OPERATING_CHANNEL	ieee802_11_defs.h	/^	P2P_ATTR_OPERATING_CHANNEL = 17,$/;"	e	enum:p2p_attr_id
P2P_ATTR_PERSISTENT_GROUP	ieee802_11_defs.h	/^	P2P_ATTR_PERSISTENT_GROUP = 28,$/;"	e	enum:p2p_attr_id
P2P_ATTR_SERVICE_HASH	ieee802_11_defs.h	/^	P2P_ATTR_SERVICE_HASH = 21,$/;"	e	enum:p2p_attr_id
P2P_ATTR_SESSION_ID	ieee802_11_defs.h	/^	P2P_ATTR_SESSION_ID = 26,$/;"	e	enum:p2p_attr_id
P2P_ATTR_SESSION_INFORMATION_DATA	ieee802_11_defs.h	/^	P2P_ATTR_SESSION_INFORMATION_DATA = 22,$/;"	e	enum:p2p_attr_id
P2P_ATTR_STATUS	ieee802_11_defs.h	/^	P2P_ATTR_STATUS = 0,$/;"	e	enum:p2p_attr_id
P2P_ATTR_VENDOR_SPECIFIC	ieee802_11_defs.h	/^	P2P_ATTR_VENDOR_SPECIFIC = 221$/;"	e	enum:p2p_attr_id
P2P_CLIENT_IN_A_GROUP	ieee802_11_defs.h	/^	P2P_CLIENT_IN_A_GROUP = 0x01,$/;"	e	enum:p2p_role_indication
P2P_DEVICE_NOT_IN_GROUP	ieee802_11_defs.h	/^	P2P_DEVICE_NOT_IN_GROUP = 0x00,$/;"	e	enum:p2p_role_indication
P2P_DEV_CAPAB_CLIENT_DISCOVERABILITY	ieee802_11_defs.h	1283;"	d
P2P_DEV_CAPAB_CONCURRENT_OPER	ieee802_11_defs.h	1284;"	d
P2P_DEV_CAPAB_DEVICE_LIMIT	ieee802_11_defs.h	1286;"	d
P2P_DEV_CAPAB_INFRA_MANAGED	ieee802_11_defs.h	1285;"	d
P2P_DEV_CAPAB_INVITATION_PROCEDURE	ieee802_11_defs.h	1287;"	d
P2P_DEV_CAPAB_SERVICE_DISCOVERY	ieee802_11_defs.h	1282;"	d
P2P_DEV_DISC_REQ	ieee802_11_defs.h	/^	P2P_DEV_DISC_REQ = 5,$/;"	e	enum:p2p_action_frame_type
P2P_DEV_DISC_RESP	ieee802_11_defs.h	/^	P2P_DEV_DISC_RESP = 6,$/;"	e	enum:p2p_action_frame_type
P2P_GO_DISC_REQ	ieee802_11_defs.h	/^	P2P_GO_DISC_REQ = 3$/;"	e	enum:p2p_act_frame_type
P2P_GO_IN_A_GROUP	ieee802_11_defs.h	/^	P2P_GO_IN_A_GROUP = 0x02,$/;"	e	enum:p2p_role_indication
P2P_GO_NEG_CONF	ieee802_11_defs.h	/^	P2P_GO_NEG_CONF = 2,$/;"	e	enum:p2p_action_frame_type
P2P_GO_NEG_REQ	ieee802_11_defs.h	/^	P2P_GO_NEG_REQ = 0,$/;"	e	enum:p2p_action_frame_type
P2P_GO_NEG_RESP	ieee802_11_defs.h	/^	P2P_GO_NEG_RESP = 1,$/;"	e	enum:p2p_action_frame_type
P2P_GROUP_CAPAB_CROSS_CONN	ieee802_11_defs.h	1294;"	d
P2P_GROUP_CAPAB_GROUP_FORMATION	ieee802_11_defs.h	1296;"	d
P2P_GROUP_CAPAB_GROUP_LIMIT	ieee802_11_defs.h	1292;"	d
P2P_GROUP_CAPAB_GROUP_OWNER	ieee802_11_defs.h	1290;"	d
P2P_GROUP_CAPAB_INTRA_BSS_DIST	ieee802_11_defs.h	1293;"	d
P2P_GROUP_CAPAB_IP_ADDR_ALLOCATION	ieee802_11_defs.h	1297;"	d
P2P_GROUP_CAPAB_PERSISTENT_GROUP	ieee802_11_defs.h	1291;"	d
P2P_GROUP_CAPAB_PERSISTENT_RECONN	ieee802_11_defs.h	1295;"	d
P2P_IE_VENDOR_TYPE	ieee802_11_defs.h	1005;"	d
P2P_INVITATION_FLAGS_TYPE	ieee802_11_defs.h	1309;"	d
P2P_INVITATION_REQ	ieee802_11_defs.h	/^	P2P_INVITATION_REQ = 3,$/;"	e	enum:p2p_action_frame_type
P2P_INVITATION_RESP	ieee802_11_defs.h	/^	P2P_INVITATION_RESP = 4,$/;"	e	enum:p2p_action_frame_type
P2P_MAN_COEXISTENCE_OPTIONAL	ieee802_11_defs.h	1314;"	d
P2P_MAN_CROSS_CONNECTION_PERMITTED	ieee802_11_defs.h	1313;"	d
P2P_MAN_DEVICE_MANAGEMENT	ieee802_11_defs.h	1312;"	d
P2P_MAX_GO_INTENT	ieee802_11_defs.h	1279;"	d
P2P_NOA	ieee802_11_defs.h	/^	P2P_NOA = 0,$/;"	e	enum:p2p_act_frame_type
P2P_OUI_TYPE	ieee802_11_defs.h	1245;"	d
P2P_PRESENCE_REQ	ieee802_11_defs.h	/^	P2P_PRESENCE_REQ = 1,$/;"	e	enum:p2p_act_frame_type
P2P_PRESENCE_RESP	ieee802_11_defs.h	/^	P2P_PRESENCE_RESP = 2,$/;"	e	enum:p2p_act_frame_type
P2P_PROV_DISC_REQ	ieee802_11_defs.h	/^	P2P_PROV_DISC_REQ = 7,$/;"	e	enum:p2p_action_frame_type
P2P_PROV_DISC_RESP	ieee802_11_defs.h	/^	P2P_PROV_DISC_RESP = 8$/;"	e	enum:p2p_action_frame_type
P2P_SC_FAIL_BOTH_GO_INTENT_15	ieee802_11_defs.h	/^	P2P_SC_FAIL_BOTH_GO_INTENT_15 = 9,$/;"	e	enum:p2p_status_code
P2P_SC_FAIL_INCOMPATIBLE_PARAMS	ieee802_11_defs.h	/^	P2P_SC_FAIL_INCOMPATIBLE_PARAMS = 2,$/;"	e	enum:p2p_status_code
P2P_SC_FAIL_INCOMPATIBLE_PROV_METHOD	ieee802_11_defs.h	/^	P2P_SC_FAIL_INCOMPATIBLE_PROV_METHOD = 10,$/;"	e	enum:p2p_status_code
P2P_SC_FAIL_INFO_CURRENTLY_UNAVAILABLE	ieee802_11_defs.h	/^	P2P_SC_FAIL_INFO_CURRENTLY_UNAVAILABLE = 1,$/;"	e	enum:p2p_status_code
P2P_SC_FAIL_INVALID_PARAMS	ieee802_11_defs.h	/^	P2P_SC_FAIL_INVALID_PARAMS = 4,$/;"	e	enum:p2p_status_code
P2P_SC_FAIL_LIMIT_REACHED	ieee802_11_defs.h	/^	P2P_SC_FAIL_LIMIT_REACHED = 3,$/;"	e	enum:p2p_status_code
P2P_SC_FAIL_NO_COMMON_CHANNELS	ieee802_11_defs.h	/^	P2P_SC_FAIL_NO_COMMON_CHANNELS = 7,$/;"	e	enum:p2p_status_code
P2P_SC_FAIL_PREV_PROTOCOL_ERROR	ieee802_11_defs.h	/^	P2P_SC_FAIL_PREV_PROTOCOL_ERROR = 6,$/;"	e	enum:p2p_status_code
P2P_SC_FAIL_REJECTED_BY_USER	ieee802_11_defs.h	/^	P2P_SC_FAIL_REJECTED_BY_USER = 11,$/;"	e	enum:p2p_status_code
P2P_SC_FAIL_UNABLE_TO_ACCOMMODATE	ieee802_11_defs.h	/^	P2P_SC_FAIL_UNABLE_TO_ACCOMMODATE = 5,$/;"	e	enum:p2p_status_code
P2P_SC_FAIL_UNKNOWN_GROUP	ieee802_11_defs.h	/^	P2P_SC_FAIL_UNKNOWN_GROUP = 8,$/;"	e	enum:p2p_status_code
P2P_SC_SUCCESS	ieee802_11_defs.h	/^	P2P_SC_SUCCESS = 0,$/;"	e	enum:p2p_status_code
P2P_SC_SUCCESS_DEFERRED	ieee802_11_defs.h	/^	P2P_SC_SUCCESS_DEFERRED = 12,$/;"	e	enum:p2p_status_code
P2P_SD_BAD_REQUEST	ieee802_11_defs.h	/^	P2P_SD_BAD_REQUEST = 3$/;"	e	enum:p2p_sd_status
P2P_SD_PROTO_NOT_AVAILABLE	ieee802_11_defs.h	/^	P2P_SD_PROTO_NOT_AVAILABLE = 1,$/;"	e	enum:p2p_sd_status
P2P_SD_REQUESTED_INFO_NOT_AVAILABLE	ieee802_11_defs.h	/^	P2P_SD_REQUESTED_INFO_NOT_AVAILABLE = 2,$/;"	e	enum:p2p_sd_status
P2P_SD_SUCCESS	ieee802_11_defs.h	/^	P2P_SD_SUCCESS = 0,$/;"	e	enum:p2p_sd_status
P2P_SERV_ALL_SERVICES	ieee802_11_defs.h	/^	P2P_SERV_ALL_SERVICES = 0,$/;"	e	enum:p2p_service_protocol_type
P2P_SERV_BONJOUR	ieee802_11_defs.h	/^	P2P_SERV_BONJOUR = 1,$/;"	e	enum:p2p_service_protocol_type
P2P_SERV_P2PS	ieee802_11_defs.h	/^	P2P_SERV_P2PS = 11,$/;"	e	enum:p2p_service_protocol_type
P2P_SERV_UPNP	ieee802_11_defs.h	/^	P2P_SERV_UPNP = 2,$/;"	e	enum:p2p_service_protocol_type
P2P_SERV_VENDOR_SPECIFIC	ieee802_11_defs.h	/^	P2P_SERV_VENDOR_SPECIFIC = 255$/;"	e	enum:p2p_service_protocol_type
P2P_SERV_WIFI_DISPLAY	ieee802_11_defs.h	/^	P2P_SERV_WIFI_DISPLAY = 4,$/;"	e	enum:p2p_service_protocol_type
P2P_SERV_WS_DISCOVERY	ieee802_11_defs.h	/^	P2P_SERV_WS_DISCOVERY = 3,$/;"	e	enum:p2p_service_protocol_type
P2P_WILDCARD_SSID	ieee802_11_defs.h	1338;"	d
P2P_WILDCARD_SSID_LEN	ieee802_11_defs.h	1339;"	d
PACKET_CHECKING_LENGTH	airdecloak-ng.h	51;"	d
PACKET_HEADER_SIZE	airdecloak-ng.h	/^const int PACKET_HEADER_SIZE = sizeof( struct pcap_pkthdr );$/;"	v
PADDED_ARPLEN	wesside-ng.c	84;"	d	file:
PARA_TO_MxN	arch.h	424;"	d
PARA_TO_N	arch.h	423;"	d
PCAP_VERSION_MAJOR	pcap.h	49;"	d
PCAP_VERSION_MINOR	pcap.h	50;"	d
PCT	common.h	61;"	d
PHY_TYPE_DMG	ieee802_11_defs.h	/^	PHY_TYPE_DMG = 8,$/;"	e	enum:phy_type
PHY_TYPE_DSSS	ieee802_11_defs.h	/^	PHY_TYPE_DSSS = 2,$/;"	e	enum:phy_type
PHY_TYPE_ERP	ieee802_11_defs.h	/^	PHY_TYPE_ERP = 6,$/;"	e	enum:phy_type
PHY_TYPE_FHSS	ieee802_11_defs.h	/^	PHY_TYPE_FHSS = 1,$/;"	e	enum:phy_type
PHY_TYPE_HRDSSS	ieee802_11_defs.h	/^	PHY_TYPE_HRDSSS = 5,$/;"	e	enum:phy_type
PHY_TYPE_HT	ieee802_11_defs.h	/^	PHY_TYPE_HT = 7,$/;"	e	enum:phy_type
PHY_TYPE_IRBASEBAND	ieee802_11_defs.h	/^	PHY_TYPE_IRBASEBAND = 3,$/;"	e	enum:phy_type
PHY_TYPE_OFDM	ieee802_11_defs.h	/^	PHY_TYPE_OFDM = 4,$/;"	e	enum:phy_type
PHY_TYPE_UNSPECIFIED	ieee802_11_defs.h	/^	PHY_TYPE_UNSPECIFIED = 0,$/;"	e	enum:phy_type
PHY_TYPE_VHT	ieee802_11_defs.h	/^	PHY_TYPE_VHT = 9,$/;"	e	enum:phy_type
PKTHDR_RADIOTAP_VERSION	osdep/radiotap/radiotap.h	41;"	d
PLAINTEXT_LENGTH	wpapsk.h	77;"	d
PLINK_CLOSE	ieee802_11_defs.h	/^	PLINK_CLOSE$/;"	e	enum:plink_action_field
PLINK_CONFIRM	ieee802_11_defs.h	/^	PLINK_CONFIRM,$/;"	e	enum:plink_action_field
PLINK_OPEN	ieee802_11_defs.h	/^	PLINK_OPEN = 1,$/;"	e	enum:plink_action_field
POTENTIALLY_CLOAKED_FRAME	airdecloak-ng.h	62;"	d
PPH_PH_VERSION	osdep/airpcap.c	45;"	d	file:
PPI_FIELD_802_11_COMMON	osdep/airpcap.c	/^PPI_FIELD_802_11_COMMON, *PPPI_FIELD_802_11_COMMON;$/;"	t	typeref:struct:_PPI_FIELD_802_11_COMMON	file:
PPI_FIELD_HEADER	osdep/airpcap.c	/^PPI_FIELD_HEADER, *PPPI_FIELD_HEADER;$/;"	t	typeref:struct:_PPI_FIELD_HEADER	file:
PPI_FIELD_TYPE_802_11_COMMON	osdep/airpcap.c	46;"	d	file:
PPI_PACKET_HEADER	osdep/airpcap.c	/^PPI_PACKET_HEADER, *PPPI_PACKET_HEADER;$/;"	t	typeref:struct:_PPI_PACKET_HEADER	file:
PPPI_FIELD_802_11_COMMON	osdep/airpcap.c	/^PPI_FIELD_802_11_COMMON, *PPPI_FIELD_802_11_COMMON;$/;"	t	typeref:struct:_PPI_FIELD_802_11_COMMON	file:
PPPI_FIELD_HEADER	osdep/airpcap.c	/^PPI_FIELD_HEADER, *PPPI_FIELD_HEADER;$/;"	t	typeref:struct:_PPI_FIELD_HEADER	file:
PPPI_PACKET_HEADER	osdep/airpcap.c	/^PPI_PACKET_HEADER, *PPPI_PACKET_HEADER;$/;"	t	typeref:struct:_PPI_PACKET_HEADER	file:
PRELOAD	sha1-sse2.S	/^#define PRELOAD(x)  $/;"	d
PRELOAD	sha1-sse2.S	/^#define PRELOAD(x)  movq x@GOTPCREL(%rip), %rbx;$/;"	d
PRELOAD	sha1-sse2.S	/^#define PRELOAD(x)$/;"	d
PRGA_FILE	wesside-ng.c	90;"	d	file:
PRINTF_FORMAT	ieee802_11_defs.h	32;"	d
PRINTF_FORMAT	ieee802_11_defs.h	35;"	d
PROBE_REQ	airbase-ng.c	129;"	d	file:
PROBE_REQ	aireplay-ng.c	111;"	d	file:
PROBE_REQ	airodump-ng.h	113;"	d
PROBE_REQ	tkiptun-ng.c	106;"	d	file:
PROBE_RESPONSE	airdecloak-ng.h	74;"	d
PROBE_RSP	airbase-ng.c	133;"	d	file:
PROF_DIR	Makefile	/^PROF_DIR	= $(PWD)\/prof$/;"	m
PTW_CONTROLSESSIONS	aircrack-ptw-lib.h	44;"	d
PTW_DEFAULTBF	aircrack-ng.c	/^int PTW_DEFAULTBF[PTW_KEYHSBYTES] = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };$/;"	v
PTW_DEFAULTBF	besside-ng.c	/^int PTW_DEFAULTBF[PTW_KEYHSBYTES] = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,$/;"	v
PTW_DEFAULTBF	wesside-ng.c	/^int PTW_DEFAULTBF[PTW_KEYHSBYTES] = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };$/;"	v
PTW_DEFAULTWEIGHT	aircrack-ng.c	/^int PTW_DEFAULTWEIGHT[1] = { 256 };$/;"	v
PTW_DEFAULTWEIGHT	wesside-ng.c	/^int PTW_DEFAULTWEIGHT[1] = { 256 };$/;"	v
PTW_IVBYTES	aircrack-ptw-lib.h	50;"	d
PTW_IVTABLELEN	aircrack-ptw-lib.h	39;"	d
PTW_KEYHSBYTES	aircrack-ptw-lib.h	47;"	d
PTW_KSBYTES	aircrack-ptw-lib.h	53;"	d
PTW_TRY_STEP	aircrack-ng.h	68;"	d
PTW_addsession	aircrack-ptw-lib.c	/^int PTW_addsession(PTW_attackstate * state, uint8_t * iv, uint8_t * keystream, int * weight, int total) {$/;"	f
PTW_attackstate	aircrack-ptw-lib.h	/^} PTW_attackstate;$/;"	t	typeref:struct:__anon71
PTW_computeKey	aircrack-ptw-lib.c	/^int PTW_computeKey(PTW_attackstate * state, uint8_t * keybuf, int keylen, int testlimit, int * bf, int validchars[][n], int attacks) {$/;"	f
PTW_freeattackstate	aircrack-ptw-lib.c	/^void PTW_freeattackstate(PTW_attackstate * state) {$/;"	f
PTW_n	aircrack-ptw-lib.h	56;"	d
PTW_newattackstate	aircrack-ptw-lib.c	/^PTW_attackstate * PTW_newattackstate() {$/;"	f
PTW_session	aircrack-ptw-lib.h	/^} PTW_session;$/;"	t	typeref:struct:__anon70
PTW_tableentry	aircrack-ptw-lib.h	/^} PTW_tableentry;$/;"	t	typeref:struct:__anon69
PUT_UINT32_BE	crypto.c	68;"	d	file:
PUT_UINT32_LE	crypto.c	52;"	d	file:
PfhLength	osdep/airpcap.c	/^	u_int16_t PfhLength;$/;"	m	struct:_PPI_FIELD_HEADER	file:
PfhType	osdep/airpcap.c	/^	u_int16_t PfhType;$/;"	m	struct:_PPI_FIELD_HEADER	file:
PphDlt	osdep/airpcap.c	/^	u_int32_t	PphDlt;$/;"	m	struct:_PPI_PACKET_HEADER	file:
PphFlags	osdep/airpcap.c	/^	u_int8_t	PphFlags;$/;"	m	struct:_PPI_PACKET_HEADER	file:
PphLength	osdep/airpcap.c	/^	u_int16_t	PphLength;$/;"	m	struct:_PPI_PACKET_HEADER	file:
PphVersion	osdep/airpcap.c	/^	u_int8_t	PphVersion;$/;"	m	struct:_PPI_PACKET_HEADER	file:
QLT_COUNT	airodump-ng.h	73;"	d
QLT_TIME	airodump-ng.h	72;"	d
QOS_ADDTS_REQ	ieee802_11_defs.h	/^	QOS_ADDTS_REQ = 0,$/;"	e	enum:qos_action
QOS_ADDTS_RESP	ieee802_11_defs.h	/^	QOS_ADDTS_RESP = 1,$/;"	e	enum:qos_action
QOS_DELTS	ieee802_11_defs.h	/^	QOS_DELTS = 2,$/;"	e	enum:qos_action
QOS_QOS_MAP_CONFIG	ieee802_11_defs.h	/^	QOS_QOS_MAP_CONFIG = 4,$/;"	e	enum:qos_action
QOS_SCHEDULE	ieee802_11_defs.h	/^	QOS_SCHEDULE = 3,$/;"	e	enum:qos_action
QUEUE_MAX	osdep/network.c	36;"	d	file:
R	aircrack-ng.c	/^const unsigned char R[256] =$/;"	v
R	simd-intrinsics.c	1658;"	d	file:
R	simd-intrinsics.c	1659;"	d	file:
R	simd-intrinsics.c	2242;"	d	file:
R	simd-intrinsics.c	2243;"	d	file:
R	sse-intrinsics.c	1522;"	d	file:
R	sse-intrinsics.c	1523;"	d	file:
R	sse-intrinsics.c	1906;"	d	file:
R	sse-intrinsics.c	1907;"	d	file:
RATES	airbase-ng.c	123;"	d	file:
RATES	aireplay-ng.c	108;"	d	file:
RATES	airodump-ng.h	110;"	d
RATES	tkiptun-ng.c	103;"	d	file:
RATE_11M	aireplay-ng.c	120;"	d	file:
RATE_11M	tkiptun-ng.c	115;"	d	file:
RATE_12M	aireplay-ng.c	124;"	d	file:
RATE_12M	tkiptun-ng.c	119;"	d	file:
RATE_18M	aireplay-ng.c	125;"	d	file:
RATE_18M	tkiptun-ng.c	120;"	d	file:
RATE_1M	aireplay-ng.c	117;"	d	file:
RATE_1M	tkiptun-ng.c	112;"	d	file:
RATE_24M	aireplay-ng.c	126;"	d	file:
RATE_24M	tkiptun-ng.c	121;"	d	file:
RATE_2M	aireplay-ng.c	118;"	d	file:
RATE_2M	tkiptun-ng.c	113;"	d	file:
RATE_36M	aireplay-ng.c	127;"	d	file:
RATE_36M	tkiptun-ng.c	122;"	d	file:
RATE_48M	aireplay-ng.c	128;"	d	file:
RATE_48M	tkiptun-ng.c	123;"	d	file:
RATE_54M	aireplay-ng.c	129;"	d	file:
RATE_54M	tkiptun-ng.c	124;"	d	file:
RATE_5_5M	aireplay-ng.c	119;"	d	file:
RATE_5_5M	tkiptun-ng.c	114;"	d	file:
RATE_6M	aireplay-ng.c	122;"	d	file:
RATE_6M	tkiptun-ng.c	117;"	d	file:
RATE_9M	aireplay-ng.c	123;"	d	file:
RATE_9M	tkiptun-ng.c	118;"	d	file:
RATE_NUM	aireplay-ng.c	115;"	d	file:
RATE_NUM	tkiptun-ng.c	110;"	d	file:
RC4	gcrypt-openssl-wrapper.h	37;"	d
RC4TEST_LOOP	aircrack-ptw-lib.c	238;"	d	file:
RC4TEST_LOOP	aircrack-ptw-lib.c	257;"	d	file:
RC4_KEY	gcrypt-openssl-wrapper.h	28;"	d
RC4_set_key	gcrypt-openssl-wrapper.h	29;"	d
READBUF_BLKSIZE	linecount.h	44;"	d
REASSOC_REQ	aireplay-ng.c	97;"	d	file:
REFRESH_RATE	aircapture.h	22;"	d
REFRESH_RATE	airodump-ng.h	39;"	d
REQUESTS	aireplay-ng.c	78;"	d	file:
REQUESTS	tkiptun-ng.c	77;"	d	file:
RESTART	aircrack-ng.h	52;"	d
RETRY	aireplay-ng.c	82;"	d	file:
RETRY	tkiptun-ng.c	81;"	d	file:
RM	ezxml/Makefile	/^RM = rm -f$/;"	m
ROL32	crypto.h	77;"	d
ROR32	crypto.h	79;"	d
ROTATE_LEFT	johnswap.h	84;"	d
ROTATE_LEFT64	johnswap.h	85;"	d
ROTR1	crypto.c	1094;"	d	file:
RRM_CAPABILITIES_IE_LEN	ieee802_11_defs.h	1597;"	d
RSN_ASE_8021X_PSK	include/ieee80211.h	570;"	d
RSN_ASE_8021X_UNSPEC	include/ieee80211.h	569;"	d
RSN_ASE_NONE	include/ieee80211.h	568;"	d
RSN_CAP_PREAUTH	include/ieee80211.h	572;"	d
RSN_CCMP	airshooter.c	69;"	d	file:
RSN_CSE_CCMP	include/ieee80211.h	565;"	d
RSN_CSE_NULL	include/ieee80211.h	561;"	d
RSN_CSE_TKIP	include/ieee80211.h	563;"	d
RSN_CSE_WEP104	include/ieee80211.h	566;"	d
RSN_CSE_WEP40	include/ieee80211.h	562;"	d
RSN_CSE_WRAP	include/ieee80211.h	564;"	d
RSN_OUI	include/ieee80211.h	558;"	d
RSN_TKIP	airshooter.c	70;"	d	file:
RSN_VERSION	include/ieee80211.h	559;"	d
RSN_WEP	airshooter.c	68;"	d	file:
RTAP	osdep/Makefile	/^RTAP		= radiotap$/;"	m
RTC_RESOLUTION	airbase-ng.c	99;"	d	file:
RTC_RESOLUTION	aireplay-ng.c	76;"	d	file:
RTC_RESOLUTION	tkiptun-ng.c	75;"	d	file:
RTS	airbase-ng.c	120;"	d	file:
RTS	aireplay-ng.c	105;"	d	file:
RTS	tkiptun-ng.c	100;"	d	file:
Rate	osdep/airpcap.c	/^	u_int16_t	Rate;$/;"	m	struct:_PPI_FIELD_802_11_COMMON	file:
S0	simd-intrinsics.c	1603;"	d	file:
S0	simd-intrinsics.c	2165;"	d	file:
S0	simd-intrinsics.c	2166;"	d	file:
S0	sse-intrinsics.c	1474;"	d	file:
S0	sse-intrinsics.c	1854;"	d	file:
S0	sse-intrinsics.c	1855;"	d	file:
S1	simd-intrinsics.c	1614;"	d	file:
S1	simd-intrinsics.c	2177;"	d	file:
S1	simd-intrinsics.c	2178;"	d	file:
S1	sse-intrinsics.c	1485;"	d	file:
S1	sse-intrinsics.c	1866;"	d	file:
S1	sse-intrinsics.c	1867;"	d	file:
SBINFILES	Makefile	/^SBINFILES = aireplay-ng$(EXE) airodump-ng$(EXE) airserv-ng$(EXE) \\$/;"	m
SENDING_ASSOC	wesside-ng.c	75;"	d	file:
SENDING_AUTH	wesside-ng.c	72;"	d	file:
SHA1_ALGORITHM_NAME	simd-intrinsics.h	139;"	d
SHA1_ALGORITHM_NAME	simd-intrinsics.h	141;"	d
SHA1_ALGORITHM_NAME	sse-intrinsics.h	107;"	d
SHA1_ALGORITHM_NAME	sse-intrinsics.h	110;"	d
SHA1_EXPAND	sse-intrinsics.c	898;"	d	file:
SHA1_EXPAND2	simd-intrinsics.c	1160;"	d	file:
SHA1_EXPAND2	sse-intrinsics.c	1138;"	d	file:
SHA1_EXPAND2a	simd-intrinsics.c	1136;"	d	file:
SHA1_EXPAND2a	sse-intrinsics.c	1118;"	d	file:
SHA1_EXPAND2b	simd-intrinsics.c	1142;"	d	file:
SHA1_EXPAND2b	sse-intrinsics.c	1123;"	d	file:
SHA1_EXPAND2c	simd-intrinsics.c	1148;"	d	file:
SHA1_EXPAND2c	sse-intrinsics.c	1128;"	d	file:
SHA1_EXPAND2d	simd-intrinsics.c	1154;"	d	file:
SHA1_EXPAND2d	sse-intrinsics.c	1133;"	d	file:
SHA1_F	simd-intrinsics.c	1109;"	d	file:
SHA1_F	sse-intrinsics.c	873;"	d	file:
SHA1_Final	gcrypt-openssl-wrapper.h	45;"	d
SHA1_G	simd-intrinsics.c	1113;"	d	file:
SHA1_G	simd-intrinsics.c	1116;"	d	file:
SHA1_G	sse-intrinsics.c	876;"	d	file:
SHA1_H	simd-intrinsics.c	1122;"	d	file:
SHA1_H	simd-intrinsics.c	1125;"	d	file:
SHA1_H	simd-intrinsics.c	1129;"	d	file:
SHA1_H	sse-intrinsics.c	881;"	d	file:
SHA1_H	sse-intrinsics.c	886;"	d	file:
SHA1_I	simd-intrinsics.c	1134;"	d	file:
SHA1_I	sse-intrinsics.c	893;"	d	file:
SHA1_Init	gcrypt-openssl-wrapper.h	43;"	d
SHA1_N_STR	arch.h	437;"	d
SHA1_N_STR	arch.h	439;"	d
SHA1_PARA_DO	simd-intrinsics.c	1107;"	d	file:
SHA1_PARA_DO	sse-intrinsics.c	871;"	d	file:
SHA1_ROUND	sse-intrinsics.c	904;"	d	file:
SHA1_ROUND2	simd-intrinsics.c	1214;"	d	file:
SHA1_ROUND2	sse-intrinsics.c	1180;"	d	file:
SHA1_ROUND2a	simd-intrinsics.c	1166;"	d	file:
SHA1_ROUND2a	sse-intrinsics.c	1144;"	d	file:
SHA1_ROUND2b	simd-intrinsics.c	1178;"	d	file:
SHA1_ROUND2b	sse-intrinsics.c	1153;"	d	file:
SHA1_ROUND2c	simd-intrinsics.c	1190;"	d	file:
SHA1_ROUND2c	sse-intrinsics.c	1162;"	d	file:
SHA1_ROUND2d	simd-intrinsics.c	1202;"	d	file:
SHA1_ROUND2d	sse-intrinsics.c	1171;"	d	file:
SHA1_ROUND2x	simd-intrinsics.c	1226;"	d	file:
SHA1_ROUND2x	sse-intrinsics.c	1190;"	d	file:
SHA1_SSE_NUM_KEYS	simd-intrinsics.c	1106;"	d	file:
SHA1_SSE_NUM_KEYS	sse-intrinsics.c	870;"	d	file:
SHA1_SSE_PARA	arch.h	401;"	d
SHA1_SSE_PARA	arch.h	404;"	d
SHA1_SSE_PARA	arch.h	408;"	d
SHA1_SSE_PARA	arch.h	411;"	d
SHA1_SSE_PARA	arch.h	414;"	d
SHA1_SSE_PARA	arch.h	417;"	d
SHA1_SSE_type	sse-intrinsics.h	106;"	d
SHA1_SSE_type	sse-intrinsics.h	109;"	d
SHA1_Update	gcrypt-openssl-wrapper.h	44;"	d
SHA256_ALGORITHM_NAME	simd-intrinsics.h	148;"	d
SHA256_ALGORITHM_NAME	simd-intrinsics.h	167;"	d
SHA256_ALGORITHM_NAME	simd-intrinsics.h	170;"	d
SHA256_ALGORITHM_NAME	sse-intrinsics.h	129;"	d
SHA256_BUF_SIZ	sse-intrinsics.h	131;"	d
SHA256_N_STR	arch.h	442;"	d
SHA256_N_STR	arch.h	444;"	d
SHA256_PARA_DO	simd-intrinsics.c	1666;"	d	file:
SHA256_SSE_PARA	sse-intrinsics.h	132;"	d
SHA256_STEP	simd-intrinsics.c	1668;"	d	file:
SHA256_STEP0	sse-intrinsics.c	1530;"	d	file:
SHA256_STEP_R	sse-intrinsics.c	1540;"	d	file:
SHA512_ALGORITHM_NAME	simd-intrinsics.h	157;"	d
SHA512_ALGORITHM_NAME	simd-intrinsics.h	168;"	d
SHA512_ALGORITHM_NAME	simd-intrinsics.h	171;"	d
SHA512_ALGORITHM_NAME	sse-intrinsics.h	136;"	d
SHA512_BUF_SIZ	sse-intrinsics.h	139;"	d
SHA512_N_STR	arch.h	447;"	d
SHA512_N_STR	arch.h	449;"	d
SHA512_PARA_DO	simd-intrinsics.c	2240;"	d	file:
SHA512_SSE_PARA	sse-intrinsics.h	140;"	d
SHA512_STEP	simd-intrinsics.c	2250;"	d	file:
SHA512_STEP	sse-intrinsics.c	1914;"	d	file:
SHA64GETOUTPOS	memory.c	476;"	d	file:
SHA64GETPOS	memory.c	475;"	d	file:
SHA64GETPOSne	memory.c	479;"	d	file:
SHAGETOUTPOS	memory.c	470;"	d	file:
SHAGETPOS	memory.c	469;"	d	file:
SHA_ASM	sha1-git.c	54;"	d	file:
SHA_BUF_SIZ	arch.h	407;"	d
SHA_BUF_SIZ	arch.h	452;"	d
SHA_BUF_SIZ	arch.h	61;"	d
SHA_CTX	gcrypt-openssl-wrapper.h	42;"	d
SHA_DIGEST_LENGTH	sha1-git.h	48;"	d
SHA_MIX	sha1-git.c	136;"	d	file:
SHA_ROL	sha1-git.c	55;"	d	file:
SHA_ROL	sha1-git.c	61;"	d	file:
SHA_ROR	sha1-git.c	56;"	d	file:
SHA_ROR	sha1-git.c	62;"	d	file:
SHA_ROT	sha1-git.c	60;"	d	file:
SHA_ROUND	sha1-git.c	138;"	d	file:
SHA_SRC	sha1-git.c	135;"	d	file:
SIMDOUT	Makefile	/^SIMDOUT		= wpapsk-simd.o$/;"	m
SIMDSHA1body	simd-intrinsics.c	/^void SIMDSHA1body(vtype* _data, ARCH_WORD_32 *out, ARCH_WORD_32 *reload_state,$/;"	f
SIMDSHA1body	wpapsk.c	115;"	d	file:
SIMDSHA1body	wpapsk.c	116;"	d	file:
SIMDSHA256body	simd-intrinsics.c	/^void SIMDSHA256body(vtype *data, ARCH_WORD_32 *out, ARCH_WORD_32 *reload_state, unsigned SSEi_flags)$/;"	f
SIMDSHA512body	simd-intrinsics.c	/^void SIMDSHA512body(vtype* data, ARCH_WORD_64 *out, ARCH_WORD_64 *reload_state,$/;"	f
SIMD_COEF_32	MD5_std.h	108;"	d
SIMD_COEF_32	arch.h	320;"	d
SIMD_COEF_32	arch.h	323;"	d
SIMD_COEF_32	arch.h	326;"	d
SIMD_COEF_32	arch.h	329;"	d
SIMD_COEF_32	arch.h	62;"	d
SIMD_COEF_32	memory.c	459;"	d	file:
SIMD_COEF_32	memory.c	465;"	d	file:
SIMD_COEF_32	memory.h	65;"	d
SIMD_COEF_32	memory.h	68;"	d
SIMD_COEF_32	memory.h	71;"	d
SIMD_COEF_32	memory.h	74;"	d
SIMD_COEF_32	simd-intrinsics.h	54;"	d
SIMD_COEF_64	arch.h	321;"	d
SIMD_COEF_64	arch.h	324;"	d
SIMD_COEF_64	arch.h	327;"	d
SIMD_COEF_64	arch.h	330;"	d
SIMD_COEF_64	arch.h	63;"	d
SIMD_COEF_64	memory.c	462;"	d	file:
SIMD_COEF_64	memory.h	66;"	d
SIMD_COEF_64	memory.h	69;"	d
SIMD_COEF_64	memory.h	72;"	d
SIMD_COEF_64	memory.h	75;"	d
SIMD_PARA_MD4	arch.h	65;"	d
SIMD_PARA_MD5	arch.h	68;"	d
SIMD_PARA_SHA1	arch.h	374;"	d
SIMD_PARA_SHA1	arch.h	376;"	d
SIMD_PARA_SHA1	arch.h	378;"	d
SIMD_PARA_SHA1	arch.h	380;"	d
SIMD_PARA_SHA1	arch.h	382;"	d
SIMD_PARA_SHA1	arch.h	384;"	d
SIMD_PARA_SHA1	arch.h	71;"	d
SIMD_PARA_SHA1	wpapsk.c	73;"	d	file:
SIMD_PARA_SHA1	wpapsk.c	75;"	d	file:
SIMD_PARA_SHA1	wpapsk.c	77;"	d	file:
SIMD_PARA_SHA1	wpapsk.c	79;"	d	file:
SIMD_PARA_SHA1	wpapsk.c	81;"	d	file:
SIMD_PARA_SHA1	wpapsk.c	83;"	d	file:
SIMD_PARA_SHA256	arch.h	390;"	d
SIMD_PARA_SHA256	arch.h	392;"	d
SIMD_PARA_SHA256	arch.h	74;"	d
SIMD_PARA_SHA512	arch.h	396;"	d
SIMD_PARA_SHA512	arch.h	77;"	d
SIMD_TYPE	simd-intrinsics.h	101;"	d
SIMD_TYPE	simd-intrinsics.h	102;"	d
SIMD_TYPE	simd-intrinsics.h	52;"	d
SIMD_TYPE	simd-intrinsics.h	53;"	d
SIMD_TYPE	simd-intrinsics.h	71;"	d
SIMD_TYPE	simd-intrinsics.h	72;"	d
SIMD_TYPE	simd-intrinsics.h	74;"	d
SIMD_TYPE	simd-intrinsics.h	75;"	d
SIMD_TYPE	simd-intrinsics.h	77;"	d
SIMD_TYPE	simd-intrinsics.h	78;"	d
SIMD_TYPE	simd-intrinsics.h	80;"	d
SIMD_TYPE	simd-intrinsics.h	81;"	d
SIMD_TYPE	simd-intrinsics.h	83;"	d
SIMD_TYPE	simd-intrinsics.h	84;"	d
SIMD_TYPE	simd-intrinsics.h	86;"	d
SIMD_TYPE	simd-intrinsics.h	87;"	d
SIMD_TYPE	simd-intrinsics.h	89;"	d
SIMD_TYPE	simd-intrinsics.h	90;"	d
SIMD_TYPE	simd-intrinsics.h	92;"	d
SIMD_TYPE	simd-intrinsics.h	93;"	d
SIMD_TYPE	simd-intrinsics.h	95;"	d
SIMD_TYPE	simd-intrinsics.h	96;"	d
SIMD_TYPE	simd-intrinsics.h	98;"	d
SIMD_TYPE	simd-intrinsics.h	99;"	d
SIMD_TYPE	sse-intrinsics.h	116;"	d
SIMD_TYPE	sse-intrinsics.h	118;"	d
SIMD_TYPE	sse-intrinsics.h	120;"	d
SIMD_TYPE	sse-intrinsics.h	122;"	d
SIMDmd4body	simd-intrinsics.c	/^void SIMDmd4body(vtype* _data, unsigned int *out, ARCH_WORD_32 *reload_state,$/;"	f
SIMDmd5body	simd-intrinsics.c	/^void SIMDmd5body(vtype* _data, unsigned int *out,$/;"	f
SORT_BY_AUTH	airodump-ng.h	85;"	d
SORT_BY_BEACON	airodump-ng.h	78;"	d
SORT_BY_BSSID	airodump-ng.h	76;"	d
SORT_BY_CHAN	airodump-ng.h	81;"	d
SORT_BY_CIPHER	airodump-ng.h	84;"	d
SORT_BY_DATA	airodump-ng.h	79;"	d
SORT_BY_ENC	airodump-ng.h	83;"	d
SORT_BY_ESSID	airodump-ng.h	86;"	d
SORT_BY_MBIT	airodump-ng.h	82;"	d
SORT_BY_NOTHING	airodump-ng.h	75;"	d
SORT_BY_POWER	airodump-ng.h	77;"	d
SORT_BY_PRATE	airodump-ng.h	80;"	d
SPANTREE	crypto.h	63;"	d
SPOOF_MAC	wesside-ng.c	74;"	d	file:
SQRT_3	simd-intrinsics.c	793;"	d	file:
SQRT_3	simd-intrinsics.c	819;"	d	file:
SRC_AC	Makefile	/^SRC_AC		= aircrack-ng.c crypto.c common.c $(SSEC_INT) $(SRC_PTW)$/;"	m
SRC_AIRCAPTURE_H_	aircapture.h	9;"	d
SRC_AIRNODES_H_	airnodes.h	9;"	d
SRC_AIRSHOOTER_H_	airshooter.h	9;"	d
SRC_H80211_TYPES_H_	h80211_types.h	9;"	d
SRC_HASHTABLE_H_	hashtable.h	9;"	d
SRC_LINECOUNT	Makefile	/^SRC_LINECOUNT	= linecount.o$/;"	m
SRC_LLIST_H_	llist.h	9;"	d
SRC_LOG_H_	log.h	9;"	d
SRC_PTW	Makefile	/^SRC_PTW		= aircrack-ptw-lib.c$/;"	m
SRC_SIMD_CORE	Makefile	/^SRC_SIMD_CORE	= simd-intrinsics.c$/;"	m
SRC_SSE_COMMON	Makefile	/^SRC_SSE_COMMON	= memory.c wpapsk.c$/;"	m
SRC_SSE_CORE	Makefile	/^SRC_SSE_CORE	= sse-intrinsics.c$/;"	m
SRC_WIFI_SETUP_H_	wifi_setup.h	9;"	d
SRC_WI_PACKET_H_	wi_packet.h	9;"	d
SRC_XML_AIRCONF_PARSE_H_	airconf-parse.h	9;"	d
SSEC_INT	Makefile	/^SSEC_INT	= simd-intrinsics.c $(SRC_SSE_COMMON)$/;"	m
SSEC_INT	Makefile	/^SSEC_INT	= sse-intrinsics.c $(SRC_SSE_COMMON)$/;"	m
SSEO_INT	Makefile	/^SSEO_INT	= simd-intrinsics.o $(OBJS_SSE_COMMON)$/;"	m
SSEO_INT	Makefile	/^SSEO_INT	= sse-intrinsics.o $(OBJS_SSE_COMMON)$/;"	m
SSESHA1body	sse-intrinsics.c	/^void SSESHA1body(__m128i* _data, ARCH_WORD_32 *out, ARCH_WORD_32 *reload_state, unsigned SSEi_flags)$/;"	f
SSESHA1body	sse-intrinsics.c	/^void SSESHA1body(__m128i* data, ARCH_WORD_32 *out, ARCH_WORD_32 *reload_state, unsigned int SSEi_flags)$/;"	f
SSESHA256body	sse-intrinsics.c	/^void SSESHA256body(__m128i *data, ARCH_WORD_32 *out, ARCH_WORD_32 *reload_state, unsigned SSEi_flags)$/;"	f
SSESHA512body	sse-intrinsics.c	/^void SSESHA512body(__m128i* data, ARCH_WORD_64 *out, ARCH_WORD_64 *reload_state, unsigned SSEi_flags)$/;"	f
SSESIMD_BIN	Makefile	/^SSESIMD_BIN	= wpapsk-simd.o wpapsk-sse.o aircrack-ng-core.o aircrack-ng-simd$(EXE) aircrack-ng-sse$(EXE)$/;"	m
SSE_type	sse-intrinsics.h	52;"	d
SSE_type	sse-intrinsics.h	53;"	d
SSE_type	sse-intrinsics.h	68;"	d
SSE_type	sse-intrinsics.h	69;"	d
SSE_type	sse-intrinsics.h	71;"	d
SSE_type	sse-intrinsics.h	72;"	d
SSE_type	sse-intrinsics.h	74;"	d
SSE_type	sse-intrinsics.h	75;"	d
SSE_type	sse-intrinsics.h	77;"	d
SSE_type	sse-intrinsics.h	78;"	d
SSE_type	sse-intrinsics.h	80;"	d
SSE_type	sse-intrinsics.h	81;"	d
SSEi_2BUF_INPUT	simd-intrinsics-load-flags.h	/^	SSEi_2BUF_INPUT              = 0x80,$/;"	e	enum:__anon67
SSEi_2BUF_INPUT	sse-intrinsics-load-flags.h	/^	SSEi_2BUF_INPUT=0x40,        \/\/ input array is 2x in size.$/;"	e	enum:__anon73
SSEi_2BUF_INPUT_FIRST_BLK	simd-intrinsics-load-flags.h	/^	SSEi_2BUF_INPUT_FIRST_BLK    = 0x100 | SSEi_2BUF_INPUT,$/;"	e	enum:__anon67
SSEi_2BUF_INPUT_FIRST_BLK	sse-intrinsics-load-flags.h	/^	SSEi_2BUF_INPUT_FIRST_BLK=(0x40|0x80),  \/\/ input array 2x in size.  This is the first block, so we MUST rotate element 14\/15 if in flat mode.$/;"	e	enum:__anon73
SSEi_4BUF_INPUT	simd-intrinsics-load-flags.h	/^	SSEi_4BUF_INPUT              = 0x200,$/;"	e	enum:__anon67
SSEi_4BUF_INPUT	sse-intrinsics-load-flags.h	/^	SSEi_4BUF_INPUT=0x100,        \/\/ input array is 4x in size (This is seen in the dynamic type, for sha256. We have 256 byte input buffers there).$/;"	e	enum:__anon73
SSEi_4BUF_INPUT_FIRST_BLK	simd-intrinsics-load-flags.h	/^	SSEi_4BUF_INPUT_FIRST_BLK    = 0x400 | SSEi_4BUF_INPUT,$/;"	e	enum:__anon67
SSEi_4BUF_INPUT_FIRST_BLK	sse-intrinsics-load-flags.h	/^	SSEi_4BUF_INPUT_FIRST_BLK=(0x100|0x200),  \/\/ input array 4x in size.  This is the first block, so we MUST rotate element 14\/15 if in flat mode.$/;"	e	enum:__anon73
SSEi_CRYPT_SHA224	simd-intrinsics-load-flags.h	/^	SSEi_CRYPT_SHA224            = 0x1000,$/;"	e	enum:__anon67
SSEi_CRYPT_SHA224	sse-intrinsics-load-flags.h	/^	SSEi_CRYPT_SHA224=0x1000,     \/\/ use SHA224 IV.$/;"	e	enum:__anon73
SSEi_CRYPT_SHA384	simd-intrinsics-load-flags.h	/^	SSEi_CRYPT_SHA384            = 0x1000,$/;"	e	enum:__anon67
SSEi_CRYPT_SHA384	sse-intrinsics-load-flags.h	/^	SSEi_CRYPT_SHA384=0x1000      \/\/ use SHA384 IV.$/;"	e	enum:__anon73
SSEi_FLAGS	simd-intrinsics-load-flags.h	/^} SSEi_FLAGS;$/;"	t	typeref:enum:__anon67
SSEi_FLAGS	sse-intrinsics-load-flags.h	/^} SSEi_FLAGS;$/;"	t	typeref:enum:__anon73
SSEi_FLAT_IN	simd-intrinsics-load-flags.h	/^	SSEi_FLAT_IN                 = 0x1,$/;"	e	enum:__anon67
SSEi_FLAT_IN	sse-intrinsics-load-flags.h	/^	SSEi_FLAT_IN=0x1,            \/\/ input is an array of 4 64 (2 128 for 64 bit crypts) byte 'flat' values, instead of a properly SSE 'mixed' 64 uint32's.$/;"	e	enum:__anon73
SSEi_FLAT_OUT	simd-intrinsics-load-flags.h	/^	SSEi_FLAT_OUT                = 0x4,$/;"	e	enum:__anon67
SSEi_FLAT_RELOAD_SWAPLAST	simd-intrinsics-load-flags.h	/^	SSEi_FLAT_RELOAD_SWAPLAST    = 0x800,$/;"	e	enum:__anon67
SSEi_MIXED_IN	simd-intrinsics-load-flags.h	/^	SSEi_MIXED_IN                = 0x0,$/;"	e	enum:__anon67
SSEi_MIXED_IN	sse-intrinsics-load-flags.h	/^	SSEi_MIXED_IN=0x0,           \/\/ input is an array of 16 __m128i ints that are properly SSE interleaved.  This is for 4 passwords (or 2 for 64 bit crypts). The data will be copied into a on the stack workspace$/;"	e	enum:__anon73
SSEi_OUTPUT_AS_2BUF_INP_FMT	simd-intrinsics-load-flags.h	/^	SSEi_OUTPUT_AS_2BUF_INP_FMT  = 0x2000 | SSEi_OUTPUT_AS_INP_FMT$/;"	e	enum:__anon67
SSEi_OUTPUT_AS_INP_FMT	simd-intrinsics-load-flags.h	/^	SSEi_OUTPUT_AS_INP_FMT       = 0x20,$/;"	e	enum:__anon67
SSEi_OUTPUT_AS_INP_FMT	sse-intrinsics-load-flags.h	/^	SSEi_OUTPUT_AS_INP_FMT=0x8,  \/\/ Write final output, using 'INPUT' format. Will not matter, unless PARA > 1$/;"	e	enum:__anon73
SSEi_RELOAD	simd-intrinsics-load-flags.h	/^	SSEi_RELOAD                  = 0x8,$/;"	e	enum:__anon67
SSEi_RELOAD	sse-intrinsics-load-flags.h	/^	SSEi_RELOAD=0x2,             \/\/ crypt key will be results of last crypt$/;"	e	enum:__anon73
SSEi_RELOAD_INP_FMT	simd-intrinsics-load-flags.h	/^	SSEi_RELOAD_INP_FMT          = 0x10 | SSEi_RELOAD,$/;"	e	enum:__anon67
SSEi_RELOAD_INP_FMT	sse-intrinsics-load-flags.h	/^	SSEi_RELOAD_INP_FMT=0x6,     \/\/ (note contains SSEi_RELOAD bit also, it is 2&4) crypt key will be results of last crypt, however, it is in 'INPUT' format. Will not matter, unless PARA > 1$/;"	e	enum:__anon73
SSEi_REVERSE_STEPS	simd-intrinsics-load-flags.h	/^	SSEi_REVERSE_STEPS           = 0x40,$/;"	e	enum:__anon67
SSEi_SKIP_FINAL_ADD	sse-intrinsics-load-flags.h	/^	SSEi_SKIP_FINAL_ADD=0x20,    \/\/ do NOT do a=a+init. ONLY valid if not doing reload, AND if format did out[0]-=init in binary.$/;"	e	enum:__anon73
SSEi_SWAP_FINAL	sse-intrinsics-load-flags.h	/^	SSEi_SWAP_FINAL=0x10,        \/\/ swap results into machine native endianity.  Normally, results are left in crypt endianity$/;"	e	enum:__anon73
SSEmd4body	sse-intrinsics.c	/^void SSEmd4body(__m128i* _data, unsigned int * out, ARCH_WORD_32 *reload_state, unsigned SSEi_flags)$/;"	f
SSEmd5body	sse-intrinsics.c	/^void SSEmd5body(__m128i* _data, unsigned int * out, ARCH_WORD_32 *reload_state, unsigned SSEi_flags)$/;"	f
STATE_ATTACK	besside-ng.c	/^	STATE_ATTACK,$/;"	e	enum:__anon17	file:
STATE_DONE	besside-ng.c	/^	STATE_DONE,$/;"	e	enum:__anon17	file:
STATE_SCAN	besside-ng.c	/^	STATE_SCAN = 0,$/;"	e	enum:__anon17	file:
STA_INFO	airnodes.c	/^typedef struct STA_INFO {$/;"	s	file:
STA_INFO	airnodes.c	/^} STA_INFO;$/;"	t	typeref:struct:STA_INFO	file:
STD_FIELD	airodump-ng.h	53;"	d
STD_OPN	airodump-ng.h	48;"	d
STD_QOS	airodump-ng.h	70;"	d
STD_WEP	airodump-ng.h	49;"	d
STD_WPA	airodump-ng.h	50;"	d
STD_WPA2	airodump-ng.h	51;"	d
STRINGIZE	simd-intrinsics.h	68;"	d
STRINGIZE	sse-intrinsics.h	65;"	d
STRINGIZE2	simd-intrinsics.h	67;"	d
STRINGIZE2	sse-intrinsics.h	64;"	d
STRUCT_PACKED	ieee802_11_defs.h	/^}  STRUCT_PACKED;$/;"	v	typeref:struct:wmm_ac_parameter
STRUCT_PACKED	ieee802_11_defs.h	/^} STRUCT_PACKED;$/;"	v	typeref:struct:ieee80211_2040_bss_coex_ie
STRUCT_PACKED	ieee802_11_defs.h	/^} STRUCT_PACKED;$/;"	v	typeref:struct:ieee80211_2040_intol_chan_report
STRUCT_PACKED	ieee802_11_defs.h	/^} STRUCT_PACKED;$/;"	v	typeref:struct:ieee80211_ampe_ie
STRUCT_PACKED	ieee802_11_defs.h	/^} STRUCT_PACKED;$/;"	v	typeref:struct:ieee80211_hdr
STRUCT_PACKED	ieee802_11_defs.h	/^} STRUCT_PACKED;$/;"	v	typeref:struct:ieee80211_ht_capabilities
STRUCT_PACKED	ieee802_11_defs.h	/^} STRUCT_PACKED;$/;"	v	typeref:struct:ieee80211_ht_operation
STRUCT_PACKED	ieee802_11_defs.h	/^} STRUCT_PACKED;$/;"	v	typeref:struct:ieee80211_mgmt
STRUCT_PACKED	ieee802_11_defs.h	/^} STRUCT_PACKED;$/;"	v	typeref:struct:ieee80211_obss_scan_parameters
STRUCT_PACKED	ieee802_11_defs.h	/^} STRUCT_PACKED;$/;"	v	typeref:struct:ieee80211_vht_capabilities
STRUCT_PACKED	ieee802_11_defs.h	/^} STRUCT_PACKED;$/;"	v	typeref:struct:ieee80211_vht_operation
STRUCT_PACKED	ieee802_11_defs.h	/^} STRUCT_PACKED;$/;"	v	typeref:struct:multi_band_ie
STRUCT_PACKED	ieee802_11_defs.h	/^} STRUCT_PACKED;$/;"	v	typeref:struct:p2ps_feature_capab
STRUCT_PACKED	ieee802_11_defs.h	/^} STRUCT_PACKED;$/;"	v	typeref:struct:rrm_link_measurement_report
STRUCT_PACKED	ieee802_11_defs.h	/^} STRUCT_PACKED;$/;"	v	typeref:struct:rrm_link_measurement_request
STRUCT_PACKED	ieee802_11_defs.h	/^} STRUCT_PACKED;$/;"	v	typeref:struct:tpc_report
STRUCT_PACKED	ieee802_11_defs.h	/^} STRUCT_PACKED;$/;"	v	typeref:struct:wmm_information_element
STRUCT_PACKED	ieee802_11_defs.h	/^} STRUCT_PACKED;$/;"	v	typeref:struct:wmm_parameter_element
STRUCT_PACKED	ieee802_11_defs.h	/^} STRUCT_PACKED;$/;"	v	typeref:struct:wmm_tspec_element
STRUCT_PACKED	ieee802_11_defs.h	/^} STRUCT_PACKED;$/;"	v	typeref:struct:wnm_sleep_element
STRUCT_PACKED	ieee802_11_defs.h	33;"	d
STRUCT_PACKED	ieee802_11_defs.h	36;"	d
STR_VALUE	arch.h	422;"	d
ST_info	airbase-ng.c	/^struct ST_info$/;"	s	file:
ST_info	aircrack-ng.h	/^struct ST_info$/;"	s
ST_info	airodump-ng.h	/^struct ST_info$/;"	s
ST_info	ivstools.c	/^struct ST_info$/;"	s	file:
SUCCESS	aircrack-ng.h	50;"	d
SWAP	common.h	53;"	d
SWAP32	common.h	55;"	d
SWAP_ENDIAN	sse-intrinsics.c	179;"	d	file:
SWAP_ENDIAN	sse-intrinsics.c	184;"	d	file:
SWAP_ENDIAN64	sse-intrinsics.c	181;"	d	file:
SWAP_ENDIAN64	sse-intrinsics.c	189;"	d	file:
SYSDEVICEDIR	osdep/tap-win32/common.h	72;"	d
S_ASSOCIATED	easside-ng.c	/^	S_ASSOCIATED$/;"	e	enum:__anon62	file:
S_CMD_INET_CHECK	easside.h	11;"	d
S_CMD_PACKET	easside.h	12;"	d
S_DEFAULT_PORT	easside.h	9;"	d
S_DEFAULT_UDP_PORT	easside.h	10;"	d
S_HELLO_LEN	easside.h	13;"	d
S_LLC_SNAP	aircrack-ng.h	117;"	d
S_LLC_SNAP	crypto.h	50;"	d
S_LLC_SNAP	easside-ng.c	57;"	d	file:
S_LLC_SNAP	wesside-ng.c	81;"	d	file:
S_LLC_SNAP_ARP	aircrack-ng.h	118;"	d
S_LLC_SNAP_ARP	crypto.h	51;"	d
S_LLC_SNAP_ARP	easside-ng.c	58;"	d	file:
S_LLC_SNAP_ARP	wesside-ng.c	82;"	d	file:
S_LLC_SNAP_CDP	crypto.h	55;"	d
S_LLC_SNAP_IP	aircrack-ng.h	119;"	d
S_LLC_SNAP_IP	crypto.h	53;"	d
S_LLC_SNAP_IP	easside-ng.c	59;"	d	file:
S_LLC_SNAP_IP	wesside-ng.c	83;"	d	file:
S_LLC_SNAP_SPANTREE	crypto.h	54;"	d
S_LLC_SNAP_WLCCP	crypto.h	52;"	d
S_MCAST	easside-ng.c	56;"	d	file:
S_MIN_RTO	easside-ng.c	62;"	d	file:
S_MTU	easside-ng.c	55;"	d	file:
S_OWN_LOG	easside-ng.c	61;"	d	file:
S_PRGA_LOG	easside-ng.c	60;"	d	file:
S_SEARCHING	easside-ng.c	/^	S_SEARCHING = 0,$/;"	e	enum:__anon62	file:
S_SENDASSOC	easside-ng.c	/^	S_SENDASSOC,$/;"	e	enum:__anon62	file:
S_SENDAUTH	easside-ng.c	/^	S_SENDAUTH,$/;"	e	enum:__anon62	file:
T	airodump-ng.c	3394;"	d	file:
T	airodump-ng.c	3411;"	d	file:
T	hashtable.h	/^	hash_bucket_t **T;$/;"	m	struct:_hash_ctx_t
TAPSUFFIX	osdep/tap-win32/common.h	74;"	d
TAP_COMPONENT_ID	osdep/tap-win32/common.h	82;"	d
TAP_CONTROL_CODE	osdep/tap-win32/common.h	39;"	d
TAP_IOCTL_CONFIG_DHCP_MASQ	osdep/tap-win32/common.h	50;"	d
TAP_IOCTL_CONFIG_DHCP_SET_OPT	osdep/tap-win32/common.h	52;"	d
TAP_IOCTL_CONFIG_POINT_TO_POINT	osdep/tap-win32/common.h	48;"	d
TAP_IOCTL_CONFIG_TUN	osdep/tap-win32/common.h	57;"	d
TAP_IOCTL_GET_INFO	osdep/tap-win32/common.h	47;"	d
TAP_IOCTL_GET_LOG_LINE	osdep/tap-win32/common.h	51;"	d
TAP_IOCTL_GET_MAC	osdep/tap-win32/common.h	44;"	d
TAP_IOCTL_GET_MTU	osdep/tap-win32/common.h	46;"	d
TAP_IOCTL_GET_VERSION	osdep/tap-win32/common.h	45;"	d
TAP_IOCTL_SET_MEDIA_STATUS	osdep/tap-win32/common.h	49;"	d
TCPDUMP_CIGAM	pcap.h	43;"	d
TCPDUMP_MAGIC	osdep/osdep.h	56;"	d
TCPDUMP_MAGIC	osdep/osdep.h	57;"	d
TCPDUMP_MAGIC	pcap.h	42;"	d
TCPDUMP_MAGIC	wesside-ng.c	79;"	d	file:
TEST	ezxml/Makefile	/^TEST = ezxmltest$/;"	m
TESTBYTES	aircrack-ptw-lib.c	49;"	d	file:
TEST_DIR	Makefile	/^TEST_DIR	= $(AC_ROOT)\/test$/;"	m
TEST_MAX_IVS	aircrack-ng.h	66;"	d
TEST_MIN_IVS	aircrack-ng.h	65;"	d
TEST_PORT	airsock.c	903;"	d	file:
TEXT_BLACK	airodump-ng.h	99;"	d
TEXT_BLINK	airodump-ng.h	93;"	d
TEXT_BLUE	airodump-ng.h	103;"	d
TEXT_BRIGHT	airodump-ng.h	90;"	d
TEXT_CYAN	airodump-ng.h	105;"	d
TEXT_DIM	airodump-ng.h	91;"	d
TEXT_GREEN	airodump-ng.h	101;"	d
TEXT_HIDDEN	airodump-ng.h	95;"	d
TEXT_MAGENTA	airodump-ng.h	104;"	d
TEXT_MAX_COLOR	airodump-ng.h	108;"	d
TEXT_MAX_STYLE	airodump-ng.h	97;"	d
TEXT_RED	airodump-ng.h	100;"	d
TEXT_RESET	airodump-ng.h	89;"	d
TEXT_REVERSE	airodump-ng.h	94;"	d
TEXT_UNDERLINE	airodump-ng.h	92;"	d
TEXT_WHITE	airodump-ng.h	106;"	d
TEXT_YELLOW	airodump-ng.h	102;"	d
TID_TO_WME_AC	include/ieee80211.h	281;"	d
TIME_STR_LENGTH	airodump-ng.c	4093;"	d	file:
TIME_STR_LENGTH	airodump-ng.c	4606;"	d	file:
TI_MTU	airbase-ng.c	91;"	d	file:
TK16	crypto.c	1100;"	d	file:
TRUE	common.h	/^typedef enum {FALSE, TRUE} boolean;$/;"	e	enum:__anon14
TSTP_DAY	airodump-ng.c	3011;"	d	file:
TSTP_HOUR	airodump-ng.c	3010;"	d	file:
TSTP_MIN	airodump-ng.c	3009;"	d	file:
TSTP_SEC	airodump-ng.c	3008;"	d	file:
TX_BF_CAP_CALIBRATION_MASK	ieee802_11_defs.h	876;"	d
TX_BF_CAP_CALIB_OFFSET	ieee802_11_defs.h	877;"	d
TX_BF_CAP_CHANNEL_ESTIMATION_CAP_MASK	ieee802_11_defs.h	890;"	d
TX_BF_CAP_CHANNEL_ESTIMATION_CAP_OFFSET	ieee802_11_defs.h	891;"	d
TX_BF_CAP_COMPRESSED_STEERING_MATRIX_BEAMFORMER_ANT_OFFSET	ieee802_11_defs.h	888;"	d
TX_BF_CAP_CSI_NUM_BEAMFORMER_ANT_OFFSET	ieee802_11_defs.h	886;"	d
TX_BF_CAP_EXPLICIT_BF_CSI_FEEDBACK_OFFSET	ieee802_11_defs.h	882;"	d
TX_BF_CAP_EXPLICIT_COMPRESSED_STEERING_MATRIX_FEEDBACK_OFFSET	ieee802_11_defs.h	884;"	d
TX_BF_CAP_EXPLICIT_COMPR_STEERING_CAP	ieee802_11_defs.h	880;"	d
TX_BF_CAP_EXPLICIT_CSI_TXBF_CAP	ieee802_11_defs.h	878;"	d
TX_BF_CAP_EXPLICIT_NONCOMPR_STEERING_CAP	ieee802_11_defs.h	879;"	d
TX_BF_CAP_EXPLICIT_TX_BF_CSI_FEEDBACK_MASK	ieee802_11_defs.h	881;"	d
TX_BF_CAP_EXPLICIT_UNCOMPR_STEERING_MATRIX_FEEDBACK_OFFSET	ieee802_11_defs.h	883;"	d
TX_BF_CAP_IMPLICIT_TXBF_RX_CAP	ieee802_11_defs.h	870;"	d
TX_BF_CAP_IMPLICIT_TX_BF_CAP	ieee802_11_defs.h	875;"	d
TX_BF_CAP_MINIMAL_GROUPING_OFFSET	ieee802_11_defs.h	885;"	d
TX_BF_CAP_RX_NDP_CAP	ieee802_11_defs.h	873;"	d
TX_BF_CAP_RX_STAGGERED_SOUNDING_CAP	ieee802_11_defs.h	871;"	d
TX_BF_CAP_SCI_MAX_OF_ROWS_BEANFORMER_SUPPORTED_OFFSET	ieee802_11_defs.h	889;"	d
TX_BF_CAP_TX_NDP_CAP	ieee802_11_defs.h	874;"	d
TX_BF_CAP_TX_STAGGERED_SOUNDING_CAP	ieee802_11_defs.h	872;"	d
TX_BF_CAP_UNCOMPRESSED_STEERING_MATRIX_BEAMFORMER_ANT_OFFSET	ieee802_11_defs.h	887;"	d
TYPE_ARP	crypto.h	58;"	d
TYPE_IP	crypto.h	59;"	d
T_0_15	sha1-git.c	143;"	d	file:
T_16_19	sha1-git.c	144;"	d	file:
T_20_39	sha1-git.c	145;"	d	file:
T_40_59	sha1-git.c	146;"	d	file:
T_60_79	sha1-git.c	147;"	d	file:
TkipSbox	crypto.c	/^const short TkipSbox[2][256]=$/;"	v
TsfTimer	osdep/airpcap.c	/^	u_int64_t	TsfTimer;$/;"	m	struct:_PPI_FIELD_802_11_COMMON	file:
UDP_PACKET	packetforge-ng.c	56;"	d	file:
UKNOWN_FRAME_CLOAKING_STATUS	airdecloak-ng.h	59;"	d
UNUSED	besside-ng.c	69;"	d	file:
UNUSED	besside-ng.c	71;"	d	file:
UNUSED	besside-ng.c	73;"	d	file:
USERDEVICEDIR	osdep/tap-win32/common.h	73;"	d
USERMODEDEVICEDIR	osdep/tap-win32/common.h	71;"	d
USE_AMD64_RC4_OPTIMIZED	aircrack-ptw-lib.c	124;"	d	file:
USE_IV	aircrack-ng.c	131;"	d	file:
VALID_CHAR	aircrack-ng.c	588;"	d	file:
VALID_CHAR	aircrack-ng.c	772;"	d	file:
VALID_FRAME_UNCLOAKED	airdecloak-ng.h	60;"	d
VALID_SEP	aircrack-ng.c	590;"	d	file:
VALID_SEP	aircrack-ng.c	773;"	d	file:
VCMOV_EMULATED	pseudo_intrinsics.h	192;"	d
VCMOV_EMULATED	pseudo_intrinsics.h	263;"	d
VCMOV_EMULATED	pseudo_intrinsics.h	334;"	d
VCMOV_EMULATED	pseudo_intrinsics.h	441;"	d
VENDOR_HT_CAPAB_OUI_TYPE	ieee802_11_defs.h	1420;"	d
VENDOR_VHT_SUBTYPE	ieee802_11_defs.h	1417;"	d
VENDOR_VHT_SUBTYPE2	ieee802_11_defs.h	1418;"	d
VENDOR_VHT_TYPE	ieee802_11_defs.h	1416;"	d
VHT_CAP_BEAMFORMEE_STS_MAX	ieee802_11_defs.h	959;"	d
VHT_CAP_BEAMFORMEE_STS_MAX_SHIFT	ieee802_11_defs.h	961;"	d
VHT_CAP_BEAMFORMEE_STS_OFFSET	ieee802_11_defs.h	962;"	d
VHT_CAP_HTC_VHT	ieee802_11_defs.h	970;"	d
VHT_CAP_MAX_A_MPDU_LENGTH_EXPONENT_1	ieee802_11_defs.h	972;"	d
VHT_CAP_MAX_A_MPDU_LENGTH_EXPONENT_2	ieee802_11_defs.h	973;"	d
VHT_CAP_MAX_A_MPDU_LENGTH_EXPONENT_3	ieee802_11_defs.h	974;"	d
VHT_CAP_MAX_A_MPDU_LENGTH_EXPONENT_4	ieee802_11_defs.h	975;"	d
VHT_CAP_MAX_A_MPDU_LENGTH_EXPONENT_5	ieee802_11_defs.h	976;"	d
VHT_CAP_MAX_A_MPDU_LENGTH_EXPONENT_6	ieee802_11_defs.h	977;"	d
VHT_CAP_MAX_A_MPDU_LENGTH_EXPONENT_MAX	ieee802_11_defs.h	978;"	d
VHT_CAP_MAX_A_MPDU_LENGTH_EXPONENT_MAX_SHIFT	ieee802_11_defs.h	980;"	d
VHT_CAP_MAX_MPDU_LENGTH_11454	ieee802_11_defs.h	940;"	d
VHT_CAP_MAX_MPDU_LENGTH_7991	ieee802_11_defs.h	939;"	d
VHT_CAP_MAX_MPDU_LENGTH_MASK	ieee802_11_defs.h	941;"	d
VHT_CAP_MAX_MPDU_LENGTH_MASK_SHIFT	ieee802_11_defs.h	942;"	d
VHT_CAP_MU_BEAMFORMEE_CAPABLE	ieee802_11_defs.h	968;"	d
VHT_CAP_MU_BEAMFORMER_CAPABLE	ieee802_11_defs.h	967;"	d
VHT_CAP_RXLDPC	ieee802_11_defs.h	946;"	d
VHT_CAP_RXSTBC_1	ieee802_11_defs.h	950;"	d
VHT_CAP_RXSTBC_2	ieee802_11_defs.h	951;"	d
VHT_CAP_RXSTBC_3	ieee802_11_defs.h	952;"	d
VHT_CAP_RXSTBC_4	ieee802_11_defs.h	953;"	d
VHT_CAP_RXSTBC_MASK	ieee802_11_defs.h	954;"	d
VHT_CAP_RXSTBC_MASK_SHIFT	ieee802_11_defs.h	956;"	d
VHT_CAP_RX_ANTENNA_PATTERN	ieee802_11_defs.h	983;"	d
VHT_CAP_SHORT_GI_160	ieee802_11_defs.h	948;"	d
VHT_CAP_SHORT_GI_80	ieee802_11_defs.h	947;"	d
VHT_CAP_SOUNDING_DIMENSION_MAX	ieee802_11_defs.h	963;"	d
VHT_CAP_SOUNDING_DIMENSION_MAX_SHIFT	ieee802_11_defs.h	965;"	d
VHT_CAP_SOUNDING_DIMENSION_OFFSET	ieee802_11_defs.h	966;"	d
VHT_CAP_SUPP_CHAN_WIDTH_160MHZ	ieee802_11_defs.h	943;"	d
VHT_CAP_SUPP_CHAN_WIDTH_160_80PLUS80MHZ	ieee802_11_defs.h	944;"	d
VHT_CAP_SUPP_CHAN_WIDTH_MASK	ieee802_11_defs.h	945;"	d
VHT_CAP_SU_BEAMFORMEE_CAPABLE	ieee802_11_defs.h	958;"	d
VHT_CAP_SU_BEAMFORMER_CAPABLE	ieee802_11_defs.h	957;"	d
VHT_CAP_TXSTBC	ieee802_11_defs.h	949;"	d
VHT_CAP_TX_ANTENNA_PATTERN	ieee802_11_defs.h	984;"	d
VHT_CAP_VHT_LINK_ADAPTATION_VHT_MRQ_MFB	ieee802_11_defs.h	982;"	d
VHT_CAP_VHT_LINK_ADAPTATION_VHT_UNSOL_MFB	ieee802_11_defs.h	981;"	d
VHT_CAP_VHT_TXOP_PS	ieee802_11_defs.h	969;"	d
VHT_CHANWIDTH_160MHZ	ieee802_11_defs.h	996;"	d
VHT_CHANWIDTH_80MHZ	ieee802_11_defs.h	995;"	d
VHT_CHANWIDTH_80P80MHZ	ieee802_11_defs.h	997;"	d
VHT_CHANWIDTH_USE_HT	ieee802_11_defs.h	994;"	d
VHT_OPMODE_CHANNEL_RxNSS_MASK	ieee802_11_defs.h	987;"	d
VHT_OPMODE_CHANNEL_WIDTH_MASK	ieee802_11_defs.h	986;"	d
VHT_OPMODE_NOTIF_RX_NSS_SHIFT	ieee802_11_defs.h	989;"	d
VHT_RX_NSS_MAX_STREAMS	ieee802_11_defs.h	991;"	d
VLOADU_EMULATED	pseudo_intrinsics.h	151;"	d
VLOADU_EMULATED	pseudo_intrinsics.h	93;"	d
VS32	simd-intrinsics.c	71;"	d	file:
VS64	simd-intrinsics.c	72;"	d	file:
VSTOREU_EMULATED	pseudo_intrinsics.h	112;"	d
VSTOREU_EMULATED	pseudo_intrinsics.h	167;"	d
VTC_BLUE	log.c	53;"	d	file:
VTC_BOLD	log.c	57;"	d	file:
VTC_GREEN	log.c	55;"	d	file:
VTC_RED	log.c	54;"	d	file:
VTC_RESET	log.c	58;"	d	file:
VTC_YELLOW	log.c	56;"	d	file:
V_NORMAL	besside-ng.c	/^	V_NORMAL = 0,$/;"	e	enum:__anon21	file:
V_VERBOSE	besside-ng.c	/^	V_VERBOSE,$/;"	e	enum:__anon21	file:
W	sha1-git.c	129;"	d	file:
W	sha1-git.h	/^	unsigned int W[16];$/;"	m	struct:__anon15
WEBSITE	version.h	38;"	d
WEIRD_FRAME_TYPE	airdecloak-ng.h	66;"	d
WEP_FILE	wesside-ng.c	88;"	d	file:
WEP_data	aircrack-ng.h	/^struct WEP_data$/;"	s
WFA_WNM_NOTIF_SUBELEM_CELL_DATA_CAPA	ieee802_11_defs.h	/^	WFA_WNM_NOTIF_SUBELEM_CELL_DATA_CAPA = 3,$/;"	e	enum:wfa_wnm_notif_subelem_id
WFA_WNM_NOTIF_SUBELEM_NON_PREF_CHAN_REPORT	ieee802_11_defs.h	/^	WFA_WNM_NOTIF_SUBELEM_NON_PREF_CHAN_REPORT = 2,$/;"	e	enum:wfa_wnm_notif_subelem_id
WFD_IE_VENDOR_TYPE	ieee802_11_defs.h	1006;"	d
WFD_OUI_TYPE	ieee802_11_defs.h	1007;"	d
WFD_SUBELEM_3D_VIDEO_FORMATS	ieee802_11_defs.h	/^	WFD_SUBELEM_3D_VIDEO_FORMATS = 4,$/;"	e	enum:wifi_display_subelem
WFD_SUBELEM_ASSOCIATED_BSSID	ieee802_11_defs.h	/^	WFD_SUBELEM_ASSOCIATED_BSSID = 1,$/;"	e	enum:wifi_display_subelem
WFD_SUBELEM_AUDIO_FORMATS	ieee802_11_defs.h	/^	WFD_SUBELEM_AUDIO_FORMATS = 2,$/;"	e	enum:wifi_display_subelem
WFD_SUBELEM_CONTENT_PROTECTION	ieee802_11_defs.h	/^	WFD_SUBELEM_CONTENT_PROTECTION = 5,$/;"	e	enum:wifi_display_subelem
WFD_SUBELEM_COUPLED_SINK	ieee802_11_defs.h	/^	WFD_SUBELEM_COUPLED_SINK = 6,$/;"	e	enum:wifi_display_subelem
WFD_SUBELEM_DEVICE_INFO	ieee802_11_defs.h	/^	WFD_SUBELEM_DEVICE_INFO = 0,$/;"	e	enum:wifi_display_subelem
WFD_SUBELEM_EXT_CAPAB	ieee802_11_defs.h	/^	WFD_SUBELEM_EXT_CAPAB = 7,$/;"	e	enum:wifi_display_subelem
WFD_SUBELEM_LOCAL_IP_ADDRESS	ieee802_11_defs.h	/^	WFD_SUBELEM_LOCAL_IP_ADDRESS = 8,$/;"	e	enum:wifi_display_subelem
WFD_SUBELEM_SESSION_INFO	ieee802_11_defs.h	/^	WFD_SUBELEM_SESSION_INFO = 9$/;"	e	enum:wifi_display_subelem
WFD_SUBELEM_VIDEO_FORMATS	ieee802_11_defs.h	/^	WFD_SUBELEM_VIDEO_FORMATS = 3,$/;"	e	enum:wifi_display_subelem
WIF_MTU	airbase-ng.c	92;"	d	file:
WITH_ASAN	misc.h	200;"	d
WKP_FRAME_LENGTH	wkp-frame.h	35;"	d
WLAN_20_40_BSS_COEX_20MHZ_WIDTH_REQ	ieee802_11_defs.h	1542;"	d
WLAN_20_40_BSS_COEX_40MHZ_INTOL	ieee802_11_defs.h	1541;"	d
WLAN_20_40_BSS_COEX_INFO_REQ	ieee802_11_defs.h	1540;"	d
WLAN_20_40_BSS_COEX_OBSS_EXEMPT_GRNT	ieee802_11_defs.h	1544;"	d
WLAN_20_40_BSS_COEX_OBSS_EXEMPT_REQ	ieee802_11_defs.h	1543;"	d
WLAN_ACTION_BLOCK_ACK	ieee802_11_defs.h	357;"	d
WLAN_ACTION_DLS	ieee802_11_defs.h	356;"	d
WLAN_ACTION_FST	ieee802_11_defs.h	369;"	d
WLAN_ACTION_FT	ieee802_11_defs.h	360;"	d
WLAN_ACTION_HT	ieee802_11_defs.h	361;"	d
WLAN_ACTION_PROTECTED_DUAL	ieee802_11_defs.h	363;"	d
WLAN_ACTION_PUBLIC	ieee802_11_defs.h	358;"	d
WLAN_ACTION_QOS	ieee802_11_defs.h	355;"	d
WLAN_ACTION_RADIO_MEASUREMENT	ieee802_11_defs.h	359;"	d
WLAN_ACTION_SA_QUERY	ieee802_11_defs.h	362;"	d
WLAN_ACTION_SELF_PROTECTED	ieee802_11_defs.h	367;"	d
WLAN_ACTION_SPECTRUM_MGMT	ieee802_11_defs.h	354;"	d
WLAN_ACTION_TDLS	ieee802_11_defs.h	366;"	d
WLAN_ACTION_UNPROTECTED_WNM	ieee802_11_defs.h	365;"	d
WLAN_ACTION_VENDOR_SPECIFIC	ieee802_11_defs.h	370;"	d
WLAN_ACTION_WMM	ieee802_11_defs.h	368;"	d
WLAN_ACTION_WNM	ieee802_11_defs.h	364;"	d
WLAN_AKM_SUITE_8021X	ieee802_11_defs.h	1446;"	d
WLAN_AKM_SUITE_8021X_SHA256	ieee802_11_defs.h	1450;"	d
WLAN_AKM_SUITE_8021X_SUITE_B	ieee802_11_defs.h	1452;"	d
WLAN_AKM_SUITE_8021X_SUITE_B_192	ieee802_11_defs.h	1453;"	d
WLAN_AKM_SUITE_CCKM	ieee802_11_defs.h	1454;"	d
WLAN_AKM_SUITE_FT_8021X	ieee802_11_defs.h	1448;"	d
WLAN_AKM_SUITE_FT_PSK	ieee802_11_defs.h	1449;"	d
WLAN_AKM_SUITE_OSEN	ieee802_11_defs.h	1455;"	d
WLAN_AKM_SUITE_PSK	ieee802_11_defs.h	1447;"	d
WLAN_AKM_SUITE_PSK_SHA256	ieee802_11_defs.h	1451;"	d
WLAN_AUTH_CHALLENGE_LEN	ieee802_11_defs.h	142;"	d
WLAN_AUTH_FT	ieee802_11_defs.h	138;"	d
WLAN_AUTH_LEAP	ieee802_11_defs.h	140;"	d
WLAN_AUTH_OPEN	ieee802_11_defs.h	136;"	d
WLAN_AUTH_SAE	ieee802_11_defs.h	139;"	d
WLAN_AUTH_SHARED_KEY	ieee802_11_defs.h	137;"	d
WLAN_CAPABILITY_APSD	ieee802_11_defs.h	155;"	d
WLAN_CAPABILITY_CF_POLLABLE	ieee802_11_defs.h	146;"	d
WLAN_CAPABILITY_CF_POLL_REQUEST	ieee802_11_defs.h	147;"	d
WLAN_CAPABILITY_CHANNEL_AGILITY	ieee802_11_defs.h	151;"	d
WLAN_CAPABILITY_DELAYED_BLOCK_ACK	ieee802_11_defs.h	158;"	d
WLAN_CAPABILITY_DSSS_OFDM	ieee802_11_defs.h	157;"	d
WLAN_CAPABILITY_ESS	ieee802_11_defs.h	144;"	d
WLAN_CAPABILITY_IBSS	ieee802_11_defs.h	145;"	d
WLAN_CAPABILITY_IMM_BLOCK_ACK	ieee802_11_defs.h	159;"	d
WLAN_CAPABILITY_PBCC	ieee802_11_defs.h	150;"	d
WLAN_CAPABILITY_PRIVACY	ieee802_11_defs.h	148;"	d
WLAN_CAPABILITY_QOS	ieee802_11_defs.h	153;"	d
WLAN_CAPABILITY_RADIO_MEASUREMENT	ieee802_11_defs.h	156;"	d
WLAN_CAPABILITY_SHORT_PREAMBLE	ieee802_11_defs.h	149;"	d
WLAN_CAPABILITY_SHORT_SLOT_TIME	ieee802_11_defs.h	154;"	d
WLAN_CAPABILITY_SPECTRUM_MGMT	ieee802_11_defs.h	152;"	d
WLAN_CIPHER_SUITE_AES_CMAC	ieee802_11_defs.h	1429;"	d
WLAN_CIPHER_SUITE_BIP_CMAC_256	ieee802_11_defs.h	1436;"	d
WLAN_CIPHER_SUITE_BIP_GMAC_128	ieee802_11_defs.h	1434;"	d
WLAN_CIPHER_SUITE_BIP_GMAC_256	ieee802_11_defs.h	1435;"	d
WLAN_CIPHER_SUITE_CCMP	ieee802_11_defs.h	1427;"	d
WLAN_CIPHER_SUITE_CCMP_256	ieee802_11_defs.h	1433;"	d
WLAN_CIPHER_SUITE_CKIP	ieee802_11_defs.h	1440;"	d
WLAN_CIPHER_SUITE_CKIP_CMIC	ieee802_11_defs.h	1441;"	d
WLAN_CIPHER_SUITE_CMIC	ieee802_11_defs.h	1442;"	d
WLAN_CIPHER_SUITE_GCMP	ieee802_11_defs.h	1431;"	d
WLAN_CIPHER_SUITE_GCMP_256	ieee802_11_defs.h	1432;"	d
WLAN_CIPHER_SUITE_KRK	ieee802_11_defs.h	1443;"	d
WLAN_CIPHER_SUITE_NO_GROUP_ADDR	ieee802_11_defs.h	1430;"	d
WLAN_CIPHER_SUITE_SMS4	ieee802_11_defs.h	1438;"	d
WLAN_CIPHER_SUITE_TKIP	ieee802_11_defs.h	1425;"	d
WLAN_CIPHER_SUITE_USE_GROUP	ieee802_11_defs.h	1423;"	d
WLAN_CIPHER_SUITE_WEP104	ieee802_11_defs.h	1428;"	d
WLAN_CIPHER_SUITE_WEP40	ieee802_11_defs.h	1424;"	d
WLAN_EID_20_40_BSS_COEXISTENCE	ieee802_11_defs.h	317;"	d
WLAN_EID_20_40_BSS_INTOLERANT	ieee802_11_defs.h	318;"	d
WLAN_EID_ADV_PROTO	ieee802_11_defs.h	329;"	d
WLAN_EID_AMPE	ieee802_11_defs.h	336;"	d
WLAN_EID_BSS_LOAD	ieee802_11_defs.h	286;"	d
WLAN_EID_BSS_MAX_IDLE_PERIOD	ieee802_11_defs.h	322;"	d
WLAN_EID_CCKM	ieee802_11_defs.h	338;"	d
WLAN_EID_CF_PARAMS	ieee802_11_defs.h	282;"	d
WLAN_EID_CHALLENGE	ieee802_11_defs.h	287;"	d
WLAN_EID_CHANNEL_SWITCH	ieee802_11_defs.h	294;"	d
WLAN_EID_COUNTRY	ieee802_11_defs.h	285;"	d
WLAN_EID_DS_PARAMS	ieee802_11_defs.h	281;"	d
WLAN_EID_ERP_INFO	ieee802_11_defs.h	300;"	d
WLAN_EID_EXT_CAPAB	ieee802_11_defs.h	335;"	d
WLAN_EID_EXT_CHANSWITCH_ANN	ieee802_11_defs.h	311;"	d
WLAN_EID_EXT_SUPP_RATES	ieee802_11_defs.h	304;"	d
WLAN_EID_FAST_BSS_TRANSITION	ieee802_11_defs.h	307;"	d
WLAN_EID_FH_PARAMS	ieee802_11_defs.h	280;"	d
WLAN_EID_HT_CAP	ieee802_11_defs.h	301;"	d
WLAN_EID_HT_OPERATION	ieee802_11_defs.h	312;"	d
WLAN_EID_IBSS_DFS	ieee802_11_defs.h	298;"	d
WLAN_EID_IBSS_PARAMS	ieee802_11_defs.h	284;"	d
WLAN_EID_INTERWORKING	ieee802_11_defs.h	328;"	d
WLAN_EID_LINK_ID	ieee802_11_defs.h	327;"	d
WLAN_EID_MEASURE_REPORT	ieee802_11_defs.h	296;"	d
WLAN_EID_MEASURE_REQUEST	ieee802_11_defs.h	295;"	d
WLAN_EID_MESH_CONFIG	ieee802_11_defs.h	332;"	d
WLAN_EID_MESH_ID	ieee802_11_defs.h	333;"	d
WLAN_EID_MIC	ieee802_11_defs.h	337;"	d
WLAN_EID_MMIE	ieee802_11_defs.h	320;"	d
WLAN_EID_MOBILITY_DOMAIN	ieee802_11_defs.h	306;"	d
WLAN_EID_MULTI_BAND	ieee802_11_defs.h	339;"	d
WLAN_EID_NEIGHBOR_REPORT	ieee802_11_defs.h	305;"	d
WLAN_EID_OVERLAPPING_BSS_SCAN_PARAMS	ieee802_11_defs.h	319;"	d
WLAN_EID_PEER_MGMT	ieee802_11_defs.h	334;"	d
WLAN_EID_PWR_CAPABILITY	ieee802_11_defs.h	290;"	d
WLAN_EID_PWR_CONSTRAINT	ieee802_11_defs.h	289;"	d
WLAN_EID_QOS	ieee802_11_defs.h	302;"	d
WLAN_EID_QOS_MAP_SET	ieee802_11_defs.h	330;"	d
WLAN_EID_QUITE	ieee802_11_defs.h	297;"	d
WLAN_EID_RIC_DATA	ieee802_11_defs.h	309;"	d
WLAN_EID_ROAMING_CONSORTIUM	ieee802_11_defs.h	331;"	d
WLAN_EID_RRM_ENABLED_CAPABILITIES	ieee802_11_defs.h	316;"	d
WLAN_EID_RSN	ieee802_11_defs.h	303;"	d
WLAN_EID_SECONDARY_CHANNEL_OFFSET	ieee802_11_defs.h	313;"	d
WLAN_EID_SESSION_TRANSITION	ieee802_11_defs.h	340;"	d
WLAN_EID_SSID	ieee802_11_defs.h	278;"	d
WLAN_EID_SSID_LIST	ieee802_11_defs.h	321;"	d
WLAN_EID_SUPPORTED_CHANNELS	ieee802_11_defs.h	293;"	d
WLAN_EID_SUPPORTED_OPERATING_CLASSES	ieee802_11_defs.h	310;"	d
WLAN_EID_SUPP_RATES	ieee802_11_defs.h	279;"	d
WLAN_EID_TFS_REQ	ieee802_11_defs.h	323;"	d
WLAN_EID_TFS_RESP	ieee802_11_defs.h	324;"	d
WLAN_EID_TIM	ieee802_11_defs.h	283;"	d
WLAN_EID_TIMEOUT_INTERVAL	ieee802_11_defs.h	308;"	d
WLAN_EID_TIME_ADVERTISEMENT	ieee802_11_defs.h	315;"	d
WLAN_EID_TIME_ZONE	ieee802_11_defs.h	326;"	d
WLAN_EID_TPC_REPORT	ieee802_11_defs.h	292;"	d
WLAN_EID_TPC_REQUEST	ieee802_11_defs.h	291;"	d
WLAN_EID_VENDOR_SPECIFIC	ieee802_11_defs.h	350;"	d
WLAN_EID_VHT_AID	ieee802_11_defs.h	347;"	d
WLAN_EID_VHT_CAP	ieee802_11_defs.h	341;"	d
WLAN_EID_VHT_CHANNEL_SWITCH_WRAPPER	ieee802_11_defs.h	346;"	d
WLAN_EID_VHT_EXTENDED_BSS_LOAD	ieee802_11_defs.h	343;"	d
WLAN_EID_VHT_OPERATING_MODE_NOTIFICATION	ieee802_11_defs.h	349;"	d
WLAN_EID_VHT_OPERATION	ieee802_11_defs.h	342;"	d
WLAN_EID_VHT_QUIET_CHANNEL	ieee802_11_defs.h	348;"	d
WLAN_EID_VHT_TRANSMIT_POWER_ENVELOPE	ieee802_11_defs.h	345;"	d
WLAN_EID_VHT_WIDE_BW_CHSWITCH	ieee802_11_defs.h	344;"	d
WLAN_EID_WAPI	ieee802_11_defs.h	314;"	d
WLAN_EID_WNMSLEEP	ieee802_11_defs.h	325;"	d
WLAN_FC_FROMDS	ieee802_11_defs.h	75;"	d
WLAN_FC_GET_STYPE	ieee802_11_defs.h	84;"	d
WLAN_FC_GET_TYPE	ieee802_11_defs.h	83;"	d
WLAN_FC_ISWEP	ieee802_11_defs.h	80;"	d
WLAN_FC_MOREDATA	ieee802_11_defs.h	79;"	d
WLAN_FC_MOREFRAG	ieee802_11_defs.h	76;"	d
WLAN_FC_ORDER	ieee802_11_defs.h	81;"	d
WLAN_FC_PVER	ieee802_11_defs.h	73;"	d
WLAN_FC_PWRMGT	ieee802_11_defs.h	78;"	d
WLAN_FC_RETRY	ieee802_11_defs.h	77;"	d
WLAN_FC_STYPE_ACK	ieee802_11_defs.h	114;"	d
WLAN_FC_STYPE_ACTION	ieee802_11_defs.h	108;"	d
WLAN_FC_STYPE_ASSOC_REQ	ieee802_11_defs.h	97;"	d
WLAN_FC_STYPE_ASSOC_RESP	ieee802_11_defs.h	98;"	d
WLAN_FC_STYPE_ATIM	ieee802_11_defs.h	104;"	d
WLAN_FC_STYPE_AUTH	ieee802_11_defs.h	106;"	d
WLAN_FC_STYPE_BEACON	ieee802_11_defs.h	103;"	d
WLAN_FC_STYPE_CFACK	ieee802_11_defs.h	124;"	d
WLAN_FC_STYPE_CFACKPOLL	ieee802_11_defs.h	126;"	d
WLAN_FC_STYPE_CFEND	ieee802_11_defs.h	115;"	d
WLAN_FC_STYPE_CFENDACK	ieee802_11_defs.h	116;"	d
WLAN_FC_STYPE_CFPOLL	ieee802_11_defs.h	125;"	d
WLAN_FC_STYPE_CTS	ieee802_11_defs.h	113;"	d
WLAN_FC_STYPE_DATA	ieee802_11_defs.h	119;"	d
WLAN_FC_STYPE_DATA_CFACK	ieee802_11_defs.h	120;"	d
WLAN_FC_STYPE_DATA_CFACKPOLL	ieee802_11_defs.h	122;"	d
WLAN_FC_STYPE_DATA_CFPOLL	ieee802_11_defs.h	121;"	d
WLAN_FC_STYPE_DEAUTH	ieee802_11_defs.h	107;"	d
WLAN_FC_STYPE_DISASSOC	ieee802_11_defs.h	105;"	d
WLAN_FC_STYPE_NULLFUNC	ieee802_11_defs.h	123;"	d
WLAN_FC_STYPE_PROBE_REQ	ieee802_11_defs.h	101;"	d
WLAN_FC_STYPE_PROBE_RESP	ieee802_11_defs.h	102;"	d
WLAN_FC_STYPE_PSPOLL	ieee802_11_defs.h	111;"	d
WLAN_FC_STYPE_QOS_CFACKPOLL	ieee802_11_defs.h	133;"	d
WLAN_FC_STYPE_QOS_CFPOLL	ieee802_11_defs.h	132;"	d
WLAN_FC_STYPE_QOS_DATA	ieee802_11_defs.h	127;"	d
WLAN_FC_STYPE_QOS_DATA_CFACK	ieee802_11_defs.h	128;"	d
WLAN_FC_STYPE_QOS_DATA_CFACKPOLL	ieee802_11_defs.h	130;"	d
WLAN_FC_STYPE_QOS_DATA_CFPOLL	ieee802_11_defs.h	129;"	d
WLAN_FC_STYPE_QOS_NULL	ieee802_11_defs.h	131;"	d
WLAN_FC_STYPE_REASSOC_REQ	ieee802_11_defs.h	99;"	d
WLAN_FC_STYPE_REASSOC_RESP	ieee802_11_defs.h	100;"	d
WLAN_FC_STYPE_RTS	ieee802_11_defs.h	112;"	d
WLAN_FC_TODS	ieee802_11_defs.h	74;"	d
WLAN_FC_TYPE_CTRL	ieee802_11_defs.h	93;"	d
WLAN_FC_TYPE_DATA	ieee802_11_defs.h	94;"	d
WLAN_FC_TYPE_MGMT	ieee802_11_defs.h	92;"	d
WLAN_GET_SEQ_FRAG	ieee802_11_defs.h	88;"	d
WLAN_GET_SEQ_SEQ	ieee802_11_defs.h	89;"	d
WLAN_INVALID_MGMT_SEQ	ieee802_11_defs.h	86;"	d
WLAN_PA_20_40_BSS_COEX	ieee802_11_defs.h	373;"	d
WLAN_PA_GAS_COMEBACK_REQ	ieee802_11_defs.h	377;"	d
WLAN_PA_GAS_COMEBACK_RESP	ieee802_11_defs.h	378;"	d
WLAN_PA_GAS_INITIAL_REQ	ieee802_11_defs.h	375;"	d
WLAN_PA_GAS_INITIAL_RESP	ieee802_11_defs.h	376;"	d
WLAN_PA_VENDOR_SPECIFIC	ieee802_11_defs.h	374;"	d
WLAN_PROT_DSE_DEENABLEMENT	ieee802_11_defs.h	383;"	d
WLAN_PROT_DSE_ENABLEMENT	ieee802_11_defs.h	382;"	d
WLAN_PROT_DSE_POWER_CONSTRAINT	ieee802_11_defs.h	387;"	d
WLAN_PROT_EXT_CSA	ieee802_11_defs.h	384;"	d
WLAN_PROT_GAS_COMEBACK_REQ	ieee802_11_defs.h	391;"	d
WLAN_PROT_GAS_COMEBACK_RESP	ieee802_11_defs.h	392;"	d
WLAN_PROT_GAS_INITIAL_REQ	ieee802_11_defs.h	389;"	d
WLAN_PROT_GAS_INITIAL_RESP	ieee802_11_defs.h	390;"	d
WLAN_PROT_MEASUREMENT_REPORT	ieee802_11_defs.h	386;"	d
WLAN_PROT_MEASUREMENT_REQ	ieee802_11_defs.h	385;"	d
WLAN_PROT_VENDOR_SPECIFIC	ieee802_11_defs.h	388;"	d
WLAN_REASON_4WAY_HANDSHAKE_TIMEOUT	ieee802_11_defs.h	251;"	d
WLAN_REASON_AKMP_NOT_VALID	ieee802_11_defs.h	256;"	d
WLAN_REASON_CIPHER_SUITE_REJECTED	ieee802_11_defs.h	260;"	d
WLAN_REASON_CLASS2_FRAME_FROM_NONAUTH_STA	ieee802_11_defs.h	241;"	d
WLAN_REASON_CLASS3_FRAME_FROM_NONASSOC_STA	ieee802_11_defs.h	242;"	d
WLAN_REASON_DEAUTH_LEAVING	ieee802_11_defs.h	238;"	d
WLAN_REASON_DISASSOC_AP_BUSY	ieee802_11_defs.h	240;"	d
WLAN_REASON_DISASSOC_DUE_TO_INACTIVITY	ieee802_11_defs.h	239;"	d
WLAN_REASON_DISASSOC_LOW_ACK	ieee802_11_defs.h	264;"	d
WLAN_REASON_DISASSOC_STA_HAS_LEFT	ieee802_11_defs.h	243;"	d
WLAN_REASON_GROUP_CIPHER_NOT_VALID	ieee802_11_defs.h	254;"	d
WLAN_REASON_GROUP_KEY_UPDATE_TIMEOUT	ieee802_11_defs.h	252;"	d
WLAN_REASON_IEEE_802_1X_AUTH_FAILED	ieee802_11_defs.h	259;"	d
WLAN_REASON_IE_IN_4WAY_DIFFERS	ieee802_11_defs.h	253;"	d
WLAN_REASON_INVALID_IE	ieee802_11_defs.h	249;"	d
WLAN_REASON_INVALID_RSN_IE_CAPAB	ieee802_11_defs.h	258;"	d
WLAN_REASON_MESH_CLOSE_RCVD	ieee802_11_defs.h	269;"	d
WLAN_REASON_MESH_CONFIG_POLICY_VIOLATION	ieee802_11_defs.h	268;"	d
WLAN_REASON_MESH_CONFIRM_TIMEOUT	ieee802_11_defs.h	271;"	d
WLAN_REASON_MESH_INCONSISTENT_PARAMS	ieee802_11_defs.h	273;"	d
WLAN_REASON_MESH_INVALID_GTK	ieee802_11_defs.h	272;"	d
WLAN_REASON_MESH_INVALID_SECURITY_CAP	ieee802_11_defs.h	274;"	d
WLAN_REASON_MESH_MAX_PEERS	ieee802_11_defs.h	267;"	d
WLAN_REASON_MESH_MAX_RETRIES	ieee802_11_defs.h	270;"	d
WLAN_REASON_MESH_PEERING_CANCELLED	ieee802_11_defs.h	266;"	d
WLAN_REASON_MICHAEL_MIC_FAILURE	ieee802_11_defs.h	250;"	d
WLAN_REASON_PAIRWISE_CIPHER_NOT_VALID	ieee802_11_defs.h	255;"	d
WLAN_REASON_PREV_AUTH_NOT_VALID	ieee802_11_defs.h	237;"	d
WLAN_REASON_PWR_CAPABILITY_NOT_VALID	ieee802_11_defs.h	246;"	d
WLAN_REASON_STA_REQ_ASSOC_WITHOUT_AUTH	ieee802_11_defs.h	244;"	d
WLAN_REASON_SUPPORTED_CHANNEL_NOT_VALID	ieee802_11_defs.h	247;"	d
WLAN_REASON_TDLS_TEARDOWN_UNREACHABLE	ieee802_11_defs.h	261;"	d
WLAN_REASON_TDLS_TEARDOWN_UNSPECIFIED	ieee802_11_defs.h	262;"	d
WLAN_REASON_UNSPECIFIED	ieee802_11_defs.h	236;"	d
WLAN_REASON_UNSUPPORTED_RSN_IE_VERSION	ieee802_11_defs.h	257;"	d
WLAN_RRM_CAPS_FTM_RANGE_REPORT	ieee802_11_defs.h	428;"	d
WLAN_RRM_CAPS_LCI_MEASUREMENT	ieee802_11_defs.h	426;"	d
WLAN_RRM_CAPS_LINK_MEASUREMENT	ieee802_11_defs.h	423;"	d
WLAN_RRM_CAPS_NEIGHBOR_REPORT	ieee802_11_defs.h	424;"	d
WLAN_RRM_LINK_MEASUREMENT_REPORT	ieee802_11_defs.h	417;"	d
WLAN_RRM_LINK_MEASUREMENT_REQUEST	ieee802_11_defs.h	416;"	d
WLAN_RRM_NEIGHBOR_REPORT_REQUEST	ieee802_11_defs.h	418;"	d
WLAN_RRM_NEIGHBOR_REPORT_RESPONSE	ieee802_11_defs.h	419;"	d
WLAN_RRM_RADIO_MEASUREMENT_REPORT	ieee802_11_defs.h	415;"	d
WLAN_RRM_RADIO_MEASUREMENT_REQUEST	ieee802_11_defs.h	414;"	d
WLAN_RRM_RANGE_REQ_MAX_MIN_AP	ieee802_11_defs.h	434;"	d
WLAN_SA_QUERY_REQUEST	ieee802_11_defs.h	395;"	d
WLAN_SA_QUERY_RESPONSE	ieee802_11_defs.h	396;"	d
WLAN_SA_QUERY_TR_ID_LEN	ieee802_11_defs.h	398;"	d
WLAN_STATUS_ADV_SRV_UNREACHABLE	ieee802_11_defs.h	222;"	d
WLAN_STATUS_AKMP_NOT_VALID	ieee802_11_defs.h	202;"	d
WLAN_STATUS_ANTI_CLOGGING_TOKEN_REQ	ieee802_11_defs.h	226;"	d
WLAN_STATUS_AP_UNABLE_TO_HANDLE_NEW_STA	ieee802_11_defs.h	176;"	d
WLAN_STATUS_ASSOC_DENIED_LISTEN_INT_TOO_LARGE	ieee802_11_defs.h	210;"	d
WLAN_STATUS_ASSOC_DENIED_NOAGILITY	ieee802_11_defs.h	181;"	d
WLAN_STATUS_ASSOC_DENIED_NOPBCC	ieee802_11_defs.h	180;"	d
WLAN_STATUS_ASSOC_DENIED_NOSHORT	ieee802_11_defs.h	179;"	d
WLAN_STATUS_ASSOC_DENIED_NO_DSSS_OFDM	ieee802_11_defs.h	188;"	d
WLAN_STATUS_ASSOC_DENIED_NO_HT	ieee802_11_defs.h	189;"	d
WLAN_STATUS_ASSOC_DENIED_NO_PCO	ieee802_11_defs.h	191;"	d
WLAN_STATUS_ASSOC_DENIED_NO_SHORT_SLOT_TIME	ieee802_11_defs.h	187;"	d
WLAN_STATUS_ASSOC_DENIED_NO_VHT	ieee802_11_defs.h	233;"	d
WLAN_STATUS_ASSOC_DENIED_RATES	ieee802_11_defs.h	177;"	d
WLAN_STATUS_ASSOC_DENIED_UNSPEC	ieee802_11_defs.h	171;"	d
WLAN_STATUS_ASSOC_REJECTED_TEMPORARILY	ieee802_11_defs.h	193;"	d
WLAN_STATUS_AUTH_TIMEOUT	ieee802_11_defs.h	175;"	d
WLAN_STATUS_CAPS_UNSUPPORTED	ieee802_11_defs.h	169;"	d
WLAN_STATUS_CHALLENGE_FAIL	ieee802_11_defs.h	174;"	d
WLAN_STATUS_CIPHER_REJECTED_PER_POLICY	ieee802_11_defs.h	205;"	d
WLAN_STATUS_DENIED_WITH_SUGGESTED_BAND_AND_CHANNEL	ieee802_11_defs.h	232;"	d
WLAN_STATUS_DEST_STA_NOT_PRESENT	ieee802_11_defs.h	208;"	d
WLAN_STATUS_DEST_STA_NOT_QOS_STA	ieee802_11_defs.h	209;"	d
WLAN_STATUS_DIRECT_LINK_NOT_ALLOWED	ieee802_11_defs.h	207;"	d
WLAN_STATUS_FINITE_CYCLIC_GROUP_NOT_SUPPORTED	ieee802_11_defs.h	227;"	d
WLAN_STATUS_GAS_ADV_PROTO_NOT_SUPPORTED	ieee802_11_defs.h	216;"	d
WLAN_STATUS_GAS_RESP_LARGER_THAN_LIMIT	ieee802_11_defs.h	220;"	d
WLAN_STATUS_GAS_RESP_NOT_RECEIVED	ieee802_11_defs.h	218;"	d
WLAN_STATUS_GROUP_CIPHER_NOT_VALID	ieee802_11_defs.h	200;"	d
WLAN_STATUS_INVALID_FTIE	ieee802_11_defs.h	215;"	d
WLAN_STATUS_INVALID_FT_ACTION_FRAME_COUNT	ieee802_11_defs.h	212;"	d
WLAN_STATUS_INVALID_IE	ieee802_11_defs.h	199;"	d
WLAN_STATUS_INVALID_MDIE	ieee802_11_defs.h	214;"	d
WLAN_STATUS_INVALID_PARAMETERS	ieee802_11_defs.h	197;"	d
WLAN_STATUS_INVALID_PMKID	ieee802_11_defs.h	213;"	d
WLAN_STATUS_INVALID_RSNIE	ieee802_11_defs.h	225;"	d
WLAN_STATUS_INVALID_RSN_IE_CAPAB	ieee802_11_defs.h	204;"	d
WLAN_STATUS_NOT_IN_SAME_BSS	ieee802_11_defs.h	168;"	d
WLAN_STATUS_NOT_SUPPORTED_AUTH_ALG	ieee802_11_defs.h	172;"	d
WLAN_STATUS_NO_OUTSTANDING_GAS_REQ	ieee802_11_defs.h	217;"	d
WLAN_STATUS_PAIRWISE_CIPHER_NOT_VALID	ieee802_11_defs.h	201;"	d
WLAN_STATUS_PENDING_ADMITTING_FST_SESSION	ieee802_11_defs.h	230;"	d
WLAN_STATUS_PWR_CAPABILITY_NOT_VALID	ieee802_11_defs.h	184;"	d
WLAN_STATUS_QUERY_RESP_OUTSTANDING	ieee802_11_defs.h	231;"	d
WLAN_STATUS_R0KH_UNREACHABLE	ieee802_11_defs.h	190;"	d
WLAN_STATUS_REASSOC_NO_ASSOC	ieee802_11_defs.h	170;"	d
WLAN_STATUS_REJECTED_WITH_SUGGESTED_BSS_TRANSITION	ieee802_11_defs.h	229;"	d
WLAN_STATUS_REQUEST_DECLINED	ieee802_11_defs.h	196;"	d
WLAN_STATUS_REQ_REFUSED_HOME	ieee802_11_defs.h	221;"	d
WLAN_STATUS_REQ_REFUSED_SSPN	ieee802_11_defs.h	223;"	d
WLAN_STATUS_REQ_REFUSED_UNAUTH_ACCESS	ieee802_11_defs.h	224;"	d
WLAN_STATUS_ROBUST_MGMT_FRAME_POLICY_VIOLATION	ieee802_11_defs.h	194;"	d
WLAN_STATUS_SECURITY_DISABLED	ieee802_11_defs.h	166;"	d
WLAN_STATUS_SPEC_MGMT_REQUIRED	ieee802_11_defs.h	183;"	d
WLAN_STATUS_STA_TIMED_OUT_WAITING_FOR_GAS_RESP	ieee802_11_defs.h	219;"	d
WLAN_STATUS_SUCCESS	ieee802_11_defs.h	162;"	d
WLAN_STATUS_SUPPORTED_CHANNEL_NOT_VALID	ieee802_11_defs.h	185;"	d
WLAN_STATUS_TDLS_WAKEUP_ALTERNATE	ieee802_11_defs.h	164;"	d
WLAN_STATUS_TDLS_WAKEUP_REJECT	ieee802_11_defs.h	165;"	d
WLAN_STATUS_TRANSMISSION_FAILURE	ieee802_11_defs.h	228;"	d
WLAN_STATUS_TS_NOT_CREATED	ieee802_11_defs.h	206;"	d
WLAN_STATUS_UNACCEPTABLE_LIFETIME	ieee802_11_defs.h	167;"	d
WLAN_STATUS_UNKNOWN_AUTH_TRANSACTION	ieee802_11_defs.h	173;"	d
WLAN_STATUS_UNSPECIFIED_FAILURE	ieee802_11_defs.h	163;"	d
WLAN_STATUS_UNSPECIFIED_QOS_FAILURE	ieee802_11_defs.h	195;"	d
WLAN_STATUS_UNSUPPORTED_RSN_IE_VERSION	ieee802_11_defs.h	203;"	d
WLAN_TDLS_CHANNEL_SWITCH_REQUEST	ieee802_11_defs.h	406;"	d
WLAN_TDLS_CHANNEL_SWITCH_RESPONSE	ieee802_11_defs.h	407;"	d
WLAN_TDLS_DISCOVERY_REQUEST	ieee802_11_defs.h	411;"	d
WLAN_TDLS_DISCOVERY_RESPONSE	ieee802_11_defs.h	379;"	d
WLAN_TDLS_PEER_PSM_REQUEST	ieee802_11_defs.h	408;"	d
WLAN_TDLS_PEER_PSM_RESPONSE	ieee802_11_defs.h	409;"	d
WLAN_TDLS_PEER_TRAFFIC_INDICATION	ieee802_11_defs.h	405;"	d
WLAN_TDLS_PEER_TRAFFIC_RESPONSE	ieee802_11_defs.h	410;"	d
WLAN_TDLS_SETUP_CONFIRM	ieee802_11_defs.h	403;"	d
WLAN_TDLS_SETUP_REQUEST	ieee802_11_defs.h	401;"	d
WLAN_TDLS_SETUP_RESPONSE	ieee802_11_defs.h	402;"	d
WLAN_TDLS_TEARDOWN	ieee802_11_defs.h	404;"	d
WLAN_TIMEOUT_ASSOC_COMEBACK	ieee802_11_defs.h	439;"	d
WLAN_TIMEOUT_KEY_LIFETIME	ieee802_11_defs.h	438;"	d
WLAN_TIMEOUT_REASSOC_DEADLINE	ieee802_11_defs.h	437;"	d
WME_AC_BE	include/ieee80211.h	/^	WME_AC_BE	= 0,		\/* best effort *\/$/;"	e	enum:ieee80211_wme_ac
WME_AC_BK	include/ieee80211.h	/^	WME_AC_BK	= 1,		\/* background *\/$/;"	e	enum:ieee80211_wme_ac
WME_AC_TO_TID	include/ieee80211.h	275;"	d
WME_AC_VI	include/ieee80211.h	/^	WME_AC_VI	= 2,		\/* video *\/$/;"	e	enum:ieee80211_wme_ac
WME_AC_VO	include/ieee80211.h	/^	WME_AC_VO	= 3,		\/* voice *\/$/;"	e	enum:ieee80211_wme_ac
WME_INFO_OUI_SUBTYPE	include/ieee80211.h	576;"	d
WME_NUM_AC	include/ieee80211.h	262;"	d
WME_OUI	include/ieee80211.h	574;"	d
WME_OUI_TYPE	include/ieee80211.h	575;"	d
WME_PARAM_ACI	include/ieee80211.h	264;"	d
WME_PARAM_ACI_S	include/ieee80211.h	265;"	d
WME_PARAM_ACM	include/ieee80211.h	266;"	d
WME_PARAM_ACM_S	include/ieee80211.h	267;"	d
WME_PARAM_AIFSN	include/ieee80211.h	268;"	d
WME_PARAM_AIFSN_S	include/ieee80211.h	269;"	d
WME_PARAM_LOGCWMAX	include/ieee80211.h	272;"	d
WME_PARAM_LOGCWMAX_S	include/ieee80211.h	273;"	d
WME_PARAM_LOGCWMIN	include/ieee80211.h	270;"	d
WME_PARAM_LOGCWMIN_S	include/ieee80211.h	271;"	d
WME_PARAM_OUI_SUBTYPE	include/ieee80211.h	577;"	d
WME_QOSINFO_COUNT	include/ieee80211.h	298;"	d
WME_VERSION	include/ieee80211.h	578;"	d
WMM_ACTION_CODE_ADDTS_REQ	ieee802_11_defs.h	1019;"	d
WMM_ACTION_CODE_ADDTS_RESP	ieee802_11_defs.h	1020;"	d
WMM_ACTION_CODE_DELTS	ieee802_11_defs.h	1021;"	d
WMM_AC_ACI_MASK	ieee802_11_defs.h	1059;"	d
WMM_AC_ACI_SHIFT	ieee802_11_defs.h	1060;"	d
WMM_AC_ACM	ieee802_11_defs.h	1058;"	d
WMM_AC_AIFNS_SHIFT	ieee802_11_defs.h	1057;"	d
WMM_AC_AIFSN_MASK	ieee802_11_defs.h	1056;"	d
WMM_AC_BE	ieee802_11_defs.h	/^	WMM_AC_BE = 0 \/* Best Effort *\/,$/;"	e	enum:wmm_ac
WMM_AC_BK	ieee802_11_defs.h	/^	WMM_AC_BK = 1 \/* Background *\/,$/;"	e	enum:wmm_ac
WMM_AC_ECWMAX_MASK	ieee802_11_defs.h	1064;"	d
WMM_AC_ECWMAX_SHIFT	ieee802_11_defs.h	1065;"	d
WMM_AC_ECWMIN_MASK	ieee802_11_defs.h	1062;"	d
WMM_AC_ECWMIN_SHIFT	ieee802_11_defs.h	1063;"	d
WMM_AC_NUM	ieee802_11_defs.h	/^	WMM_AC_NUM = 4$/;"	e	enum:wmm_ac
WMM_AC_VI	ieee802_11_defs.h	/^	WMM_AC_VI = 2 \/* Video *\/,$/;"	e	enum:wmm_ac
WMM_AC_VO	ieee802_11_defs.h	/^	WMM_AC_VO = 3 \/* Voice *\/,$/;"	e	enum:wmm_ac
WMM_ADDTS_STATUS_ADMISSION_ACCEPTED	ieee802_11_defs.h	1023;"	d
WMM_ADDTS_STATUS_INVALID_PARAMETERS	ieee802_11_defs.h	1024;"	d
WMM_ADDTS_STATUS_REFUSED	ieee802_11_defs.h	1026;"	d
WMM_IE_VENDOR_TYPE	ieee802_11_defs.h	1002;"	d
WMM_OUI_SUBTYPE_INFORMATION_ELEMENT	ieee802_11_defs.h	1014;"	d
WMM_OUI_SUBTYPE_PARAMETER_ELEMENT	ieee802_11_defs.h	1015;"	d
WMM_OUI_SUBTYPE_TSPEC_ELEMENT	ieee802_11_defs.h	1016;"	d
WMM_OUI_TYPE	ieee802_11_defs.h	1013;"	d
WMM_QOSINFO_AP_UAPSD	ieee802_11_defs.h	1050;"	d
WMM_QOSINFO_STA_AC_MASK	ieee802_11_defs.h	1052;"	d
WMM_QOSINFO_STA_SP_MASK	ieee802_11_defs.h	1053;"	d
WMM_QOSINFO_STA_SP_SHIFT	ieee802_11_defs.h	1054;"	d
WMM_TSPEC_DIRECTION_BI_DIRECTIONAL	ieee802_11_defs.h	1033;"	d
WMM_TSPEC_DIRECTION_DOWNLINK	ieee802_11_defs.h	1031;"	d
WMM_TSPEC_DIRECTION_UPLINK	ieee802_11_defs.h	1030;"	d
WMM_VERSION	ieee802_11_defs.h	1017;"	d
WNM_BSS_TM_ACCEPT	ieee802_11_defs.h	/^	WNM_BSS_TM_ACCEPT = 0,$/;"	e	enum:bss_trans_mgmt_status_code
WNM_BSS_TM_REJECT_DELAY_REQUEST	ieee802_11_defs.h	/^	WNM_BSS_TM_REJECT_DELAY_REQUEST = 5,$/;"	e	enum:bss_trans_mgmt_status_code
WNM_BSS_TM_REJECT_INSUFFICIENT_BEACON	ieee802_11_defs.h	/^	WNM_BSS_TM_REJECT_INSUFFICIENT_BEACON = 2,$/;"	e	enum:bss_trans_mgmt_status_code
WNM_BSS_TM_REJECT_INSUFFICIENT_CAPABITY	ieee802_11_defs.h	/^	WNM_BSS_TM_REJECT_INSUFFICIENT_CAPABITY = 3,$/;"	e	enum:bss_trans_mgmt_status_code
WNM_BSS_TM_REJECT_LEAVING_ESS	ieee802_11_defs.h	/^	WNM_BSS_TM_REJECT_LEAVING_ESS = 8$/;"	e	enum:bss_trans_mgmt_status_code
WNM_BSS_TM_REJECT_NO_SUITABLE_CANDIDATES	ieee802_11_defs.h	/^	WNM_BSS_TM_REJECT_NO_SUITABLE_CANDIDATES = 7,$/;"	e	enum:bss_trans_mgmt_status_code
WNM_BSS_TM_REJECT_STA_CANDIDATE_LIST_PROVIDED	ieee802_11_defs.h	/^	WNM_BSS_TM_REJECT_STA_CANDIDATE_LIST_PROVIDED = 6,$/;"	e	enum:bss_trans_mgmt_status_code
WNM_BSS_TM_REJECT_UNDESIRED	ieee802_11_defs.h	/^	WNM_BSS_TM_REJECT_UNDESIRED = 4,$/;"	e	enum:bss_trans_mgmt_status_code
WNM_BSS_TM_REJECT_UNSPECIFIED	ieee802_11_defs.h	/^	WNM_BSS_TM_REJECT_UNSPECIFIED = 1,$/;"	e	enum:bss_trans_mgmt_status_code
WNM_BSS_TM_REQ_ABRIDGED	ieee802_11_defs.h	1492;"	d
WNM_BSS_TM_REQ_BSS_TERMINATION_INCLUDED	ieee802_11_defs.h	1494;"	d
WNM_BSS_TM_REQ_DISASSOC_IMMINENT	ieee802_11_defs.h	1493;"	d
WNM_BSS_TM_REQ_ESS_DISASSOC_IMMINENT	ieee802_11_defs.h	1495;"	d
WNM_BSS_TM_REQ_PREF_CAND_LIST_INCLUDED	ieee802_11_defs.h	1491;"	d
WNM_BSS_TRANS_MGMT_QUERY	ieee802_11_defs.h	/^	WNM_BSS_TRANS_MGMT_QUERY = 6,$/;"	e	enum:wnm_action
WNM_BSS_TRANS_MGMT_REQ	ieee802_11_defs.h	/^	WNM_BSS_TRANS_MGMT_REQ = 7,$/;"	e	enum:wnm_action
WNM_BSS_TRANS_MGMT_RESP	ieee802_11_defs.h	/^	WNM_BSS_TRANS_MGMT_RESP = 8,$/;"	e	enum:wnm_action
WNM_CHANNEL_USAGE_REQ	ieee802_11_defs.h	/^	WNM_CHANNEL_USAGE_REQ = 21,$/;"	e	enum:wnm_action
WNM_CHANNEL_USAGE_RESP	ieee802_11_defs.h	/^	WNM_CHANNEL_USAGE_RESP = 22,$/;"	e	enum:wnm_action
WNM_COLLOCATED_INTERFERENCE_REPORT	ieee802_11_defs.h	/^	WNM_COLLOCATED_INTERFERENCE_REPORT = 12,$/;"	e	enum:wnm_action
WNM_COLLOCATED_INTERFERENCE_REQ	ieee802_11_defs.h	/^	WNM_COLLOCATED_INTERFERENCE_REQ = 11,$/;"	e	enum:wnm_action
WNM_DIAGNOSTIC_REPORT	ieee802_11_defs.h	/^	WNM_DIAGNOSTIC_REPORT = 3,$/;"	e	enum:wnm_action
WNM_DIAGNOSTIC_REQ	ieee802_11_defs.h	/^	WNM_DIAGNOSTIC_REQ = 2,$/;"	e	enum:wnm_action
WNM_DMS_REQ	ieee802_11_defs.h	/^	WNM_DMS_REQ = 23,$/;"	e	enum:wnm_action
WNM_DMS_RESP	ieee802_11_defs.h	/^	WNM_DMS_RESP = 24,$/;"	e	enum:wnm_action
WNM_EVENT_REPORT	ieee802_11_defs.h	/^	WNM_EVENT_REPORT = 1,$/;"	e	enum:wnm_action
WNM_EVENT_REQ	ieee802_11_defs.h	/^	WNM_EVENT_REQ = 0,$/;"	e	enum:wnm_action
WNM_FMS_REQ	ieee802_11_defs.h	/^	WNM_FMS_REQ = 9,$/;"	e	enum:wnm_action
WNM_FMS_RESP	ieee802_11_defs.h	/^	WNM_FMS_RESP = 10,$/;"	e	enum:wnm_action
WNM_LOCATION_CFG_REQ	ieee802_11_defs.h	/^	WNM_LOCATION_CFG_REQ = 4,$/;"	e	enum:wnm_action
WNM_LOCATION_CFG_RESP	ieee802_11_defs.h	/^	WNM_LOCATION_CFG_RESP = 5,$/;"	e	enum:wnm_action
WNM_NEIGHBOR_BEARING	ieee802_11_defs.h	1518;"	d
WNM_NEIGHBOR_BSS_TERMINATION_DURATION	ieee802_11_defs.h	1517;"	d
WNM_NEIGHBOR_BSS_TRANSITION_CANDIDATE	ieee802_11_defs.h	1516;"	d
WNM_NEIGHBOR_CONDENSED_COUNTRY_STRING	ieee802_11_defs.h	1515;"	d
WNM_NEIGHBOR_HT_CAPAB	ieee802_11_defs.h	1521;"	d
WNM_NEIGHBOR_HT_OPER	ieee802_11_defs.h	1522;"	d
WNM_NEIGHBOR_MEASUREMENT_PILOT	ieee802_11_defs.h	1524;"	d
WNM_NEIGHBOR_MEASUREMENT_REPORT	ieee802_11_defs.h	1520;"	d
WNM_NEIGHBOR_MULTIPLE_BSSID	ieee802_11_defs.h	1526;"	d
WNM_NEIGHBOR_RRM_ENABLED_CAPABILITIES	ieee802_11_defs.h	1525;"	d
WNM_NEIGHBOR_SEC_CHAN_OFFSET	ieee802_11_defs.h	1523;"	d
WNM_NEIGHBOR_TSF	ieee802_11_defs.h	1514;"	d
WNM_NEIGHBOR_VHT_CAPAB	ieee802_11_defs.h	1527;"	d
WNM_NEIGHBOR_VHT_OPER	ieee802_11_defs.h	1528;"	d
WNM_NEIGHBOR_WIDE_BW_CHAN	ieee802_11_defs.h	1519;"	d
WNM_NOTIFICATION_REQ	ieee802_11_defs.h	/^	WNM_NOTIFICATION_REQ = 26,$/;"	e	enum:wnm_action
WNM_NOTIFICATION_RESP	ieee802_11_defs.h	/^	WNM_NOTIFICATION_RESP = 27$/;"	e	enum:wnm_action
WNM_QOS_TRAFFIC_CAPAB_UPDATE	ieee802_11_defs.h	/^	WNM_QOS_TRAFFIC_CAPAB_UPDATE = 20,$/;"	e	enum:wnm_action
WNM_SLEEP_MODE_ENTER	ieee802_11_defs.h	1568;"	d
WNM_SLEEP_MODE_EXIT	ieee802_11_defs.h	1569;"	d
WNM_SLEEP_MODE_REQ	ieee802_11_defs.h	/^	WNM_SLEEP_MODE_REQ = 16,$/;"	e	enum:wnm_action
WNM_SLEEP_MODE_RESP	ieee802_11_defs.h	/^	WNM_SLEEP_MODE_RESP = 17,$/;"	e	enum:wnm_action
WNM_SLEEP_SUBELEM_GTK	ieee802_11_defs.h	/^	WNM_SLEEP_SUBELEM_GTK = 0,$/;"	e	enum:wnm_sleep_mode_subelement_id
WNM_SLEEP_SUBELEM_IGTK	ieee802_11_defs.h	/^	WNM_SLEEP_SUBELEM_IGTK = 1$/;"	e	enum:wnm_sleep_mode_subelement_id
WNM_STATUS_DENIED_ACTION	ieee802_11_defs.h	/^	WNM_STATUS_DENIED_ACTION = 2,$/;"	e	enum:wnm_sleep_mode_response_status
WNM_STATUS_DENIED_KEY	ieee802_11_defs.h	/^	WNM_STATUS_DENIED_KEY = 4,$/;"	e	enum:wnm_sleep_mode_response_status
WNM_STATUS_DENIED_OTHER_WNM_SERVICE	ieee802_11_defs.h	/^	WNM_STATUS_DENIED_OTHER_WNM_SERVICE = 5$/;"	e	enum:wnm_sleep_mode_response_status
WNM_STATUS_DENIED_TMP	ieee802_11_defs.h	/^	WNM_STATUS_DENIED_TMP = 3,$/;"	e	enum:wnm_sleep_mode_response_status
WNM_STATUS_SLEEP_ACCEPT	ieee802_11_defs.h	/^	WNM_STATUS_SLEEP_ACCEPT = 0,$/;"	e	enum:wnm_sleep_mode_response_status
WNM_STATUS_SLEEP_EXIT_ACCEPT_GTK_UPDATE	ieee802_11_defs.h	/^	WNM_STATUS_SLEEP_EXIT_ACCEPT_GTK_UPDATE = 1,$/;"	e	enum:wnm_sleep_mode_response_status
WNM_TFS_NOTIFY	ieee802_11_defs.h	/^	WNM_TFS_NOTIFY = 15,$/;"	e	enum:wnm_action
WNM_TFS_REQ	ieee802_11_defs.h	/^	WNM_TFS_REQ = 13,$/;"	e	enum:wnm_action
WNM_TFS_RESP	ieee802_11_defs.h	/^	WNM_TFS_RESP = 14,$/;"	e	enum:wnm_action
WNM_TIMING_MEASUREMENT_REQ	ieee802_11_defs.h	/^	WNM_TIMING_MEASUREMENT_REQ = 25,$/;"	e	enum:wnm_action
WNM_TIM_BROADCAST_REQ	ieee802_11_defs.h	/^	WNM_TIM_BROADCAST_REQ = 18,$/;"	e	enum:wnm_action
WNM_TIM_BROADCAST_RESP	ieee802_11_defs.h	/^	WNM_TIM_BROADCAST_RESP = 19,$/;"	e	enum:wnm_action
WPA	ivstools.c	50;"	d	file:
WPA1_TAG	airbase-ng.c	137;"	d	file:
WPA2_TAG	airbase-ng.c	141;"	d	file:
WPA_ASE_8021X_PSK	include/ieee80211.h	556;"	d
WPA_ASE_8021X_UNSPEC	include/ieee80211.h	555;"	d
WPA_ASE_NONE	include/ieee80211.h	554;"	d
WPA_CSE_CCMP	include/ieee80211.h	551;"	d
WPA_CSE_NULL	include/ieee80211.h	548;"	d
WPA_CSE_TKIP	include/ieee80211.h	550;"	d
WPA_CSE_WEP104	include/ieee80211.h	552;"	d
WPA_CSE_WEP40	include/ieee80211.h	549;"	d
WPA_IE_VENDOR_TYPE	ieee802_11_defs.h	1001;"	d
WPA_OUI	include/ieee80211.h	544;"	d
WPA_OUI_TYPE	include/ieee80211.h	545;"	d
WPA_ST_info	crypto.h	/^struct WPA_ST_info$/;"	s
WPA_VERSION	include/ieee80211.h	546;"	d
WPA_data	aircrack-ng.h	/^struct WPA_data {$/;"	s
WPA_hdsk	include/eapol.h	/^struct WPA_hdsk$/;"	s
WPS_IE_VENDOR_TYPE	ieee802_11_defs.h	1003;"	d
WPS_INFO	airnodes.c	/^typedef struct WPS_INFO {$/;"	s	file:
WPS_INFO	airnodes.c	/^} WPS_INFO;$/;"	t	typeref:struct:WPS_INFO	file:
WPS_info	airodump-ng.h	/^struct WPS_info {$/;"	s
WSTATE_ASSOC	besside-ng.c	/^	WSTATE_ASSOC,$/;"	e	enum:__anon20	file:
WSTATE_AUTH	besside-ng.c	/^	WSTATE_AUTH,$/;"	e	enum:__anon20	file:
WSTATE_NONE	besside-ng.c	/^	WSTATE_NONE = 0,$/;"	e	enum:__anon20	file:
XML	Makefile	/^XML     = ezxml$/;"	m
XOR	crypto.c	/^static inline void XOR( unsigned char *dst, unsigned char *src, int len )$/;"	f	file:
ZERO	aircrack-ng.c	/^static unsigned char ZERO[32] =$/;"	v	file:
ZERO	airodump-ng.h	/^static unsigned char ZERO[32] =$/;"	v
ZERO	airtun-ng.c	/^unsigned char ZERO[32];$/;"	v
ZERO	besside-ng.c	/^static unsigned char ZERO[32] =$/;"	v	file:
ZERO	crypto.c	/^static unsigned char ZERO[32] =$/;"	v	file:
ZERO	ivstools.c	/^static unsigned char ZERO[32] =$/;"	v	file:
ZERO	tkiptun-ng.c	/^static unsigned char ZERO[32] =$/;"	v	file:
ZERO	wpaclean.c	/^static unsigned char ZERO[32] =$/;"	v	file:
Zd	misc.h	70;"	d
Zd	misc.h	76;"	d
Zu	misc.h	69;"	d
Zu	misc.h	75;"	d
_AIRCAP_DATA	aircapture.h	/^typedef struct _AIRCAP_DATA$/;"	s
_AIRCAP_G	aircapture.h	/^typedef struct _AIRCAP_G$/;"	s
_AIRCAP_SAMPLE_DATA	aircapture.h	/^typedef struct _AIRCAP_SAMPLE_DATA$/;"	s
_AIRCRACK_NG_BYTEORDER_H_	osdep/byteorder.h	36;"	d
_AIRCRACK_NG_H	aircrack-ng.h	36;"	d
_AIRCRACK_NG_PCAP_H_	pcap.h	34;"	d
_AIRCRACK_PTW_H_	aircrack-ptw-lib.h	34;"	d
_AIRODUMP_NG_H_	airodump-ng.h	33;"	d
_AIRSHOOT_G	airshooter.h	/^typedef struct _AIRSHOOT_G$/;"	s
_AIRSHOOT_RESULT	airshooter.h	/^typedef struct _AIRSHOOT_RESULT$/;"	s
_AIRUNDEFENSE_H_	airdecloak-ng.h	33;"	d
_ALIGNED_H_	aligned.h	53;"	d
_ARCH_H	arch.h	58;"	d
_BETA	version.h	36;"	d
_BSD_SOURCE	osdep/radiotap/parse.c	2;"	d	file:
_BSD_SOURCE	osdep/radiotap/platform.h	4;"	d
_COMMON_H_	common.h	31;"	d
_CRCTABLE_H	crctable.h	2;"	d
_CRCTABLE_OSDEP_H	osdep/crctable_osdep.h	2;"	d
_CRYPTO_H	crypto.h	36;"	d
_EVENT_SYS	aircapture.h	/^typedef struct _EVENT_SYS$/;"	s
_EZXML_H	ezxml/ezxml.h	26;"	d
_GCRYPT_OPENSSL_WRAPPER_H	gcrypt-openssl-wrapper.h	2;"	d
_GNU_SOURCE	aircrack-ng.c	40;"	d	file:
_GNU_SOURCE	cpuid.c	20;"	d	file:
_IP_FMT_	common.h	95;"	d
_IP_FMT_FILL_	common.h	103;"	d
_IP_FMT_FILL_	common.h	97;"	d
_JCOMMON_H	jcommon.h	56;"	d
_KERNEL	osdep/openbsd.c	38;"	d	file:
_KERNEL	osdep/openbsd.c	40;"	d	file:
_LOG_CTX	log.h	/^typedef struct _LOG_CTX$/;"	s
_MAC_FMT_	common.h	92;"	d
_MAC_FMT_FILL_	common.h	93;"	d
_MAJ	version.h	33;"	d
_MD5_H	md5.h	56;"	d
_MD5_STD_H	MD5_std.h	58;"	d
_MEMORY_H	memory.h	56;"	d
_MIN	version.h	34;"	d
_MISC_H	misc.h	58;"	d
_NET80211_IEEE80211_H_	include/ieee80211.h	36;"	d
_NET_EAPOL_H_	include/eapol.h	2;"	d
_NET_ETHERNET_H_	include/ethernet.h	9;"	d
_NET_IF_ARP_H_	include/if_arp.h	34;"	d
_NET_IF_LLC_H_	include/if_llc.h	35;"	d
_OSDEP_COMMON_H_	osdep/common.h	33;"	d
_PPI_FIELD_802_11_COMMON	osdep/airpcap.c	/^typedef struct _PPI_FIELD_802_11_COMMON$/;"	s	file:
_PPI_FIELD_HEADER	osdep/airpcap.c	/^typedef struct _PPI_FIELD_HEADER$/;"	s	file:
_PPI_PACKET_HEADER	osdep/airpcap.c	/^typedef struct _PPI_PACKET_HEADER$/;"	s	file:
_RC	version.h	37;"	d
_SHA1_GIT	sha1-git.c	318;"	d	file:
_SSE_PSEUDO_H	pseudo_intrinsics.h	67;"	d
_SUB_MIN	version.h	35;"	d
_S_	crypto.c	1101;"	d	file:
_UNIQUEIV_H	uniqueiv.h	36;"	d
_WIFI_CHANNEL_DEF_	osdep/channel.h	3;"	d
_WITH_DPRINTF	airodump-ng.c	52;"	d	file:
_WPAPSK_H	wpapsk.h	51;"	d
_X86	cpuid.c	28;"	d	file:
__AIRCRACK_NG_OSDEP_NETWORK_H__	osdep/network.h	9;"	d
__AIRCRACK_NG_OSDEP_PACKED_H__	osdep/packed.h	36;"	d
__AIRCRACK_NG_OSEDEP_H__	osdep/osdep.h	35;"	d
__BIG_ENDIAN	osdep/byteorder.h	172;"	d
__BIG_ENDIAN	osdep/radiotap/platform.h	27;"	d
__BYTE_ORDER	osdep/byteorder.h	174;"	d
__BYTE_ORDER	osdep/radiotap/platform.h	29;"	d
__EASSIDE_COMMON_H__	easside.h	7;"	d
__FAVOR_BSD	easside-ng.c	42;"	d	file:
__FAVOR_BSD	easside-ng.c	44;"	d	file:
__JOHN_SWAP_H__	johnswap.h	44;"	d
__JTR_SSE_INTRINSICS_H__	simd-intrinsics.h	49;"	d
__JTR_SSE_INTRINSICS_H__	sse-intrinsics.h	49;"	d
__LITTLE_ENDIAN	osdep/byteorder.h	171;"	d
__LITTLE_ENDIAN	osdep/radiotap/platform.h	28;"	d
__MEM_DBG_H_	memdbg.h	50;"	d
__PDP_ENDIAN	osdep/byteorder.h	173;"	d
__RADIOTAP_ITER_H	osdep/radiotap/radiotap_iter.h	2;"	d
__SSE_INTRINS_LOAD_FLAGS__	simd-intrinsics-load-flags.h	51;"	d
__SSE_INTRINS_LOAD_FLAGS__	sse-intrinsics-load-flags.h	53;"	d
___my_swab16	osdep/byteorder.h	38;"	d
___my_swab32	osdep/byteorder.h	42;"	d
___my_swab64	osdep/byteorder.h	48;"	d
__aligned	osdep/packed.h	43;"	d
__be16_to_cpu	osdep/byteorder.h	110;"	d
__be16_to_cpu	osdep/byteorder.h	138;"	d
__be16_to_cpu	osdep/byteorder.h	158;"	d
__be16_to_cpu	osdep/byteorder.h	197;"	d
__be16_to_cpu	osdep/byteorder.h	289;"	d
__be16_to_cpu	osdep/byteorder.h	346;"	d
__be16_to_cpu	osdep/byteorder.h	86;"	d
__be32_to_cpu	osdep/byteorder.h	109;"	d
__be32_to_cpu	osdep/byteorder.h	137;"	d
__be32_to_cpu	osdep/byteorder.h	157;"	d
__be32_to_cpu	osdep/byteorder.h	196;"	d
__be32_to_cpu	osdep/byteorder.h	288;"	d
__be32_to_cpu	osdep/byteorder.h	345;"	d
__be32_to_cpu	osdep/byteorder.h	85;"	d
__be64_to_cpu	osdep/byteorder.h	108;"	d
__be64_to_cpu	osdep/byteorder.h	136;"	d
__be64_to_cpu	osdep/byteorder.h	156;"	d
__be64_to_cpu	osdep/byteorder.h	195;"	d
__be64_to_cpu	osdep/byteorder.h	287;"	d
__be64_to_cpu	osdep/byteorder.h	344;"	d
__be64_to_cpu	osdep/byteorder.h	84;"	d
__cpu_to_be16	osdep/byteorder.h	113;"	d
__cpu_to_be16	osdep/byteorder.h	144;"	d
__cpu_to_be16	osdep/byteorder.h	164;"	d
__cpu_to_be16	osdep/byteorder.h	200;"	d
__cpu_to_be16	osdep/byteorder.h	292;"	d
__cpu_to_be16	osdep/byteorder.h	349;"	d
__cpu_to_be16	osdep/byteorder.h	89;"	d
__cpu_to_be32	osdep/byteorder.h	112;"	d
__cpu_to_be32	osdep/byteorder.h	143;"	d
__cpu_to_be32	osdep/byteorder.h	163;"	d
__cpu_to_be32	osdep/byteorder.h	199;"	d
__cpu_to_be32	osdep/byteorder.h	221;"	d
__cpu_to_be32	osdep/byteorder.h	291;"	d
__cpu_to_be32	osdep/byteorder.h	348;"	d
__cpu_to_be32	osdep/byteorder.h	88;"	d
__cpu_to_be64	osdep/byteorder.h	111;"	d
__cpu_to_be64	osdep/byteorder.h	142;"	d
__cpu_to_be64	osdep/byteorder.h	162;"	d
__cpu_to_be64	osdep/byteorder.h	198;"	d
__cpu_to_be64	osdep/byteorder.h	220;"	d
__cpu_to_be64	osdep/byteorder.h	290;"	d
__cpu_to_be64	osdep/byteorder.h	347;"	d
__cpu_to_be64	osdep/byteorder.h	87;"	d
__cpu_to_le16	osdep/byteorder.h	119;"	d
__cpu_to_le16	osdep/byteorder.h	147;"	d
__cpu_to_le16	osdep/byteorder.h	167;"	d
__cpu_to_le16	osdep/byteorder.h	206;"	d
__cpu_to_le16	osdep/byteorder.h	298;"	d
__cpu_to_le16	osdep/byteorder.h	355;"	d
__cpu_to_le16	osdep/byteorder.h	95;"	d
__cpu_to_le32	osdep/byteorder.h	118;"	d
__cpu_to_le32	osdep/byteorder.h	146;"	d
__cpu_to_le32	osdep/byteorder.h	166;"	d
__cpu_to_le32	osdep/byteorder.h	205;"	d
__cpu_to_le32	osdep/byteorder.h	297;"	d
__cpu_to_le32	osdep/byteorder.h	354;"	d
__cpu_to_le32	osdep/byteorder.h	94;"	d
__cpu_to_le64	osdep/byteorder.h	117;"	d
__cpu_to_le64	osdep/byteorder.h	145;"	d
__cpu_to_le64	osdep/byteorder.h	165;"	d
__cpu_to_le64	osdep/byteorder.h	204;"	d
__cpu_to_le64	osdep/byteorder.h	296;"	d
__cpu_to_le64	osdep/byteorder.h	353;"	d
__cpu_to_le64	osdep/byteorder.h	93;"	d
__genl_ctrl_alloc_cache	osdep/linux.c	/^static inline int __genl_ctrl_alloc_cache(struct nl_handle *h, struct nl_cache **cache)$/;"	f	file:
__has_feature	misc.h	191;"	d
__le16_to_cpu	osdep/byteorder.h	116;"	d
__le16_to_cpu	osdep/byteorder.h	141;"	d
__le16_to_cpu	osdep/byteorder.h	161;"	d
__le16_to_cpu	osdep/byteorder.h	203;"	d
__le16_to_cpu	osdep/byteorder.h	295;"	d
__le16_to_cpu	osdep/byteorder.h	352;"	d
__le16_to_cpu	osdep/byteorder.h	92;"	d
__le32_to_cpu	osdep/byteorder.h	115;"	d
__le32_to_cpu	osdep/byteorder.h	140;"	d
__le32_to_cpu	osdep/byteorder.h	160;"	d
__le32_to_cpu	osdep/byteorder.h	202;"	d
__le32_to_cpu	osdep/byteorder.h	294;"	d
__le32_to_cpu	osdep/byteorder.h	351;"	d
__le32_to_cpu	osdep/byteorder.h	91;"	d
__le64_to_cpu	osdep/byteorder.h	114;"	d
__le64_to_cpu	osdep/byteorder.h	139;"	d
__le64_to_cpu	osdep/byteorder.h	159;"	d
__le64_to_cpu	osdep/byteorder.h	201;"	d
__le64_to_cpu	osdep/byteorder.h	293;"	d
__le64_to_cpu	osdep/byteorder.h	350;"	d
__le64_to_cpu	osdep/byteorder.h	90;"	d
__m128i	simd-intrinsics.h	63;"	d
__m128i	sse-intrinsics.h	61;"	d
__packed	aireplay-ng.c	/^} __packed;$/;"	v	typeref:struct:net_hdr
__packed	include/ethernet.h	/^} __packed;$/;"	v	typeref:struct:ether_addr
__packed	include/ethernet.h	/^} __packed;$/;"	v	typeref:struct:ether_header
__packed	include/ieee80211.h	/^} __packed;$/;"	v	typeref:struct:ieee80211_band
__packed	include/ieee80211.h	/^} __packed;$/;"	v	typeref:struct:ieee80211_country_ie
__packed	include/ieee80211.h	/^} __packed;$/;"	v	typeref:struct:ieee80211_frame
__packed	include/ieee80211.h	/^} __packed;$/;"	v	typeref:struct:ieee80211_frame_ack
__packed	include/ieee80211.h	/^} __packed;$/;"	v	typeref:struct:ieee80211_frame_addr4
__packed	include/ieee80211.h	/^} __packed;$/;"	v	typeref:struct:ieee80211_frame_cfend
__packed	include/ieee80211.h	/^} __packed;$/;"	v	typeref:struct:ieee80211_frame_cts
__packed	include/ieee80211.h	/^} __packed;$/;"	v	typeref:struct:ieee80211_frame_min
__packed	include/ieee80211.h	/^} __packed;$/;"	v	typeref:struct:ieee80211_frame_pspoll
__packed	include/ieee80211.h	/^} __packed;$/;"	v	typeref:struct:ieee80211_frame_rts
__packed	include/ieee80211.h	/^} __packed;$/;"	v	typeref:struct:ieee80211_ie_wpa
__packed	include/ieee80211.h	/^} __packed;$/;"	v	typeref:struct:ieee80211_mnf
__packed	include/ieee80211.h	/^} __packed;$/;"	v	typeref:struct:ieee80211_plcp_hdr
__packed	include/ieee80211.h	/^} __packed;$/;"	v	typeref:struct:ieee80211_qosframe
__packed	include/ieee80211.h	/^} __packed;$/;"	v	typeref:struct:ieee80211_qosframe_addr4
__packed	include/ieee80211.h	/^} __packed;$/;"	v	typeref:struct:ieee80211_tim_ie
__packed	include/ieee80211.h	/^} __packed;$/;"	v	typeref:struct:ieee80211_wme_acparams
__packed	include/ieee80211.h	/^} __packed;$/;"	v	typeref:struct:ieee80211_wme_info
__packed	include/ieee80211.h	/^} __packed;$/;"	v	typeref:struct:ieee80211_wme_param
__packed	include/ieee80211.h	/^} __packed;$/;"	v	typeref:struct:ieee80211_wme_tspec
__packed	include/if_llc.h	/^	    } type_snap __packed;$/;"	m	union:llc::__anon6	typeref:struct:llc::__anon6::__anon11
__packed	include/if_llc.h	/^} __packed;$/;"	v	typeref:struct:frmrinfo
__packed	include/if_llc.h	/^} __packed;$/;"	v	typeref:struct:llc
__packed	osdep/network.h	/^} __packed;$/;"	v	typeref:struct:net_hdr
__packed	osdep/osdep.h	/^} __packed;$/;"	v	typeref:struct:rx_info
__packed	osdep/packed.h	39;"	d
__packed	wi_packet.h	/^} __packed;$/;"	v	typeref:struct:_wi_assoc_req_fixed
__packed	wi_packet.h	/^} __packed;$/;"	v	typeref:struct:_wi_assoc_resp_fixed
__packed	wi_packet.h	/^} __packed;$/;"	v	typeref:struct:_wi_auth_fixed
__packed	wi_packet.h	/^} __packed;$/;"	v	typeref:struct:_wi_beacon_capa_flag
__packed	wi_packet.h	/^} __packed;$/;"	v	typeref:struct:_wi_beacon_fixed
__packed	wi_packet.h	/^} __packed;$/;"	v	typeref:struct:_wi_ctrl_ba_bitmap
__packed	wi_packet.h	/^} __packed;$/;"	v	typeref:struct:_wi_ctrl_ba_control
__packed	wi_packet.h	/^} __packed;$/;"	v	typeref:struct:_wi_ctrl_ba_starting_sequence_control
__packed	wi_packet.h	/^} __packed;$/;"	v	typeref:struct:_wi_ctrl_hdr_t
__packed	wi_packet.h	/^} __packed;$/;"	v	typeref:struct:_wi_data_llc
__packed	wi_packet.h	/^} __packed;$/;"	v	typeref:struct:_wi_deauth_fixed
__packed	wi_packet.h	/^} __packed;$/;"	v	typeref:struct:_wi_fc_t
__packed	wi_packet.h	/^} __packed;$/;"	v	typeref:struct:_wi_flags_t
__packed	wi_packet.h	/^} __packed;$/;"	v	typeref:struct:_wi_fragseq_t
__packed	wi_packet.h	/^} __packed;$/;"	v	typeref:struct:_wi_hdr_t
__packed	wi_packet.h	/^} __packed;$/;"	v	typeref:struct:_wi_qos_control
__packed	wi_packet.h	/^} __packed;$/;"	v	typeref:struct:_wi_reassoc_req_fixed
__packed	wi_packet.h	/^} __packed;$/;"	v	typeref:struct:_wi_tag_t
__swab16	osdep/byteorder.h	135;"	d
__swab16	osdep/byteorder.h	155;"	d
__swab32	osdep/byteorder.h	134;"	d
__swab32	osdep/byteorder.h	154;"	d
__swab64	osdep/byteorder.h	133;"	d
__swab64	osdep/byteorder.h	153;"	d
_addr1_conf	airconf-parse.h	/^typedef struct _addr1_conf$/;"	s
_addr2_conf	airconf-parse.h	/^typedef struct _addr2_conf$/;"	s
_addr3_conf	airconf-parse.h	/^typedef struct _addr3_conf$/;"	s
_addr4_conf	airconf-parse.h	/^typedef struct _addr4_conf$/;"	s
_airconf	airconf-parse.h	/^typedef struct _airconf$/;"	s
_ap_addr_conf	airconf-parse.h	/^typedef struct _ap_addr_conf$/;"	s
_arg	osdep/radiotap/radiotap_iter.h	/^	unsigned char *_arg, *_next_ns_data;$/;"	m	struct:ieee80211_radiotap_iterator
_arg_index	osdep/radiotap/radiotap_iter.h	/^	int _arg_index;$/;"	m	struct:ieee80211_radiotap_iterator
_bitmap_shifter	osdep/radiotap/radiotap_iter.h	/^	uint32_t _bitmap_shifter;$/;"	m	struct:ieee80211_radiotap_iterator
_block	MD5_std.h	/^	MD5_block _block[MD5_N];$/;"	m	struct:__anon33
_bssid	airdecloak-ng.c	/^unsigned char _bssid[6];$/;"	v
_conf	besside-ng.c	/^} _conf;$/;"	v	typeref:struct:conf
_connect	airsock.c	/^static int _connect(int sock, const char *src, const char *dst,$/;"	f	file:
_cpuinfo	aircrack-ng.h	/^struct _cpuinfo {$/;"	s
_elapsed_tv	common.h	/^typedef struct _elapsed_tv {$/;"	s
_es	easside-ng.c	/^static struct east_state _es;$/;"	v	typeref:struct:east_state	file:
_essid	airdecloak-ng.c	/^char * _essid;$/;"	v
_filename_output_cloaked	airdecloak-ng.c	/^char * _filename_output_cloaked;$/;"	v
_filename_output_filtered	airdecloak-ng.c	/^char * _filename_output_filtered;$/;"	v
_filename_output_invalid	airdecloak-ng.c	/^char * _filename_output_invalid;$/;"	v
_filters	airdecloak-ng.c	/^long _filters;$/;"	v
_hash_bucket_t	hashtable.h	/^typedef struct _hash_bucket_t$/;"	s
_hash_ctx_t	hashtable.h	/^typedef struct _hash_ctx_t$/;"	s
_hash_op	hashtable.h	/^typedef struct _hash_op$/;"	s
_input_file	airdecloak-ng.c	/^FILE * _input_file;$/;"	v
_is_wep	airdecloak-ng.c	/^int _is_wep;$/;"	v
_llist	llist.h	/^typedef struct _llist$/;"	s
_max_length	osdep/radiotap/radiotap_iter.h	/^	int _max_length;$/;"	m	struct:ieee80211_radiotap_iterator
_mm512_loadu_si512	pseudo_intrinsics.h	/^static inline __m512i _mm512_loadu_si512(void const *addr)$/;"	f
_mm512_set1_epi8	pseudo_intrinsics.h	303;"	d
_mm512_storeu_si512	pseudo_intrinsics.h	/^static inline void _mm512_storeu_si512(void *addr, vtype d)$/;"	f
_mm_cmov_si128	sse-intrinsics.c	134;"	d	file:
_mm_roti16_epi32	sse-intrinsics.c	126;"	d	file:
_mm_roti16_epi32	sse-intrinsics.c	156;"	d	file:
_mm_roti16_epi32	sse-intrinsics.c	159;"	d	file:
_mm_roti16_epi32	sse-intrinsics.c	170;"	d	file:
_mm_roti_epi32	sse-intrinsics.c	139;"	d	file:
_mm_roti_epi64	sse-intrinsics.c	146;"	d	file:
_mm_set1_epi64	pseudo_intrinsics.h	/^_inline __m128i _mm_set1_epi64(long long a)$/;"	f
_mm_set1_epi64	pseudo_intrinsics.h	564;"	d
_mm_set1_epi64x	sse-intrinsics.c	/^_inline __m128i _mm_set1_epi64x(long long a)$/;"	f
_mm_set_epi64	pseudo_intrinsics.h	/^_inline __m128i _mm_set_epi64(long long a, long long b)$/;"	f
_mm_set_epi64	pseudo_intrinsics.h	563;"	d
_mm_set_epi64x	sse-intrinsics.c	/^_inline __m128i _mm_set_epi64x (long long a, long long b)$/;"	f
_mm_slli_epi32a	sse-intrinsics.c	128;"	d	file:
_networks	wpaclean.c	/^} _networks;$/;"	v	typeref:struct:network
_next_bitmap	osdep/radiotap/radiotap_iter.h	/^	uint32_t *_next_bitmap;$/;"	m	struct:ieee80211_radiotap_iterator
_next_ns_data	osdep/radiotap/radiotap_iter.h	/^	unsigned char *_arg, *_next_ns_data;$/;"	m	struct:ieee80211_radiotap_iterator
_options_assume_null_packets_uncloaked	airdecloak-ng.c	/^int _options_assume_null_packets_uncloaked = 0;$/;"	v
_options_disable_base_filter	airdecloak-ng.c	/^int _options_disable_base_filter = 0;$/;"	v
_options_disable_retry	airdecloak-ng.c	/^int _options_disable_retry = 0;$/;"	v
_options_drop_fragments	airdecloak-ng.c	/^int _options_drop_fragments = 0;$/;"	v
_order	MD5_std.h	/^	MD5_pattern _order[21][MD5_N];$/;"	m	struct:__anon33
_outfd	wpaclean.c	/^static int _outfd;$/;"	v	file:
_output_clean_capture_file	airdecloak-ng.c	/^FILE * _output_clean_capture_file;$/;"	v
_output_cloaked_packets_file	airdecloak-ng.c	/^FILE * _output_cloaked_packets_file;$/;"	v
_packet_elt_head	airdecloak-ng.h	/^} * _packet_elt_head;$/;"	v	typeref:struct:packet_elt_header
_pfh_in	airdecloak-ng.c	/^struct pcap_file_header _pfh_in;$/;"	v	typeref:struct:pcap_file_header
_pfh_out	airdecloak-ng.c	/^struct pcap_file_header _pfh_out;$/;"	v	typeref:struct:pcap_file_header
_pool	MD5_std.h	/^	MD5_pool _pool[MD5_N];$/;"	m	struct:__anon33
_reset_on_ext	osdep/radiotap/radiotap_iter.h	/^	int _reset_on_ext;$/;"	m	struct:ieee80211_radiotap_iterator
_rtheader	osdep/radiotap/radiotap_iter.h	/^	struct ieee80211_radiotap_header *_rtheader;$/;"	m	struct:ieee80211_radiotap_iterator	typeref:struct:ieee80211_radiotap_iterator::ieee80211_radiotap_header
_shasse2_cpuid	sha1-sse2.S	/^_shasse2_cpuid:$/;"	l
_shasse2_data	sha1-sse2.S	/^_shasse2_data:$/;"	l
_shasse2_ends	sha1-sse2.S	/^_shasse2_ends:$/;"	l
_shasse2_init	sha1-sse2.S	/^_shasse2_init:$/;"	l
_speed_test	aircrack-ng.c	/^static int _speed_test;$/;"	v	file:
_ss	airserv-ng.c	/^} _ss;$/;"	v	typeref:struct:sstate	file:
_sta_addr_conf	airconf-parse.h	/^typedef struct _sta_addr_conf$/;"	s
_state	besside-ng.c	/^} _state;$/;"	v	typeref:struct:state
_tag_conf	airconf-parse.h	/^typedef struct _tag_conf$/;"	s
_thread_safe	hashtable.h	/^	int _thread_safe;$/;"	m	struct:_hash_ctx_t
_unix_connect	airsock.c	/^static int _unix_connect(int sock, const char *sock_file, int blocking)$/;"	f	file:
_vns	osdep/radiotap/radiotap_iter.h	/^	const struct ieee80211_radiotap_vendor_namespaces *_vns;$/;"	m	struct:ieee80211_radiotap_iterator	typeref:struct:ieee80211_radiotap_iterator::ieee80211_radiotap_vendor_namespaces
_wi_assoc_req_fixed	wi_packet.h	/^struct _wi_assoc_req_fixed {$/;"	s
_wi_assoc_resp_fixed	wi_packet.h	/^struct _wi_assoc_resp_fixed {$/;"	s
_wi_auth_fixed	wi_packet.h	/^struct _wi_auth_fixed {$/;"	s
_wi_beacon_capa_flag	wi_packet.h	/^struct _wi_beacon_capa_flag {$/;"	s
_wi_beacon_fixed	wi_packet.h	/^struct _wi_beacon_fixed {$/;"	s
_wi_ctrl_ba_bitmap	wi_packet.h	/^struct _wi_ctrl_ba_bitmap {$/;"	s
_wi_ctrl_ba_control	wi_packet.h	/^struct _wi_ctrl_ba_control {$/;"	s
_wi_ctrl_ba_starting_sequence_control	wi_packet.h	/^struct _wi_ctrl_ba_starting_sequence_control {$/;"	s
_wi_ctrl_hdr_t	wi_packet.h	/^struct _wi_ctrl_hdr_t {$/;"	s
_wi_data_llc	wi_packet.h	/^struct _wi_data_llc {$/;"	s
_wi_deauth_fixed	wi_packet.h	/^struct _wi_deauth_fixed {$/;"	s
_wi_fc_t	wi_packet.h	/^struct _wi_fc_t {$/;"	s
_wi_flags_t	wi_packet.h	/^struct _wi_flags_t {$/;"	s
_wi_fragseq_t	wi_packet.h	/^struct _wi_fragseq_t {$/;"	s
_wi_hdr_t	wi_packet.h	/^struct _wi_hdr_t {$/;"	s
_wi_in	airbase-ng.c	/^static struct wif *_wi_in, *_wi_out;$/;"	v	typeref:struct:wif	file:
_wi_in	aireplay-ng.c	/^static struct wif *_wi_in, *_wi_out;$/;"	v	typeref:struct:wif	file:
_wi_in	airtun-ng.c	/^static struct wif *_wi_in, *_wi_out;$/;"	v	typeref:struct:wif	file:
_wi_in	tkiptun-ng.c	/^static struct wif *_wi_in, *_wi_out;$/;"	v	typeref:struct:wif	file:
_wi_out	airbase-ng.c	/^static struct wif *_wi_in, *_wi_out;$/;"	v	typeref:struct:	file:
_wi_out	aireplay-ng.c	/^static struct wif *_wi_in, *_wi_out;$/;"	v	typeref:struct:	file:
_wi_out	airtun-ng.c	/^static struct wif *_wi_in, *_wi_out;$/;"	v	typeref:struct:	file:
_wi_out	tkiptun-ng.c	/^static struct wif *_wi_in, *_wi_out;$/;"	v	typeref:struct:	file:
_wi_qos_control	wi_packet.h	/^struct _wi_qos_control {$/;"	s
_wi_reassoc_req_fixed	wi_packet.h	/^struct _wi_reassoc_req_fixed {$/;"	s
_wi_tag_t	wi_packet.h	/^struct _wi_tag_t {$/;"	s
_wstate	wesside-ng.c	/^} _wstate;$/;"	v	typeref:struct:wstate
a_chans	airodump-ng.h	/^int a_chans   [] =$/;"	v
a_count	aireplay-ng.c	/^    int a_count;$/;"	m	struct:options	file:
a_count	tkiptun-ng.c	/^    int a_count;$/;"	m	struct:options	file:
a_delay	aireplay-ng.c	/^    int a_delay;$/;"	m	struct:options	file:
a_delay	tkiptun-ng.c	/^    int a_delay;$/;"	m	struct:options	file:
a_mode	aireplay-ng.c	/^    int a_mode;$/;"	m	struct:options	file:
a_mode	tkiptun-ng.c	/^    int a_mode;$/;"	m	struct:options	file:
a_mpdu_params	ieee802_11_defs.h	/^	u8 a_mpdu_params; \/* Maximum A-MPDU Length Exponent B0..B1$/;"	m	struct:ieee80211_ht_capabilities
abg_chans	airodump-ng.h	/^int abg_chans [] =$/;"	v
ac	ieee802_11_defs.h	/^	struct wmm_ac_parameter ac[4]; \/* AC_BE, AC_BK, AC_VI, AC_VO *\/$/;"	m	struct:wmm_parameter_element	typeref:struct:wmm_parameter_element::wmm_ac_parameter
ac_ifp	include/if_arp.h	/^	struct 	ifnet *ac_ifp;		\/* network-visible interface *\/$/;"	m	struct:arpcom	typeref:struct:arpcom::ifnet
ac_netgraph	include/if_arp.h	/^	void	*ac_netgraph;		\/* ng_ether(4) netgraph node info *\/$/;"	m	struct:arpcom
accept_t	airsock.c	/^int accept_t(int sock, int sec, int usec, struct sockaddr_in *clientaddr)$/;"	f
access	airbase-ng.c	/^    struct timeval  access;$/;"	m	struct:Fragment_list	typeref:struct:Fragment_list::timeval	file:
access	airtun-ng.c	/^    struct timeval  access;$/;"	m	struct:Fragment_list	typeref:struct:Fragment_list::timeval	file:
aci_aifsn	ieee802_11_defs.h	/^	u8 aci_aifsn; \/* AIFSN, ACM, ACI *\/$/;"	m	struct:wmm_ac_parameter
ack	airodump-ng.h	/^    int ack;                 \/* number of ACK frames      *\/$/;"	m	struct:NA_info
ack_old	airodump-ng.h	/^    int ack_old;             \/* old number of ACK frames  *\/$/;"	m	struct:NA_info
ack_policy	wi_packet.h	/^	uint16_t   ack_policy:2;$/;"	m	struct:_wi_qos_control
ackps	airodump-ng.h	/^    int ackps;               \/* number of ACK frames\/s    *\/$/;"	m	struct:NA_info
acp_aci_aifsn	include/ieee80211.h	/^	u_int8_t	acp_aci_aifsn;$/;"	m	struct:ieee80211_wme_acparams
acp_logcwminmax	include/ieee80211.h	/^	u_int8_t	acp_logcwminmax;$/;"	m	struct:ieee80211_wme_acparams
acp_txop	include/ieee80211.h	/^	u_int16_t	acp_txop;$/;"	m	struct:ieee80211_wme_acparams
action	ieee802_11_defs.h	/^					u8 action; \/* *\/$/;"	m	struct:ieee80211_mgmt::__anon34::__anon43::__anon44::__anon50
action	ieee802_11_defs.h	/^					u8 action; \/* 15 *\/$/;"	m	struct:ieee80211_mgmt::__anon34::__anon43::__anon44::__anon58
action	ieee802_11_defs.h	/^					u8 action; \/* 6 *\/$/;"	m	struct:ieee80211_mgmt::__anon34::__anon43::__anon44::__anon57
action	ieee802_11_defs.h	/^					u8 action; \/* 7 *\/$/;"	m	struct:ieee80211_mgmt::__anon34::__anon43::__anon44::__anon55
action	ieee802_11_defs.h	/^					u8 action; \/* 8 *\/$/;"	m	struct:ieee80211_mgmt::__anon34::__anon43::__anon44::__anon56
action	ieee802_11_defs.h	/^					u8 action; \/* 9 *\/$/;"	m	struct:ieee80211_mgmt::__anon34::__anon43::__anon44::__anon54
action	ieee802_11_defs.h	/^					u8 action;$/;"	m	struct:ieee80211_mgmt::__anon34::__anon43::__anon44::__anon47
action	ieee802_11_defs.h	/^					u8 action;$/;"	m	struct:ieee80211_mgmt::__anon34::__anon43::__anon44::__anon48
action	ieee802_11_defs.h	/^					u8 action;$/;"	m	struct:ieee80211_mgmt::__anon34::__anon43::__anon44::__anon49
action	ieee802_11_defs.h	/^					u8 action;$/;"	m	struct:ieee80211_mgmt::__anon34::__anon43::__anon44::__anon51
action	ieee802_11_defs.h	/^					u8 action;$/;"	m	struct:ieee80211_mgmt::__anon34::__anon43::__anon44::__anon52
action	ieee802_11_defs.h	/^					u8 action;$/;"	m	struct:ieee80211_mgmt::__anon34::__anon43::__anon44::__anon53
action	ieee802_11_defs.h	/^					u8 action;$/;"	m	struct:ieee80211_mgmt::__anon34::__anon43::__anon44::__anon59
action	ieee802_11_defs.h	/^					u8 action;$/;"	m	struct:ieee80211_mgmt::__anon34::__anon43::__anon44::__anon60
action	ieee802_11_defs.h	/^		} STRUCT_PACKED action;$/;"	m	union:ieee80211_mgmt::__anon34	typeref:struct:ieee80211_mgmt::__anon34::__anon43
action_code	ieee802_11_defs.h	/^					u8 action_code;$/;"	m	struct:ieee80211_mgmt::__anon34::__anon43::__anon44::__anon45
action_code	ieee802_11_defs.h	/^					u8 action_code;$/;"	m	struct:ieee80211_mgmt::__anon34::__anon43::__anon44::__anon46
action_type	ieee802_11_defs.h	/^	u8 action_type; \/* WNM_SLEEP_ENTER\/WNM_SLEEP_MODE_EXIT *\/$/;"	m	struct:wnm_sleep_element
active_scan_sim	airodump-ng.h	/^    int active_scan_sim;    \/* simulates an active scan, sending probe requests *\/$/;"	m	struct:globals
addCF	airbase-ng.c	/^int addCF(unsigned char* packet, int length)$/;"	f
addESSID	airbase-ng.c	/^int addESSID(char* essid, int len, int expiration)$/;"	f
addESSIDfile	airbase-ng.c	/^int addESSIDfile(char* filename)$/;"	f
addFrag	airbase-ng.c	/^int addFrag(unsigned char* packet, unsigned char* smac, int len)$/;"	f
addFrag	airtun-ng.c	/^int addFrag(unsigned char* packet, unsigned char* smac, int len)$/;"	f
addMAC	airbase-ng.c	/^int addMAC(pMAC_t pMAC, unsigned char* mac)$/;"	f
addMACfile	airbase-ng.c	/^int addMACfile(pMAC_t pMAC, char* filename)$/;"	f
add_channel_tags	airshooter.c	/^static void add_channel_tags(AIRSHOOT_G *g, airconf *conf, boolean HT)$/;"	f	file:
add_cracker_fds	besside-ng.c	/^static int add_cracker_fds(fd_set *fds, int max)$/;"	f	file:
add_crc32	crypto.c	/^int add_crc32(unsigned char* data, int length)$/;"	f
add_crc32_plain	crypto.c	/^int add_crc32_plain(unsigned char* data, int length)$/;"	f
add_icv	airbase-ng.c	/^void add_icv(unsigned char *input, int len, int offset)$/;"	f
add_icv	aireplay-ng.c	/^void add_icv(unsigned char *input, int len, int offset)$/;"	f
add_icv	airtun-ng.c	/^void add_icv(unsigned char *input, int len, int offset)$/;"	f
add_icv	tkiptun-ng.c	/^void add_icv(unsigned char *input, int len, int offset)$/;"	f
add_keystream	wesside-ng.c	/^static void add_keystream(struct wstate *ws, struct ieee80211_frame* wh, int rd)$/;"	f	file:
add_list	llist.c	/^llist *add_list(llist *head, void *obj)$/;"	f
add_memory_link	memory.c	/^static void add_memory_link(void *v) {$/;"	f	file:
add_node_if_not_complete	airdecloak-ng.c	/^BOOLEAN add_node_if_not_complete() {$/;"	f
add_to_list	besside-ng-crawler.c	/^struct bsslist *add_to_list(struct bsslist *bsl, const u_char *bssid) {$/;"	f
addarp	airbase-ng.c	/^int addarp(unsigned char* packet, int length)$/;"	f
addr	airtun-ng.c	/^    unsigned char *addr;$/;"	m	struct:net_entry	file:
addr1	ieee802_11_defs.h	/^	u8 addr1[6];$/;"	m	struct:ieee80211_hdr
addr1_conf	airconf-parse.h	/^} addr1_conf;$/;"	t	typeref:struct:_addr1_conf
addr2	ieee802_11_defs.h	/^	u8 addr2[6];$/;"	m	struct:ieee80211_hdr
addr2	wi_packet.h	/^	uint8_t    addr2[0];$/;"	m	struct:_wi_ctrl_hdr_t
addr2_conf	airconf-parse.h	/^} addr2_conf;$/;"	t	typeref:struct:_addr2_conf
addr3	ieee802_11_defs.h	/^	u8 addr3[6];$/;"	m	struct:ieee80211_hdr
addr3_conf	airconf-parse.h	/^} addr3_conf;$/;"	t	typeref:struct:_addr3_conf
addr4	wi_packet.h	/^	uint8_t       addr4[0];$/;"	m	struct:_wi_hdr_t
addr4_conf	airconf-parse.h	/^} addr4_conf;$/;"	t	typeref:struct:_addr4_conf
adhoc	airbase-ng.c	/^    int adhoc;$/;"	m	struct:options	file:
adv_proto_id	ieee802_11_defs.h	/^enum adv_proto_id {$/;"	g
aid	ieee802_11_defs.h	/^			le16 aid;$/;"	m	struct:ieee80211_mgmt::__anon34::__anon38
air_mactching_all	aircapture.c	/^static llist* air_mactching_all(AIRCAP_G *g, uint8_t *capbuf, int caplen,$/;"	f	file:
air_mactching_one	aircapture.c	/^static int air_mactching_one(AIRCAP_G *g,$/;"	f	file:
air_packet_parse	airnodes.c	/^int air_packet_parse(NODES_INFO *nodes, uint8_t *h80211, int caplen, struct rx_info *ri)$/;"	f
aircap_handler_t	aircapture.h	/^typedef void (*aircap_handler_t)(AIRCAP_G *, void *);$/;"	t
aircap_thread	wips-inspect.c	/^void aircap_thread(void *arg)$/;"	f
aircapture_conf_verify	aircapture.c	/^int aircapture_conf_verify(AIRCAP_G *g)$/;"	f
aircapture_wi_init	aircapture.c	/^int aircapture_wi_init(AIRCAP_G *g)$/;"	f
airconf	airconf-parse.h	/^} airconf;$/;"	t	typeref:struct:_airconf
airconf_free	airconf-parse.c	/^void airconf_free(airconf *conf)$/;"	f
airconf_key	aircapture.h	/^	uint32_t airconf_key;$/;"	m	struct:_AIRCAP_SAMPLE_DATA
airconf_parse	airconf-parse.c	/^airconf* airconf_parse(ezxml_t xml, int debug)$/;"	f
airconf_parse_buf	airconf-parse.c	/^airconf* airconf_parse_buf(char *xmlbuf, size_t len, int debug)$/;"	f
airconf_parse_file	airconf-parse.c	/^airconf* airconf_parse_file(const char *filename, int debug)$/;"	f
airconf_parse_one	airconf-parse.c	/^static airconf* airconf_parse_one(airconf* def, ezxml_t root, int isdef)$/;"	f	file:
airconf_parse_path	airconf-parse.c	/^int airconf_parse_path(airconf** head, const char *basedir, int debug)$/;"	f
airodump_start_time	airodump-ng.h	/^    char * airodump_start_time;$/;"	m	struct:globals
airpcap_close	osdep/airpcap.c	/^void airpcap_close(void)$/;"	f
airpcap_get_mac	osdep/airpcap.c	/^int airpcap_get_mac(void *mac)$/;"	f
airpcap_handle	osdep/airpcap.c	/^PAirpcapHandle airpcap_handle;$/;"	v
airpcap_init	osdep/airpcap.c	/^int airpcap_init(char *param)$/;"	f
airpcap_inject	osdep/airpcap.c	/^int airpcap_inject(void *buf, int len, struct tx_info *ti)$/;"	f
airpcap_set_chan	osdep/airpcap.c	/^int airpcap_set_chan(int chan)$/;"	f
airpcap_set_mac	osdep/airpcap.c	/^int airpcap_set_mac(void *mac)$/;"	f
airpcap_sniff	osdep/airpcap.c	/^int airpcap_sniff(void *buf, int len, struct rx_info *ri)$/;"	f
airshoot_build_packet	airshooter.c	/^int airshoot_build_packet(AIRSHOOT_G *g, airconf *conf)$/;"	f
airshoot_conf_verify	airshooter.c	/^int airshoot_conf_verify(AIRSHOOT_G *g)$/;"	f
airshoot_handler_t	airshooter.h	/^typedef void (*airshoot_handler_t)(AIRSHOOT_G*, void *);$/;"	t
airshoot_one_shoot	airshooter.c	/^int airshoot_one_shoot(AIRSHOOT_G *g, airconf *conf, airshoot_handler_t handler)$/;"	f
airshoot_process	airshooter.c	/^int airshoot_process(AIRSHOOT_G *g, airshoot_handler_t handler)$/;"	f
airshoot_wi_init	airshooter.c	/^int airshoot_wi_init(AIRSHOOT_G *g)$/;"	f
airshooter_thread	wips-inspect.c	/^void airshooter_thread(void *arg)$/;"	f
airsock	aircapture.h	/^	int airsock;$/;"	m	struct:_EVENT_SYS
alarmed	airbase-ng.c	/^int ctrl_c, alarmed, invalid_channel_displayed;$/;"	v
alarmed	aireplay-ng.c	/^int ctrl_c, alarmed;$/;"	v
alarmed	airtun-ng.c	/^int ctrl_c, alarmed;$/;"	v
alarmed	tkiptun-ng.c	/^int ctrl_c, alarmed;$/;"	v
algorithm	wi_packet.h	/^	uint16_t   algorithm; \/\/ 2 byte (0: open system, 1: shared key)$/;"	m	struct:_wi_auth_fixed
align	osdep/radiotap/radiotap_iter.h	/^	uint8_t align:4, size:4;$/;"	m	struct:radiotap_align_size
align	osdep/radiotap/radiotap_iter.h	/^	uint8_t align:4, size:4;$/;"	m	struct:radiotap_override
align_size	osdep/radiotap/radiotap_iter.h	/^	const struct radiotap_align_size *align_size;$/;"	m	struct:ieee80211_radiotap_namespace	typeref:struct:ieee80211_radiotap_namespace::radiotap_align_size
align_size_000000_00	osdep/radiotap/parse.c	/^static const struct radiotap_align_size align_size_000000_00[] = {$/;"	v	typeref:struct:radiotap_align_size	file:
alloc_cnt	memdbg.h	/^	unsigned alloc_cnt;$/;"	m	struct:MEMDBG_HANDLE_t
allsessions	aircrack-ptw-lib.h	/^	PTW_session * allsessions;$/;"	m	struct:__anon71
allsessions_size	aircrack-ptw-lib.h	/^	int allsessions_size;$/;"	m	struct:__anon71
allwpa	airbase-ng.c	/^    int allwpa;$/;"	m	struct:options	file:
alter_endianity	memory.c	/^void alter_endianity(void *_x, unsigned int size) {$/;"	f
alter_endianity_to_BE	memory.h	331;"	d
alter_endianity_to_BE	memory.h	346;"	d
alter_endianity_to_BE	memory.h	359;"	d
alter_endianity_to_BE	memory.h	364;"	d
alter_endianity_to_BE64	memory.h	332;"	d
alter_endianity_to_BE64	memory.h	351;"	d
alter_endianity_to_BE64	memory.h	361;"	d
alter_endianity_to_BE64	memory.h	366;"	d
alter_endianity_to_LE	memory.h	333;"	d
alter_endianity_to_LE	memory.h	344;"	d
alter_endianity_to_LE	memory.h	360;"	d
alter_endianity_to_LE	memory.h	365;"	d
alter_endianity_to_LE64	memory.h	338;"	d
alter_endianity_to_LE64	memory.h	345;"	d
alter_endianity_to_LE64	memory.h	362;"	d
alter_endianity_to_LE64	memory.h	367;"	d
alter_endianity_w	memory.c	/^void alter_endianity_w(void *_x, unsigned int count) {$/;"	f
alter_endianity_w64	memory.c	/^void alter_endianity_w64(void *_x, unsigned int count) {$/;"	f
amode	aircrack-ng.h	/^	int amode;					 \/* attack mode          *\/$/;"	m	struct:options
anal	wesside-ng.c	/^static void anal(struct wstate *ws, unsigned char* buf, int rd) \/\/ yze$/;"	f	file:
anonce	crypto.h	/^    unsigned char anonce[32];           \/* authenticator nonce          *\/$/;"	m	struct:WPA_ST_info
anonce	include/eapol.h	/^    uint8_t anonce[32];   \/* authenticator nonce      *\/$/;"	m	struct:WPA_hdsk
anqp_info_id	ieee802_11_defs.h	/^enum anqp_info_id {$/;"	g
ap	aircrack-ng.h	/^	struct AP_info *ap;			 \/* parent AP                    *\/$/;"	m	struct:ST_info	typeref:struct:ST_info::AP_info
ap	aircrack-ng.h	/^	struct AP_info *ap;$/;"	m	struct:options	typeref:struct:options::AP_info
ap	aircrack-ng.h	/^	struct AP_info* ap;				\/* AP information *\/$/;"	m	struct:WPA_data	typeref:struct:WPA_data::AP_info
ap	aireplay-ng.c	/^struct APt ap[MAX_APS];$/;"	v	typeref:struct:APt
ap	tkiptun-ng.c	/^struct APt ap[MAX_APS];$/;"	v	typeref:struct:APt
ap_1st	aircrack-ng.c	/^struct AP_info *ap_1st;			 \/* first item in linked list    *\/$/;"	v	typeref:struct:AP_info
ap_1st	airodump-ng.h	/^    struct AP_info *ap_1st, *ap_end;$/;"	m	struct:globals	typeref:struct:globals::AP_info
ap_1st	ivstools.c	/^    struct AP_info *ap_1st, *ap_end;$/;"	m	struct:globals	typeref:struct:globals::AP_info	file:
ap_addr_conf	airconf-parse.h	/^} ap_addr_conf;$/;"	t	typeref:struct:_ap_addr_conf
ap_end	airodump-ng.h	/^    struct AP_info *ap_1st, *ap_end;$/;"	m	struct:globals	typeref:struct:globals::
ap_end	ivstools.c	/^    struct AP_info *ap_1st, *ap_end;$/;"	m	struct:globals	typeref:struct:globals::	file:
ap_find_hash	airnodes.c	/^static AP_INFO* ap_find_hash(hash_ctx_t *ctx, uint8_t *bssid)$/;"	f	file:
ap_hash_compare	airnodes.c	/^static int ap_hash_compare(const void *a, const void *b)$/;"	f	file:
ap_hash_free	airnodes.c	/^static void ap_hash_free(void *a)$/;"	f	file:
ap_hash_func	airnodes.c	/^static int ap_hash_func(const void *a)$/;"	f	file:
ap_hash_op	airnodes.c	/^static hash_op ap_hash_op = {$/;"	v	file:
ap_hctx	aircapture.h	/^	hash_ctx_t *ap_hctx;$/;"	m	struct:_AIRCAP_G
ap_infos	airnodes.c	/^	hash_ctx_t *ap_infos;$/;"	m	struct:NODES_INFO	file:
ap_init	airnodes.c	/^static AP_INFO *ap_init()$/;"	f	file:
ap_setup_locked	airnodes.c	/^	unsigned char ap_setup_locked;$/;"	m	struct:WPS_INFO	file:
ap_setup_locked	airodump-ng.h	/^    unsigned char ap_setup_locked; \/* AP setup locked *\/$/;"	m	struct:WPS_info
ar_hln	include/if_arp.h	/^	u_char	ar_hln;		\/* length of hardware address *\/$/;"	m	struct:arphdr
ar_hrd	include/if_arp.h	/^	u_short	ar_hrd;		\/* format of hardware address *\/$/;"	m	struct:arphdr
ar_op	include/if_arp.h	/^	u_short	ar_op;		\/* one of: *\/$/;"	m	struct:arphdr
ar_pln	include/if_arp.h	/^	u_char	ar_pln;		\/* length of protocol address *\/$/;"	m	struct:arphdr
ar_pro	include/if_arp.h	/^	u_short	ar_pro;		\/* format of protocol address *\/$/;"	m	struct:arphdr
ar_sha	include/if_arp.h	/^	u_char	ar_sha[];	\/* sender hardware address *\/$/;"	m	struct:arphdr
ar_sha	include/if_arp.h	76;"	d
ar_spa	include/if_arp.h	/^	u_char	ar_spa[];	\/* sender protocol address *\/$/;"	m	struct:arphdr
ar_spa	include/if_arp.h	77;"	d
ar_tha	include/if_arp.h	/^	u_char	ar_tha[];	\/* target hardware address *\/$/;"	m	struct:arphdr
ar_tha	include/if_arp.h	78;"	d
ar_tpa	include/if_arp.h	/^	u_char	ar_tpa[];	\/* target protocol address *\/$/;"	m	struct:arphdr
ar_tpa	include/if_arp.h	79;"	d
arp	airbase-ng.c	/^struct ARP_req * arp;$/;"	v	typeref:struct:ARP_req
arp_flags	include/if_arp.h	/^	int	arp_flags;			\/* flags *\/$/;"	m	struct:arpreq
arp_ha	include/if_arp.h	/^	struct	sockaddr arp_ha;		\/* hardware address *\/$/;"	m	struct:arpreq	typeref:struct:arpreq::sockaddr
arp_pa	include/if_arp.h	/^	struct	sockaddr arp_pa;		\/* protocol address *\/$/;"	m	struct:arpreq	typeref:struct:arpreq::sockaddr
arp_spares	include/if_arp.h	/^	uint64_t arp_spares[4];	\/* For either the upper or lower half. *\/$/;"	m	struct:arpstat
arpcom	include/if_arp.h	/^struct	arpcom {$/;"	s
arphdr	include/if_arp.h	/^struct	arphdr {$/;"	s
arphdr_len	include/if_arp.h	83;"	d
arphdr_len2	include/if_arp.h	81;"	d
arpreq	include/if_arp.h	/^struct arpreq {$/;"	s
arpstat	include/if_arp.h	/^struct arpstat {$/;"	s
arptype_in	airbase-ng.c	/^    int fd_in,  arptype_in;$/;"	m	struct:devices	file:
arptype_in	aireplay-ng.c	/^    int fd_in,  arptype_in;$/;"	m	struct:devices	file:
arptype_in	airtun-ng.c	/^    int fd_in,  arptype_in;$/;"	m	struct:devices	file:
arptype_in	osdep/linux.c	/^    int fd_in,  arptype_in;$/;"	m	struct:priv_linux	file:
arptype_in	packetforge-ng.c	/^    int fd_in,  arptype_in;$/;"	m	struct:devices	file:
arptype_in	tkiptun-ng.c	/^    int fd_in,  arptype_in;$/;"	m	struct:devices	file:
arptype_out	airbase-ng.c	/^    int fd_out, arptype_out;$/;"	m	struct:devices	file:
arptype_out	aireplay-ng.c	/^    int fd_out, arptype_out;$/;"	m	struct:devices	file:
arptype_out	airtun-ng.c	/^    int fd_out, arptype_out;$/;"	m	struct:devices	file:
arptype_out	osdep/linux.c	/^    int fd_out, arptype_out;$/;"	m	struct:priv_linux	file:
arptype_out	packetforge-ng.c	/^    int fd_out, arptype_out;$/;"	m	struct:devices	file:
arptype_out	tkiptun-ng.c	/^    int fd_out, arptype_out;$/;"	m	struct:devices	file:
array_contains	airodump-ng.c	/^int array_contains(int *array, int length, int value)$/;"	f
asel_capabilities	ieee802_11_defs.h	/^	u8 asel_capabilities;$/;"	m	struct:ieee80211_ht_capabilities
asso_client	airodump-ng.h	/^    int asso_client;        \/* only show associated clients *\/$/;"	m	struct:globals
assoc_id	wi_packet.h	/^	uint16_t            assoc_id;   \/\/ 2 byte$/;"	m	struct:_wi_assoc_resp_fixed
assoc_req	ieee802_11_defs.h	/^		} STRUCT_PACKED assoc_req;$/;"	m	union:ieee80211_mgmt::__anon34	typeref:struct:ieee80211_mgmt::__anon34::__anon37
assoc_resp	ieee802_11_defs.h	/^		} STRUCT_PACKED assoc_resp, reassoc_resp;$/;"	m	union:ieee80211_mgmt::__anon34	typeref:struct:ieee80211_mgmt::__anon34::__anon38
associated	easside-ng.c	/^void associated(struct east_state *es, struct timeval *tv)$/;"	f
astate2str	besside-ng.c	/^static const char *astate2str(int astate)$/;"	f	file:
atoi64	wpapsk.c	/^char atoi64[0x100];$/;"	v
atomic_read	aircrack-ng.c	/^int atomic_read( read_buf *rb, int fd, int len, void *buf )$/;"	f
attack	besside-ng.c	/^static void attack(struct network *n)$/;"	f	file:
attack_check	aireplay-ng.c	/^int attack_check(unsigned char* bssid, char* essid, unsigned char* capa, struct wif *wi)$/;"	f
attack_check	tkiptun-ng.c	/^int attack_check(unsigned char* bssid, char* essid, unsigned char* capa, struct wif *wi)$/;"	f
attack_continue	besside-ng.c	/^static void attack_continue(struct network *n)$/;"	f	file:
attack_get	besside-ng.c	/^static struct network *attack_get(void)$/;"	f	file:
attack_next	besside-ng.c	/^static void attack_next(void)$/;"	f	file:
attack_ping	besside-ng.c	/^static void attack_ping(void *a)$/;"	f	file:
attack_watchdog	besside-ng.c	/^static void attack_watchdog(void *arg)$/;"	f	file:
attack_wep	besside-ng.c	/^static void attack_wep(struct network *n)$/;"	f	file:
attack_wpa	besside-ng.c	/^static void attack_wpa(struct network *n)$/;"	f	file:
attr	ezxml/ezxml.c	/^    char ***attr;         \/\/ default attributes$/;"	m	struct:ezxml_root	file:
attr	ezxml/ezxml.h	/^    char **attr;     \/\/ tag attributes { name, value, name, value, ... NULL }$/;"	m	struct:ezxml
auth	ieee802_11_defs.h	/^		} STRUCT_PACKED auth;$/;"	m	union:ieee80211_mgmt::__anon34	typeref:struct:ieee80211_mgmt::__anon34::__anon35
auth_alg	ieee802_11_defs.h	/^			le16 auth_alg;$/;"	m	struct:ieee80211_mgmt::__anon34::__anon35
auth_transaction	ieee802_11_defs.h	/^			le16 auth_transaction;$/;"	m	struct:ieee80211_mgmt::__anon34::__anon35
auto_power_save	wi_packet.h	/^	uint16_t   auto_power_save:1;$/;"	m	struct:_wi_beacon_capa_flag
available	osdep/channel.h	/^	unsigned char available;$/;"	m	struct:wif_ch
average_signal	airdecloak-ng.h	/^	int average_signal; \/\/ Calculate the average signal (for later)$/;"	m	struct:packet_elt_header
avg_power	aircapture.h	/^	int32_t avg_power;$/;"	m	struct:_AIRCAP_SAMPLE_DATA
avg_power	airnodes.c	/^	int avg_power;$/;"	m	struct:AP_INFO	file:
avg_power	airodump-ng.h	/^    int avg_power;            \/* averaged signal power    *\/$/;"	m	struct:AP_info
avg_rate	aircapture.h	/^	uint32_t avg_rate;$/;"	m	struct:_AIRCAP_SAMPLE_DATA
b	MD5_std.h	/^	char b[60];$/;"	m	union:__anon26
b	aircrack-ptw-lib.h	/^	uint8_t b;$/;"	m	struct:__anon69
back	aircrack-ng.h	/^	int back;						\/* back marker for the circular buffers *\/$/;"	m	struct:WPA_data
band	include/ieee80211.h	/^	struct ieee80211_band band[4];		\/* up to 4 sub bands *\/$/;"	m	struct:ieee80211_country_ie	typeref:struct:ieee80211_country_ie::ieee80211_band
band_id	ieee802_11_defs.h	/^	u8 band_id;$/;"	m	struct:multi_band_ie
base	airbase-ng.c	/^    struct AP_info *base;    \/* AP this client belongs to *\/$/;"	m	struct:ST_info	typeref:struct:ST_info::AP_info	file:
base	airodump-ng.h	/^    struct AP_info *base;    \/* AP this client belongs to *\/$/;"	m	struct:ST_info	typeref:struct:ST_info::AP_info
base	ivstools.c	/^    struct AP_info *base;    \/* AP this client belongs to *\/$/;"	m	struct:ST_info	typeref:struct:ST_info::AP_info	file:
base_prga	easside-ng.c	/^void base_prga(struct east_state *es, struct ieee80211_frame *wh, int len)$/;"	f
basic_mcs_set	ieee802_11_defs.h	/^	u8 basic_mcs_set[16];$/;"	m	struct:ieee80211_ht_operation
batch_process	airolib-ng.c	/^void batch_process(sqlite3* db) {$/;"	f
batt	airodump-ng.h	/^    char * batt;            \/* Battery string       *\/$/;"	m	struct:globals
be16	ieee802_11_defs.h	/^typedef u16 __bitwise be16;$/;"	t
be16_to_cpu	osdep/byteorder.h	410;"	d
be16toh	osdep/byteorder.h	416;"	d
be16toh	osdep/radiotap/platform.h	14;"	d
be32	ieee802_11_defs.h	/^typedef u32 __bitwise be32;$/;"	t
be32_to_cpu	osdep/byteorder.h	408;"	d
be32toh	osdep/byteorder.h	422;"	d
be32toh	osdep/radiotap/platform.h	19;"	d
be64	ieee802_11_defs.h	/^typedef u64 __bitwise be64;$/;"	t
be64_to_cpu	osdep/byteorder.h	406;"	d
be64toh	osdep/radiotap/platform.h	24;"	d
beacon	ieee802_11_defs.h	/^		} STRUCT_PACKED beacon;$/;"	m	union:ieee80211_mgmt::__anon34	typeref:struct:ieee80211_mgmt::__anon34::__anon41
beacon_cache	airbase-ng.c	/^    int beacon_cache;$/;"	m	struct:options	file:
beacon_ie	wi_packet.h	/^enum beacon_ie$/;"	g
beacon_ie_ssid	wi_packet.h	/^	beacon_ie_ssid         = 0,$/;"	e	enum:beacon_ie
beacon_ie_support_rate	wi_packet.h	/^	beacon_ie_support_rate = 1,$/;"	e	enum:beacon_ie
beacon_int	ieee802_11_defs.h	/^			le16 beacon_int;$/;"	m	struct:ieee80211_mgmt::__anon34::__anon41
beacon_int	ieee802_11_defs.h	/^			le16 beacon_int;$/;"	m	struct:ieee80211_mgmt::__anon34::__anon42
beacon_int	ieee802_11_defs.h	/^	le16 beacon_int;$/;"	m	struct:multi_band_ie
beacon_logged	airodump-ng.h	/^    int beacon_logged;        \/* We need 1 beacon per AP  *\/$/;"	m	struct:AP_info
beacon_saved	besside-ng-crawler.c	/^  u_char beacon_saved;$/;"	m	struct:bsslist	file:
beacon_thread	airbase-ng.c	/^void beacon_thread( void *arg )$/;"	f
beaconpid	airbase-ng.c	/^pthread_t beaconpid;$/;"	v
berlin	airodump-ng.h	/^    int berlin;               \/* number of seconds it takes in berlin to fill the whole screen with APs*\/$/;"	m	struct:globals
best_power	airnodes.c	/^	int best_power;               \/* best signal power             *\/$/;"	m	struct:AP_INFO	file:
best_power	airodump-ng.h	/^    int best_power;           \/* best signal power    *\/$/;"	m	struct:AP_info
betoh16	osdep/byteorder.h	311;"	d
betoh16	osdep/byteorder.h	368;"	d
betoh32	osdep/byteorder.h	314;"	d
betoh32	osdep/byteorder.h	371;"	d
betoh64	osdep/byteorder.h	317;"	d
betoh64	osdep/byteorder.h	374;"	d
bf_nkeys	aircrack-ng.c	/^int bf_nkeys[256];$/;"	v
bf_pipe	aircrack-ng.c	/^int bf_pipe[256][2];			 \/* bruteforcer 'queue' pipe	 *\/$/;"	v
bf_wepkey	aircrack-ng.c	/^unsigned char bf_wepkey[64];$/;"	v
bg_chans	airodump-ng.h	/^int bg_chans  [] =$/;"	v
bidir	airtun-ng.c	/^    int bidir;$/;"	m	struct:options	file:
bitmap	wi_packet.h	/^	uint8_t    bitmap[8];$/;"	m	struct:_wi_ctrl_ba_bitmap
bitrates	aireplay-ng.c	/^int bitrates[RATE_NUM]={RATE_1M, RATE_2M, RATE_5_5M, RATE_6M, RATE_9M, RATE_11M, RATE_12M, RATE_18M, RATE_24M, RATE_36M, RATE_48M, RATE_54M};$/;"	v
bitrates	tkiptun-ng.c	/^int bitrates[RATE_NUM]={RATE_1M, RATE_2M, RATE_5_5M, RATE_6M, RATE_9M, RATE_11M, RATE_12M, RATE_18M, RATE_24M, RATE_36M, RATE_48M, RATE_54M};$/;"	v
bittest	aireplay-ng.c	/^    int bittest;$/;"	m	struct:options	file:
bittest	tkiptun-ng.c	/^    int bittest;$/;"	m	struct:options	file:
blk_SHA1_Block	sha1-git.c	/^static void blk_SHA1_Block(blk_SHA_CTX *ctx, const unsigned int *data)$/;"	f	file:
blk_SHA1_Final	sha1-git.c	/^void blk_SHA1_Final(unsigned char hashout[20], blk_SHA_CTX *ctx)$/;"	f
blk_SHA1_Init	sha1-git.c	/^void blk_SHA1_Init(blk_SHA_CTX *ctx)$/;"	f
blk_SHA1_Update	sha1-git.c	/^void blk_SHA1_Update(blk_SHA_CTX *ctx, const void *data, unsigned long len)$/;"	f
blk_SHA_CTX	sha1-git.h	/^} blk_SHA_CTX;$/;"	t	typeref:struct:__anon15
block_ack	wi_packet.h	/^	uint16_t   block_ack:1;$/;"	m	struct:_wi_beacon_capa_flag
boolean	common.h	/^typedef enum {FALSE, TRUE} boolean;$/;"	t	typeref:enum:__anon14
brutebytes	aircrack-ng.h	/^	int brutebytes[64];			\/* bytes to bruteforce *\/$/;"	m	struct:options
bss_termination_delay	ieee802_11_defs.h	/^					u8 bss_termination_delay;$/;"	m	struct:ieee80211_mgmt::__anon34::__anon43::__anon44::__anon56
bss_tm_query	ieee802_11_defs.h	/^				} STRUCT_PACKED bss_tm_query;$/;"	m	union:ieee80211_mgmt::__anon34::__anon43::__anon44	typeref:struct:ieee80211_mgmt::__anon34::__anon43::__anon44::__anon57
bss_tm_req	ieee802_11_defs.h	/^				} STRUCT_PACKED bss_tm_req;$/;"	m	union:ieee80211_mgmt::__anon34::__anon43::__anon44	typeref:struct:ieee80211_mgmt::__anon34::__anon43::__anon44::__anon55
bss_tm_resp	ieee802_11_defs.h	/^				} STRUCT_PACKED bss_tm_resp;$/;"	m	union:ieee80211_mgmt::__anon34::__anon43::__anon44	typeref:struct:ieee80211_mgmt::__anon34::__anon43::__anon44::__anon56
bss_trans_mgmt_status_code	ieee802_11_defs.h	/^enum bss_trans_mgmt_status_code {$/;"	g
bssid	airbase-ng.c	/^    unsigned char bssid[6];$/;"	m	struct:AP_conf	file:
bssid	aircrack-ng.h	/^	unsigned char bssid [6];     \/* BSSID *\/$/;"	m	struct:mergeBSSID
bssid	aircrack-ng.h	/^	unsigned char bssid[6];				 \/* access point MAC address     *\/$/;"	m	struct:AP_info
bssid	aircrack-ng.h	/^	unsigned char bssid[6];				 \/* target BSSID         *\/$/;"	m	struct:options
bssid	airdecap-ng.c	/^    unsigned char bssid[6];$/;"	m	struct:options	file:
bssid	airdecloak-ng.h	/^    unsigned char  bssid[6];$/;"	m	struct:packet_elt
bssid	aireplay-ng.c	/^    unsigned char bssid[6];$/;"	m	struct:APt	file:
bssid	airnodes.c	/^	uint8_t bssid[6];             \/* the access point's MAC        *\/$/;"	m	struct:AP_INFO	file:
bssid	airnodes.c	/^	uint8_t bssid[6];        \/* AP this client belongs to *\/$/;"	m	struct:STA_INFO	file:
bssid	airodump-ng.h	/^    unsigned char bssid[6];   \/* the access point's MAC   *\/$/;"	m	struct:AP_info
bssid	besside-ng-crawler.c	/^  u_char *bssid;$/;"	m	struct:bsslist	file:
bssid	crypto.h	/^    unsigned char bssid[6];             \/* authenticator MAC            *\/$/;"	m	struct:WPA_ST_info
bssid	ieee802_11_defs.h	/^	u8 bssid[6];$/;"	m	struct:ieee80211_mgmt
bssid	ieee802_11_defs.h	/^	u8 bssid[ETH_ALEN];$/;"	m	struct:multi_band_ie
bssid	ivstools.c	/^    unsigned char bssid[6];   \/* the access point's MAC   *\/$/;"	m	struct:AP_info	file:
bssid	packetforge-ng.c	/^    unsigned char bssid[6];$/;"	m	struct:options	file:
bssid	tkiptun-ng.c	/^    unsigned char bssid[6];$/;"	m	struct:APt	file:
bssid_list_1st	aircrack-ng.h	/^	struct mergeBSSID * bssid_list_1st;$/;"	m	struct:options	typeref:struct:options::mergeBSSID
bssid_set	aircrack-ng.h	/^	int bssid_set;				 \/* bssid set flag       *\/$/;"	m	struct:options
bssidmerge	aircrack-ng.h	/^	char *bssidmerge;$/;"	m	struct:options
bsslist	besside-ng-crawler.c	/^struct bsslist {$/;"	s	file:
bucket_size	hashtable.h	/^	int bucket_size;$/;"	m	struct:_hash_ctx_t
buddy_inet_check	easside-ng.c	/^void buddy_inet_check(struct east_state *es)$/;"	f
buddy_packet	easside-ng.c	/^void buddy_packet(struct east_state *es)$/;"	f
buf	airbase-ng.c	/^    unsigned char *buf;$/;"	m	struct:ARP_req	file:
buf	aireplay-ng.c	/^    unsigned char *buf;$/;"	m	struct:ARP_req	file:
buf	airtun-ng.c	/^    unsigned char *buf;$/;"	m	struct:ARP_req	file:
buf	tkiptun-ng.c	/^    unsigned char *buf;$/;"	m	struct:ARP_req	file:
buf1	aircrack-ng.c	/^	void *buf1;$/;"	m	struct:__anon1	file:
buf2	aircrack-ng.c	/^	void *buf2;$/;"	m	struct:__anon1	file:
buffer	aircrack-ng.c	/^unsigned char *buffer = NULL;			\/* from read_thread *\/$/;"	v
buffer	airdecap-ng.c	/^unsigned char buffer[65536];$/;"	v
buffer	airdecloak-ng.c	/^unsigned char buffer[65536];$/;"	v
buffer2	airdecap-ng.c	/^unsigned char buffer2[65536];$/;"	v
build_action_sample	airshooter.c	/^static int build_action_sample(AIRSHOOT_G *g, airconf *conf, uint8_t buf[])$/;"	f	file:
build_arp_request	tkiptun-ng.c	/^int build_arp_request(unsigned char* packet, int *length, int toDS)$/;"	f
build_assoc_req_sample	airshooter.c	/^static int build_assoc_req_sample(AIRSHOOT_G *g, airconf *conf, uint8_t buf[])$/;"	f	file:
build_assoc_resp_sample	airshooter.c	/^static int build_assoc_resp_sample(AIRSHOOT_G *g, airconf *conf, uint8_t buf[])$/;"	f	file:
build_auth_sample	airshooter.c	/^static int build_auth_sample(AIRSHOOT_G *g, airconf *conf, uint8_t buf[])$/;"	f	file:
build_beacon_sample	airshooter.c	/^static int build_beacon_sample(AIRSHOOT_G *g, airconf *conf, uint8_t buf[])$/;"	f	file:
build_block_ack_sample	airshooter.c	/^static int build_block_ack_sample(AIRSHOOT_G *g, airconf *conf,$/;"	f	file:
build_cf_end_sample	airshooter.c	/^static int build_cf_end_sample(AIRSHOOT_G *g, airconf *conf,$/;"	f	file:
build_data_sample	airshooter.c	/^static int build_data_sample(AIRSHOOT_G *g, airconf *conf,$/;"	f	file:
build_deauth_sample	airshooter.c	/^static int build_deauth_sample(AIRSHOOT_G *g, airconf *conf,$/;"	f	file:
build_pspoll_sample	airshooter.c	/^static int build_pspoll_sample(AIRSHOOT_G *g, airconf *conf, uint8_t buf[])$/;"	f	file:
build_reassoc_req_sample	airshooter.c	/^static int build_reassoc_req_sample(AIRSHOOT_G *g, airconf *conf, uint8_t buf[])$/;"	f	file:
build_reassoc_resp_sample	airshooter.c	/^static int build_reassoc_resp_sample(AIRSHOOT_G *g, airconf *conf, uint8_t buf[])$/;"	f	file:
build_taglist	airshooter.c	/^static int build_taglist(uint8_t* buf, tag_conf *first)$/;"	f	file:
c_dbm	besside-ng.c	/^	int		c_dbm;$/;"	m	struct:client	file:
c_handshake	besside-ng.c	/^	struct packet	c_handshake[4];$/;"	m	struct:client	typeref:struct:client::packet	file:
c_handshake	wpaclean.c	/^        struct packet   c_handshake[4];$/;"	m	struct:client	typeref:struct:client::packet	file:
c_ip	airserv-ng.c	/^	char		c_ip[16];$/;"	m	struct:client	file:
c_mac	besside-ng.c	/^	unsigned char	c_mac[6];$/;"	m	struct:client	file:
c_mac	wpaclean.c	/^        unsigned char   c_mac[6];$/;"	m	struct:client	file:
c_next	airserv-ng.c	/^	struct client	*c_next;$/;"	m	struct:client	typeref:struct:client::client	file:
c_next	besside-ng.c	/^	struct channel	*c_next;$/;"	m	struct:channel	typeref:struct:channel::channel	file:
c_next	besside-ng.c	/^	struct client	*c_next;$/;"	m	struct:client	typeref:struct:client::client	file:
c_next	wpaclean.c	/^        struct client   *c_next;$/;"	m	struct:client	typeref:struct:client::client	file:
c_num	besside-ng.c	/^	int		c_num;$/;"	m	struct:channel	file:
c_prev	airserv-ng.c	/^	struct client	*c_prev;$/;"	m	struct:client	typeref:struct:client::client	file:
c_s	airserv-ng.c	/^	int		c_s;$/;"	m	struct:client	file:
c_wpa	besside-ng.c	/^	int		c_wpa;$/;"	m	struct:client	file:
c_wpa	wpaclean.c	/^	int		c_wpa;$/;"	m	struct:client	file:
c_wpa_got	besside-ng.c	/^	int		c_wpa_got;$/;"	m	struct:client	file:
c_wpa_got	wpaclean.c	/^        int             c_wpa_got;$/;"	m	struct:client	file:
caffelatte	airbase-ng.c	/^    int caffelatte;$/;"	m	struct:options	file:
caffelatte_thread	airbase-ng.c	/^void caffelatte_thread( void )$/;"	f
caffelattepid	airbase-ng.c	/^pthread_t caffelattepid;$/;"	v
calc_4pmk	sha1-sse2.h	/^void calc_4pmk(char* _key1, char* _key2, char* _key3, char* _key4, char* _essid, unsigned char* _pmk1, unsigned char* _pmk2, unsigned char* _pmk3, unsigned char* _pmk4)$/;"	f
calc_crc	crypto.c	/^unsigned long calc_crc( unsigned char * buf, int len)$/;"	f
calc_crc_buf	crypto.c	/^int calc_crc_buf( unsigned char *buf, int len )$/;"	f
calc_crc_osdep	osdep/linux.c	/^unsigned long calc_crc_osdep( unsigned char * buf, int len)$/;"	f
calc_crc_plain	crypto.c	/^unsigned long calc_crc_plain( unsigned char * buf, int len)$/;"	f
calc_mic	crypto.c	/^void calc_mic (struct AP_info *ap, unsigned char pmk[32], unsigned char ptk[80], unsigned char mic[20]) {$/;"	f
calc_pmk	crypto.c	/^void calc_pmk( char *key, char *essid_pre, unsigned char pmk[40] )$/;"	f
calc_poll	aircrack-ng.c	/^int calc_poll( int B )$/;"	f
calc_ptk	crypto.c	/^int calc_ptk( struct WPA_ST_info *wpa, unsigned char pmk[32] )$/;"	f
calc_tkip_mic	crypto.c	/^int calc_tkip_mic(unsigned char* packet, int length, unsigned char ptk[80], unsigned char value[8])$/;"	f
calc_tkip_mic_key	crypto.c	/^int calc_tkip_mic_key(unsigned char* packet, int length, unsigned char key[8])$/;"	f
calc_tkip_ppk	crypto.c	/^int calc_tkip_ppk( unsigned char *h80211, int caplen, unsigned char TK1[16], unsigned char key[16] )$/;"	f
calc_votes	kstats.c	/^void calc_votes( unsigned char *ivbuf, long nb_ivs,$/;"	f
calctime	common.c	/^void calctime(time_t t, float perc) {$/;"	f
calloc	memdbg.h	152;"	d
calloc	memory.c	70;"	d	file:
can_write	wesside-ng.c	/^static void can_write(struct wstate *ws)$/;"	f	file:
cap_out	packetforge-ng.c	/^    char *cap_out;$/;"	m	struct:options	file:
capa	airbase-ng.c	/^    unsigned char capa[2];$/;"	m	struct:AP_conf	file:
capab_info	ieee802_11_defs.h	/^			le16 capab_info;$/;"	m	struct:ieee80211_mgmt::__anon34::__anon37
capab_info	ieee802_11_defs.h	/^			le16 capab_info;$/;"	m	struct:ieee80211_mgmt::__anon34::__anon38
capab_info	ieee802_11_defs.h	/^			le16 capab_info;$/;"	m	struct:ieee80211_mgmt::__anon34::__anon39
capab_info	ieee802_11_defs.h	/^			le16 capab_info;$/;"	m	struct:ieee80211_mgmt::__anon34::__anon41
capab_info	ieee802_11_defs.h	/^			le16 capab_info;$/;"	m	struct:ieee80211_mgmt::__anon34::__anon42
capability	wi_packet.h	/^	wi_beacon_capa_flag capability;      \/\/ 2 byte$/;"	m	struct:_wi_assoc_req_fixed
capability	wi_packet.h	/^	wi_beacon_capa_flag capability;      \/\/ 2 byte$/;"	m	struct:_wi_reassoc_req_fixed
capability	wi_packet.h	/^	wi_beacon_capa_flag capability; \/\/ 2 byte$/;"	m	struct:_wi_assoc_resp_fixed
capability	wi_packet.h	/^	wi_beacon_capa_flag capability; \/\/ 2 byte$/;"	m	struct:_wi_beacon_fixed
caplen	pcap.h	/^    uint32_t caplen;$/;"	m	struct:pcap_pkthdr
capture_ask_packet	aireplay-ng.c	/^int capture_ask_packet( int *caplen, int just_grab )$/;"	f
capture_ask_packet	packetforge-ng.c	/^int capture_ask_packet( int *caplen )$/;"	f
capture_ask_packet	tkiptun-ng.c	/^int capture_ask_packet( int *caplen, int just_grab )$/;"	f
capture_g	wips-inspect.c	/^static AIRCAP_G capture_g;$/;"	v	file:
capture_packet	airbase-ng.c	/^int capture_packet(unsigned char* packet, int length)$/;"	f
capture_time	aircapture.h	/^	int capture_time; \/\/ usec$/;"	m	struct:_AIRCAP_G
card_get_chan	airserv-ng.c	/^static int card_get_chan(struct sstate *ss)$/;"	f	file:
card_get_mac	airserv-ng.c	/^static int card_get_mac(struct sstate *ss, unsigned char *mac)$/;"	f	file:
card_get_monitor	airserv-ng.c	/^static int card_get_monitor(struct sstate *ss)$/;"	f	file:
card_get_rate	airserv-ng.c	/^static int card_get_rate(struct sstate *ss)$/;"	f	file:
card_open	airserv-ng.c	/^static void card_open(struct sstate *ss, char *dev)$/;"	f	file:
card_read	airserv-ng.c	/^static int card_read(struct sstate *ss, void *buf, int len, struct rx_info *ri)$/;"	f	file:
card_set_chan	airserv-ng.c	/^static int card_set_chan(struct sstate *ss, int chan)$/;"	f	file:
card_set_rate	airserv-ng.c	/^static int card_set_rate(struct sstate *ss, int rate)$/;"	f	file:
card_write	airserv-ng.c	/^static int card_write(struct sstate *ss, void *buf, int len, struct tx_info *ti)$/;"	f	file:
category	ieee802_11_defs.h	/^			u8 category;$/;"	m	struct:ieee80211_mgmt::__anon34::__anon43
cc	include/ieee80211.h	/^	u_int8_t	cc[3];			\/* ISO CC+(I)ndoor\/(O)utdoor *\/$/;"	m	struct:ieee80211_country_ie
cd_pipe	airodump-ng.h	/^    int cd_pipe[2];	    \/* current card pipe    *\/$/;"	m	struct:globals
cf_attack	airbase-ng.c	/^    int cf_attack;$/;"	m	struct:options	file:
cf_attackwait	besside-ng.c	/^	int		cf_attackwait;$/;"	m	struct:conf	file:
cf_bssid	besside-ng.c	/^	unsigned char	*cf_bssid;$/;"	m	struct:conf	file:
cf_channels	besside-ng.c	/^	struct channel	cf_channels;$/;"	m	struct:conf	typeref:struct:conf::channel	file:
cf_count	airbase-ng.c	/^    int cf_count;$/;"	m	struct:options	file:
cf_crack_int	besside-ng.c	/^	int		cf_crack_int;$/;"	m	struct:conf	file:
cf_deauthfreq	besside-ng.c	/^	int		cf_deauthfreq;$/;"	m	struct:conf	file:
cf_do_wep	besside-ng.c	/^	int		cf_do_wep;$/;"	m	struct:conf	file:
cf_do_wpa	besside-ng.c	/^	int		cf_do_wpa;$/;"	m	struct:conf	file:
cf_essid_regex	besside-ng.c	/^    pcre *cf_essid_regex;$/;"	m	struct:conf	file:
cf_floodfreq	besside-ng.c	/^	int		cf_floodfreq;$/;"	m	struct:conf	file:
cf_floodwait	besside-ng.c	/^	int		cf_floodwait;$/;"	m	struct:conf	file:
cf_hopfreq	besside-ng.c	/^	int		cf_hopfreq;$/;"	m	struct:conf	file:
cf_ifname	besside-ng.c	/^	char		*cf_ifname;$/;"	m	struct:conf	file:
cf_log	besside-ng.c	/^	char		*cf_log;$/;"	m	struct:conf	file:
cf_to	besside-ng.c	/^	int		cf_to;$/;"	m	struct:conf	file:
cf_verb	besside-ng.c	/^	int		cf_verb;$/;"	m	struct:conf	file:
cf_wep	besside-ng.c	/^	char		*cf_wep;$/;"	m	struct:conf	file:
cf_wordlist	besside-ng.c	/^	char		*cf_wordlist;$/;"	m	struct:conf	file:
cf_wpa	besside-ng.c	/^	char		*cf_wpa;$/;"	m	struct:conf	file:
cf_wpa_server	besside-ng.c	/^	char		*cf_wpa_server;$/;"	m	struct:conf	file:
cfp_1	wi_packet.h	/^	uint16_t   cfp_1:2;$/;"	m	struct:_wi_beacon_capa_flag
cfp_2	wi_packet.h	/^	uint16_t   cfp_2:1;$/;"	m	struct:_wi_beacon_capa_flag
cfrag_fuzz	airbase-ng.c	/^int cfrag_fuzz(unsigned char *packet, int frags, int frag_num, int length, unsigned char rnd[2])$/;"	f
cfrag_thread	airbase-ng.c	/^void cfrag_thread( void )$/;"	f
cfragpid	airbase-ng.c	/^pthread_t cfragpid;$/;"	v
ch	osdep/channel.h	/^	unsigned char ch;$/;"	m	struct:wif_ch
ch_pipe	airodump-ng.h	/^    int ch_pipe[2];         \/* current channel pipe *\/$/;"	m	struct:globals
chan	aireplay-ng.c	/^    unsigned char chan;$/;"	m	struct:APt	file:
chan	ieee802_11_defs.h	/^	u8 chan;$/;"	m	struct:multi_band_ie
chan	osdep/linux.c	/^static int chan;$/;"	v	file:
chan	tkiptun-ng.c	/^    unsigned char chan;$/;"	m	struct:APt	file:
chan_hop	easside-ng.c	/^void chan_hop(struct east_state *es, struct timeval *tv)$/;"	f
chan_switch	ieee802_11_defs.h	/^				} STRUCT_PACKED chan_switch;$/;"	m	union:ieee80211_mgmt::__anon34::__anon43::__anon44	typeref:struct:ieee80211_mgmt::__anon34::__anon43::__anon44::__anon46
channel	airbase-ng.c	/^    int channel;$/;"	m	struct:options	file:
channel	aircapture.h	/^	uint8_t channel;$/;"	m	struct:_AIRCAP_G
channel	airnodes.c	/^	int channel;             \/* Channel station is seen   *\/$/;"	m	struct:STA_INFO	file:
channel	airnodes.c	/^	int channel;$/;"	m	struct:AP_INFO	file:
channel	airodump-ng.h	/^    int channel;              \/* AP radio channel         *\/$/;"	m	struct:AP_info
channel	airodump-ng.h	/^    int channel;             \/* Channel station is seen   *\/$/;"	m	struct:ST_info
channel	airodump-ng.h	/^    int channel;             \/* captured on channel       *\/$/;"	m	struct:NA_info
channel	airodump-ng.h	/^    int channel[MAX_CARDS];           \/* current channel #    *\/$/;"	m	struct:globals
channel	airshooter.h	/^	uint8_t channel;$/;"	m	struct:_AIRSHOOT_G
channel	besside-ng.c	/^struct channel {$/;"	s	file:
channel	osdep/linux.c	/^    int channel;$/;"	m	struct:priv_linux	file:
channel_add	besside-ng.c	/^static void channel_add(int num)$/;"	f	file:
channel_agility	wi_packet.h	/^	uint16_t   channel_agility:1;$/;"	m	struct:_wi_beacon_capa_flag
channel_hop	aircapture.h	/^	uint8_t channel_hop[MAX_NUM_CHANNEL];$/;"	m	struct:_AIRCAP_G
channel_hop	airshooter.h	/^	uint8_t channel_hop[MAX_NUM_CHANNEL];$/;"	m	struct:_AIRSHOOT_G
channel_hop_dwell	aircapture.h	/^	uint32_t channel_hop_dwell;$/;"	m	struct:_AIRCAP_G
channel_hop_index	aircapture.h	/^	int channel_hop_index;$/;"	m	struct:_AIRCAP_G
channel_hop_index	airshooter.h	/^	int channel_hop_index;$/;"	m	struct:_AIRSHOOT_G
channel_hop_size	aircapture.h	/^	int channel_hop_size;$/;"	m	struct:_AIRCAP_G
channel_hop_size	airshooter.h	/^	int channel_hop_size;$/;"	m	struct:_AIRSHOOT_G
channel_hop_thread	aircapture.c	/^static void channel_hop_thread(void *arg) {$/;"	f	file:
channel_hopper	airodump-ng.c	/^void channel_hopper(struct wif *wi[], int if_num, int chan_count, pid_t parent)$/;"	f
channel_set	besside-ng.c	/^static void channel_set(int num)$/;"	f	file:
channel_transition_delay_factor	ieee802_11_defs.h	/^	le16 channel_transition_delay_factor;$/;"	m	struct:ieee80211_obss_scan_parameters
channels	airodump-ng.h	/^    int *channels;$/;"	m	struct:globals
chanoption	airodump-ng.h	/^    int chanoption;$/;"	m	struct:globals
check_arp_timeout	wesside-ng.c	/^static void check_arp_timeout(struct wstate *ws, struct timeval *now)$/;"	f	file:
check_cb	besside-ng.c	/^typedef int (*check_cb)(struct network *n);$/;"	t	file:
check_channel	airodump-ng.c	/^int check_channel(struct wif *wi[], int cards)$/;"	f
check_cracker_fds	besside-ng.c	/^static void check_cracker_fds(fd_set *fds)$/;"	f	file:
check_crc_buf	crypto.c	/^int check_crc_buf( unsigned char *buf, int len )$/;"	f
check_crc_buf_osdep	osdep/linux.c	/^int check_crc_buf_osdep( unsigned char *buf, int len )$/;"	f
check_decrypt	easside-ng.c	/^int check_decrypt(struct east_state *es, struct ieee80211_frame *wh, int len)$/;"	f
check_decrypt_arp	easside-ng.c	/^void check_decrypt_arp(struct east_state *es, struct ieee80211_frame *wh,$/;"	f
check_decrypt_ip	easside-ng.c	/^void check_decrypt_ip(struct east_state *es, struct ieee80211_frame *wh,$/;"	f
check_expand	easside-ng.c	/^void check_expand(struct east_state *es, struct ieee80211_frame *wh, int len)$/;"	f
check_for_cloaking	airdecloak-ng.c	/^BOOLEAN check_for_cloaking() {$/;"	f
check_for_db	airolib-ng.c	/^int check_for_db(sqlite3 ** db, const char * filename, int can_create, int readonly)$/;"	f
check_frequency	airodump-ng.c	/^int check_frequency(struct wif *wi[], int cards)$/;"	f
check_guess	tkiptun-ng.c	/^int check_guess(unsigned char *srcbuf, unsigned char *chopped, int caplen, int clearlen, unsigned char *arp, unsigned char *dmac)$/;"	f
check_hop	wesside-ng.c	/^static void check_hop(struct wstate *ws, struct timeval *now)$/;"	f	file:
check_inet	easside-ng.c	/^void check_inet(struct east_state *es, struct timeval *tv)$/;"	f
check_key	wesside-ng.c	/^static void check_key(struct wstate *ws)$/;"	f	file:
check_monitor	airodump-ng.c	/^int check_monitor(struct wif *wi[], int *fd_raw, int *fdh, int cards)$/;"	f
check_network	wpaclean.c	/^static void check_network(struct network *n)$/;"	f	file:
check_ownable	besside-ng.c	/^static int check_ownable(struct network *n)$/;"	f	file:
check_owned	besside-ng.c	/^static int check_owned(struct network *n)$/;"	f	file:
check_received	tkiptun-ng.c	/^int check_received(unsigned char *packet, unsigned length)$/;"	f
check_redirect	easside-ng.c	/^void check_redirect(struct east_state *es, struct ieee80211_frame *wh, int len)$/;"	f
check_relay	wesside-ng.c	/^static void check_relay(struct wstate *ws, struct ieee80211_frame *wh,$/;"	f	file:
check_relay_timeout	wesside-ng.c	/^static void check_relay_timeout(struct wstate *ws, struct timeval *now)$/;"	f	file:
check_replay	besside-ng.c	/^static void check_replay(struct network *n, struct ieee80211_frame *wh, int len)$/;"	f	file:
check_rtr_mac	easside-ng.c	/^void check_rtr_mac(struct east_state *es, struct ieee80211_frame *wh, int len)$/;"	f
check_shared_key	airbase-ng.c	/^int check_shared_key(unsigned char *h80211, int caplen)$/;"	f
check_shared_key	airodump-ng.c	/^int check_shared_key(unsigned char *h80211, int caplen)$/;"	f
check_thread	aircrack-ng.c	/^void check_thread( void *arg )$/;"	f
check_tool_path	monitor_mode.sh	/^check_tool_path()$/;"	f
check_tx	wesside-ng.c	/^static void check_tx(struct wstate *ws, struct timeval *now)$/;"	f	file:
check_unreach	besside-ng.c	/^static int check_unreach(struct network *n)$/;"	f	file:
check_wep_key	aircrack-ng.c	/^int check_wep_key( unsigned char *wepkey, int B, int keylen )$/;"	f
check_wi_dev	set_channel.c	/^int check_wi_dev(char* ifname, uint8_t channel)$/;"	f
check_wi_dev	wifi_setup.c	/^int check_wi_dev(struct wif *wi, uint8_t channel)$/;"	f
checkbssids	aircrack-ng.c	/^int checkbssids(char *bssidlist)$/;"	f
child	ezxml/ezxml.h	/^    ezxml_t child;   \/\/ head of sub tag list, NULL if none$/;"	m	struct:ezxml
chopped_from_plain	tkiptun-ng.c	/^    unsigned char *chopped_from_plain;    \/* chopped plaintext packet from the AP *\/$/;"	m	struct:options	file:
chopped_from_plain_len	tkiptun-ng.c	/^    int chopped_from_plain_len;$/;"	m	struct:options	file:
chopped_from_prga	tkiptun-ng.c	/^    unsigned char *chopped_from_prga;    \/* chopped keystream from the AP *\/$/;"	m	struct:options	file:
chopped_from_prga_len	tkiptun-ng.c	/^    int chopped_from_prga_len;$/;"	m	struct:options	file:
chopped_to_plain	tkiptun-ng.c	/^    unsigned char *chopped_to_plain;      \/* chopped plaintext packet to the AP *\/$/;"	m	struct:options	file:
chopped_to_plain_len	tkiptun-ng.c	/^    int chopped_to_plain_len;$/;"	m	struct:options	file:
chopped_to_prga	tkiptun-ng.c	/^    unsigned char *chopped_to_prga;      \/* chopped keystream to the AP *\/$/;"	m	struct:options	file:
chopped_to_prga_len	tkiptun-ng.c	/^    int chopped_to_prga_len;$/;"	m	struct:options	file:
chrono	aircrack-ng.c	/^float chrono( struct timeval *start, int reset )$/;"	f
chrono	wesside-ng.c	/^float chrono( struct timeval *start, int reset )$/;"	f
chswitch	airodump-ng.h	/^    int chswitch;	    \/* switching method     *\/$/;"	m	struct:globals
class_u	include/if_llc.h	/^		uint8_t class_u;$/;"	m	struct:llc::__anon6::__anon7
clean_exit	aircrack-ng.c	/^void clean_exit(int ret)$/;"	f
cleanup	besside-ng.c	/^static void cleanup(int UNUSED(x))$/;"	f	file:
cleanup	wesside-ng.c	/^static void cleanup(int x)$/;"	f	file:
cleanup_event_sys	aircapture-main.c	/^void cleanup_event_sys(EVENT_SYS *evsys)$/;"	f
cleanup_tiny_memory	memory.c	/^void cleanup_tiny_memory()$/;"	f
clear_timeout	easside-ng.c	/^void clear_timeout(struct east_state *es)$/;"	f
client	airserv-ng.c	/^struct client {$/;"	s	file:
client	besside-ng.c	/^struct client {$/;"	s	file:
client	wpaclean.c	/^struct client {$/;"	s	file:
client_add	airserv-ng.c	/^static void client_add(struct sstate *ss, int s, struct sockaddr_in *s_in)$/;"	f	file:
client_get	besside-ng.c	/^static struct client *client_get(struct network *n, struct ieee80211_frame *wh)$/;"	f	file:
client_kill	airserv-ng.c	/^static void client_kill(struct client *c)$/;"	f	file:
client_send_packet	airserv-ng.c	/^static void client_send_packet(struct sstate *ss, struct client *c,$/;"	f	file:
client_update	besside-ng.c	/^static struct client *client_update(struct network *n,$/;"	f	file:
close_aircrack	aircrack-ng.c	/^int close_aircrack = 0;$/;"	v
cm_pipe	aircrack-ng.c	/^int cm_pipe[256][2];			 \/* child->master results pipe   *\/$/;"	v
cmp_votes	aircrack-ng.c	/^int cmp_votes( const void *bs1, const void *bs2 )$/;"	f
cmp_votes	kstats.c	/^int cmp_votes( const void *bs1, const void *bs2 )$/;"	f
coex_param	ieee802_11_defs.h	/^	u8 coex_param;$/;"	m	struct:ieee80211_2040_bss_coex_ie
colorful	log.h	/^	int colorful;$/;"	m	struct:_LOG_CTX
compare	aircrack-ptw-lib.c	/^static int compare(const void * ina, const void * inb) {$/;"	f	file:
compare_SN_to_current_packet	airdecloak-ng.c	/^int compare_SN_to_current_packet(struct packet_elt * packet) {$/;"	f
comparedoublesorthelper	aircrack-ptw-lib.c	/^static int comparedoublesorthelper(const void * ina, const void * inb) {$/;"	f	file:
comparesorthelper	aircrack-ptw-lib.c	/^static int comparesorthelper(const void * ina, const void * inb) {$/;"	f	file:
complete	airdecloak-ng.h	/^	int complete; \/\/ 0: no, 1: yes$/;"	m	struct:packet_elt
compress_bitmap	wi_packet.h	/^	uint16_t   compress_bitmap:1;$/;"	m	struct:_wi_ctrl_ba_control
cond	aircrack-ng.h	/^	pthread_cond_t cond;			\/* condition for waiting when buffer is full until keys are tried and new keys can be written *\/$/;"	m	struct:WPA_data
conf	aircapture.h	/^	airconf *conf;$/;"	m	struct:_AIRCAP_DATA
conf	aircapture.h	/^	airconf *conf;$/;"	m	struct:_AIRCAP_G
conf	airshooter.h	/^	airconf *conf;$/;"	m	struct:_AIRSHOOT_G
conf	airshooter.h	/^	airconf *conf;$/;"	m	struct:_AIRSHOOT_RESULT
conf	besside-ng.c	/^struct conf {$/;"	s	file:
confdir	aircapture.h	/^	char confdir[256];$/;"	m	struct:_AIRCAP_G
confdir	airshooter.h	/^	char confdir[256];$/;"	m	struct:_AIRSHOOT_G
conffile	aircapture.h	/^	char conffile[256];$/;"	m	struct:_AIRCAP_G
conffile	airshooter.h	/^	char conffile[256];$/;"	m	struct:_AIRSHOOT_G
connect_nonblock	airsock.c	/^int connect_nonblock(int sock,$/;"	f
connect_t	airsock.c	/^int connect_t(const char *src, const char *dst,$/;"	f
connect_u	airsock.c	/^int connect_u(const char *src, const char *dst,$/;"	f
console_lc	log.c	/^static void console_lc(LOG_CTX* ctx, const char *fmt, va_list ap)$/;"	f	file:
console_lcx	log.c	/^static void console_lcx(LOG_CTX* ctx, uint8_t *hex, size_t len, const char *fmt, va_list ap)$/;"	f	file:
console_ld	log.c	/^static void console_ld(LOG_CTX* ctx, const char *fmt, va_list ap)$/;"	f	file:
console_ldx	log.c	/^static void console_ldx(LOG_CTX* ctx, uint8_t *hex, size_t len, const char *fmt, va_list ap)$/;"	f	file:
console_le	log.c	/^static void console_le(LOG_CTX* ctx, const char *fmt, va_list ap)$/;"	f	file:
console_lex	log.c	/^static void console_lex(LOG_CTX* ctx, uint8_t *hex, size_t len, const char *fmt, va_list ap)$/;"	f	file:
console_li	log.c	/^static void console_li(LOG_CTX* ctx, const char *fmt, va_list ap)$/;"	f	file:
console_lix	log.c	/^static void console_lix(LOG_CTX* ctx, uint8_t *hex, size_t len, const char *fmt, va_list ap)$/;"	f	file:
console_log	log.c	/^static void console_log(LOG_CTX* ctx, int lvl, const char *fmt, va_list ap, const char *color)$/;"	f	file:
console_log_x	log.c	/^static void console_log_x(LOG_CTX* ctx,$/;"	f	file:
const_00ff	sha1-sse2.S	/^const_00ff:$/;"	l
const_ff00	sha1-sse2.S	/^const_ff00:$/;"	l
const_init_a	sha1-sse2.S	/^const_init_a:$/;"	l
const_init_b	sha1-sse2.S	/^const_init_b:$/;"	l
const_init_c	sha1-sse2.S	/^const_init_c:$/;"	l
const_init_d	sha1-sse2.S	/^const_init_d:$/;"	l
const_init_e	sha1-sse2.S	/^const_init_e:$/;"	l
const_stage0	sha1-sse2.S	/^const_stage0:$/;"	l
const_stage1	sha1-sse2.S	/^const_stage1:$/;"	l
const_stage2	sha1-sse2.S	/^const_stage2:$/;"	l
const_stage3	sha1-sse2.S	/^const_stage3:$/;"	l
control	include/if_llc.h	/^		uint8_t  control;$/;"	m	struct:llc::__anon6::__anon11
control	include/if_llc.h	/^		uint8_t control;$/;"	m	struct:llc::__anon6::__anon12
control	include/if_llc.h	/^		uint8_t control;$/;"	m	struct:llc::__anon6::__anon7
control	include/if_llc.h	/^		uint8_t control;$/;"	m	struct:llc::__anon6::__anon9
control	include/if_llc.h	/^	        uint8_t control;$/;"	m	struct:llc::__anon6::__anon10
control_ext	include/if_llc.h	/^		uint8_t control_ext;$/;"	m	struct:llc::__anon6::__anon12
convert	aircrack-ng.h	/^	int convert;				 \/* Does this BSSID has to       *\/$/;"	m	struct:mergeBSSID
coreperid	aircrack-ng.h	/^	int coreperid;				\/* Max cores per id     *\/$/;"	m	struct:_cpuinfo
cores	aircrack-ng.h	/^	int cores;				\/* Real CPU cores       *\/$/;"	m	struct:_cpuinfo
coretemp	aircrack-ng.h	/^	float coretemp;				\/* CPU Temperature	*\/$/;"	m	struct:_cpuinfo
correct	aircrack-ptw-lib.c	/^static int correct(PTW_attackstate * state, uint8_t * key, int keylen) {$/;"	f	file:
corrupted_fpath	airdecap-ng.c	/^    char corrupted_fpath[65536];$/;"	m	struct:options	file:
count	wpapsk.h	/^int count;$/;"	v
countBuffer	linecount.cpp	/^unsigned int countBuffer(const vector <char> &buff, int bufsize) {$/;"	f
cpt	ieee802_11_defs.h	/^	u8 cpt;$/;"	m	struct:p2ps_feature_capab
cpu_to_be16	osdep/byteorder.h	409;"	d
cpu_to_be32	osdep/byteorder.h	407;"	d
cpu_to_be64	osdep/byteorder.h	405;"	d
cpu_to_le16	osdep/byteorder.h	403;"	d
cpu_to_le32	osdep/byteorder.h	401;"	d
cpu_to_le64	osdep/byteorder.h	399;"	d
cpufreq_cur	aircrack-ng.h	/^	int cpufreq_cur;			\/* CPUfreq Current	*\/$/;"	m	struct:_cpuinfo
cpufreq_max	aircrack-ng.h	/^	int cpufreq_max;			\/* CPUfreq Maximum	*\/$/;"	m	struct:_cpuinfo
cpuid_exit	sha1-sse2.S	/^cpuid_exit:$/;"	l
cpuid_featureflags	cpuid.c	/^char* cpuid_featureflags() {$/;"	f
cpuid_findcpusensorpath	cpuid.c	/^int cpuid_findcpusensorpath(const char *path) {$/;"	f
cpuid_getcoretemp	cpuid.c	/^float cpuid_getcoretemp() {$/;"	f
cpuid_getfreq	cpuid.c	/^int cpuid_getfreq(int type) {$/;"	f
cpuid_getinfo	cpuid.c	/^int cpuid_getinfo() {$/;"	f
cpuid_modelinfo	cpuid.c	/^char* cpuid_modelinfo() {$/;"	f
cpuid_readsysfs	cpuid.c	/^int cpuid_readsysfs(const char *file) {$/;"	f
cpuid_simdsize	cpuid.c	/^int cpuid_simdsize(int viewmax) {$/;"	f
cpuid_vendor	cpuid.c	/^char* cpuid_vendor() {$/;"	f
cpuinfo	cpuid.c	/^struct _cpuinfo cpuinfo = { 0, NULL, NULL, 0, 0, 0, 0, 0, 0, 0, 0.0, NULL };$/;"	v	typeref:struct:_cpuinfo
cputemppath	aircrack-ng.h	/^	char *cputemppath;			\/* Linux CPU Sensor Path*\/$/;"	m	struct:_cpuinfo
cr_pid	besside-ng.c	/^	int cr_pid;$/;"	m	struct:cracker	file:
cr_pipe	besside-ng.c	/^	int cr_pipe[2];$/;"	m	struct:cracker	file:
crack_wep128	besside-ng.c	/^static void crack_wep128(struct cracker *c, struct network *n)$/;"	f	file:
crack_wep64	besside-ng.c	/^static void crack_wep64(struct cracker *c, struct network *n)$/;"	f	file:
crack_wep_dict	aircrack-ng.c	/^int crack_wep_dict()$/;"	f
crack_wep_ptw	aircrack-ng.c	/^static int crack_wep_ptw(struct AP_info *ap_cur)$/;"	f	file:
crack_wep_thread	aircrack-ng.c	/^int crack_wep_thread( void *arg )$/;"	f
crack_wpa_thread	aircrack-ng.c	/^int crack_wpa_thread( void *arg )$/;"	f
cracker	besside-ng.c	/^struct cracker {$/;"	s	file:
cracker_cb	besside-ng.c	/^typedef void (*cracker_cb)(struct cracker *, struct network *n);$/;"	t	file:
cracker_check	besside-ng.c	/^static void cracker_check(struct network *n, struct cracker *c)$/;"	f	file:
cracker_kill	besside-ng.c	/^static void cracker_kill(struct cracker *c)$/;"	f	file:
cracker_start	besside-ng.c	/^static void cracker_start(struct cracker *c, cracker_cb cb, struct network *n)$/;"	f	file:
crb	aircrack-ng.c	/^read_buf rb, crb;$/;"	v
crc_chop_tbl	crctable.h	/^const unsigned char crc_chop_tbl[256][4] =$/;"	v
crc_tbl	crctable.h	/^const unsigned long int crc_tbl[256] =$/;"	v
crc_tbl_osdep	osdep/crctable_osdep.h	/^const unsigned long int crc_tbl_osdep[256] =$/;"	v
create_local_server_t	airsock.c	/^int create_local_server_t(int port, int blocking)$/;"	f
create_server_t	airsock.c	/^int create_server_t(const char* ipaddr, int port, int blocking)$/;"	f
create_server_u	airsock.c	/^int create_server_u(int port, int blocking)$/;"	f
create_tap	osdep/darwin.c	/^int create_tap(void)$/;"	f
create_tap	osdep/dummy.c	/^int create_tap(void)$/;"	f
create_unix_server_t	airsock.c	/^int create_unix_server_t(const char* sock_file, int blocking)$/;"	f
create_unix_server_u	airsock.c	/^int create_unix_server_u(const char* sock_file, int blocking)$/;"	f
create_wep_packet	airbase-ng.c	/^int create_wep_packet(unsigned char* packet, int *length, int hdrlen)$/;"	f
create_wep_packet	airtun-ng.c	/^int create_wep_packet(unsigned char* packet, int *length, int data_begin)$/;"	f
create_wep_packet	packetforge-ng.c	/^int create_wep_packet(unsigned char* packet, int *length)$/;"	f
crypt	airbase-ng.c	/^    int weplen, crypt;$/;"	m	struct:options	file:
crypt	aircrack-ng.h	/^	int crypt;					 \/* encryption algorithm         *\/$/;"	m	struct:AP_info
crypt	airdecap-ng.c	/^    int weplen, crypt;$/;"	m	struct:options	file:
crypt	airtun-ng.c	/^    int weplen, crypt;$/;"	m	struct:options	file:
ctime	airodump-ng.h	/^    struct timeval  ctime;      \/* capture time *\/$/;"	m	struct:pkt_buf	typeref:struct:pkt_buf::timeval
ctrl	wi_packet.h	/^	uint8_t ctrl;$/;"	m	struct:_wi_data_llc
ctrl_ack	h80211_types.h	/^	ctrl_ack           = 0x0d,$/;"	e	enum:h80211_ctrl
ctrl_block_ack	h80211_types.h	/^	ctrl_block_ack     = 0x09,$/;"	e	enum:h80211_ctrl
ctrl_block_ack_req	h80211_types.h	/^	ctrl_block_ack_req = 0x08,$/;"	e	enum:h80211_ctrl
ctrl_c	airbase-ng.c	/^int ctrl_c, alarmed, invalid_channel_displayed;$/;"	v
ctrl_c	aireplay-ng.c	/^int ctrl_c, alarmed;$/;"	v
ctrl_c	airtun-ng.c	/^int ctrl_c, alarmed;$/;"	v
ctrl_c	tkiptun-ng.c	/^int ctrl_c, alarmed;$/;"	v
ctrl_cf_end	h80211_types.h	/^	ctrl_cf_end        = 0x0e,$/;"	e	enum:h80211_ctrl
ctrl_cf_end_ack	h80211_types.h	/^	ctrl_cf_end_ack    = 0x0f,$/;"	e	enum:h80211_ctrl
ctrl_cts	h80211_types.h	/^	ctrl_cts           = 0x0c,$/;"	e	enum:h80211_ctrl
ctrl_ps_poll	h80211_types.h	/^	ctrl_ps_poll       = 0x0a,$/;"	e	enum:h80211_ctrl
ctrl_rts	h80211_types.h	/^	ctrl_rts           = 0x0b,$/;"	e	enum:h80211_ctrl
cts	airodump-ng.h	/^    int cts;                 \/* number of CTS frames      *\/$/;"	m	struct:NA_info
ctxa	sha1-sse2.S	/^#define ctxa %xmm0$/;"	d
ctxb	sha1-sse2.S	/^#define ctxb %xmm1$/;"	d
ctxc	sha1-sse2.S	/^#define ctxc %xmm2$/;"	d
ctxd	sha1-sse2.S	/^#define ctxd %xmm3$/;"	d
ctxe	sha1-sse2.S	/^#define ctxe %xmm4$/;"	d
cur	ezxml/ezxml.c	/^    ezxml_t cur;          \/\/ current xml tree insertion point$/;"	m	struct:ezxml_root	file:
curl	aircapture.h	/^	CURL *curl;$/;"	m	struct:_EVENT_SYS
current	airdecloak-ng.h	/^	struct packet_elt *current;$/;"	m	struct:packet_elt_header	typeref:struct:packet_elt_header::packet_elt
current_ap	ieee802_11_defs.h	/^			u8 current_ap[6];$/;"	m	struct:ieee80211_mgmt::__anon34::__anon39
current_ap	wi_packet.h	/^	uint8_t             current_ap[6];   \/\/ 6 byte$/;"	m	struct:_wi_reassoc_req_fixed
current_namespace	osdep/radiotap/radiotap_iter.h	/^	const struct ieee80211_radiotap_namespace *current_namespace;$/;"	m	struct:ieee80211_radiotap_iterator	typeref:struct:ieee80211_radiotap_iterator::ieee80211_radiotap_namespace
current_packet_pointer_same_fromToDS_and_source	airdecloak-ng.c	/^BOOLEAN current_packet_pointer_same_fromToDS_and_source(struct packet_elt * packet) {$/;"	f
cv_arr_def	airconf-parse.h	64;"	d
cv_def	airconf-parse.h	60;"	d
cv_eof	aircrack-ng.c	/^pthread_cond_t  cv_eof;			 \/* read EOF condition variable  *\/$/;"	v
cv_is_enable	airconf-parse.h	68;"	d
cv_set_disable	airconf-parse.h	74;"	d
cv_set_enable	airconf-parse.h	71;"	d
cw	ieee802_11_defs.h	/^	u8 cw; \/* ECWmin, ECWmax (CW = 2^ECW - 1) *\/$/;"	m	struct:wmm_ac_parameter
cygwin_close	osdep/cygwin.c	/^static void cygwin_close(struct wif *wi)$/;"	f	file:
cygwin_fd	osdep/cygwin.c	/^static int cygwin_fd(struct wif *wi)$/;"	f	file:
cygwin_get_channel	osdep/cygwin.c	/^static int cygwin_get_channel(struct wif *wi)$/;"	f	file:
cygwin_get_freq	osdep/cygwin.c	/^static int cygwin_get_freq(struct wif *wi)$/;"	f	file:
cygwin_get_mac	osdep/cygwin.c	/^static int cygwin_get_mac(struct wif *wi, unsigned char *mac)$/;"	f	file:
cygwin_get_monitor	osdep/cygwin.c	/^static int cygwin_get_monitor(struct wif *wi)$/;"	f	file:
cygwin_get_rate	osdep/cygwin.c	/^static int cygwin_get_rate(struct wif *wi)$/;"	f	file:
cygwin_open	osdep/cygwin.c	/^static struct wif *cygwin_open(char *iface)$/;"	f	file:
cygwin_read	osdep/cygwin.c	/^static int cygwin_read(struct wif *wi, unsigned char *h80211, int len,$/;"	f	file:
cygwin_read_packet	osdep/cygwin.c	/^static int cygwin_read_packet(struct priv_cygwin *priv, void *buf, int len,$/;"	f	file:
cygwin_read_reader	osdep/cygwin.c	/^int cygwin_read_reader(int fd, int plen, void *dst, int len)$/;"	f
cygwin_reader	osdep/cygwin.c	/^static void *cygwin_reader(void *arg)$/;"	f	file:
cygwin_set_channel	osdep/cygwin.c	/^static int cygwin_set_channel(struct wif *wi, int chan)$/;"	f	file:
cygwin_set_freq	osdep/cygwin.c	/^static int cygwin_set_freq(struct wif *wi, int freq)$/;"	f	file:
cygwin_set_mac	osdep/cygwin.c	/^static int cygwin_set_mac(struct wif *wi, unsigned char *mac)$/;"	f	file:
cygwin_set_rate	osdep/cygwin.c	/^static int cygwin_set_rate(struct wif *wi, int rate)$/;"	f	file:
cygwin_write	osdep/cygwin.c	/^static int cygwin_write(struct wif *wi, unsigned char *h80211, int len,$/;"	f	file:
d_data_dur	include/ieee80211.h	/^	uint16_t	d_data_dur;$/;"	m	struct:ieee80211_duration
d_plcp_len	include/ieee80211.h	/^	uint16_t	d_plcp_len;$/;"	m	struct:ieee80211_duration
d_residue	include/ieee80211.h	/^	uint8_t		d_residue;	\/* unused octets in time slot *\/$/;"	m	struct:ieee80211_duration
d_rts_dur	include/ieee80211.h	/^	uint16_t	d_rts_dur;$/;"	m	struct:ieee80211_duration
da	ieee802_11_defs.h	/^	u8 da[6];$/;"	m	struct:ieee80211_mgmt
data	MD5_std.h	/^	MD5_data data;$/;"	m	struct:__anon33
data	airconf-parse.h	/^	uint8_t *data;$/;"	m	struct:_tag_conf
data	hashtable.h	/^	void *data;$/;"	m	struct:_hash_bucket_t
data	wi_packet.h	/^	uint8_t   data[0];$/;"	m	struct:_wi_tag_t
data_ack	h80211_types.h	/^	data_ack               = 0x05,$/;"	e	enum:h80211_data
data_ack_poll	h80211_types.h	/^	data_ack_poll          = 0x07,$/;"	e	enum:h80211_data
data_check	uniqueiv.c	/^int data_check(unsigned char *data_root, unsigned char IV[3], unsigned char data[2])$/;"	f
data_data	h80211_types.h	/^	data_data              = 0x00,$/;"	e	enum:h80211_data
data_data_ack	h80211_types.h	/^	data_data_ack          = 0x01,$/;"	e	enum:h80211_data
data_data_ack_poll	h80211_types.h	/^	data_data_ack_poll     = 0x03,$/;"	e	enum:h80211_data
data_data_poll	h80211_types.h	/^	data_data_poll         = 0x02,$/;"	e	enum:h80211_data
data_init	uniqueiv.c	/^unsigned char *data_init( void )$/;"	f
data_null	h80211_types.h	/^	data_null              = 0x04,$/;"	e	enum:h80211_data
data_poll	h80211_types.h	/^	data_poll              = 0x06,$/;"	e	enum:h80211_data
data_qos_ack	h80211_types.h	/^	data_qos_ack           = 0x0f,$/;"	e	enum:h80211_data
data_qos_data	h80211_types.h	/^	data_qos_data          = 0x08,$/;"	e	enum:h80211_data
data_qos_data_ack	h80211_types.h	/^	data_qos_data_ack      = 0x09,$/;"	e	enum:h80211_data
data_qos_data_ack_poll	h80211_types.h	/^	data_qos_data_ack_poll = 0x0b,$/;"	e	enum:h80211_data
data_qos_data_poll	h80211_types.h	/^	data_qos_data_poll     = 0x0a,$/;"	e	enum:h80211_data
data_qos_null	h80211_types.h	/^	data_qos_null          = 0x0c,$/;"	e	enum:h80211_data
data_qos_poll	h80211_types.h	/^	data_qos_poll          = 0x0e,$/;"	e	enum:h80211_data
data_reserved	h80211_types.h	/^	data_reserved          = 0x0d,$/;"	e	enum:h80211_data
data_root	airodump-ng.h	/^    unsigned char *data_root; \/* first 2 bytes of data if *\/$/;"	m	struct:AP_info
data_wipe	uniqueiv.c	/^void data_wipe(unsigned char * data)$/;"	f
db	aircrack-ng.c	/^sqlite3 *db;$/;"	v
deauth	besside-ng.c	/^static void deauth(void *arg)$/;"	f	file:
deauth	ieee802_11_defs.h	/^		} STRUCT_PACKED deauth;$/;"	m	union:ieee80211_mgmt::__anon34	typeref:struct:ieee80211_mgmt::__anon34::__anon36
deauth_send	besside-ng.c	/^static void deauth_send(struct network *n, unsigned char *mac)$/;"	f	file:
debug	aircapture.h	/^	int debug;$/;"	m	struct:_AIRCAP_G
debug	aircrack-ng.h	/^	unsigned char debug[64];			 \/* user-defined WEP key *\/$/;"	m	struct:options
debug	airserv-ng.c	/^static void debug(struct sstate *ss, struct client *c, int l, char *fmt, ...)$/;"	f	file:
debug	airshooter.h	/^	int debug;$/;"	m	struct:_AIRSHOOT_G
debug_aircapture_packet	aircapture.c	/^void debug_aircapture_packet(LOG_CTX* lctx, const char *desc,$/;"	f
debug_airshoot_packet	airshooter.c	/^void debug_airshoot_packet(LOG_CTX* lctx, const char *desc,$/;"	f
debug_hash	hashtable.c	/^void debug_hash(hash_ctx_t *ctx)$/;"	f
debug_row	aircrack-ng.h	/^	int debug_row[64] ;          \/* user-defined Row WEP key *\/$/;"	m	struct:options
decap_stats	airdecap-ng.c	/^struct decap_stats$/;"	s	file:
decloak	airodump-ng.h	/^    char decloak;$/;"	m	struct:globals
decloak_detect	airodump-ng.h	/^    char decloak_detect;      \/* run decloak detection? *\/$/;"	m	struct:AP_info
decloak_stats	airdecloak-ng.h	/^struct decloak_stats$/;"	s
decrypt	wesside-ng.c	/^static void decrypt(struct wstate *ws)$/;"	f	file:
decrypt_arp	easside-ng.c	/^void decrypt_arp(struct east_state *es, struct timeval *tv)$/;"	f
decrypt_arpreq	wesside-ng.c	/^static void decrypt_arpreq(struct wstate *ws, struct ieee80211_frame* wh,$/;"	f	file:
decrypt_ccmp	crypto.c	/^int decrypt_ccmp( unsigned char *h80211, int caplen, unsigned char TK1[16] )$/;"	f
decrypt_ip	easside-ng.c	/^void decrypt_ip(struct east_state *es, struct timeval *tv)$/;"	f
decrypt_ip_addr	easside-ng.c	/^void decrypt_ip_addr(struct east_state *es, void *dst, int *len,$/;"	f
decrypt_packet	easside-ng.c	/^void decrypt_packet(struct east_state *es, struct timeval *tv)$/;"	f
decrypt_tkip	crypto.c	/^int decrypt_tkip( unsigned char *h80211, int caplen, unsigned char TK1[16] )$/;"	f
decrypt_wep	crypto.c	/^int decrypt_wep( unsigned char *data, int len, unsigned char *key, int keylen )$/;"	f
decrypted_fpath	airdecap-ng.c	/^    char decrypted_fpath[65536];$/;"	m	struct:options	file:
delESSID	airbase-ng.c	/^int delESSID(char* essid, int len)$/;"	f
delFrag	airbase-ng.c	/^int delFrag(unsigned char* smac, int sequence)$/;"	f
delFrag	airtun-ng.c	/^int delFrag(unsigned char* smac, int sequence)$/;"	f
delMAC	airbase-ng.c	/^int delMAC(pMAC_t pMAC, char* mac)$/;"	f
del_list	llist.c	/^llist* del_list(llist *node, int objfree)$/;"	f
del_list_ex	llist.c	/^llist* del_list_ex(llist *node, void (*free_func)(void *))$/;"	f
del_next_CF	airbase-ng.c	/^int del_next_CF(pCF_t curCF)$/;"	f
delall_list	llist.c	/^void delall_list(llist *head, int objfree)$/;"	f
delall_list_ex	llist.c	/^void delall_list_ex(llist *head, void (*free_func)(void *))$/;"	f
delay	aireplay-ng.c	/^    int delay;$/;"	m	struct:options	file:
delay	tkiptun-ng.c	/^    int delay;$/;"	m	struct:options	file:
delay_bound	ieee802_11_defs.h	/^	le32 delay_bound;$/;"	m	struct:wmm_tspec_element
delete_hash	hashtable.c	/^int delete_hash(hash_ctx_t *ctx, void *data)$/;"	f
depth	aircrack-ng.h	/^	int depth[64];				 \/* how deep we are in the fudge *\/$/;"	m	struct:WEP_data
depth	aircrack-ptw-lib.c	/^int depth[KEYHSBYTES];$/;"	v
destination	airdecloak-ng.h	/^    unsigned char  destination[6];$/;"	m	struct:packet_elt
detect_anomaly	airodump-ng.h	/^    int detect_anomaly;     \/* Detect WIPS protecting WEP in action *\/$/;"	m	struct:globals
detect_frequencies	airodump-ng.c	/^int detect_frequencies(struct wif *wi)$/;"	f
dev	airbase-ng.c	/^dev;$/;"	v	typeref:struct:devices
dev	aireplay-ng.c	/^dev;$/;"	v	typeref:struct:devices
dev	airtun-ng.c	/^dev;$/;"	v	typeref:struct:devices
dev	packetforge-ng.c	/^dev;$/;"	v	typeref:struct:devices
dev	tkiptun-ng.c	/^dev;$/;"	v	typeref:struct:devices
devices	airbase-ng.c	/^struct devices$/;"	s	file:
devices	aireplay-ng.c	/^struct devices$/;"	s	file:
devices	airtun-ng.c	/^struct devices$/;"	s	file:
devices	packetforge-ng.c	/^struct devices$/;"	s	file:
devices	tkiptun-ng.c	/^struct devices$/;"	s	file:
dialog_token	ieee802_11_defs.h	/^					u8 dialog_token;$/;"	m	struct:ieee80211_mgmt::__anon34::__anon43::__anon44::__anon45
dialog_token	ieee802_11_defs.h	/^					u8 dialog_token;$/;"	m	struct:ieee80211_mgmt::__anon34::__anon43::__anon44::__anon55
dialog_token	ieee802_11_defs.h	/^					u8 dialog_token;$/;"	m	struct:ieee80211_mgmt::__anon34::__anon43::__anon44::__anon56
dialog_token	ieee802_11_defs.h	/^					u8 dialog_token;$/;"	m	struct:ieee80211_mgmt::__anon34::__anon43::__anon44::__anon57
dialog_token	ieee802_11_defs.h	/^					u8 dialog_token;$/;"	m	struct:ieee80211_mgmt::__anon34::__anon43::__anon44::__anon60
dialog_token	ieee802_11_defs.h	/^	u8 dialog_token;$/;"	m	struct:rrm_link_measurement_report
dialog_token	ieee802_11_defs.h	/^	u8 dialog_token;$/;"	m	struct:rrm_link_measurement_request
dialogtoken	ieee802_11_defs.h	/^					u8 dialogtoken;$/;"	m	struct:ieee80211_mgmt::__anon34::__anon43::__anon44::__anon51
dialogtoken	ieee802_11_defs.h	/^					u8 dialogtoken;$/;"	m	struct:ieee80211_mgmt::__anon34::__anon43::__anon44::__anon52
dict	aircrack-ng.h	/^	FILE *dict;				 \/* dictionary file      *\/$/;"	m	struct:options
dict_started	airodump-ng.h	/^    int dict_started;         \/* 1 if dict attack started *\/$/;"	m	struct:AP_info
dictfiles	aircrack-ng.h	/^struct dictfiles {$/;"	s
dictfinish	aircrack-ng.h	/^	int dictfinish;				\/* finished processing all dicts*\/$/;"	m	struct:options
dictidx	aircrack-ng.h	/^	struct dictfiles dictidx[MAX_DICTS];	\/* Dictionary structure		*\/$/;"	m	struct:options	typeref:struct:options::dictfiles
dictpos	aircrack-ng.h	/^	off_t	dictpos;			\/* Current position of dictionary *\/$/;"	m	struct:dictfiles
dicts	aircrack-ng.h	/^	char *dicts[MAX_DICTS];			 \/* dictionary files     *\/$/;"	m	struct:options
dicts	aircrack-ng.h	/^} dicts;$/;"	v	typeref:struct:dictfiles
dictsize	aircrack-ng.h	/^	off_t	dictsize;			\/* Total file size *\/$/;"	m	struct:dictfiles
die	easside-ng.c	/^void die(char *m)$/;"	f
diff_timeval	common.c	/^struct timeval diff_timeval(const struct timeval* start, const struct timeval* end)$/;"	f
difference	aircrack-ptw-lib.c	/^	double difference;$/;"	m	struct:__anon24	file:
dip	packetforge-ng.c	/^    unsigned char dip[4];$/;"	m	struct:options	file:
disassoc	ieee802_11_defs.h	/^		} STRUCT_PACKED disassoc;$/;"	m	union:ieee80211_mgmt::__anon34	typeref:struct:ieee80211_mgmt::__anon34::__anon40
disassoc_timer	ieee802_11_defs.h	/^					le16 disassoc_timer;$/;"	m	struct:ieee80211_mgmt::__anon34::__anon43::__anon44::__anon55
discover_prga	wesside-ng.c	/^static void discover_prga(struct wstate *ws)$/;"	f	file:
dispatch	simd-intrinsics.c	/^static MAYBE_INLINE void dispatch(unsigned char buffers[8][64*MD5_SSE_NUM_KEYS],$/;"	f	file:
dispatch	sse-intrinsics.c	/^static MAYBE_INLINE void dispatch(unsigned char buffers[8][64*MD5_SSE_NUM_KEYS], unsigned int f[4*MD5_SSE_NUM_KEYS], unsigned int length[MD5_SSE_NUM_KEYS], unsigned int saltlen)$/;"	f	file:
display_status_bar	wesside-ng.c	/^static void display_status_bar(struct wstate *ws, struct timeval *now,$/;"	f	file:
distance	aircrack-ptw-lib.c	/^	int distance;$/;"	m	struct:__anon23	file:
dmac	packetforge-ng.c	/^    unsigned char dmac[6];$/;"	m	struct:options	file:
doComputation	aircrack-ptw-lib.c	/^static int doComputation(PTW_attackstate * state, uint8_t * key, int keylen, PTW_tableentry table[][n], sorthelper * sh2, int * strongbytes, int keylimit, int * bf, int validchars[][n]) {$/;"	f	file:
doRound	aircrack-ptw-lib.c	/^static int doRound(PTW_tableentry sortedtable[][n], int keybyte, int fixat, uint8_t fixvalue, int * searchborders, uint8_t * key, int keylen, PTW_attackstate * state, uint8_t sum, int * strongbytes, int * bf, int validchars[][n]) {$/;"	f	file:
do_arp	wesside-ng.c	/^static void do_arp(unsigned char* buf, unsigned short op, unsigned char* m1,$/;"	f	file:
do_assoc	besside-ng.c	/^static void do_assoc(struct network *n, int stype)$/;"	f	file:
do_attack_arp_resend	aireplay-ng.c	/^int do_attack_arp_resend( void )$/;"	f
do_attack_caffe_latte	aireplay-ng.c	/^int do_attack_caffe_latte( void )$/;"	f
do_attack_cfrag	aireplay-ng.c	/^int do_attack_cfrag( void )$/;"	f
do_attack_chopchop	aireplay-ng.c	/^int do_attack_chopchop( void )$/;"	f
do_attack_deauth	aireplay-ng.c	/^int do_attack_deauth( void )$/;"	f
do_attack_fake_auth	aireplay-ng.c	/^int do_attack_fake_auth( void )$/;"	f
do_attack_fragment	aireplay-ng.c	/^int do_attack_fragment()$/;"	f
do_attack_fragment	tkiptun-ng.c	/^int do_attack_fragment()$/;"	f
do_attack_interactive	aireplay-ng.c	/^int do_attack_interactive( void )$/;"	f
do_attack_migmode	aireplay-ng.c	/^int do_attack_migmode( void )$/;"	f
do_attack_test	aireplay-ng.c	/^int do_attack_test()$/;"	f
do_attack_tkipchop	tkiptun-ng.c	/^int do_attack_tkipchop( unsigned char* src_packet, int src_packet_len )$/;"	f
do_brute	aircrack-ng.h	/^	int do_brute;				 \/* bruteforce last 2 KB *\/$/;"	m	struct:options
do_client	airsock.c	/^void do_client()$/;"	f
do_cpuid	sha1-sse2.S	/^do_cpuid:$/;"	l
do_crack	wesside-ng.c	/^static int do_crack(struct wstate *ws)$/;"	f	file:
do_cygwin_open	osdep/cygwin.c	/^static int do_cygwin_open(struct wif *wi, char *iface)$/;"	f	file:
do_exit	aircapture.h	/^	int do_exit;$/;"	m	struct:_AIRCAP_G
do_exit	airodump-ng.h	/^    volatile int do_exit;            \/* interrupt flag       *\/$/;"	m	struct:globals
do_exit	airshooter.h	/^	int do_exit;$/;"	m	struct:_AIRSHOOT_G
do_exit	wips-inspect.c	/^static int do_exit;$/;"	v	file:
do_fbsd_open	osdep/freebsd.c	/^static int do_fbsd_open(struct wif *wi, char *iface)$/;"	f	file:
do_flood	besside-ng.c	/^static void do_flood(struct network *n)$/;"	f	file:
do_free	osdep/cygwin.c	/^static void do_free(struct wif *wi)$/;"	f	file:
do_free	osdep/freebsd.c	/^static void do_free(struct wif *wi)$/;"	f	file:
do_free	osdep/linux.c	/^static void do_free(struct wif *wi)$/;"	f	file:
do_free	osdep/netbsd.c	/^static void do_free(struct wif *wi)$/;"	f	file:
do_free	osdep/openbsd.c	/^static void do_free(struct wif *wi)$/;"	f	file:
do_input	wesside-ng.c	/^static void do_input(struct wstate *ws)$/;"	f	file:
do_linux_open	osdep/linux.c	/^static int do_linux_open(struct wif *wi, char *iface)$/;"	f	file:
do_llc	wesside-ng.c	/^static void do_llc(unsigned char* buf, unsigned short type)$/;"	f	file:
do_make_hccap	aircrack-ng.c	/^int do_make_hccap(struct AP_info *ap_cur)$/;"	f
do_make_wkp	aircrack-ng.c	/^int do_make_wkp(struct AP_info *ap_cur)$/;"	f
do_mt_brute	aircrack-ng.h	/^	int do_mt_brute;			 \/* bruteforce last 2 KB$/;"	m	struct:options
do_nbsd_open	osdep/netbsd.c	/^static int do_nbsd_open(struct wif *wi, char *iface)$/;"	f	file:
do_net_free	osdep/network.c	/^static void do_net_free(struct wif *wi)$/;"	f	file:
do_net_open	osdep/network.c	/^static int do_net_open(char *iface)$/;"	f	file:
do_network_add	besside-ng.c	/^static void do_network_add(struct network *n)$/;"	f	file:
do_obsd_open	osdep/openbsd.c	/^static int do_obsd_open(struct wif *wi, char *iface)$/;"	f	file:
do_pause	airodump-ng.h	/^    int do_pause;$/;"	m	struct:globals
do_ptw	aircrack-ng.h	/^        int do_ptw;                              \/* PTW WEP attack *\/$/;"	m	struct:options
do_server	airsock.c	/^void do_server()$/;"	f
do_sort_always	airodump-ng.h	/^    int do_sort_always;$/;"	m	struct:globals
do_testy	aircrack-ng.h	/^	int do_testy;				 \/* experimental attack  *\/$/;"	m	struct:options
do_wait	besside-ng.c	/^static void do_wait(int UNUSED(x))$/;"	f	file:
do_wep_crack	besside-ng.c	/^static void do_wep_crack(struct cracker *c, struct network *n, int len,$/;"	f	file:
do_wep_crack1	aircrack-ng.c	/^int do_wep_crack1( int B )$/;"	f
do_wep_crack2	aircrack-ng.c	/^int do_wep_crack2( int B )$/;"	f
do_wpa_crack	aircrack-ng.c	/^int do_wpa_crack()$/;"	f
doublesorthelper	aircrack-ptw-lib.c	/^} doublesorthelper;$/;"	t	typeref:struct:__anon24	file:
dport	packetforge-ng.c	/^    unsigned short dport;$/;"	m	struct:options	file:
drivertype	osdep/linux.c	/^    DRIVER_TYPE drivertype; \/* inited to DT_UNKNOWN on allocation by wi_alloc *\/$/;"	m	struct:priv_linux	file:
drop_privs	buddy-ng.c	/^void drop_privs()$/;"	f
dropped	include/if_arp.h	/^	uint64_t dropped;	\/* # of packets dropped waiting for a reply. *\/$/;"	m	struct:arpstat
ds	aircapture.h	/^	el *ds;$/;"	m	struct:el_list
ds_adhoc	h80211_types.h	/^	ds_adhoc  = 0x00,$/;"	e	enum:h28011_ds
ds_fromds	h80211_types.h	/^	ds_fromds = 0x02,$/;"	e	enum:h28011_ds
ds_tods	h80211_types.h	/^	ds_tods   = 0x01,$/;"	e	enum:h28011_ds
ds_wds	h80211_types.h	/^	ds_wds    = 0x03,$/;"	e	enum:h28011_ds
dsap	wi_packet.h	/^	uint8_t dsap;$/;"	m	struct:_wi_data_llc
dsss_ofdm	wi_packet.h	/^	uint16_t   dsss_ofdm:1;$/;"	m	struct:_wi_beacon_capa_flag
dummy	MD5_std.h	/^	double dummy;$/;"	m	union:__anon26
dump_add_packet	airodump-ng.c	/^int dump_add_packet( unsigned char *h80211, int caplen, struct rx_info *ri, int cardnum )$/;"	f
dump_add_packet	ivstools.c	/^int dump_add_packet( unsigned char *h80211, unsigned caplen)$/;"	f
dump_initialize	airbase-ng.c	/^int dump_initialize( char *prefix )$/;"	f
dump_initialize	airodump-ng.c	/^int dump_initialize( char *prefix, int ivs_only )$/;"	f
dump_out_mmx	memory.c	/^void dump_out_mmx(void *buf, unsigned int size, unsigned int index) {$/;"	f
dump_out_mmx_msg	memory.c	/^void dump_out_mmx_msg(const void *msg, void *buf, unsigned int size, unsigned int index) {$/;"	f
dump_out_mmx_msg_sepline	memory.c	/^void dump_out_mmx_msg_sepline(const void *msg, void *buf, unsigned int size, unsigned int index) {$/;"	f
dump_out_mmx_noeol	memory.c	/^void dump_out_mmx_noeol(void *buf, unsigned int size, unsigned int index) {$/;"	f
dump_out_shammx	memory.c	/^void dump_out_shammx(void *buf, unsigned int size, unsigned int index) {$/;"	f
dump_out_shammx64	memory.c	/^void dump_out_shammx64(void *buf, unsigned int size, unsigned int index) {$/;"	f
dump_out_shammx64_msg	memory.c	/^void dump_out_shammx64_msg(const void *msg, void *buf, unsigned int size, unsigned int index) {$/;"	f
dump_out_shammx_msg	memory.c	/^void dump_out_shammx_msg(const void *msg, void *buf, unsigned int size, unsigned int index) {$/;"	f
dump_packet	aireplay-ng.c	/^void dump_packet(unsigned char* packet, int len)$/;"	f
dump_packet	tkiptun-ng.c	/^void dump_packet(unsigned char* packet, int len)$/;"	f
dump_prefix	airbase-ng.c	/^    char *dump_prefix;$/;"	m	struct:options	file:
dump_prefix	airodump-ng.h	/^    char *dump_prefix;$/;"	m	struct:globals
dump_print	airodump-ng.c	/^void dump_print( int ws_row, int ws_col, int if_num )$/;"	f
dump_sort	airodump-ng.c	/^void dump_sort( void )$/;"	f
dump_stuff	memory.c	/^void dump_stuff(void* x, unsigned int size)$/;"	f
dump_stuff_be	memory.c	/^void dump_stuff_be(void* x, unsigned int size)$/;"	f
dump_stuff_be_msg	memory.c	/^void dump_stuff_be_msg(const void *msg, void *x, unsigned int size) {$/;"	f
dump_stuff_be_msg_sepline	memory.c	/^void dump_stuff_be_msg_sepline(const void *msg, void *x, unsigned int size) {$/;"	f
dump_stuff_be_noeol	memory.c	/^void dump_stuff_be_noeol(void *x, unsigned int size) {$/;"	f
dump_stuff_mmx	memory.c	/^void dump_stuff_mmx(void *buf, unsigned int size, unsigned int index) {$/;"	f
dump_stuff_mmx64	memory.c	/^void dump_stuff_mmx64(void *buf, unsigned int size, unsigned int index) {$/;"	f
dump_stuff_mmx64_msg	memory.c	/^void dump_stuff_mmx64_msg(const void *msg, void *buf, unsigned int size, unsigned int index) {$/;"	f
dump_stuff_mmx_msg	memory.c	/^void dump_stuff_mmx_msg(const void *msg, void *buf, unsigned int size, unsigned int index) {$/;"	f
dump_stuff_mmx_msg_sepline	memory.c	/^void dump_stuff_mmx_msg_sepline(const void *msg, void *buf, unsigned int size, unsigned int index) {$/;"	f
dump_stuff_mmx_noeol	memory.c	/^void dump_stuff_mmx_noeol(void *buf, unsigned int size, unsigned int index) {$/;"	f
dump_stuff_mpara_mmx	memory.c	/^void dump_stuff_mpara_mmx(void *buf, unsigned int size, unsigned int index) {$/;"	f
dump_stuff_mpara_mmx_msg	memory.c	/^void dump_stuff_mpara_mmx_msg(const void *msg, void *buf, unsigned int size, unsigned int index) {$/;"	f
dump_stuff_mpara_mmx_msg_sepline	memory.c	/^void dump_stuff_mpara_mmx_msg_sepline(const void *msg, void *buf, unsigned int size, unsigned int index) {$/;"	f
dump_stuff_mpara_mmx_noeol	memory.c	/^void dump_stuff_mpara_mmx_noeol(void *buf, unsigned int size, unsigned int index) {$/;"	f
dump_stuff_msg	memory.c	/^void dump_stuff_msg(const void *msg, void *x, unsigned int size) {$/;"	f
dump_stuff_msg_sepline	memory.c	/^void dump_stuff_msg_sepline(const void *msg, void *x, unsigned int size) {$/;"	f
dump_stuff_noeol	memory.c	/^void dump_stuff_noeol(void *x, unsigned int size)$/;"	f
dump_stuff_shammx	memory.c	/^void dump_stuff_shammx(void *buf, unsigned int size, unsigned int index) {$/;"	f
dump_stuff_shammx64	memory.c	/^void dump_stuff_shammx64(void *buf, unsigned int size, unsigned int index) {$/;"	f
dump_stuff_shammx64_msg	memory.c	/^void dump_stuff_shammx64_msg(const void *msg, void *buf, unsigned int size, unsigned int index) {$/;"	f
dump_stuff_shammx_msg	memory.c	/^void dump_stuff_shammx_msg(const void *msg, void *buf, unsigned int size, unsigned int index) {$/;"	f
dump_text	memory.c	/^void dump_text(void *in, int len)$/;"	f
dump_write_csv	airodump-ng.c	/^int dump_write_csv( void )$/;"	f
dump_write_kismet_csv	airodump-ng.c	/^int dump_write_kismet_csv( void )$/;"	f
dump_write_kismet_netxml	airodump-ng.c	/^int dump_write_kismet_netxml( void )$/;"	f
dump_write_kismet_netxml_client_info	airodump-ng.c	/^int dump_write_kismet_netxml_client_info(struct ST_info *client, int client_no)$/;"	f
dumper	besside-ng-crawler.c	/^pcap_dumper_t *dumper;$/;"	v
dumphandle	besside-ng-crawler.c	/^pcap_t *dumphandle;$/;"	v
dup_tag	airconf-parse.c	/^tag_conf* dup_tag(tag_conf *tag)$/;"	f
dupips	include/if_arp.h	/^	uint64_t dupips;	\/* # of duplicate IPs detected. *\/$/;"	m	struct:arpstat
duration	ieee802_11_defs.h	/^	le16 duration;$/;"	m	struct:ieee80211_mgmt
duration	wi_packet.h	/^	uint16_t      duration;$/;"	m	struct:_wi_hdr_t
duration	wi_packet.h	/^	uint16_t   duration;$/;"	m	struct:_wi_ctrl_hdr_t
duration_id	ieee802_11_defs.h	/^	le16 duration_id;$/;"	m	struct:ieee80211_hdr
dv_ti	airbase-ng.c	/^    struct tif *dv_ti;$/;"	m	struct:devices	typeref:struct:devices::tif	file:
dv_ti	airtun-ng.c	/^    struct tif *dv_ti;$/;"	m	struct:devices	typeref:struct:devices::tif	file:
dv_ti2	airbase-ng.c	/^    struct tif *dv_ti2;$/;"	m	struct:devices	typeref:struct:devices::tif	file:
e	MD5_std.h	/^	} e;$/;"	m	struct:__anon28	typeref:struct:__anon28::__anon30
e	ezxml/ezxml.c	/^    char *e;              \/\/ end of work area$/;"	m	struct:ezxml_root	file:
eapol	aircrack-ng.h	/^	int eapol;					 \/* set if EAPOL is present      *\/$/;"	m	struct:AP_info
eapol	crypto.h	/^    unsigned char eapol[256];           \/* eapol frame contents         *\/$/;"	m	struct:WPA_ST_info
eapol	include/eapol.h	/^    uint8_t eapol[256];   \/* eapol frame contents     *\/$/;"	m	struct:WPA_hdsk
eapol_handshake_step	besside-ng.c	/^static int eapol_handshake_step(unsigned char *eapol, int len)$/;"	f	file:
eapol_handshake_step	wpaclean.c	/^static int eapol_handshake_step(unsigned char *eapol, int len)$/;"	f	file:
eapol_size	crypto.h	/^    unsigned eapol_size;            \/* eapol frame size             *\/$/;"	m	struct:WPA_ST_info
eapol_size	include/eapol.h	/^    uint32_t eapol_size;  \/* eapol frame size         *\/$/;"	m	struct:WPA_hdsk
east_state	easside-ng.c	/^struct east_state {$/;"	s	file:
eid	ieee802_11_defs.h	/^	u8 eid;     \/* WLAN_EID_WNMSLEEP *\/$/;"	m	struct:wnm_sleep_element
eid	ieee802_11_defs.h	/^	u8 eid; \/* 221 = 0xdd *\/$/;"	m	struct:wmm_tspec_element
eid	ieee802_11_defs.h	/^	u8 eid; \/* WLAN_EID_MULTI_BAND *\/$/;"	m	struct:multi_band_ie
eid	ieee802_11_defs.h	/^	u8 eid;$/;"	m	struct:tpc_report
el	aircapture.h	/^typedef struct el {$/;"	s
el	aircapture.h	/^} el;$/;"	t	typeref:struct:el
el_list	aircapture.h	/^typedef struct el_list {$/;"	s
el_list	aircapture.h	/^} el_list;$/;"	t	typeref:struct:el_list
elapsed_time	airodump-ng.h	/^    char * elapsed_time;	\/* capture time			*\/$/;"	m	struct:globals
elapsed_timeval	common.c	/^struct timeval elapsed_timeval(const elapsed_tv *tv)$/;"	f
elapsed_tv	common.h	/^} elapsed_tv;$/;"	t	typeref:struct:_elapsed_tv
elapsedd	wesside-ng.c	/^static int elapsedd(struct timeval *past, struct timeval *now)$/;"	f	file:
element_id	ieee802_11_defs.h	/^					u8 element_id;$/;"	m	struct:ieee80211_mgmt::__anon34::__anon43::__anon44::__anon46
element_id	ieee802_11_defs.h	/^	u8 element_id;$/;"	m	struct:ieee80211_2040_bss_coex_ie
element_id	ieee802_11_defs.h	/^	u8 element_id;$/;"	m	struct:ieee80211_2040_intol_chan_report
encrypt	packetforge-ng.c	/^    char encrypt;$/;"	m	struct:options	file:
encrypt_ccmp	crypto.c	/^int encrypt_ccmp( unsigned char *h80211, int caplen, unsigned char TK1[16], unsigned char PN[6] )$/;"	f
encrypt_data	airbase-ng.c	/^int encrypt_data(unsigned char* data, int length)$/;"	f
encrypt_data	airtun-ng.c	/^int encrypt_data(unsigned char *dest, unsigned char* data, int length)$/;"	f
encrypt_data	packetforge-ng.c	/^int encrypt_data(unsigned char *dest, unsigned char* data, int length)$/;"	f
encrypt_wep	crypto.c	/^int encrypt_wep( unsigned char *data, int len, unsigned char *key, int keylen )$/;"	f
end	common.h	/^	struct timeval end;$/;"	m	struct:_elapsed_tv	typeref:struct:_elapsed_tv::timeval
ent	ezxml/ezxml.c	/^    char **ent;           \/\/ general entities (ampersand sequences)$/;"	m	struct:ezxml_root	file:
eof_wait	aircrack-ng.c	/^void eof_wait( int *eof_notified )$/;"	f
eosp	wi_packet.h	/^	uint16_t   eosp:1;$/;"	m	struct:_wi_qos_control
err	ezxml/ezxml.c	/^    char err[EZXML_ERRL]; \/\/ error string$/;"	m	struct:ezxml_root	file:
error	misc.h	107;"	d
error_msg	misc.h	121;"	d
es_apchan	easside-ng.c	/^	int		es_apchan;$/;"	m	struct:east_state	file:
es_apmac	easside-ng.c	/^	unsigned char	es_apmac[6];$/;"	m	struct:east_state	file:
es_apssid	easside-ng.c	/^	char		es_apssid[256];$/;"	m	struct:east_state	file:
es_astate	easside-ng.c	/^	int		es_astate;$/;"	m	struct:east_state	file:
es_buddys	easside-ng.c	/^	int		es_buddys;$/;"	m	struct:east_state	file:
es_chanlock	easside-ng.c	/^	int		es_chanlock;$/;"	m	struct:east_state	file:
es_clear	easside-ng.c	/^	unsigned char	es_clear[S_MTU+4];$/;"	m	struct:east_state	file:
es_clearp	easside-ng.c	/^	unsigned char	*es_clearp;$/;"	m	struct:east_state	file:
es_clearpnext	easside-ng.c	/^	unsigned char	*es_clearpnext;$/;"	m	struct:east_state	file:
es_expand_factor	easside-ng.c	/^	int		es_expand_factor;$/;"	m	struct:east_state	file:
es_expand_len	easside-ng.c	/^	int		es_expand_len;$/;"	m	struct:east_state	file:
es_expand_num	easside-ng.c	/^	int		es_expand_num;$/;"	m	struct:east_state	file:
es_have_arp	easside-ng.c	/^	int		es_have_arp;$/;"	m	struct:east_state	file:
es_have_packet	easside-ng.c	/^	int		es_have_packet;$/;"	m	struct:east_state	file:
es_have_src	easside-ng.c	/^	int		es_have_src;$/;"	m	struct:east_state	file:
es_hopfreq	easside-ng.c	/^	unsigned int	es_hopfreq;$/;"	m	struct:east_state	file:
es_ifname	easside-ng.c	/^	char		es_ifname[256];$/;"	m	struct:east_state	file:
es_iponly	easside-ng.c	/^	int		es_iponly;$/;"	m	struct:east_state	file:
es_iv	easside-ng.c	/^	unsigned char	es_iv[3];$/;"	m	struct:east_state	file:
es_lasthop	easside-ng.c	/^	struct timeval	es_lasthop;$/;"	m	struct:east_state	typeref:struct:east_state::timeval	file:
es_myip	easside-ng.c	/^	struct in_addr	es_myip;$/;"	m	struct:east_state	typeref:struct:east_state::in_addr	file:
es_mymac	easside-ng.c	/^	unsigned char	es_mymac[6];$/;"	m	struct:east_state	file:
es_owned	easside-ng.c	/^	struct owned	*es_owned;$/;"	m	struct:east_state	typeref:struct:east_state::owned	file:
es_packet	easside-ng.c	/^	unsigned char	es_packet[2048];$/;"	m	struct:east_state	file:
es_packet_arp	easside-ng.c	/^	unsigned char	es_packet_arp[2048];$/;"	m	struct:east_state	file:
es_port	easside-ng.c	/^	int		es_port;$/;"	m	struct:east_state	file:
es_prga	easside-ng.c	/^	unsigned char	es_prga[S_MTU+4];$/;"	m	struct:east_state	file:
es_prga_d	easside-ng.c	/^	unsigned char	es_prga_d[S_MTU+4];$/;"	m	struct:east_state	file:
es_prga_div	easside-ng.c	/^	unsigned char	es_prga_div[3];$/;"	m	struct:east_state	file:
es_prga_dlen	easside-ng.c	/^	int		es_prga_dlen;$/;"	m	struct:east_state	file:
es_prgalen	easside-ng.c	/^	int		es_prgalen;$/;"	m	struct:east_state	file:
es_pubip	easside-ng.c	/^	struct in_addr	es_pubip;$/;"	m	struct:east_state	typeref:struct:east_state::in_addr	file:
es_rpacket_id	easside-ng.c	/^	unsigned short	es_rpacket_id;$/;"	m	struct:east_state	file:
es_rqueue	easside-ng.c	/^	struct rpacket	*es_rqueue;$/;"	m	struct:east_state	typeref:struct:east_state::rpacket	file:
es_rtrip	easside-ng.c	/^	struct in_addr	es_rtrip;$/;"	m	struct:east_state	typeref:struct:east_state::in_addr	file:
es_rtrmac	easside-ng.c	/^	unsigned char	es_rtrmac[6];$/;"	m	struct:east_state	file:
es_rtt	easside-ng.c	/^	struct timeval	es_rtt;$/;"	m	struct:east_state	typeref:struct:east_state::timeval	file:
es_rtt_id	easside-ng.c	/^	unsigned short	es_rtt_id;$/;"	m	struct:east_state	file:
es_rxseq	easside-ng.c	/^	int		es_rxseq;$/;"	m	struct:east_state	file:
es_setmac	easside-ng.c	/^	int		es_setmac;$/;"	m	struct:east_state	file:
es_srtt	easside-ng.c	/^	int		es_srtt;$/;"	m	struct:east_state	file:
es_srvip	easside-ng.c	/^	struct in_addr	es_srvip;$/;"	m	struct:east_state	typeref:struct:east_state::in_addr	file:
es_state	easside-ng.c	/^	int		es_state;$/;"	m	struct:east_state	file:
es_tapname	easside-ng.c	/^	char		es_tapname[16];$/;"	m	struct:east_state	file:
es_ti	easside-ng.c	/^	struct tif	*es_ti;$/;"	m	struct:east_state	typeref:struct:east_state::tif	file:
es_txack	easside-ng.c	/^	int		es_txack;$/;"	m	struct:east_state	file:
es_txlast	easside-ng.c	/^	struct timeval	es_txlast;$/;"	m	struct:east_state	typeref:struct:east_state::timeval	file:
es_txseq	easside-ng.c	/^	int		es_txseq;$/;"	m	struct:east_state	file:
es_txto_checkinet	easside-ng.c	/^	int		es_txto_checkinet;$/;"	m	struct:east_state	file:
es_txto_decrypt	easside-ng.c	/^	int		es_txto_decrypt;$/;"	m	struct:east_state	file:
es_txto_expand	easside-ng.c	/^	int		es_txto_expand;$/;"	m	struct:east_state	file:
es_txto_mgt	easside-ng.c	/^	int		es_txto_mgt;$/;"	m	struct:east_state	file:
es_txto_redirect	easside-ng.c	/^	int		es_txto_redirect;$/;"	m	struct:east_state	file:
es_txto_whohas	easside-ng.c	/^	int		es_txto_whohas;$/;"	m	struct:east_state	file:
es_udp_port	easside-ng.c	/^	int		es_udp_port;$/;"	m	struct:east_state	file:
es_wi	easside-ng.c	/^	struct wif	*es_wi;$/;"	m	struct:east_state	typeref:struct:east_state::wif	file:
ess_capa	wi_packet.h	/^	uint16_t   ess_capa:1;$/;"	m	struct:_wi_beacon_capa_flag
essid	airbase-ng.c	/^    char            *essid;$/;"	m	struct:ESSID_list	file:
essid	airbase-ng.c	/^    char *essid;$/;"	m	struct:AP_conf	file:
essid	airbase-ng.c	/^    char essid[256];         \/* last associated essid     *\/$/;"	m	struct:ST_info	file:
essid	aircrack-ng.h	/^	char essid[33];				 \/* access point identifier      *\/$/;"	m	struct:AP_info
essid	aircrack-ng.h	/^	char essid[33];				 \/* target ESSID         *\/$/;"	m	struct:options
essid	airdecap-ng.c	/^    char essid[36];$/;"	m	struct:options	file:
essid	aireplay-ng.c	/^    unsigned char essid[255];$/;"	m	struct:APt	file:
essid	airnodes.c	/^	char essid[MAX_IE_SIZE];      \/* ascii network identifier      *\/$/;"	m	struct:AP_INFO	file:
essid	airodump-ng.h	/^    unsigned char essid[MAX_IE_ELEMENT_SIZE];$/;"	m	struct:AP_info
essid	airtun-ng.c	/^    char essid[36];$/;"	m	struct:options	file:
essid	ivstools.c	/^    unsigned char essid[256]; \/* ascii network identifier *\/$/;"	m	struct:AP_info	file:
essid	tkiptun-ng.c	/^    unsigned char essid[255];$/;"	m	struct:APt	file:
essid_len	airbase-ng.c	/^    int essid_len;$/;"	m	struct:AP_conf	file:
essid_length	airbase-ng.c	/^    int essid_length;        \/* essid length of last asso *\/$/;"	m	struct:ST_info	file:
essid_set	aircrack-ng.h	/^	int essid_set;				 \/* essid set flag       *\/$/;"	m	struct:options
essid_stored	airodump-ng.h	/^    int essid_stored;         \/* essid stored in ivs file? *\/$/;"	m	struct:AP_info
essid_stored	ivstools.c	/^    int essid_stored;         \/* essid stored in ivs file? *\/$/;"	m	struct:AP_info	file:
ether_addr	include/ethernet.h	/^struct ether_addr {$/;"	s
ether_dhost	include/ethernet.h	/^	u_char	ether_dhost[ETHER_ADDR_LEN];$/;"	m	struct:ether_header
ether_header	include/ethernet.h	/^struct ether_header {$/;"	s
ether_shost	include/ethernet.h	/^	u_char	ether_shost[ETHER_ADDR_LEN];$/;"	m	struct:ether_header
ether_type	include/ethernet.h	/^	u_short	ether_type;$/;"	m	struct:ether_header
ether_type	include/if_llc.h	/^		uint16_t ether_type;$/;"	m	struct:llc::__anon6::__anon11
eval	aircrack-ptw-lib.c	/^static const double eval[] = {$/;"	v	file:
even	MD5_std.h	/^	MD5_block *even, *odd;$/;"	m	struct:__anon27
event_start	aircapture.h	/^	int event_start;$/;"	m	struct:_EVENT_SYS
event_sys	aircapture.h	/^	EVENT_SYS event_sys;$/;"	m	struct:_AIRCAP_G
expand_prga	easside-ng.c	/^void expand_prga(struct east_state *es, struct timeval *tv)$/;"	f
expire	airbase-ng.c	/^	time_t          expire;$/;"	m	struct:ESSID_list	file:
export_cowpatty	airolib-ng.c	/^void export_cowpatty(sqlite3* db, char* essid, char* filename) {$/;"	f
external	airbase-ng.c	/^    int external;$/;"	m	struct:options	file:
ezxml	ezxml/ezxml.h	/^struct ezxml {$/;"	s
ezxml_add_child	ezxml/ezxml.c	/^ezxml_t ezxml_add_child(ezxml_t xml, const char *name, size_t off)$/;"	f
ezxml_add_child_d	ezxml/ezxml.h	129;"	d
ezxml_ampencode	ezxml/ezxml.c	/^char *ezxml_ampencode(const char *s, size_t len, char **dst, size_t *dlen,$/;"	f
ezxml_attr	ezxml/ezxml.c	/^const char *ezxml_attr(ezxml_t xml, const char *attr)$/;"	f
ezxml_char_content	ezxml/ezxml.c	/^void ezxml_char_content(ezxml_root_t root, char *s, size_t len, char t)$/;"	f
ezxml_child	ezxml/ezxml.c	/^ezxml_t ezxml_child(ezxml_t xml, const char *name)$/;"	f
ezxml_close_tag	ezxml/ezxml.c	/^ezxml_t ezxml_close_tag(ezxml_root_t root, char *name, char *s)$/;"	f
ezxml_cut	ezxml/ezxml.c	/^ezxml_t ezxml_cut(ezxml_t xml)$/;"	f
ezxml_decode	ezxml/ezxml.c	/^char *ezxml_decode(char *s, char **ent, char t)$/;"	f
ezxml_ent_ok	ezxml/ezxml.c	/^int ezxml_ent_ok(char *name, char *s, char **ent)$/;"	f
ezxml_err	ezxml/ezxml.c	/^ezxml_t ezxml_err(ezxml_root_t root, char *s, const char *err, ...)$/;"	f
ezxml_error	ezxml/ezxml.c	/^const char *ezxml_error(ezxml_t xml)$/;"	f
ezxml_free	ezxml/ezxml.c	/^void ezxml_free(ezxml_t xml)$/;"	f
ezxml_free_attr	ezxml/ezxml.c	/^void ezxml_free_attr(char **attr) {$/;"	f
ezxml_get	ezxml/ezxml.c	/^ezxml_t ezxml_get(ezxml_t xml, ...)$/;"	f
ezxml_idx	ezxml/ezxml.c	/^ezxml_t ezxml_idx(ezxml_t xml, int idx)$/;"	f
ezxml_insert	ezxml/ezxml.c	/^ezxml_t ezxml_insert(ezxml_t xml, ezxml_t dest, size_t off)$/;"	f
ezxml_internal_dtd	ezxml/ezxml.c	/^short ezxml_internal_dtd(ezxml_root_t root, char *s, size_t len)$/;"	f
ezxml_move	ezxml/ezxml.h	158;"	d
ezxml_name	ezxml/ezxml.h	88;"	d
ezxml_new	ezxml/ezxml.c	/^ezxml_t ezxml_new(const char *name)$/;"	f
ezxml_new_d	ezxml/ezxml.h	122;"	d
ezxml_next	ezxml/ezxml.h	81;"	d
ezxml_open_tag	ezxml/ezxml.c	/^void ezxml_open_tag(ezxml_root_t root, char *name, char **attr)$/;"	f
ezxml_parse_fd	ezxml/ezxml.c	/^ezxml_t ezxml_parse_fd(int fd)$/;"	f
ezxml_parse_file	ezxml/ezxml.c	/^ezxml_t ezxml_parse_file(const char *file)$/;"	f
ezxml_parse_fp	ezxml/ezxml.c	/^ezxml_t ezxml_parse_fp(FILE *fp)$/;"	f
ezxml_parse_str	ezxml/ezxml.c	/^ezxml_t ezxml_parse_str(char *s, size_t len)$/;"	f
ezxml_pi	ezxml/ezxml.c	/^const char **ezxml_pi(ezxml_t xml, const char *target)$/;"	f
ezxml_proc_inst	ezxml/ezxml.c	/^void ezxml_proc_inst(ezxml_root_t root, char *s, size_t len)$/;"	f
ezxml_remove	ezxml/ezxml.h	161;"	d
ezxml_root	ezxml/ezxml.c	/^struct ezxml_root {       \/\/ additional data for the root tag$/;"	s	file:
ezxml_root_t	ezxml/ezxml.c	/^typedef struct ezxml_root *ezxml_root_t;$/;"	t	typeref:struct:ezxml_root	file:
ezxml_set_attr	ezxml/ezxml.c	/^ezxml_t ezxml_set_attr(ezxml_t xml, const char *name, const char *value)$/;"	f
ezxml_set_attr_d	ezxml/ezxml.h	144;"	d
ezxml_set_flag	ezxml/ezxml.c	/^ezxml_t ezxml_set_flag(ezxml_t xml, short flag)$/;"	f
ezxml_set_txt	ezxml/ezxml.c	/^ezxml_t ezxml_set_txt(ezxml_t xml, const char *txt)$/;"	f
ezxml_set_txt_d	ezxml/ezxml.h	136;"	d
ezxml_str2utf8	ezxml/ezxml.c	/^char *ezxml_str2utf8(char **s, size_t *len)$/;"	f
ezxml_t	ezxml/ezxml.h	/^typedef struct ezxml *ezxml_t;$/;"	t	typeref:struct:ezxml
ezxml_toxml	ezxml/ezxml.c	/^char *ezxml_toxml(ezxml_t xml)$/;"	f
ezxml_toxml_r	ezxml/ezxml.c	/^char *ezxml_toxml_r(ezxml_t xml, char **s, size_t *len, size_t *max,$/;"	f
ezxml_txt	ezxml/ezxml.h	91;"	d
ezxml_vget	ezxml/ezxml.c	/^ezxml_t ezxml_vget(ezxml_t xml, va_list ap)$/;"	f
f_bssid	airbase-ng.c	/^    unsigned char f_bssid[6];$/;"	m	struct:options	file:
f_bssid	aireplay-ng.c	/^    unsigned char f_bssid[6];$/;"	m	struct:options	file:
f_bssid	airodump-ng.h	/^    unsigned char f_bssid[6];$/;"	m	struct:globals
f_bssid	airtun-ng.c	/^    unsigned char f_bssid[6];$/;"	m	struct:options	file:
f_bssid	tkiptun-ng.c	/^    unsigned char f_bssid[6];$/;"	m	struct:options	file:
f_cap	airbase-ng.c	/^    FILE *f_cap;            \/* output cap file      *\/$/;"	m	struct:options	file:
f_cap	airodump-ng.h	/^    FILE *f_cap;            \/* output cap file      *\/$/;"	m	struct:globals
f_cap_in	airbase-ng.c	/^    FILE *f_cap_in;$/;"	m	struct:devices	file:
f_cap_in	aireplay-ng.c	/^    FILE *f_cap_in;$/;"	m	struct:devices	file:
f_cap_in	airodump-ng.h	/^    FILE *f_cap_in;$/;"	m	struct:globals
f_cap_in	airtun-ng.c	/^    FILE *f_cap_in;$/;"	m	struct:devices	file:
f_cap_in	osdep/linux.c	/^    FILE *f_cap_in;$/;"	m	struct:priv_linux	file:
f_cap_in	packetforge-ng.c	/^    FILE *f_cap_in;$/;"	m	struct:devices	file:
f_cap_in	tkiptun-ng.c	/^    FILE *f_cap_in;$/;"	m	struct:devices	file:
f_cap_name	airbase-ng.c	/^    char *f_cap_name;$/;"	m	struct:options	file:
f_cap_name	airodump-ng.h	/^    char *f_cap_name;$/;"	m	struct:globals
f_crc	crypto.h	/^    unsigned long f_crc;        \/* last FromDS frame CRC        *\/$/;"	m	struct:WPA_ST_info
f_dmac	aireplay-ng.c	/^    unsigned char f_dmac[6];$/;"	m	struct:options	file:
f_dmac	tkiptun-ng.c	/^    unsigned char f_dmac[6];$/;"	m	struct:options	file:
f_encrypt	airodump-ng.h	/^    int f_encrypt;          \/* encryption filter    *\/$/;"	m	struct:globals
f_essid	airbase-ng.c	/^    int f_essid;$/;"	m	struct:options	file:
f_essid	airodump-ng.h	/^    char **f_essid;$/;"	m	struct:globals
f_essid_count	airodump-ng.h	/^    int f_essid_count;$/;"	m	struct:globals
f_essid_regex	airodump-ng.h	/^    pcre *f_essid_regex;$/;"	m	struct:globals
f_ext	airodump-ng.h	/^char *f_ext[NB_EXTENSIONS] = { AIRODUMP_NG_CSV_EXT, AIRODUMP_NG_GPS_EXT, AIRODUMP_NG_CAP_EXT, IVS2_EXTENSION, KISMET_CSV_EXT, KISMET_NETXML_EXT };$/;"	v
f_fromds	aireplay-ng.c	/^    int f_fromds;$/;"	m	struct:options	file:
f_fromds	tkiptun-ng.c	/^    int f_fromds;$/;"	m	struct:options	file:
f_gps	airodump-ng.h	/^    FILE *f_gps;            \/* output gps file      *\/$/;"	m	struct:globals
f_index	airbase-ng.c	/^    int f_index;            \/* outfiles index       *\/$/;"	m	struct:options	file:
f_index	airodump-ng.h	/^    int f_index;            \/* outfiles index       *\/$/;"	m	struct:globals
f_iswep	aireplay-ng.c	/^    int f_iswep;$/;"	m	struct:options	file:
f_iswep	tkiptun-ng.c	/^    int f_iswep;$/;"	m	struct:options	file:
f_ivs	airodump-ng.h	/^    FILE *f_ivs;            \/* output ivs file      *\/$/;"	m	struct:globals
f_ivs	ivstools.c	/^    FILE *f_ivs;            \/* output ivs file      *\/$/;"	m	struct:globals	file:
f_ivs	tkiptun-ng.c	/^    FILE *f_ivs;            \/* output ivs file      *\/$/;"	m	struct:options	file:
f_kis	airodump-ng.h	/^    FILE *f_kis;            \/* output kismet csv file      *\/$/;"	m	struct:globals
f_kis_xml	airodump-ng.h	/^    FILE *f_kis_xml;        \/* output kismet netxml file *\/$/;"	m	struct:globals
f_maxlen	aireplay-ng.c	/^    int f_maxlen;$/;"	m	struct:options	file:
f_maxlen	tkiptun-ng.c	/^    int f_maxlen;$/;"	m	struct:options	file:
f_maxlen_set	tkiptun-ng.c	/^    int f_maxlen_set;$/;"	m	struct:options	file:
f_minlen	aireplay-ng.c	/^    int f_minlen;$/;"	m	struct:options	file:
f_minlen	tkiptun-ng.c	/^    int f_minlen;$/;"	m	struct:options	file:
f_minlen_set	tkiptun-ng.c	/^    int f_minlen_set;$/;"	m	struct:options	file:
f_netmask	airbase-ng.c	/^    unsigned char f_netmask[6];$/;"	m	struct:options	file:
f_netmask	airodump-ng.h	/^    unsigned char f_netmask[6];$/;"	m	struct:globals
f_netmask	airtun-ng.c	/^    unsigned char f_netmask[6];$/;"	m	struct:options	file:
f_retry	aireplay-ng.c	/^	int f_retry;$/;"	m	struct:options	file:
f_smac	aireplay-ng.c	/^    unsigned char f_smac[6];$/;"	m	struct:options	file:
f_smac	tkiptun-ng.c	/^    unsigned char f_smac[6];$/;"	m	struct:options	file:
f_subtype	aireplay-ng.c	/^    int f_subtype;$/;"	m	struct:options	file:
f_subtype	tkiptun-ng.c	/^    int f_subtype;$/;"	m	struct:options	file:
f_tods	aireplay-ng.c	/^    int f_tods;$/;"	m	struct:options	file:
f_tods	tkiptun-ng.c	/^    int f_tods;$/;"	m	struct:options	file:
f_txt	airodump-ng.h	/^    FILE *f_txt;            \/* output csv file      *\/$/;"	m	struct:globals
f_type	aireplay-ng.c	/^    int f_type;$/;"	m	struct:options	file:
f_type	tkiptun-ng.c	/^    int f_type;$/;"	m	struct:options	file:
f_xor	airbase-ng.c	/^    FILE *f_xor;            \/* output prga file     *\/$/;"	m	struct:options	file:
f_xor	airodump-ng.h	/^    FILE *f_xor;            \/* output prga file     *\/$/;"	m	struct:globals
false	airdecloak-ng.h	/^typedef enum {false, true} BOOLEAN;$/;"	e	enum:__anon68
fast	aireplay-ng.c	/^    int fast;$/;"	m	struct:options	file:
fast	tkiptun-ng.c	/^    int fast;$/;"	m	struct:options	file:
fbsd_close	osdep/freebsd.c	/^static void fbsd_close(struct wif *wi)$/;"	f	file:
fbsd_fd	osdep/freebsd.c	/^static int fbsd_fd(struct wif *wi)$/;"	f	file:
fbsd_get_channel	osdep/freebsd.c	/^static int fbsd_get_channel(struct wif *wi)$/;"	f	file:
fbsd_get_mac	osdep/freebsd.c	/^static int fbsd_get_mac(struct wif *wi, unsigned char *mac)$/;"	f	file:
fbsd_get_monitor	osdep/freebsd.c	/^static int fbsd_get_monitor(struct wif *wi)$/;"	f	file:
fbsd_get_mtu	osdep/freebsd.c	/^static int fbsd_get_mtu(struct wif *wi)$/;"	f	file:
fbsd_get_rate	osdep/freebsd.c	/^static int fbsd_get_rate(struct wif *wi)$/;"	f	file:
fbsd_open	osdep/freebsd.c	/^static struct wif *fbsd_open(char *iface)$/;"	f	file:
fbsd_read	osdep/freebsd.c	/^static int fbsd_read(struct wif *wi, unsigned char *h80211, int len,$/;"	f	file:
fbsd_set_channel	osdep/freebsd.c	/^static int fbsd_set_channel(struct wif *wi, int chan)$/;"	f	file:
fbsd_set_mac	osdep/freebsd.c	/^static int fbsd_set_mac(struct wif *wi, unsigned char *mac)$/;"	f	file:
fbsd_set_mtu	osdep/freebsd.c	/^static int fbsd_set_mtu(struct wif *wi, int mtu)$/;"	f	file:
fbsd_set_rate	osdep/freebsd.c	/^static int fbsd_set_rate(struct wif *wi, int rate)$/;"	f	file:
fbsd_write	osdep/freebsd.c	/^static int fbsd_write(struct wif *wi, unsigned char *h80211, int len,$/;"	f	file:
fc	wi_packet.h	/^	wi_fc_t       fc;        \/\/ 2 byte$/;"	m	struct:_wi_hdr_t
fc	wi_packet.h	/^	wi_fc_t    fc;$/;"	m	struct:_wi_ctrl_hdr_t
fcapt	airnodes.c	/^	int fcapt;                    \/* amount of captured frames     *\/$/;"	m	struct:AP_INFO	file:
fcapt	airodump-ng.h	/^    int    fcapt;             \/* amount of captured frames   *\/$/;"	m	struct:AP_info
fcshdr	osdep/radiotap/parse.c	/^static int fcshdr = 0;$/;"	v	file:
fctrl	packetforge-ng.c	/^    unsigned char fctrl[2];$/;"	m	struct:options	file:
fd	log.h	/^	int fd;$/;"	m	struct:_LOG_CTX
fd_in	airbase-ng.c	/^    int fd_in,  arptype_in;$/;"	m	struct:devices	file:
fd_in	aireplay-ng.c	/^    int fd_in,  arptype_in;$/;"	m	struct:devices	file:
fd_in	airtun-ng.c	/^    int fd_in,  arptype_in;$/;"	m	struct:devices	file:
fd_in	osdep/linux.c	/^    int fd_in,  arptype_in;$/;"	m	struct:priv_linux	file:
fd_in	packetforge-ng.c	/^    int fd_in,  arptype_in;$/;"	m	struct:devices	file:
fd_in	tkiptun-ng.c	/^    int fd_in,  arptype_in;$/;"	m	struct:devices	file:
fd_main	osdep/linux.c	/^    int fd_main;$/;"	m	struct:priv_linux	file:
fd_out	airbase-ng.c	/^    int fd_out, arptype_out;$/;"	m	struct:devices	file:
fd_out	aireplay-ng.c	/^    int fd_out, arptype_out;$/;"	m	struct:devices	file:
fd_out	airtun-ng.c	/^    int fd_out, arptype_out;$/;"	m	struct:devices	file:
fd_out	osdep/linux.c	/^    int fd_out, arptype_out;$/;"	m	struct:priv_linux	file:
fd_out	packetforge-ng.c	/^    int fd_out, arptype_out;$/;"	m	struct:devices	file:
fd_out	tkiptun-ng.c	/^    int fd_out, arptype_out;$/;"	m	struct:devices	file:
fd_rtc	airbase-ng.c	/^    int fd_rtc;$/;"	m	struct:devices	file:
fd_rtc	aireplay-ng.c	/^    int fd_rtc;$/;"	m	struct:devices	file:
fd_rtc	airtun-ng.c	/^    int fd_rtc;$/;"	m	struct:devices	file:
fd_rtc	osdep/linux.c	/^    int fd_rtc;$/;"	m	struct:priv_linux	file:
fd_rtc	packetforge-ng.c	/^    int fd_rtc;$/;"	m	struct:devices	file:
fd_rtc	tkiptun-ng.c	/^    int fd_rtc;$/;"	m	struct:devices	file:
ffact	aircrack-ng.h	/^	float ffact;				 \/* bruteforce factor    *\/$/;"	m	struct:options
field	osdep/radiotap/radiotap_iter.h	/^	uint8_t field;$/;"	m	struct:radiotap_override
file_close	osdep/file.c	/^static void file_close(struct wif *wi)$/;"	f	file:
file_fd	osdep/file.c	/^static int file_fd(struct wif *wi)$/;"	f	file:
file_get_channel	osdep/file.c	/^static int file_get_channel(struct wif *wi)$/;"	f	file:
file_get_mac	osdep/file.c	/^static int file_get_mac(struct wif *wi, unsigned char *mac)$/;"	f	file:
file_get_monitor	osdep/file.c	/^static int file_get_monitor(struct wif *wi)$/;"	f	file:
file_get_rate	osdep/file.c	/^static int file_get_rate(struct wif *wi)$/;"	f	file:
file_open	osdep/file.c	/^struct wif *file_open(char *iface)$/;"	f
file_read	osdep/file.c	/^static int file_read(struct wif *wi, unsigned char *h80211, int len,$/;"	f	file:
file_set_channel	osdep/file.c	/^static int file_set_channel(struct wif *wi, int chan)$/;"	f	file:
file_set_rate	osdep/file.c	/^static int file_set_rate(struct wif *wi, int rate)$/;"	f	file:
file_write	osdep/file.c	/^static int file_write(struct wif *wi, unsigned char *h80211, int len,$/;"	f	file:
file_write_interval	airodump-ng.h	/^    int file_write_interval;$/;"	m	struct:globals
fill_basic	besside-ng.c	/^static void fill_basic(struct network *n, struct ieee80211_frame *wh)$/;"	f	file:
fill_basic	easside-ng.c	/^void fill_basic(struct east_state *es, struct ieee80211_frame *wh)$/;"	f
fill_basic	wesside-ng.c	/^static void fill_basic(struct wstate *ws, struct ieee80211_frame* wh)$/;"	f	file:
filter	airbase-ng.c	/^    int filter;$/;"	m	struct:options	file:
filter_packet	aireplay-ng.c	/^int filter_packet( unsigned char *h80211, int caplen )$/;"	f
filter_packet	tkiptun-ng.c	/^int filter_packet( unsigned char *h80211, int caplen )$/;"	f
final	airbase-ng.c	/^    unsigned char           final[4096];    \/* final frame derived from orig *\/$/;"	m	struct:CF_packet	file:
finallen	airbase-ng.c	/^    int             finallen;       \/* length of frame in final[]    *\/$/;"	m	struct:CF_packet	file:
find_add_client	wpaclean.c	/^static struct client *find_add_client(struct network *n, unsigned char *mac)$/;"	f	file:
find_add_net	wpaclean.c	/^static struct network *find_add_net(unsigned char *bssid)$/;"	f	file:
find_client	wpaclean.c	/^static struct client *find_client(struct network *n, unsigned char *mac)$/;"	f	file:
find_entry	airtun-ng.c	/^struct net_entry *find_entry(unsigned char *adress) {$/;"	f
find_hash	hashtable.c	/^void *find_hash(hash_ctx_t *ctx, const void *data)$/;"	f
find_ip	easside-ng.c	/^void find_ip(struct east_state *es, struct timeval *tv)$/;"	f
find_mac	wesside-ng.c	/^static int find_mac(struct wstate *ws)$/;"	f	file:
find_net	wpaclean.c	/^static struct network *find_net(unsigned char *b)$/;"	f	file:
find_ns	osdep/radiotap/radiotap.c	/^static void find_ns(struct ieee80211_radiotap_iterator *iterator,$/;"	f	file:
find_override	osdep/radiotap/radiotap.c	/^static int find_override(struct ieee80211_radiotap_iterator *iterator,$/;"	f	file:
find_tag	airconf-parse.c	/^tag_conf *find_tag(tag_conf *first, uint8_t id)$/;"	f
find_tag_vendor	airconf-parse.c	/^tag_conf *find_tag_vendor(tag_conf *first, uint8_t *oui)$/;"	f
first	airdecloak-ng.h	/^	struct packet_elt *first;$/;"	m	struct:packet_elt_header	typeref:struct:packet_elt_header::packet_elt
first_packet	packetforge-ng.c	/^    int first_packet;$/;"	m	struct:options	file:
first_shoot_tv	airshooter.h	/^	struct timeval first_shoot_tv;$/;"	m	struct:_AIRSHOOT_G	typeref:struct:_AIRSHOOT_G::timeval
firstbssid	aircrack-ng.h	/^	unsigned char *firstbssid;$/;"	m	struct:options
fix_beacon	wpaclean.c	/^static void fix_beacon(struct network *n)$/;"	f	file:
fixed_nonce	airbase-ng.c	/^    unsigned char fixed_nonce[32];$/;"	m	struct:options	file:
flags	aircrack-ng.h	/^	char *flags;				\/* Feature Flags	*\/$/;"	m	struct:_cpuinfo
flags	ezxml/ezxml.h	/^    short flags;     \/\/ additional information$/;"	m	struct:ezxml
flags	pcap.h	/^    uint16_t  flags;$/;"	m	struct:ivs2_pkthdr
flags	wi_packet.h	/^	wi_flags_t flags;            \/\/ 1 byte$/;"	m	struct:_wi_fc_t
flood	wesside-ng.c	/^static int flood(struct wstate *ws)$/;"	f	file:
flushESSID	airbase-ng.c	/^void flushESSID(void)$/;"	f
fmiss	airnodes.c	/^	int fmiss;                    \/* amount of missed frames       *\/$/;"	m	struct:AP_INFO	file:
fmiss	airodump-ng.h	/^    int    fmiss;             \/* amount of missed frames     *\/$/;"	m	struct:AP_info
fnseq	besside-ng.c	/^static unsigned short fnseq(unsigned short fn, unsigned short seq)$/;"	f	file:
fnseq	easside-ng.c	/^unsigned short fnseq(unsigned short fn, unsigned short seq) {$/;"	f
fnseq	wesside-ng.c	/^static unsigned short fnseq(unsigned short fn, unsigned short seq)$/;"	f	file:
for_each_t	MD5_std.h	150;"	d
for_each_t	MD5_std.h	162;"	d
for_each_t	MD5_std.h	171;"	d
for_me_and_from_ap	easside-ng.c	/^int for_me_and_from_ap(struct east_state *es, struct ieee80211_frame *wh)$/;"	f
for_us	besside-ng.c	/^static int for_us(struct ieee80211_frame *wh)$/;"	f	file:
forced_amode	aircrack-ng.h	/^        int forced_amode;	\/* signals disregarding automatic detection of encryption type *\/$/;"	m	struct:options
forceska	airbase-ng.c	/^    int forceska;$/;"	m	struct:options	file:
forge_arp	packetforge-ng.c	/^int forge_arp()$/;"	f
forge_custom	packetforge-ng.c	/^int forge_custom()$/;"	f
forge_icmp	packetforge-ng.c	/^int forge_icmp()$/;"	f
forge_null	packetforge-ng.c	/^int forge_null()$/;"	f
forge_udp	packetforge-ng.c	/^int forge_udp()$/;"	f
format_id	include/if_llc.h	/^		uint8_t format_id;$/;"	m	struct:llc::__anon6::__anon7
format_text_for_csv	airodump-ng.c	/^char * format_text_for_csv( const unsigned char * input, int len)$/;"	f
found	aireplay-ng.c	/^    unsigned char found;$/;"	m	struct:APt	file:
found	tkiptun-ng.c	/^    unsigned char found;$/;"	m	struct:APt	file:
found_mac	besside-ng.c	/^static void found_mac(struct network *n)$/;"	f	file:
found_net_addr	easside-ng.c	/^void found_net_addr(struct east_state *es, unsigned char *a)$/;"	f
found_new_client	besside-ng.c	/^static void found_new_client(struct network *n, struct client *c)$/;"	f	file:
found_new_network	besside-ng.c	/^static void found_new_network(struct network *n)$/;"	f	file:
found_ssid	besside-ng.c	/^static void found_ssid(struct network *n)$/;"	f	file:
fp	log.h	/^	FILE *fp;$/;"	m	struct:_LOG_CTX
frag_number	wi_packet.h	/^	uint16_t    frag_number:4;$/;"	m	struct:_wi_fragseq_t
frag_seq	wi_packet.h	/^	wi_fragseq_t frag_seq;$/;"	m	struct:_wi_hdr_t
frag_state	wesside-ng.c	/^struct frag_state {$/;"	s	file:
fraglen	airbase-ng.c	/^    int             fraglen[3];     \/* fragmentation frame lengths   *\/$/;"	m	struct:CF_packet	file:
fragment	airbase-ng.c	/^    unsigned char*  fragment[16];$/;"	m	struct:Fragment_list	file:
fragment	airtun-ng.c	/^    unsigned char*  fragment[16];$/;"	m	struct:Fragment_list	file:
fragment	wi_packet.h	/^	uint16_t   fragment:4;$/;"	m	struct:_wi_ctrl_ba_starting_sequence_control
fragment_number	airdecloak-ng.h	/^    int fragment_number;$/;"	m	struct:packet_elt
fragmentlen	airbase-ng.c	/^    short           fragmentlen[16];$/;"	m	struct:Fragment_list	file:
fragmentlen	airtun-ng.c	/^    short           fragmentlen[16];$/;"	m	struct:Fragment_list	file:
fragnum	airbase-ng.c	/^    char            fragnum;$/;"	m	struct:Fragment_list	file:
fragnum	airbase-ng.c	/^    unsigned char   fragnum;        \/* number of fragments to send   *\/$/;"	m	struct:CF_packet	file:
fragnum	airtun-ng.c	/^    char            fragnum;$/;"	m	struct:Fragment_list	file:
frags	airbase-ng.c	/^    unsigned char           frags[3][128];  \/* first fragments to fill a gap *\/$/;"	m	struct:CF_packet	file:
frame_control	ieee802_11_defs.h	/^	le16 frame_control;$/;"	m	struct:ieee80211_hdr
frame_control	ieee802_11_defs.h	/^	le16 frame_control;$/;"	m	struct:ieee80211_mgmt
frame_ctrl	h80211_types.h	/^	frame_ctrl = 0x01,$/;"	e	enum:h80211_frame
frame_data	h80211_types.h	/^	frame_data = 0x02,$/;"	e	enum:h80211_frame
frame_mgnt	h80211_types.h	/^	frame_mgnt = 0x00,$/;"	e	enum:h80211_frame
frame_subtype	airdecloak-ng.h	/^    int frame_subtype; \/\/ Not yet filled but will do$/;"	m	struct:packet_elt
frame_type	airdecloak-ng.h	/^    int frame_type; 			\/* MGMT, CTRL, DATA *\/$/;"	m	struct:packet_elt
free	memdbg.h	143;"	d
free	memdbg.h	155;"	d
free	memory.c	71;"	d	file:
free_aircapture_g	aircapture.c	/^void free_aircapture_g(AIRCAP_G* g)$/;"	f
free_airshoot_g	airshooter.c	/^void free_airshoot_g(AIRSHOOT_G* g)$/;"	f
free_bsslist	besside-ng-crawler.c	/^void free_bsslist(struct bsslist *bsl) {$/;"	f
free_hash_ctx	hashtable.c	/^void free_hash_ctx(hash_ctx_t *ctx)$/;"	f
free_nodes_info	airnodes.c	/^void free_nodes_info(NODES_INFO *nodes) {$/;"	f
free_ssecore	wpapsk.c	/^void free_ssecore(int threadid) {$/;"	f
free_tag	airconf-parse.c	/^int free_tag(tag_conf *first)$/;"	f
freq	osdep/channel.h	/^	unsigned short freq;$/;"	m	struct:wif_ch
freq	osdep/linux.c	/^    int freq;$/;"	m	struct:priv_linux	file:
freqoption	airodump-ng.h	/^    int freqoption;$/;"	m	struct:globals
freqstring	airodump-ng.h	/^    char *freqstring;$/;"	m	struct:globals
frequencies	airodump-ng.h	/^int *frequencies;$/;"	v
frequency	airodump-ng.h	/^    int frequency[MAX_CARDS];           \/* current frequency #    *\/$/;"	m	struct:globals
frequency_hopper	airodump-ng.c	/^void frequency_hopper(struct wif *wi[], int if_num, int chan_count, pid_t parent)$/;"	f
frmr_cause	include/if_llc.h	/^		uint8_t frmr_cause;$/;"	m	struct:llc::__anon6::__anon10
frmr_cause	include/if_llc.h	/^	uint8_t frmr_cause;$/;"	m	struct:frmrinfo
frmr_control	include/if_llc.h	/^		uint8_t frmr_control;$/;"	m	struct:llc::__anon6::__anon10
frmr_control	include/if_llc.h	/^	uint8_t frmr_control;$/;"	m	struct:frmrinfo
frmr_control_ext	include/if_llc.h	/^		uint8_t frmr_control_ext;$/;"	m	struct:llc::__anon6::__anon10
frmr_control_ext	include/if_llc.h	/^	uint8_t frmr_control_ext;$/;"	m	struct:frmrinfo
frmr_rej_pdu0	include/if_llc.h	/^		uint8_t frmr_rej_pdu0;$/;"	m	struct:llc::__anon6::__anon10
frmr_rej_pdu0	include/if_llc.h	/^	uint8_t frmr_rej_pdu0;$/;"	m	struct:frmrinfo
frmr_rej_pdu1	include/if_llc.h	/^		uint8_t frmr_rej_pdu1;$/;"	m	struct:llc::__anon6::__anon10
frmr_rej_pdu1	include/if_llc.h	/^	uint8_t frmr_rej_pdu1;$/;"	m	struct:frmrinfo
frmrinfo	include/if_llc.h	/^struct frmrinfo {$/;"	s
fromDS	airdecloak-ng.h	/^    int fromDS;$/;"	m	struct:packet_elt
from_me	easside-ng.c	/^int from_me(struct east_state *es, struct ieee80211_frame *wh)$/;"	f
fromds	packetforge-ng.c	/^    char fromds;$/;"	m	struct:options	file:
fromds	wi_packet.h	/^	uint8_t   fromds:1;$/;"	m	struct:_wi_flags_t
front	aircrack-ng.h	/^	int front;						\/* front marker for the circular buffers *\/$/;"	m	struct:WPA_data
fs_data	wesside-ng.c	/^	unsigned char		*fs_data;$/;"	m	struct:frag_state	file:
fs_last	wesside-ng.c	/^	struct timeval		fs_last;$/;"	m	struct:frag_state	typeref:struct:frag_state::timeval	file:
fs_len	wesside-ng.c	/^	int			fs_len;$/;"	m	struct:frag_state	file:
fs_ptr	wesside-ng.c	/^	unsigned char		*fs_ptr;$/;"	m	struct:frag_state	file:
fs_waiting_relay	wesside-ng.c	/^	int			fs_waiting_relay;$/;"	m	struct:frag_state	file:
fs_wh	wesside-ng.c	/^	struct ieee80211_frame	fs_wh;$/;"	m	struct:frag_state	typeref:struct:frag_state::ieee80211_frame	file:
fseek	common.h	38;"	d
fseek	common.h	39;"	d
fseeko64	common.c	/^int fseeko64(FILE* fp, int64_t offset, int whence) {$/;"	f
fst_action	ieee802_11_defs.h	/^				} STRUCT_PACKED fst_action;$/;"	m	union:ieee80211_mgmt::__anon34::__anon43::__anon44	typeref:struct:ieee80211_mgmt::__anon34::__anon43::__anon44::__anon59
fst_action	ieee802_11_defs.h	/^enum fst_action {$/;"	g
fst_session_tmout	ieee802_11_defs.h	/^	u8 fst_session_tmout;$/;"	m	struct:multi_band_ie
ft_action_req	ieee802_11_defs.h	/^				} STRUCT_PACKED ft_action_req;$/;"	m	union:ieee80211_mgmt::__anon34::__anon43::__anon44	typeref:struct:ieee80211_mgmt::__anon34::__anon43::__anon44::__anon47
ft_action_resp	ieee802_11_defs.h	/^				} STRUCT_PACKED ft_action_resp;$/;"	m	union:ieee80211_mgmt::__anon34::__anon43::__anon44	typeref:struct:ieee80211_mgmt::__anon34::__anon43::__anon44::__anon48
ftello	common.h	40;"	d
ftello	common.h	41;"	d
ftello64	common.c	/^int64_t ftello64(FILE * fp) {$/;"	f
ftimef	airnodes.c	/^	struct timeval ftimef;        \/* time of first frame           *\/$/;"	m	struct:AP_INFO	typeref:struct:AP_INFO::timeval	file:
ftimef	airodump-ng.h	/^    struct timeval ftimef;    \/* time of first frame         *\/$/;"	m	struct:AP_info	typeref:struct:AP_info::timeval
ftimel	airnodes.c	/^	struct timeval ftimel;        \/* time of last frame            *\/$/;"	m	struct:AP_INFO	typeref:struct:AP_INFO::timeval	file:
ftimel	airodump-ng.h	/^    struct timeval ftimel;    \/* time of last frame          *\/$/;"	m	struct:AP_info	typeref:struct:AP_info::timeval
ftimer	airbase-ng.c	/^    struct timeval ftimer;   \/* time of restart           *\/$/;"	m	struct:ST_info	typeref:struct:ST_info::timeval	file:
ftimer	airnodes.c	/^	struct timeval ftimer;        \/* time of restart               *\/$/;"	m	struct:AP_INFO	typeref:struct:AP_INFO::timeval	file:
ftimer	airnodes.c	/^	struct timeval ftimer;   \/* time of restart           *\/$/;"	m	struct:STA_INFO	typeref:struct:STA_INFO::timeval	file:
ftimer	airodump-ng.h	/^    struct timeval ftimer;    \/* time of restart             *\/$/;"	m	struct:AP_info	typeref:struct:AP_info::timeval
ftimer	airodump-ng.h	/^    struct timeval ftimer;   \/* time of restart           *\/$/;"	m	struct:ST_info	typeref:struct:ST_info::timeval
fudge	aircrack-ng.h	/^	int fudge[64];				 \/* bruteforce level (1 to 256)  *\/$/;"	m	struct:WEP_data
g	aircapture-main.c	/^static AIRCAP_G g;$/;"	v	file:
g	airshooter-main.c	/^static AIRSHOOT_G g;$/;"	v	file:
gc_pipe	airodump-ng.h	/^    int gc_pipe[2];         \/* gps coordinates pipe *\/$/;"	m	struct:globals
genl_ctrl_alloc_cache	osdep/linux.c	312;"	d	file:
getBatteryState	airodump-ng.c	/^int getBatteryState()$/;"	f
getBatteryString	airodump-ng.c	/^char * getBatteryString(void)$/;"	f
getBit	airdecloak-ng.h	90;"	d
getBits	airdecloak-ng.c	/^int getBits(unsigned char b, int from, int nb_bits)$/;"	f
getChannelFromFrequency	osdep/common.c	/^int getChannelFromFrequency(int frequency)$/;"	f
getCompleteFrag	airbase-ng.c	/^unsigned char* getCompleteFrag(unsigned char* smac, int sequence, int *packetlen)$/;"	f
getCompleteFrag	airtun-ng.c	/^unsigned char* getCompleteFrag(unsigned char* smac, int sequence, int *packetlen)$/;"	f
getESSID	airbase-ng.c	/^int getESSID(char *essid)$/;"	f
getESSIDcount	airbase-ng.c	/^int getESSIDcount()$/;"	f
getFrequencyFromChannel	osdep/common.c	/^int getFrequencyFromChannel(int channel)$/;"	f
getHDSK	tkiptun-ng.c	/^int getHDSK()$/;"	f
getMAC	airbase-ng.c	/^unsigned char* getMAC(pMAC_t pMAC)$/;"	f
getMACcount	airbase-ng.c	/^int getMACcount(pMAC_t pMAC)$/;"	f
getNextESSID	airbase-ng.c	/^int getNextESSID(char *essid)$/;"	f
getPacketNr	airdecloak-ng.c	/^struct packet_elt * getPacketNr(int position) {$/;"	f
getRegister	cpuid.c	/^unsigned long getRegister(const unsigned int val, const char from, const char to) {$/;"	f
getStringTimeFromSec	airodump-ng.c	/^char * getStringTimeFromSec(double seconds)$/;"	f
getVersion	common.c	/^char * getVersion(char * progname, int maj, int min, int submin, int svnrev, int beta, int rc)$/;"	f
get_80211	osdep/freebsd.c	/^static unsigned char *get_80211(struct priv_fbsd *pf, int *plen,$/;"	f	file:
get_80211	osdep/netbsd.c	/^static unsigned char *get_80211(struct priv_nbsd *pn, int *plen,$/;"	f	file:
get_80211	osdep/openbsd.c	/^static unsigned char *get_80211(struct priv_obsd *po, int *plen,$/;"	f	file:
get_airconf_files	airconf-parse.c	/^void get_airconf_files(llist **files, const char *basedir)$/;"	f
get_ap_list_count	airodump-ng.c	/^int get_ap_list_count() {$/;"	f
get_average_signal_ap	airdecloak-ng.c	/^int get_average_signal_ap() {$/;"	f
get_battery_state	osdep/cygwin.c	/^int get_battery_state(void)$/;"	f
get_battery_state	osdep/darwin.c	/^int get_battery_state(void)$/;"	f
get_battery_state	osdep/dummy.c	/^int get_battery_state(void)$/;"	f
get_battery_state	osdep/freebsd.c	/^int get_battery_state(void)$/;"	f
get_battery_state	osdep/linux.c	/^int get_battery_state(void)$/;"	f
get_battery_state	osdep/netbsd.c	/^int get_battery_state(void)$/;"	f
get_battery_state	osdep/openbsd.c	/^int get_battery_state(void)$/;"	f
get_be32	sha1-git.c	109;"	d	file:
get_be32	sha1-git.c	114;"	d	file:
get_bssid	besside-ng.c	/^static unsigned char *get_bssid(struct ieee80211_frame *wh)$/;"	f	file:
get_client_mac	besside-ng.c	/^static unsigned char *get_client_mac(struct ieee80211_frame *wh)$/;"	f	file:
get_crc32	easside-ng.c	/^unsigned int get_crc32(void *data, int len)$/;"	f
get_da	crypto.c	/^void *get_da(unsigned char *wh)$/;"	f
get_da	easside-ng.c	/^void *get_da(struct ieee80211_frame *wh)$/;"	f
get_eapol_bssids	besside-ng-crawler.c	/^struct bsslist *get_eapol_bssids(pcap_t *handle) {$/;"	f
get_entry	airtun-ng.c	/^int get_entry(unsigned char *adress) {$/;"	f
get_head	easside-ng.c	/^struct rpacket *get_head(struct east_state *es)$/;"	f
get_ip_port	aireplay-ng.c	/^static int get_ip_port(char *iface, char *ip, const int ip_size)$/;"	f	file:
get_ip_port	osdep/network.c	/^static int get_ip_port(char *iface, char *ip, const int ipsize)$/;"	f	file:
get_ip_port	tkiptun-ng.c	/^static int get_ip_port(char *iface, char *ip, const int ip_size)$/;"	f	file:
get_iv	airdecloak-ng.h	91;"	d
get_line_from_buffer	airodump-ng.c	/^static int get_line_from_buffer(char *buffer, int size, char *line)$/;"	f	file:
get_manufacturer	airodump-ng.c	/^char *get_manufacturer(unsigned char mac0, unsigned char mac1, unsigned char mac2) {$/;"	f
get_manufacturer_from_string	airodump-ng.c	/^char * get_manufacturer_from_string(char * buffer) {$/;"	f
get_nb_cpus	common.c	/^int get_nb_cpus()$/;"	f
get_packet	easside-ng.c	/^struct rpacket *get_packet(struct east_state *es, int id)$/;"	f
get_radiotap_info	osdep/freebsd.c	/^static void get_radiotap_info(struct priv_fbsd *pf,$/;"	f	file:
get_radiotap_info	osdep/netbsd.c	/^static void get_radiotap_info(struct priv_nbsd *pn,$/;"	f	file:
get_radiotap_info	osdep/openbsd.c	/^static void get_radiotap_info(struct priv_obsd *po,$/;"	f	file:
get_ram_size	common.c	/^int get_ram_size(void) {$/;"	f
get_replayable	besside-ng.c	/^static void get_replayable(struct network *n, struct ieee80211_frame *wh,$/;"	f	file:
get_rtap_signal	airdecloak-ng.c	/^int get_rtap_signal(int caplen)$/;"	f
get_sa	crypto.c	/^void *get_sa(unsigned char *wh)$/;"	f
get_sa	easside-ng.c	/^void *get_sa(struct ieee80211_frame *wh)$/;"	f
get_slot	easside-ng.c	/^struct rpacket *get_slot(struct east_state *es)$/;"	f
get_ss	airserv-ng.c	/^static struct sstate *get_ss()$/;"	f	file:
get_sta_list_count	airodump-ng.c	/^int get_sta_list_count() {$/;"	f
get_unaligned	osdep/radiotap/platform.h	36;"	d
get_unaligned_le16	osdep/radiotap/platform.h	44;"	d
get_unaligned_le32	osdep/radiotap/platform.h	45;"	d
get_victim_ssid	wesside-ng.c	/^static int get_victim_ssid(struct wstate *ws, struct ieee80211_frame* wh,$/;"	f	file:
get_ws	wesside-ng.c	/^static struct wstate *get_ws(void)$/;"	f	file:
getbuf_stuff_mpara_mmx	memory.c	/^void getbuf_stuff_mpara_mmx(unsigned char *oBuf, void *buf, unsigned int size, unsigned int index) {$/;"	f
getchancount	airodump-ng.c	/^int getchancount(int valid)$/;"	f
getchannels	airodump-ng.c	/^int getchannels(const char *optarg)$/;"	f
getdrv	aircrack-ptw-lib.c	/^static void getdrv(PTW_tableentry orgtable[][n], int keylen, double * normal, double * ausreiser) {$/;"	f	file:
getfreqcount	airodump-ng.c	/^int getfreqcount(int valid)$/;"	f
getfrequencies	airodump-ng.c	/^int getfrequencies(const char *optarg)$/;"	f
getip	packetforge-ng.c	/^int getip( char *s, unsigned char *ip , unsigned short *port)$/;"	f
getmac	common.c	/^int getmac(char * macAddress, int strict, unsigned char * mac)$/;"	f
getnet	aireplay-ng.c	/^int getnet( unsigned char* capa, int filter, int force)$/;"	f
getnet	tkiptun-ng.c	/^int getnet( unsigned char* capa, int filter, int force)$/;"	f
ghost	aireplay-ng.c	/^    int ghost;$/;"	m	struct:options	file:
ghost	tkiptun-ng.c	/^    int ghost;$/;"	m	struct:options	file:
git_SHA1_Final	sha1-git.h	47;"	d
git_SHA1_Init	sha1-git.h	45;"	d
git_SHA1_Update	sha1-git.h	46;"	d
git_SHA_CTX	sha1-git.h	44;"	d
globals	airodump-ng.h	/^struct globals$/;"	s
globals	ivstools.c	/^struct globals$/;"	s	file:
gotESSID	airbase-ng.c	/^int gotESSID(char* essid, int len)$/;"	f
gotMAC	airbase-ng.c	/^int gotMAC(pMAC_t pMAC, unsigned char* mac)$/;"	f
got_ip	wesside-ng.c	/^static void got_ip(struct wstate *ws)$/;"	f	file:
got_ip_ap	tkiptun-ng.c	/^    int got_ip_ap;$/;"	m	struct:options	file:
got_ip_client	tkiptun-ng.c	/^    int got_ip_client;$/;"	m	struct:options	file:
got_mic_fromds	tkiptun-ng.c	/^    int got_mic_fromds;$/;"	m	struct:options	file:
got_mic_tods	tkiptun-ng.c	/^    int got_mic_tods;$/;"	m	struct:options	file:
got_pmk	tkiptun-ng.c	/^    int got_pmk;$/;"	m	struct:options	file:
got_psk	tkiptun-ng.c	/^    int got_psk;$/;"	m	struct:options	file:
got_ptk	tkiptun-ng.c	/^    int got_ptk;$/;"	m	struct:options	file:
got_wep	wesside-ng.c	/^static void got_wep(struct wstate *ws, struct ieee80211_frame* wh, int rd)$/;"	f	file:
gps_loc	airodump-ng.h	/^    float gps_loc[5];       \/* gps coordinates      *\/$/;"	m	struct:globals
gps_loc_best	airodump-ng.h	/^    float gps_loc_best[5];    \/* best gps coordinates     *\/$/;"	m	struct:AP_info
gps_loc_max	airodump-ng.h	/^    float gps_loc_max[5];     \/* max gps coordinates      *\/$/;"	m	struct:AP_info
gps_loc_min	airodump-ng.h	/^    float gps_loc_min[5];     \/* min gps coordinates      *\/$/;"	m	struct:AP_info
gps_tracker	airodump-ng.c	/^void gps_tracker(pid_t parent)$/;"	f
grab_essid	aireplay-ng.c	/^int grab_essid(unsigned char* packet, int len)$/;"	f
grab_hidden_ssid	besside-ng.c	/^static void grab_hidden_ssid(struct network *n, struct ieee80211_frame *wh,$/;"	f	file:
grab_hidden_ssid	wpaclean.c	/^static void grab_hidden_ssid(unsigned char *bssid, struct ieee80211_frame *wh,$/;"	f	file:
guess_packet	tkiptun-ng.c	/^int guess_packet(unsigned char *srcbuf, unsigned char *chopped, int caplen, int clearlen)$/;"	f
guesskeybytes	aircrack-ptw-lib.c	/^static void guesskeybytes(int ivlen, uint8_t * iv, uint8_t * keystream, uint8_t * result, int kb) {$/;"	f	file:
h0	sha1-git.h	/^	unsigned int h0,h1,h2,h3,h4;$/;"	m	struct:__anon15
h1	sha1-git.h	/^	unsigned int h0,h1,h2,h3,h4;$/;"	m	struct:__anon15
h2	sha1-git.h	/^	unsigned int h0,h1,h2,h3,h4;$/;"	m	struct:__anon15
h28011_ds	h80211_types.h	/^enum h28011_ds$/;"	g
h3	sha1-git.h	/^	unsigned int h0,h1,h2,h3,h4;$/;"	m	struct:__anon15
h4	sha1-git.h	/^	unsigned int h0,h1,h2,h3,h4;$/;"	m	struct:__anon15
h80211	airbase-ng.c	/^unsigned char h80211[4096];$/;"	v
h80211	aireplay-ng.c	/^unsigned char h80211[4096];$/;"	v
h80211	airtun-ng.c	/^unsigned char h80211[4096];$/;"	v
h80211	packetforge-ng.c	/^unsigned char h80211[2048];$/;"	v
h80211	tkiptun-ng.c	/^unsigned char h80211[4096];$/;"	v
h80211_ctrl	h80211_types.h	/^enum h80211_ctrl$/;"	g
h80211_ctrl_string	airconf-parse.c	/^h80211_ctrl_string[] =$/;"	v
h80211_data	h80211_types.h	/^enum h80211_data$/;"	g
h80211_data_string	airconf-parse.c	/^h80211_data_string[] =$/;"	v
h80211_frame	h80211_types.h	/^enum h80211_frame$/;"	g
h80211_frame_string	airconf-parse.c	/^h80211_frame_string[] =$/;"	v
h80211_mgnt	h80211_types.h	/^enum h80211_mgnt$/;"	g
h80211_mgnt_string	airconf-parse.c	/^h80211_mgnt_string[] =$/;"	v
handle	buddy-ng.c	/^int handle(int s, unsigned char* data, int len, struct sockaddr_in *s_in)$/;"	f
handle_card	airserv-ng.c	/^static void handle_card(struct sstate *ss)$/;"	f	file:
handle_client	airserv-ng.c	/^static void handle_client(struct sstate *ss, struct client *c)$/;"	f	file:
handle_dude	buddy-ng.c	/^void handle_dude(int dude, int udp)$/;"	f
handle_get_chan	airserv-ng.c	/^static void handle_get_chan(struct sstate *ss, struct client *c)$/;"	f	file:
handle_get_mac	airserv-ng.c	/^static void handle_get_mac(struct sstate *ss, struct client *c)$/;"	f	file:
handle_get_monitor	airserv-ng.c	/^static void handle_get_monitor(struct sstate *ss, struct client *c)$/;"	f	file:
handle_get_rate	airserv-ng.c	/^static void handle_get_rate(struct sstate *ss, struct client *c)$/;"	f	file:
handle_server	airserv-ng.c	/^static void handle_server(struct sstate *ss)$/;"	f	file:
handle_set_chan	airserv-ng.c	/^static void handle_set_chan(struct sstate *ss, struct client *c,$/;"	f	file:
handle_set_rate	airserv-ng.c	/^static void handle_set_rate(struct sstate *ss, struct client *c,$/;"	f	file:
handle_write	airserv-ng.c	/^static void handle_write(struct sstate *ss, struct client *c,$/;"	f	file:
handshake	osdep/network.c	/^static int handshake(int s)$/;"	f	file:
has_mac_filter	besside-ng.c	/^static void has_mac_filter(struct network *n)$/;"	f	file:
hash_bucket_t	hashtable.h	/^} hash_bucket_t;$/;"	t	typeref:struct:_hash_bucket_t
hash_compare	hashtable.h	/^	hash_compare_t hash_compare;$/;"	m	struct:_hash_op
hash_compare_t	hashtable.h	/^typedef int   (*hash_compare_t)(const void*, const void*);$/;"	t
hash_cpdata	hashtable.h	/^	hash_cpdata_t hash_cpdata;$/;"	m	struct:_hash_op
hash_cpdata_t	hashtable.h	/^typedef void* (*hash_cpdata_t)(const void *);$/;"	t
hash_ctx_t	hashtable.h	/^} hash_ctx_t;$/;"	t	typeref:struct:_hash_ctx_t
hash_desc	hashtable.h	/^	hash_desc_t hash_desc;$/;"	m	struct:_hash_op
hash_desc_t	hashtable.h	/^typedef void  (*hash_desc_t)(const void *);$/;"	t
hash_find_update	hashtable.h	/^	hash_update_t hash_find_update;$/;"	m	struct:_hash_op
hash_free	hashtable.h	/^	hash_free_t hash_free;$/;"	m	struct:_hash_op
hash_free_t	hashtable.h	/^typedef void  (*hash_free_t)(void *);$/;"	t
hash_func	hashtable.h	/^	hash_func_t hash_func;$/;"	m	struct:_hash_op
hash_func_t	hashtable.h	/^typedef int   (*hash_func_t)(const void *);$/;"	t
hash_inst_update	hashtable.h	/^	hash_update_t hash_inst_update;$/;"	m	struct:_hash_op
hash_op	hashtable.h	/^} hash_op;$/;"	t	typeref:struct:_hash_op
hash_update_t	hashtable.h	/^typedef void  (*hash_update_t)(const void *);$/;"	t
hashdb_head	aircrack-ng.h	/^struct hashdb_head {$/;"	s
hashdb_rec	aircrack-ng.h	/^struct hashdb_rec {$/;"	s
have_mac	besside-ng.c	/^static int have_mac(struct network *n)$/;"	f	file:
hccap	aircrack-ng.h	/^	char * hccap;				         \/* Hashcat capture file *\/$/;"	m	struct:options
hdrlen	aireplay-ng.c	/^    int hdrlen;$/;"	m	struct:ARP_req	file:
hdrlen	tkiptun-ng.c	/^    int hdrlen;$/;"	m	struct:ARP_req	file:
head_list	llist.c	/^llist* head_list(llist *node)$/;"	f
header	airbase-ng.c	/^    unsigned char*  header;$/;"	m	struct:Fragment_list	file:
header	airdecloak-ng.h	/^    struct pcap_pkthdr header;  \/* packet header *\/$/;"	m	struct:packet_elt	typeref:struct:packet_elt::pcap_pkthdr
header	airtun-ng.c	/^    unsigned char*  header;$/;"	m	struct:Fragment_list	file:
headerlen	airbase-ng.c	/^    short           headerlen;$/;"	m	struct:Fragment_list	file:
headerlen	airtun-ng.c	/^    short           headerlen;$/;"	m	struct:Fragment_list	file:
hex2bin	airconf-parse.c	/^uint8_t hex2bin(const char *hex)$/;"	f
hex2binarr	airconf-parse.c	/^int hex2binarr(uint8_t tbuf[], int tlen, const char *hex)$/;"	f
hexCharToInt	common.c	/^int hexCharToInt(unsigned char c)$/;"	f
hexStringToArray	common.c	/^int hexStringToArray(char* in, int in_length, unsigned char* out, int out_length)$/;"	f
hexToInt	common.c	/^int hexToInt(char s[], int len)$/;"	f
hexdict	aircrack-ng.h	/^	int hexdict[MAX_DICTS];			 \/* if dict in hex       *\/$/;"	m	struct:options
hexdump	easside-ng.c	/^void hexdump(void *x, int len)$/;"	f
hexdump	wesside-ng.c	/^static void hexdump(unsigned char *ptr, int len)$/;"	f	file:
hidden	airbase-ng.c	/^    int hidden;$/;"	m	struct:options	file:
hide_known	airodump-ng.h	/^    int hide_known;$/;"	m	struct:globals
hop	besside-ng.c	/^static void hop(void *arg)$/;"	f	file:
hopfreq	airodump-ng.h	/^    int hopfreq;$/;"	m	struct:globals
ht_capabilities_info	ieee802_11_defs.h	/^	le16 ht_capabilities_info;$/;"	m	struct:ieee80211_ht_capabilities
ht_extended_capabilities	ieee802_11_defs.h	/^	le16 ht_extended_capabilities;$/;"	m	struct:ieee80211_ht_capabilities
ht_param	ieee802_11_defs.h	/^	u8 ht_param; \/* B0..B7 *\/$/;"	m	struct:ieee80211_ht_operation
htobe16	osdep/byteorder.h	302;"	d
htobe16	osdep/byteorder.h	359;"	d
htobe16	osdep/radiotap/platform.h	12;"	d
htobe32	osdep/byteorder.h	305;"	d
htobe32	osdep/byteorder.h	362;"	d
htobe32	osdep/radiotap/platform.h	17;"	d
htobe64	osdep/byteorder.h	308;"	d
htobe64	osdep/byteorder.h	365;"	d
htobe64	osdep/radiotap/platform.h	22;"	d
htole16	osdep/byteorder.h	321;"	d
htole16	osdep/byteorder.h	378;"	d
htole16	osdep/radiotap/platform.h	13;"	d
htole32	osdep/byteorder.h	324;"	d
htole32	osdep/byteorder.h	381;"	d
htole32	osdep/radiotap/platform.h	18;"	d
htole64	osdep/byteorder.h	327;"	d
htole64	osdep/byteorder.h	384;"	d
htole64	osdep/radiotap/platform.h	23;"	d
htonl	osdep/byteorder.h	430;"	d
htons	osdep/byteorder.h	427;"	d
htt	aircrack-ng.h	/^	int htt;				\/* Hyper-Threading      *\/$/;"	m	struct:_cpuinfo
hv	aircrack-ng.h	/^	int hv;					\/* Hypervisor detected  *\/$/;"	m	struct:_cpuinfo
i	aircrack-ptw-lib.c	/^	uint8_t i;$/;"	m	struct:__anon22	file:
iCC	Makefile	/^iCC		= \/opt\/intel\/bin\/icc$/;"	m
iCFLAGS	Makefile	/^iCFLAGS		= -w -xHOST $(COMMON_CFLAGS)$/;"	m
iOPTFLAGS	Makefile	/^iOPTFLAGS	= -O3 -ip -ipo -D_FILE_OFFSET_BITS=64$/;"	m
i_addr1	include/ieee80211.h	/^	u_int8_t	i_addr1[IEEE80211_ADDR_LEN];$/;"	m	struct:ieee80211_frame
i_addr1	include/ieee80211.h	/^	u_int8_t	i_addr1[IEEE80211_ADDR_LEN];$/;"	m	struct:ieee80211_frame_addr4
i_addr1	include/ieee80211.h	/^	u_int8_t	i_addr1[IEEE80211_ADDR_LEN];$/;"	m	struct:ieee80211_frame_min
i_addr1	include/ieee80211.h	/^	u_int8_t	i_addr1[IEEE80211_ADDR_LEN];$/;"	m	struct:ieee80211_qosframe
i_addr1	include/ieee80211.h	/^	u_int8_t	i_addr1[IEEE80211_ADDR_LEN];$/;"	m	struct:ieee80211_qosframe_addr4
i_addr2	include/ieee80211.h	/^	u_int8_t	i_addr2[IEEE80211_ADDR_LEN];$/;"	m	struct:ieee80211_frame
i_addr2	include/ieee80211.h	/^	u_int8_t	i_addr2[IEEE80211_ADDR_LEN];$/;"	m	struct:ieee80211_frame_addr4
i_addr2	include/ieee80211.h	/^	u_int8_t	i_addr2[IEEE80211_ADDR_LEN];$/;"	m	struct:ieee80211_frame_min
i_addr2	include/ieee80211.h	/^	u_int8_t	i_addr2[IEEE80211_ADDR_LEN];$/;"	m	struct:ieee80211_qosframe
i_addr2	include/ieee80211.h	/^	u_int8_t	i_addr2[IEEE80211_ADDR_LEN];$/;"	m	struct:ieee80211_qosframe_addr4
i_addr3	include/ieee80211.h	/^	u_int8_t	i_addr3[IEEE80211_ADDR_LEN];$/;"	m	struct:ieee80211_frame
i_addr3	include/ieee80211.h	/^	u_int8_t	i_addr3[IEEE80211_ADDR_LEN];$/;"	m	struct:ieee80211_frame_addr4
i_addr3	include/ieee80211.h	/^	u_int8_t	i_addr3[IEEE80211_ADDR_LEN];$/;"	m	struct:ieee80211_qosframe
i_addr3	include/ieee80211.h	/^	u_int8_t	i_addr3[IEEE80211_ADDR_LEN];$/;"	m	struct:ieee80211_qosframe_addr4
i_addr4	include/ieee80211.h	/^	u_int8_t	i_addr4[IEEE80211_ADDR_LEN];$/;"	m	struct:ieee80211_frame_addr4
i_addr4	include/ieee80211.h	/^	u_int8_t	i_addr4[IEEE80211_ADDR_LEN];$/;"	m	struct:ieee80211_qosframe_addr4
i_aid	include/ieee80211.h	/^	u_int8_t	i_aid[2];$/;"	m	struct:ieee80211_frame_pspoll
i_bssid	include/ieee80211.h	/^	u_int8_t	i_bssid[IEEE80211_ADDR_LEN];$/;"	m	struct:ieee80211_frame_cfend
i_bssid	include/ieee80211.h	/^	u_int8_t	i_bssid[IEEE80211_ADDR_LEN];$/;"	m	struct:ieee80211_frame_pspoll
i_crc	include/ieee80211.h	/^	u_int16_t	i_crc;$/;"	m	struct:ieee80211_plcp_hdr
i_dur	include/ieee80211.h	/^	u_int8_t	i_dur[2];	\/* should be zero *\/$/;"	m	struct:ieee80211_frame_cfend
i_dur	include/ieee80211.h	/^	u_int8_t	i_dur[2];$/;"	m	struct:ieee80211_frame
i_dur	include/ieee80211.h	/^	u_int8_t	i_dur[2];$/;"	m	struct:ieee80211_frame_ack
i_dur	include/ieee80211.h	/^	u_int8_t	i_dur[2];$/;"	m	struct:ieee80211_frame_addr4
i_dur	include/ieee80211.h	/^	u_int8_t	i_dur[2];$/;"	m	struct:ieee80211_frame_cts
i_dur	include/ieee80211.h	/^	u_int8_t	i_dur[2];$/;"	m	struct:ieee80211_frame_min
i_dur	include/ieee80211.h	/^	u_int8_t	i_dur[2];$/;"	m	struct:ieee80211_frame_rts
i_dur	include/ieee80211.h	/^	u_int8_t	i_dur[2];$/;"	m	struct:ieee80211_qosframe
i_dur	include/ieee80211.h	/^	u_int8_t	i_dur[2];$/;"	m	struct:ieee80211_qosframe_addr4
i_fc	include/ieee80211.h	/^	u_int8_t	i_fc[2];$/;"	m	struct:ieee80211_frame
i_fc	include/ieee80211.h	/^	u_int8_t	i_fc[2];$/;"	m	struct:ieee80211_frame_ack
i_fc	include/ieee80211.h	/^	u_int8_t	i_fc[2];$/;"	m	struct:ieee80211_frame_addr4
i_fc	include/ieee80211.h	/^	u_int8_t	i_fc[2];$/;"	m	struct:ieee80211_frame_cfend
i_fc	include/ieee80211.h	/^	u_int8_t	i_fc[2];$/;"	m	struct:ieee80211_frame_cts
i_fc	include/ieee80211.h	/^	u_int8_t	i_fc[2];$/;"	m	struct:ieee80211_frame_min
i_fc	include/ieee80211.h	/^	u_int8_t	i_fc[2];$/;"	m	struct:ieee80211_frame_pspoll
i_fc	include/ieee80211.h	/^	u_int8_t	i_fc[2];$/;"	m	struct:ieee80211_frame_rts
i_fc	include/ieee80211.h	/^	u_int8_t	i_fc[2];$/;"	m	struct:ieee80211_qosframe
i_fc	include/ieee80211.h	/^	u_int8_t	i_fc[2];$/;"	m	struct:ieee80211_qosframe_addr4
i_length	include/ieee80211.h	/^	u_int16_t	i_length;$/;"	m	struct:ieee80211_plcp_hdr
i_qos	include/ieee80211.h	/^	u_int8_t	i_qos[2];$/;"	m	struct:ieee80211_qoscntl
i_qos	include/ieee80211.h	/^	u_int8_t	i_qos[2];$/;"	m	struct:ieee80211_qosframe
i_qos	include/ieee80211.h	/^	u_int8_t	i_qos[2];$/;"	m	struct:ieee80211_qosframe_addr4
i_ra	include/ieee80211.h	/^	u_int8_t	i_ra[IEEE80211_ADDR_LEN];$/;"	m	struct:ieee80211_frame_ack
i_ra	include/ieee80211.h	/^	u_int8_t	i_ra[IEEE80211_ADDR_LEN];$/;"	m	struct:ieee80211_frame_cfend
i_ra	include/ieee80211.h	/^	u_int8_t	i_ra[IEEE80211_ADDR_LEN];$/;"	m	struct:ieee80211_frame_cts
i_ra	include/ieee80211.h	/^	u_int8_t	i_ra[IEEE80211_ADDR_LEN];$/;"	m	struct:ieee80211_frame_rts
i_seq	include/ieee80211.h	/^	u_int8_t	i_seq[2];$/;"	m	struct:ieee80211_frame
i_seq	include/ieee80211.h	/^	u_int8_t	i_seq[2];$/;"	m	struct:ieee80211_frame_addr4
i_seq	include/ieee80211.h	/^	u_int8_t	i_seq[2];$/;"	m	struct:ieee80211_qosframe
i_seq	include/ieee80211.h	/^	u_int8_t	i_seq[2];$/;"	m	struct:ieee80211_qosframe_addr4
i_service	include/ieee80211.h	/^	u_int8_t	i_service;$/;"	m	struct:ieee80211_plcp_hdr
i_sfd	include/ieee80211.h	/^	u_int16_t	i_sfd;$/;"	m	struct:ieee80211_plcp_hdr
i_signal	include/ieee80211.h	/^	u_int8_t	i_signal;$/;"	m	struct:ieee80211_plcp_hdr
i_ta	include/ieee80211.h	/^	u_int8_t	i_ta[IEEE80211_ADDR_LEN];$/;"	m	struct:ieee80211_frame_pspoll
i_ta	include/ieee80211.h	/^	u_int8_t	i_ta[IEEE80211_ADDR_LEN];$/;"	m	struct:ieee80211_frame_rts
ibss	wi_packet.h	/^	uint16_t   ibss:1;$/;"	m	struct:_wi_beacon_capa_flag
icv	airdecloak-ng.h	/^    unsigned char icv[4];$/;"	m	struct:packet_elt
icv2string	airdecloak-ng.c	/^char * icv2string(unsigned char * icv) {$/;"	f
id	aircrack-ng.c	/^int id=0;$/;"	v
id	airodump-ng.h	/^	char id[9]; \/* TODO: Don't use ASCII chars to compare, use unsigned char[3] (later) with the value (hex ascii will have to be converted) *\/$/;"	m	struct:oui
id	memdbg.h	/^	unsigned id;$/;"	m	struct:MEMDBG_HANDLE_t
ids	buddy-ng.c	/^unsigned char ids[8192];$/;"	v
idx	aircrack-ng.h	/^typedef struct { int idx, val; }$/;"	m	struct:__anon72
idx	kstats.c	/^typedef struct { int idx, val; } vote;$/;"	m	struct:__anon13	file:
ie	include/ieee80211.h	/^	u_int8_t	ie;			\/* IEEE80211_ELEMID_COUNTRY *\/$/;"	m	struct:ieee80211_country_ie
ieee80211_2040_bss_coex_ie	ieee802_11_defs.h	/^struct ieee80211_2040_bss_coex_ie {$/;"	s
ieee80211_2040_intol_chan_report	ieee802_11_defs.h	/^struct ieee80211_2040_intol_chan_report {$/;"	s
ieee80211_ampe_ie	ieee802_11_defs.h	/^struct ieee80211_ampe_ie {$/;"	s
ieee80211_band	include/ieee80211.h	/^struct ieee80211_band {$/;"	s
ieee80211_channel_to_frequency	osdep/linux.c	/^static int ieee80211_channel_to_frequency(int chan)$/;"	f	file:
ieee80211_country_ie	include/ieee80211.h	/^struct ieee80211_country_ie {$/;"	s
ieee80211_duration	include/ieee80211.h	/^struct ieee80211_duration {$/;"	s
ieee80211_frame	include/ieee80211.h	/^struct ieee80211_frame {$/;"	s
ieee80211_frame_ack	include/ieee80211.h	/^struct ieee80211_frame_ack {$/;"	s
ieee80211_frame_addr4	include/ieee80211.h	/^struct ieee80211_frame_addr4 {$/;"	s
ieee80211_frame_cfend	include/ieee80211.h	/^struct ieee80211_frame_cfend {		\/* NB: also CF-End+CF-Ack *\/$/;"	s
ieee80211_frame_cts	include/ieee80211.h	/^struct ieee80211_frame_cts {$/;"	s
ieee80211_frame_min	include/ieee80211.h	/^struct ieee80211_frame_min {$/;"	s
ieee80211_frame_pspoll	include/ieee80211.h	/^struct ieee80211_frame_pspoll {$/;"	s
ieee80211_frame_rts	include/ieee80211.h	/^struct ieee80211_frame_rts {$/;"	s
ieee80211_get_qos	include/ieee80211.h	/^ieee80211_get_qos(const struct ieee80211_frame *wh)$/;"	f
ieee80211_has_addr4	include/ieee80211.h	/^ieee80211_has_addr4(const struct ieee80211_frame *wh)$/;"	f
ieee80211_has_htc	include/ieee80211.h	/^ieee80211_has_htc(const struct ieee80211_frame *wh)$/;"	f
ieee80211_has_qos	include/ieee80211.h	/^ieee80211_has_qos(const struct ieee80211_frame *wh)$/;"	f
ieee80211_has_seq	include/ieee80211.h	/^ieee80211_has_seq(const struct ieee80211_frame *wh)$/;"	f
ieee80211_hdr	ieee802_11_defs.h	/^struct ieee80211_hdr {$/;"	s
ieee80211_ht_capabilities	ieee802_11_defs.h	/^struct ieee80211_ht_capabilities {$/;"	s
ieee80211_ht_operation	ieee802_11_defs.h	/^struct ieee80211_ht_operation {$/;"	s
ieee80211_ie_wpa	include/ieee80211.h	/^struct ieee80211_ie_wpa {$/;"	s
ieee80211_mgmt	ieee802_11_defs.h	/^struct ieee80211_mgmt {$/;"	s
ieee80211_mgt_auth_t	include/ieee80211.h	/^typedef u_int8_t *ieee80211_mgt_auth_t;$/;"	t
ieee80211_mgt_beacon_t	include/ieee80211.h	/^typedef u_int8_t *ieee80211_mgt_beacon_t;$/;"	t
ieee80211_mhz2ieee	osdep/freebsd.c	/^ieee80211_mhz2ieee(u_int freq, u_int flags)$/;"	f	file:
ieee80211_mnf	include/ieee80211.h	/^struct ieee80211_mnf {$/;"	s
ieee80211_obss_scan_parameters	ieee802_11_defs.h	/^struct ieee80211_obss_scan_parameters {$/;"	s
ieee80211_plcp_hdr	include/ieee80211.h	/^struct ieee80211_plcp_hdr {$/;"	s
ieee80211_qoscntl	include/ieee80211.h	/^struct ieee80211_qoscntl {$/;"	s
ieee80211_qosframe	include/ieee80211.h	/^struct ieee80211_qosframe {$/;"	s
ieee80211_qosframe_addr4	include/ieee80211.h	/^struct ieee80211_qosframe_addr4 {$/;"	s
ieee80211_radiotap_header	osdep/radiotap/radiotap.h	/^struct ieee80211_radiotap_header {$/;"	s
ieee80211_radiotap_iterator	osdep/radiotap/radiotap_iter.h	/^struct ieee80211_radiotap_iterator {$/;"	s
ieee80211_radiotap_iterator_init	osdep/radiotap/radiotap.c	/^int ieee80211_radiotap_iterator_init($/;"	f
ieee80211_radiotap_iterator_next	osdep/radiotap/radiotap.c	/^int ieee80211_radiotap_iterator_next($/;"	f
ieee80211_radiotap_namespace	osdep/radiotap/radiotap_iter.h	/^struct ieee80211_radiotap_namespace {$/;"	s
ieee80211_radiotap_type	osdep/radiotap/radiotap.h	/^enum ieee80211_radiotap_type {$/;"	g
ieee80211_radiotap_vendor_namespaces	osdep/radiotap/radiotap_iter.h	/^struct ieee80211_radiotap_vendor_namespaces {$/;"	s
ieee80211_tim_ie	include/ieee80211.h	/^struct ieee80211_tim_ie {$/;"	s
ieee80211_vht_capabilities	ieee802_11_defs.h	/^struct ieee80211_vht_capabilities {$/;"	s
ieee80211_vht_operation	ieee802_11_defs.h	/^struct ieee80211_vht_operation {$/;"	s
ieee80211_wme_ac	include/ieee80211.h	/^enum ieee80211_wme_ac {$/;"	g
ieee80211_wme_acparams	include/ieee80211.h	/^struct ieee80211_wme_acparams {$/;"	s
ieee80211_wme_info	include/ieee80211.h	/^struct ieee80211_wme_info {$/;"	s
ieee80211_wme_param	include/ieee80211.h	/^struct ieee80211_wme_param {$/;"	s
ieee80211_wme_tspec	include/ieee80211.h	/^struct ieee80211_wme_tspec {$/;"	s
iface_out	aireplay-ng.c	/^    char *iface_out;$/;"	m	struct:options	file:
iface_out	tkiptun-ng.c	/^    char *iface_out;$/;"	m	struct:options	file:
ifconfig	osdep/linux.c	/^    char *ifconfig;$/;"	m	struct:priv_linux	file:
ifname	aircapture.h	/^	char ifname[MAX_IFACE_NAME];$/;"	m	struct:_AIRCAP_G
ifname	airshooter.h	/^	char ifname[MAX_IFACE_NAME];$/;"	m	struct:_AIRSHOOT_G
ignore_negative_one	aireplay-ng.c	/^    int ignore_negative_one;$/;"	m	struct:options	file:
ignore_negative_one	airodump-ng.h	/^    int ignore_negative_one;$/;"	m	struct:globals
imm_block_ack	wi_packet.h	/^	uint16_t   imm_block_ack:1;$/;"	m	struct:_wi_beacon_capa_flag
immediate_ack	wi_packet.h	/^	uint16_t   immediate_ack:1;$/;"	m	struct:_wi_ctrl_ba_control
import_ascii	airolib-ng.c	/^int import_ascii(sqlite3* db, const char* mode, const char* filename) {$/;"	f
import_cowpatty	airolib-ng.c	/^int import_cowpatty(sqlite3* db, char* filename) {$/;"	f
in_cksum	easside-ng.c	/^unsigned short in_cksum (unsigned short *ptr, int nbytes) {$/;"	f
inactivity_interval	ieee802_11_defs.h	/^	le32 inactivity_interval;$/;"	m	struct:wmm_tspec_element
index	aircrack-ng.h	/^	int index;					 \/* WEP key index        *\/$/;"	m	struct:options
initDataBase	airolib-ng.c	/^int initDataBase(const char * filename, sqlite3 ** db)$/;"	f
init_aircapture_g	aircapture.c	/^void init_aircapture_g(AIRCAP_G* g)$/;"	f
init_airshoot_g	airshooter.c	/^void init_airshoot_g(AIRSHOOT_G* g)$/;"	f
init_atoi	wpapsk.c	/^void init_atoi() {$/;"	f
init_cards	airodump-ng.c	/^int init_cards(const char* cardstr, char *iface[], struct wif **wi)$/;"	f
init_conf	besside-ng.c	/^static void init_conf(void)$/;"	f	file:
init_defaults	easside-ng.c	/^void init_defaults(struct east_state *es)$/;"	f
init_defaults	wesside-ng.c	/^static void init_defaults(struct wstate *ws)$/;"	f	file:
init_event_sys	aircapture-main.c	/^void init_event_sys(EVENT_SYS *evsys)$/;"	f
init_log	log.c	/^int init_log(LOG_CTX* ctx)$/;"	f
init_michael	crypto.c	/^int init_michael(struct Michael *mic, unsigned char key[8])$/;"	f
init_new_pcap	airdecloak-ng.c	/^FILE * init_new_pcap(const char * filename)$/;"	f
init_nodes_info	airnodes.c	/^int init_nodes_info(NODES_INFO *nodes)$/;"	f
init_ssecore	wpapsk.c	/^void init_ssecore(int threadid) {$/;"	f
init_t	MD5_std.h	152;"	d
init_t	MD5_std.h	164;"	d
init_t	MD5_std.h	172;"	d
init_wifi_cards	wifi_setup.c	/^int init_wifi_cards(const char* cardnames, char *ifaces[], struct wif *wi[])$/;"	f
init_wpapsk	wpapsk.c	/^int init_wpapsk(char (*key)[128], char *essid, int threadid) {$/;"	f
initialize_linked_list	airdecloak-ng.c	/^BOOLEAN initialize_linked_list() {$/;"	f
inject	wesside-ng.c	/^static void inject(struct wif *wi, void *buf, int len)$/;"	f	file:
inject_wlanng	osdep/linux.c	/^    int inject_wlanng;$/;"	m	struct:priv_linux	file:
inner_bruteforcer_thread	aircrack-ng.c	/^int inner_bruteforcer_thread(void *arg)$/;"	f
input_thread	airodump-ng.c	/^void input_thread( void *arg) {$/;"	f
input_tid	aircapture.h	/^	pthread_t input_tid;$/;"	m	struct:_AIRCAP_G
input_tid	airodump-ng.h	/^    pthread_t input_tid;$/;"	m	struct:globals
insert_hash	hashtable.c	/^int insert_hash(hash_ctx_t *ctx, void *data)$/;"	f
intercept	airbase-ng.c	/^int intercept(unsigned char* packet, int length)$/;"	f
interval	airbase-ng.c	/^    int interval;$/;"	m	struct:options	file:
interval	airbase-ng.c	/^    unsigned short interval;$/;"	m	struct:AP_conf	file:
interval	wi_packet.h	/^	uint16_t            interval;   \/\/ 2 byte (beacon interval)$/;"	m	struct:_wi_beacon_fixed
intr_read	aircrack-ng.c	/^int intr_read = 0;$/;"	v
intval	ieee802_11_defs.h	/^	le16 intval;$/;"	m	struct:wnm_sleep_element
invalid_channel	airodump-ng.c	/^int invalid_channel(int chan)$/;"	f
invalid_channel_displayed	airbase-ng.c	/^int ctrl_c, alarmed, invalid_channel_displayed;$/;"	v
invalid_frequency	airodump-ng.c	/^int invalid_frequency(int freq)$/;"	f
ip_ap	tkiptun-ng.c	/^    unsigned char ip_ap[4];$/;"	m	struct:options	file:
ip_chksum	packetforge-ng.c	/^unsigned short ip_chksum(unsigned short* addr, int count)$/;"	f
ip_cli	tkiptun-ng.c	/^    unsigned char ip_cli[4];$/;"	m	struct:options	file:
ip_in	aireplay-ng.c	/^    char ip_in[16];$/;"	m	struct:options	file:
ip_in	tkiptun-ng.c	/^    char ip_in[16];$/;"	m	struct:options	file:
ip_out	aireplay-ng.c	/^    char ip_out[16];    \/\/16 for 15 chars + \\x00$/;"	m	struct:options	file:
ip_out	tkiptun-ng.c	/^    char ip_out[16];    \/\/16 for 15 chars + \\x00$/;"	m	struct:options	file:
isAirpcap	osdep/cygwin.c	/^	int		isAirpcap;$/;"	m	struct:priv_cygwin	file:
isAirpcapDevice	osdep/airpcap.c	/^int isAirpcapDevice(const char * iface)$/;"	f
isHex	common.c	53;"	d	file:
is_aligned	jcommon.h	71;"	d
is_alnum	aircrack-ng.h	/^	int is_alnum;				 \/* alphanum keyspace    *\/$/;"	m	struct:options
is_arp	crypto.c	/^int is_arp(void *wh, int len)$/;"	f
is_arp	easside-ng.c	/^int is_arp(struct ieee80211_frame *wh, int len)$/;"	f
is_bcdonly	aircrack-ng.h	/^	int is_bcdonly;				 \/* binary coded decimal *\/$/;"	m	struct:options
is_bcm43xx	airbase-ng.c	/^    int is_bcm43xx;$/;"	m	struct:devices	file:
is_bcm43xx	aireplay-ng.c	/^    int is_bcm43xx;$/;"	m	struct:devices	file:
is_bcm43xx	airtun-ng.c	/^    int is_bcm43xx;$/;"	m	struct:devices	file:
is_bcm43xx	tkiptun-ng.c	/^    int is_bcm43xx;$/;"	m	struct:devices	file:
is_berlin	airodump-ng.h	/^    char is_berlin;           \/* is the switch --berlin set? *\/$/;"	m	struct:globals
is_cdp_vtp	crypto.c	/^int is_cdp_vtp(void *wh)$/;"	f
is_cloaked	airdecloak-ng.h	/^    int is_cloaked;$/;"	m	struct:packet_elt
is_decloak	airodump-ng.h	/^    char is_decloak;          \/* detected decloak *\/$/;"	m	struct:AP_info
is_dhcp_discover	crypto.c	/^int is_dhcp_discover(void *wh, int len)$/;"	f
is_dir	cpuid.c	/^int is_dir(const char *dir) {$/;"	f
is_dropped	airdecloak-ng.h	/^    int is_dropped; \/\/ Do we have to drop this frame?$/;"	m	struct:packet_elt
is_dup	buddy-ng.c	/^int is_dup(unsigned short id)$/;"	f
is_dup	easside-ng.c	/^int is_dup(struct east_state *es, struct ieee80211_frame *wh)$/;"	f
is_filtered_essid	airodump-ng.c	/^int is_filtered_essid(unsigned char *essid)$/;"	f
is_filtered_essid	besside-ng.c	/^int is_filtered_essid(char *essid)$/;"	f
is_filtered_netmask	airbase-ng.c	/^int is_filtered_netmask(unsigned char *bssid)$/;"	f
is_filtered_netmask	airodump-ng.c	/^int is_filtered_netmask(unsigned char *bssid)$/;"	f
is_filtered_netmask	airtun-ng.c	/^int is_filtered_netmask(unsigned char *bssid)$/;"	f
is_fritz	aircrack-ng.h	/^	int is_fritz;				 \/* use numeric keyspace *\/$/;"	m	struct:options
is_hostap	airbase-ng.c	/^    int is_hostap;$/;"	m	struct:devices	file:
is_hostap	aireplay-ng.c	/^    int is_hostap;$/;"	m	struct:devices	file:
is_hostap	airtun-ng.c	/^    int is_hostap;$/;"	m	struct:devices	file:
is_hostap	tkiptun-ng.c	/^    int is_hostap;$/;"	m	struct:devices	file:
is_in_list	besside-ng-crawler.c	/^struct bsslist *is_in_list(struct bsslist *bsl, const u_char *bssid) {$/;"	f
is_ipv6	crypto.c	/^int is_ipv6(void *wh)$/;"	f
is_madwifi	airbase-ng.c	/^    int is_madwifi;$/;"	m	struct:devices	file:
is_madwifi	aireplay-ng.c	/^    int is_madwifi;$/;"	m	struct:devices	file:
is_madwifi	airtun-ng.c	/^    int is_madwifi;$/;"	m	struct:devices	file:
is_madwifi	tkiptun-ng.c	/^    int is_madwifi;$/;"	m	struct:devices	file:
is_madwifing	airbase-ng.c	/^    int is_madwifing;$/;"	m	struct:devices	file:
is_madwifing	aireplay-ng.c	/^    int is_madwifing;$/;"	m	struct:devices	file:
is_madwifing	airodump-ng.h	/^    int is_madwifing[MAX_CARDS];       \/* set if madwifi-ng    *\/$/;"	m	struct:globals
is_madwifing	airtun-ng.c	/^    int is_madwifing;$/;"	m	struct:devices	file:
is_madwifing	tkiptun-ng.c	/^    int is_madwifing;$/;"	m	struct:devices	file:
is_ndiswrapper	osdep/linux.c	/^static int is_ndiswrapper(const char * iface, const char * path)$/;"	f	file:
is_orinoco	airodump-ng.h	/^    int is_orinoco[MAX_CARDS];         \/* set if orinoco       *\/$/;"	m	struct:globals
is_qos_arp_tkip	crypto.c	/^int is_qos_arp_tkip(void *wh, int len)$/;"	f
is_quiet	aircrack-ng.h	/^	int is_quiet;				 \/* quiet mode flag      *\/$/;"	m	struct:options
is_radiotap_ns	osdep/radiotap/radiotap_iter.h	/^	int is_radiotap_ns;$/;"	m	struct:ieee80211_radiotap_iterator
is_replayable	besside-ng.c	/^static int is_replayable(struct ieee80211_frame *wh, int len)$/;"	f	file:
is_spantree	crypto.c	/^int is_spantree(void *wh)$/;"	f
is_string_number	common.c	/^int is_string_number(const char * str)$/;"	f
is_wlanng	airbase-ng.c	/^    int is_wlanng;$/;"	m	struct:devices	file:
is_wlanng	aireplay-ng.c	/^    int is_wlanng;$/;"	m	struct:devices	file:
is_wlanng	airodump-ng.h	/^    int is_wlanng[MAX_CARDS];          \/* set if wlan-ng       *\/$/;"	m	struct:globals
is_wlanng	airtun-ng.c	/^    int is_wlanng;$/;"	m	struct:devices	file:
is_wlanng	tkiptun-ng.c	/^    int is_wlanng;$/;"	m	struct:devices	file:
is_wlccp	crypto.c	/^int is_wlccp(void *wh, int len)$/;"	f
is_zd1211rw	airodump-ng.h	/^    int is_zd1211rw[MAX_CARDS];       \/* set if zd1211rw    *\/$/;"	m	struct:globals
it_len	osdep/radiotap/radiotap.h	/^	uint16_t it_len;	\/* length of the whole$/;"	m	struct:ieee80211_radiotap_header
it_pad	osdep/radiotap/radiotap.h	/^	uint8_t it_pad;$/;"	m	struct:ieee80211_radiotap_header
it_present	osdep/radiotap/radiotap.h	/^	uint32_t it_present;	\/* A bitmap telling which$/;"	m	struct:ieee80211_radiotap_header
it_version	osdep/radiotap/radiotap.h	/^	uint8_t it_version;	\/* Version 0. Only increases$/;"	m	struct:ieee80211_radiotap_header
itoa64	wpapsk.c	/^char itoa64[64] = ".\/0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz";$/;"	v
iv	aircrack-ptw-lib.h	/^        uint8_t iv[PTW_IVBYTES];$/;"	m	struct:__anon70
iv	airdecloak-ng.h	/^    unsigned char iv[3];$/;"	m	struct:packet_elt
iv2string	airdecloak-ng.c	/^char * iv2string(unsigned char * iv) {$/;"	f
ivbuf	aircrack-ng.h	/^	unsigned char *ivbuf;				 \/* buffer holding all the IVs   *\/$/;"	m	struct:WEP_data
ivbuf	aircrack-ng.h	/^	unsigned char *ivbuf;				 \/* table holding WEP IV data    *\/$/;"	m	struct:AP_info
ivbuf_size	aircrack-ng.h	/^	long ivbuf_size;			 \/* IV buffer allocated size     *\/$/;"	m	struct:AP_info
ivs2	packetforge-ng.c	/^    FILE* ivs2;$/;"	m	struct:options	file:
ivs2_filehdr	pcap.h	/^struct ivs2_filehdr$/;"	s
ivs2_pkthdr	pcap.h	/^struct ivs2_pkthdr$/;"	s
iwconfig	airodump-ng.h	/^    char * iwconfig;$/;"	m	struct:globals
iwconfig	osdep/linux.c	/^    char *iwconfig;$/;"	m	struct:priv_linux	file:
iwpriv	airbase-ng.c	/^char * iwpriv;$/;"	v
iwpriv	aireplay-ng.c	/^char * iwpriv;$/;"	v
iwpriv	airodump-ng.h	/^    char * iwpriv;$/;"	m	struct:globals
iwpriv	airtun-ng.c	/^char * iwpriv;$/;"	v
iwpriv	osdep/linux.c	/^    char *iwpriv;$/;"	m	struct:priv_linux	file:
iwpriv	tkiptun-ng.c	/^char * iwpriv;$/;"	v
j	aircrack-ptw-lib.c	/^	uint8_t j;$/;"	m	struct:__anon22	file:
john_bswap_32	johnswap.h	/^	static inline ARCH_WORD_32 __attribute__((const)) john_bswap_32(ARCH_WORD_32 val) {$/;"	f
john_bswap_32	johnswap.h	/^	static inline ARCH_WORD_32 john_bswap_32(ARCH_WORD_32 x)$/;"	f
john_bswap_64	johnswap.h	/^	static inline unsigned long long john_bswap_64(unsigned long long x)$/;"	f
json_get_value_for_name	airodump-ng.c	/^static int json_get_value_for_name( const char *buffer, const char *name, char *value )$/;"	f	file:
key	airconf-parse.h	/^	uint32_t key;$/;"	m	struct:_airconf
key	aircrack-ng.h	/^	char key[128];					\/* cracked key (0 while not found) *\/$/;"	m	struct:WPA_data
key	aircrack-ng.h	/^	unsigned char key[64];				 \/* the current chosen WEP key   *\/$/;"	m	struct:WEP_data
key	airodump-ng.h	/^    char *key;		      \/* if wep-key found by dict *\/$/;"	m	struct:AP_info
key0	crypto.h	/^    unsigned long key0;$/;"	m	struct:Michael
key1	crypto.h	/^    unsigned long key1;$/;"	m	struct:Michael
key_buffer	aircrack-ng.h	/^	char *key_buffer;				\/* queue as a circular buffer for feeding and consuming keys *\/$/;"	m	struct:WPA_data
key_found	aircrack-ng.c	/^static void key_found(unsigned char *wepkey, int keylen, int B)$/;"	f	file:
key_index	airdecloak-ng.h	/^    unsigned char key_index;$/;"	m	struct:packet_elt
keybuf	aircrack-ptw-lib.c	158;"	d	file:
keybuf	aircrack-ptw-lib.c	272;"	d	file:
keybyte	aircrack-ptw-lib.c	/^	int keybyte;$/;"	m	struct:__anon23	file:
keybyte	aircrack-ptw-lib.c	/^	int keybyte;$/;"	m	struct:__anon24	file:
keydata_len	ieee802_11_defs.h	/^					le16 keydata_len;$/;"	m	struct:ieee80211_mgmt::__anon34::__anon43::__anon44::__anon52
keylen	aircrack-ng.h	/^	int keylen;					 \/* WEP key length       *\/$/;"	m	struct:options
keymic	crypto.h	/^    unsigned char keymic[20];           \/* eapol frame MIC              *\/$/;"	m	struct:WPA_ST_info
keymic	include/eapol.h	/^    uint8_t keymic[16];   \/* eapol frame MIC          *\/$/;"	m	struct:WPA_hdsk
keyout	airbase-ng.c	/^    char *keyout;$/;"	m	struct:options	file:
keyout	airodump-ng.h	/^    char *keyout;$/;"	m	struct:globals
keystream	aircrack-ptw-lib.h	/^        uint8_t keystream[PTW_KSBYTES];$/;"	m	struct:__anon70
keystream_	aircrack-ptw-lib.c	159;"	d	file:
keystream_	aircrack-ptw-lib.c	273;"	d	file:
keytable	aircrack-ptw-lib.c	/^PTW_tableentry keytable[KEYHSBYTES][n];$/;"	v
keyver	crypto.h	/^    int keyver, valid_ptk;$/;"	m	struct:WPA_ST_info
keyver	include/eapol.h	/^    uint8_t keyver;       \/* key version (TKIP \/ AES) *\/$/;"	m	struct:WPA_hdsk
kill_crack	wesside-ng.c	/^static void kill_crack(struct wstate *ws)$/;"	f	file:
known_clear	crypto.c	/^int known_clear(void *clear, int *clen, int *weight, unsigned char *wh, int len)$/;"	f
known_clear	easside-ng.c	/^int known_clear(void *clear, struct ieee80211_frame *wh, int len)$/;"	f
korek	aircrack-ng.h	/^	int korek;					 \/* attack strategy      *\/$/;"	m	struct:options
l	MD5_std.h	/^	} l;$/;"	m	struct:__anon28	typeref:struct:__anon28::__anon29
l	aircapture.h	/^	uint8_t l;$/;"	m	struct:el
l33t	aircrack-ng.h	/^	int l33t;					 \/* no comment           *\/$/;"	m	struct:options
lanip	aircrack-ng.h	/^	unsigned char lanip[4];				 \/* IP address if unencrypted    *\/$/;"	m	struct:AP_info
lanip	airnodes.c	/^	unsigned char lanip[4];       \/* last detected ip address      *\/$/;"	m	struct:AP_INFO	file:
lanip	airodump-ng.h	/^    unsigned char lanip[4];   \/* last detected ip address *\/$/;"	m	struct:AP_info
last	airdecloak-ng.h	/^	struct packet_elt *last;$/;"	m	struct:packet_elt_header	typeref:struct:packet_elt_header::packet_elt
last_id	buddy-ng.c	/^unsigned short last_id;$/;"	v
last_list	llist.c	/^llist* last_list(llist *node)$/;"	f
last_mic_failure	tkiptun-ng.c	/^    struct timeval last_mic_failure;    \/* timestamp of last mic failure *\/$/;"	m	struct:options	typeref:struct:options::timeval	file:
last_seq	airnodes.c	/^	unsigned int last_seq;        \/* last sequence number          *\/$/;"	m	struct:AP_INFO	file:
last_seq	airodump-ng.h	/^    unsigned int    last_seq; \/* last sequence number        *\/$/;"	m	struct:AP_info
last_tag	airconf-parse.c	/^tag_conf* last_tag(tag_conf *tag)$/;"	f
lastseq	airbase-ng.c	/^    unsigned int lastseq;    \/* last seen sequnce number  *\/$/;"	m	struct:ST_info	file:
lastseq	airnodes.c	/^	unsigned int lastseq;    \/* last seen sequence number *\/$/;"	m	struct:STA_INFO	file:
lastseq	airodump-ng.h	/^    unsigned int lastseq;    \/* last seen sequence number *\/$/;"	m	struct:ST_info
lc	log.c	/^void lc(LOG_CTX* ctx, const char *fmt, ...)$/;"	f
lci_req_subelem	ieee802_11_defs.h	/^enum lci_req_subelem {$/;"	g
lctx	aircapture.h	/^	LOG_CTX lctx;$/;"	m	struct:_AIRCAP_G
lctx	airshooter.h	/^	LOG_CTX lctx;$/;"	m	struct:_AIRSHOOT_G
lcx	log.c	/^void lcx(LOG_CTX* ctx, uint8_t *hex, size_t len, const char *fmt, ...)$/;"	f
ld	log.c	/^void ld(LOG_CTX* ctx, const char *fmt, ...)$/;"	f
ldx	log.c	/^void ldx(LOG_CTX* ctx, uint8_t *hex, size_t len, const char *fmt, ...)$/;"	f
le	log.c	/^void le(LOG_CTX* ctx, const char *fmt, ...)$/;"	f
le16	ieee802_11_defs.h	/^typedef u16 __bitwise le16;$/;"	t
le16_to_cpu	osdep/byteorder.h	404;"	d
le16_to_cpu	osdep/radiotap/platform.h	34;"	d
le16toh	osdep/byteorder.h	413;"	d
le16toh	osdep/radiotap/platform.h	15;"	d
le32	ieee802_11_defs.h	/^typedef u32 __bitwise le32;$/;"	t
le32_to_cpu	osdep/byteorder.h	402;"	d
le32_to_cpu	osdep/radiotap/platform.h	35;"	d
le32toh	osdep/byteorder.h	419;"	d
le32toh	osdep/netbsd.c	57;"	d	file:
le32toh	osdep/openbsd.c	64;"	d	file:
le32toh	osdep/radiotap/platform.h	20;"	d
le64	ieee802_11_defs.h	/^typedef u64 __bitwise le64;$/;"	t
le64_to_cpu	osdep/byteorder.h	400;"	d
le64toh	osdep/radiotap/platform.h	25;"	d
left	crypto.h	/^    unsigned long left;$/;"	m	struct:Michael
len	airbase-ng.c	/^    int len;$/;"	m	struct:ARP_req	file:
len	airbase-ng.c	/^    unsigned char   len;$/;"	m	struct:ESSID_list	file:
len	airconf-parse.h	/^	uint8_t len;$/;"	m	struct:_tag_conf
len	aireplay-ng.c	/^    int len;$/;"	m	struct:ARP_req	file:
len	aireplay-ng.c	/^    unsigned char len;$/;"	m	struct:APt	file:
len	airtun-ng.c	/^    int len;$/;"	m	struct:ARP_req	file:
len	ezxml/ezxml.c	/^    size_t len;           \/\/ length of allocated memory for mmap, -1 for malloc$/;"	m	struct:ezxml_root	file:
len	ieee802_11_defs.h	/^	u8 len;$/;"	m	struct:multi_band_ie
len	ieee802_11_defs.h	/^	u8 len;$/;"	m	struct:tpc_report
len	ieee802_11_defs.h	/^	u8 len;$/;"	m	struct:wnm_sleep_element
len	include/ieee80211.h	/^	u_int8_t	len;$/;"	m	struct:ieee80211_country_ie
len	pcap.h	/^    uint16_t  len;$/;"	m	struct:ivs2_pkthdr
len	pcap.h	/^    uint32_t len;$/;"	m	struct:pcap_pkthdr
len	tkiptun-ng.c	/^    int len;$/;"	m	struct:ARP_req	file:
len	tkiptun-ng.c	/^    unsigned char len;$/;"	m	struct:APt	file:
len	wi_packet.h	/^	uint8_t   len;$/;"	m	struct:_wi_tag_t
length	MD5_std.h	/^	int length;$/;"	m	struct:__anon27
length	airdecloak-ng.h	/^    unsigned short  length;     \/* packet length, just to know how much to write to the file *\/$/;"	m	struct:packet_elt
length	airodump-ng.h	/^    unsigned short  length;     \/* packet length *\/$/;"	m	struct:pkt_buf
length	ieee802_11_defs.h	/^					u8 length;$/;"	m	struct:ieee80211_mgmt::__anon34::__anon43::__anon44::__anon46
length	ieee802_11_defs.h	/^	u8 length; \/* 6 + 55 = 61 *\/$/;"	m	struct:wmm_tspec_element
length	ieee802_11_defs.h	/^	u8 length;$/;"	m	struct:ieee80211_2040_bss_coex_ie
length	ieee802_11_defs.h	/^	u8 length;$/;"	m	struct:ieee80211_2040_intol_chan_report
length	wpapsk.h	/^	uint32_t length;$/;"	m	struct:__anon64
length	wpapsk.h	/^	uint32_t length;$/;"	m	struct:wpapsk_password
letoh16	osdep/byteorder.h	330;"	d
letoh16	osdep/byteorder.h	387;"	d
letoh32	osdep/byteorder.h	333;"	d
letoh32	osdep/byteorder.h	390;"	d
letoh64	osdep/byteorder.h	336;"	d
letoh64	osdep/byteorder.h	393;"	d
lex	log.c	/^void lex(LOG_CTX* ctx, uint8_t *hex, size_t len, const char *fmt, ...)$/;"	f
li	log.c	/^void li(LOG_CTX* ctx, const char *fmt, ...)$/;"	f
libc_calloc	memdbg.h	146;"	d
libc_calloc	memdbg.h	150;"	d
libc_calloc	memdbg.h	204;"	d
libc_calloc	memdbg.h	208;"	d
libc_free	memdbg.h	145;"	d
libc_free	memdbg.h	148;"	d
libc_free	memdbg.h	203;"	d
libc_free	memdbg.h	206;"	d
libc_malloc	memdbg.h	147;"	d
libc_malloc	memdbg.h	149;"	d
libc_malloc	memdbg.h	205;"	d
libc_malloc	memdbg.h	207;"	d
linecount	linecount.cpp	/^unsigned int linecount(const char *file, off_t offset, size_t offsetmax) {$/;"	f
link_margin	ieee802_11_defs.h	/^	u8 link_margin;$/;"	m	struct:tpc_report
linktype	pcap.h	/^    uint32_t linktype;$/;"	m	struct:pcap_file_header
linux_close	osdep/linux.c	/^static void linux_close(struct wif *wi)$/;"	f	file:
linux_close_nl80211	osdep/linux.c	/^static void linux_close_nl80211(struct wif *wi)$/;"	f	file:
linux_fd	osdep/linux.c	/^static int linux_fd(struct wif *wi)$/;"	f	file:
linux_get_channel	osdep/linux.c	/^static int linux_get_channel(struct wif *wi)$/;"	f	file:
linux_get_freq	osdep/linux.c	/^static int linux_get_freq(struct wif *wi)$/;"	f	file:
linux_get_mac	osdep/linux.c	/^static int linux_get_mac(struct wif *wi, unsigned char *mac)$/;"	f	file:
linux_get_monitor	osdep/linux.c	/^int linux_get_monitor(struct wif *wi)$/;"	f
linux_get_mtu	osdep/linux.c	/^static int linux_get_mtu(struct wif *wi)$/;"	f	file:
linux_get_rate	osdep/linux.c	/^static int linux_get_rate(struct wif *wi)$/;"	f	file:
linux_nl80211_init	osdep/linux.c	/^static int linux_nl80211_init(struct nl80211_state *state)$/;"	f	file:
linux_open	osdep/linux.c	/^static struct wif *linux_open(char *iface)$/;"	f	file:
linux_path	common.c	/^char *linux_path(const char*cmd)$/;"	f
linux_read	osdep/linux.c	/^static int linux_read(struct wif *wi, unsigned char *buf, int count, struct rx_info *ri)$/;"	f	file:
linux_search_inside	common.c	/^static char* linux_search_inside(const char*dir, const char* filename)$/;"	f	file:
linux_set_channel	osdep/linux.c	/^static int linux_set_channel(struct wif *wi, int channel)$/;"	f	file:
linux_set_channel_nl80211	osdep/linux.c	/^static int linux_set_channel_nl80211(struct wif *wi, int channel)$/;"	f	file:
linux_set_freq	osdep/linux.c	/^static int linux_set_freq(struct wif *wi, int freq)$/;"	f	file:
linux_set_mac	osdep/linux.c	/^static int linux_set_mac(struct wif *wi, unsigned char *mac)$/;"	f	file:
linux_set_mtu	osdep/linux.c	/^static int linux_set_mtu(struct wif *wi, int mtu)$/;"	f	file:
linux_set_rate	osdep/linux.c	/^static int linux_set_rate(struct wif *wi, int rate)$/;"	f	file:
linux_write	osdep/linux.c	/^static int linux_write(struct wif *wi, unsigned char *buf, int count,$/;"	f	file:
list_add_packet	airodump-ng.c	/^int list_add_packet(struct pkt_buf **list, int length, unsigned char* packet)$/;"	f
list_check_decloak	airodump-ng.c	/^int list_check_decloak(struct pkt_buf **list, int length, unsigned char* packet)$/;"	f
list_tail_free	airodump-ng.c	/^int list_tail_free(struct pkt_buf **list)$/;"	f
listen_interval	ieee802_11_defs.h	/^			le16 listen_interval;$/;"	m	struct:ieee80211_mgmt::__anon34::__anon37
listen_interval	ieee802_11_defs.h	/^			le16 listen_interval;$/;"	m	struct:ieee80211_mgmt::__anon34::__anon39
listen_interval	wi_packet.h	/^	uint16_t            listen_interval; \/\/ 2 byte$/;"	m	struct:_wi_assoc_req_fixed
listen_interval	wi_packet.h	/^	uint16_t            listen_interval; \/\/ 2 byte$/;"	m	struct:_wi_reassoc_req_fixed
lix	log.c	/^void lix(LOG_CTX* ctx, uint8_t *hex, size_t len, const char *fmt, ...)$/;"	f
llc	include/if_llc.h	/^struct llc {$/;"	s
llc_class	include/if_llc.h	98;"	d
llc_control	include/if_llc.h	95;"	d
llc_control_ext	include/if_llc.h	96;"	d
llc_dsap	include/if_llc.h	/^	uint8_t llc_dsap;$/;"	m	struct:llc
llc_fid	include/if_llc.h	97;"	d
llc_frmr_cause	include/if_llc.h	105;"	d
llc_frmr_control	include/if_llc.h	103;"	d
llc_frmr_control_ext	include/if_llc.h	104;"	d
llc_frmr_pdu0	include/if_llc.h	101;"	d
llc_frmr_pdu1	include/if_llc.h	102;"	d
llc_frmrinfo	include/if_llc.h	100;"	d
llc_snap	include/if_llc.h	106;"	d
llc_ssap	include/if_llc.h	/^	uint8_t llc_ssap;$/;"	m	struct:llc
llc_un	include/if_llc.h	/^	} llc_un \/* XXX __packed ??? *\/;$/;"	m	struct:llc	typeref:union:llc::__anon6
llc_window	include/if_llc.h	99;"	d
llcnull	airnodes.h	/^const unsigned char llcnull[4] = {0, 0, 0, 0};$/;"	v
llcnull	airodump-ng.h	/^const unsigned char llcnull[4] = {0, 0, 0, 0};$/;"	v
llist	llist.h	/^} llist;$/;"	t	typeref:struct:_llist
load_oui_file	airodump-ng.c	/^struct oui * load_oui_file(void) {$/;"	f
load_prga	easside-ng.c	/^void load_prga(struct east_state *es)$/;"	f
load_prga	wesside-ng.c	/^static void load_prga(struct wstate *ws)$/;"	f	file:
loaded	aircrack-ng.h	/^	int	loaded;				\/* Have finished processing? *\/$/;"	m	struct:dictfiles
local_nonce	ieee802_11_defs.h	/^	u8 local_nonce[32];$/;"	m	struct:ieee80211_ampe_ie
location_subject	ieee802_11_defs.h	/^enum location_subject {$/;"	g
lock	hashtable.h	/^	pthread_mutex_t *lock;$/;"	m	struct:_hash_ctx_t
logKeyToFile	aircrack-ng.h	/^	char * logKeyToFile;$/;"	m	struct:options
log_dir	log.h	/^	char log_dir[256];$/;"	m	struct:_LOG_CTX
log_file	log.h	/^	char log_file[256];$/;"	m	struct:_LOG_CTX
log_prefix	log.h	/^	char log_prefix[32];$/;"	m	struct:_LOG_CTX
log_wep	wesside-ng.c	/^static void log_wep(struct wstate *ws, struct ieee80211_frame* wh, int len)$/;"	f	file:
lv	log.h	/^	int lv;$/;"	m	struct:_LOG_CTX
m	crypto.h	/^    int x, y, m[256];$/;"	m	struct:rc4_state
m	ezxml/ezxml.c	/^    char *m;              \/\/ original xml string$/;"	m	struct:ezxml_root	file:
mac	airbase-ng.c	/^    unsigned char   mac[6];$/;"	m	struct:MAC_list	file:
mac2str	besside-ng.c	/^static char *mac2str(unsigned char *mac)$/;"	f	file:
mac2str	easside-ng.c	/^void mac2str(char *str, unsigned char* m, int macsize)$/;"	f
mac2str	wesside-ng.c	/^static char* mac2str(unsigned char* mac)$/;"	f	file:
mac2string	common.c	/^char * mac2string(unsigned char *mac_address )$/;"	f
mac_cmp	common.h	152;"	d
mac_cmp_bcast	common.h	153;"	d
mac_cmp_null	common.h	154;"	d
mac_cpy	common.h	155;"	d
mac_cpy_bcast	common.h	156;"	d
mac_in	aireplay-ng.c	/^    unsigned char mac_in[6];$/;"	m	struct:devices	file:
mac_in	tkiptun-ng.c	/^    unsigned char mac_in[6];$/;"	m	struct:devices	file:
mac_init	common.h	148;"	d
mac_init	common.h	150;"	d
mac_out	aireplay-ng.c	/^    unsigned char mac_out[6];$/;"	m	struct:devices	file:
mac_out	tkiptun-ng.c	/^    unsigned char mac_out[6];$/;"	m	struct:devices	file:
mac_seen_cmp	common.h	184;"	d
mac_seen_cpy	common.h	178;"	d
mac_seen_init	common.h	162;"	d
mac_seen_init	common.h	165;"	d
mac_seen_mac_cpy	common.h	172;"	d
mac_seen_t	common.h	/^typedef struct mac_seen_t {$/;"	s
mac_seen_t	common.h	/^} mac_seen_t;$/;"	t	typeref:struct:mac_seen_t
mac_t	common.h	134;"	d
maccmp	common.c	/^int maccmp(unsigned char *mac1, unsigned char *mac2)$/;"	f
maddr	aircrack-ng.h	/^	unsigned char maddr[6];				 \/* MAC address filter   *\/$/;"	m	struct:options
magic	aircrack-ng.h	/^	uint32_t magic;$/;"	m	struct:hashdb_head
magic	pcap.h	/^    uint32_t magic;$/;"	m	struct:pcap_file_header
main	airbase-ng.c	/^int main( int argc, char *argv[] )$/;"	f
main	aircapture-main.c	/^int main(int argc, char **argv)$/;"	f
main	aircrack-ng.c	/^int main( int argc, char *argv[] )$/;"	f
main	airdecap-ng.c	/^int main( int argc, char *argv[] )$/;"	f
main	airdecloak-ng.c	/^int main( int argc, char *argv[] )$/;"	f
main	aireplay-ng.c	/^int main( int argc, char *argv[] )$/;"	f
main	airodump-ng.c	/^int main( int argc, char *argv[] )$/;"	f
main	airolib-ng.c	/^int main(int argc, char **argv) {$/;"	f
main	airserv-ng.c	/^int main(int argc, char *argv[])$/;"	f
main	airshooter-main.c	/^int main(int argc, char *argv[])$/;"	f
main	airsock.c	/^int main(int argc, char **argv)$/;"	f
main	airtun-ng.c	/^int main( int argc, char *argv[] )$/;"	f
main	besside-ng-crawler.c	/^int main(int argc, char *argv[]) {$/;"	f
main	besside-ng.c	/^int main(int argc, char *argv[])$/;"	f
main	buddy-ng.c	/^int main(int argc, char *argv[])$/;"	f
main	easside-ng.c	/^int main(int argc, char *argv[])$/;"	f
main	ezxml/ezxml.c	/^int main(int argc, char **argv)$/;"	f
main	ezxml/test.c	/^int main(int argc, char **argv)$/;"	f
main	hashtable.c	/^int main(int argc, char **argv)$/;"	f
main	ivstools.c	/^int main( int argc, char *argv[] )$/;"	f
main	kstats.c	/^int main( int argc, char *argv[] )$/;"	f
main	makeivs-ng.c	/^int main( int argc, char *argv[] )$/;"	f
main	osdep/radiotap/parse.c	/^int main(int argc, char *argv[])$/;"	f
main	packetforge-ng.c	/^int main(int argc, char* argv[])$/;"	f
main	qstrstr.c	/^int main()$/;"	f
main	set_channel.c	/^int main(int argc, char** argv)$/;"	f
main	tkiptun-ng.c	/^int main( int argc, char *argv[] )$/;"	f
main	wesside-ng.c	/^int main(int argc, char *argv[])$/;"	f
main	wi_close.c	/^int main(int argc, char **argv)$/;"	f
main	wips-inspect.c	/^int main(int argc, char *argv[])$/;"	f
main	wpaclean.c	/^int main(int argc, char *argv[])$/;"	f
main_if	osdep/linux.c	/^    char *main_if;$/;"	m	struct:priv_linux	file:
make_arp_request	aireplay-ng.c	/^int make_arp_request(unsigned char *h80211, unsigned char *bssid, unsigned char *src_mac, unsigned char *dst_mac, unsigned char *src_ip, unsigned char *dst_ip, int size)$/;"	f
make_arp_request	tkiptun-ng.c	/^int make_arp_request(unsigned char *h80211, unsigned char *bssid, unsigned char *src_mac, unsigned char *dst_mac, unsigned char *src_ip, unsigned char *dst_ip, int size)$/;"	f
make_progress	besside-ng.c	/^static void make_progress(void)$/;"	f	file:
make_tag	airconf-parse.c	/^tag_conf* make_tag(tag_conf *prev, uint8_t tag, uint8_t len, uint8_t *data)$/;"	f
malloc	memdbg.h	141;"	d
malloc	memdbg.h	151;"	d
malloc	memory.c	68;"	d	file:
manuf	airodump-ng.h	/^	char manuf[128]; \/* TODO: Switch to a char * later to improve memory usage *\/$/;"	m	struct:oui
manuf	airodump-ng.h	/^    char *manuf;              \/* the access point's manufacturer *\/$/;"	m	struct:AP_info
manuf	airodump-ng.h	/^    char *manuf;             \/* the client's manufacturer *\/$/;"	m	struct:ST_info
manufList	airodump-ng.h	/^    struct oui *manufList;$/;"	m	struct:globals	typeref:struct:globals::oui
mapgsm	osdep/freebsd.c	/^mapgsm(u_int freq, u_int flags)$/;"	f	file:
mappsb	osdep/freebsd.c	/^mappsb(u_int freq)$/;"	f	file:
mark_cur_ap	airodump-ng.h	/^    int mark_cur_ap;$/;"	m	struct:globals
marked	airodump-ng.h	/^    int marked;$/;"	m	struct:AP_info
marked_color	airodump-ng.h	/^    int marked_color;$/;"	m	struct:AP_info
masks	MD5_std.h	/^	MD5_word masks[2];$/;"	m	struct:__anon32
match_capture_process	aircapture.c	/^int match_capture_process(AIRCAP_G *g, int loop, aircap_handler_t handler)$/;"	f
max_ivs	aircrack-ng.h	/^	int max_ivs;$/;"	m	struct:options
max_speed	airnodes.c	/^	int max_speed;$/;"	m	struct:AP_INFO	file:
max_speed	airodump-ng.h	/^    int max_speed;            \/* AP maximum speed in Mb\/s *\/$/;"	m	struct:AP_info
max_tp	ieee802_11_defs.h	/^	s8 max_tp;$/;"	m	struct:rrm_link_measurement_request
max_tries	aircrack-ptw-lib.c	/^int tried, max_tries;$/;"	v
maxaps	airodump-ng.h	/^    int maxaps;               \/* number of all APs found *\/$/;"	m	struct:globals
maximum_burst_size	ieee802_11_defs.h	/^	le32 maximum_burst_size;$/;"	m	struct:wmm_tspec_element
maximum_msdu_size	ieee802_11_defs.h	/^	le16 maximum_msdu_size;$/;"	m	struct:wmm_tspec_element
maximum_service_interval	ieee802_11_defs.h	/^	le32 maximum_service_interval;$/;"	m	struct:wmm_tspec_element
maxlogic	aircrack-ng.h	/^	int maxlogic;				\/* Max addressible lCPU *\/$/;"	m	struct:_cpuinfo
maxnumaps	airodump-ng.h	/^    int maxnumaps;            \/* maximum nubers of APs on the list *\/$/;"	m	struct:globals
maxsize_essid_seen	airodump-ng.h	/^    u_int maxsize_essid_seen;$/;"	m	struct:globals
maxsize_wps_seen	airodump-ng.h	/^    u_int maxsize_wps_seen;$/;"	m	struct:globals
maxtxpwr	include/ieee80211.h	/^	u_int8_t maxtxpwr;		\/* tx power cap *\/$/;"	m	struct:ieee80211_band
mb_band_id	ieee802_11_defs.h	/^enum mb_band_id {$/;"	g
mb_connection_capability	ieee802_11_defs.h	/^	u8 mb_connection_capability;$/;"	m	struct:multi_band_ie
mb_ctrl	ieee802_11_defs.h	/^	u8 mb_ctrl;$/;"	m	struct:multi_band_ie
mb_ctrl_sta_role	ieee802_11_defs.h	/^enum mb_ctrl_sta_role {$/;"	g
mbo_assoc_disallow_reason	ieee802_11_defs.h	/^enum mbo_assoc_disallow_reason {$/;"	g
mbo_attr_id	ieee802_11_defs.h	/^enum mbo_attr_id {$/;"	g
mbo_cell_pref	ieee802_11_defs.h	/^enum mbo_cell_pref {$/;"	g
mbo_cellular_capa	ieee802_11_defs.h	/^enum mbo_cellular_capa {$/;"	g
mbo_non_pref_chan_reason	ieee802_11_defs.h	/^enum mbo_non_pref_chan_reason {$/;"	g
mbo_transition_reason	ieee802_11_defs.h	/^enum mbo_transition_reason {$/;"	g
mbo_transition_reject_reason	ieee802_11_defs.h	/^enum mbo_transition_reject_reason {$/;"	g
mc_pipe	aircrack-ng.c	/^int mc_pipe[256][2];			 \/* master->child control pipe   *\/$/;"	v
md4_reverse	simd-intrinsics.c	/^void md4_reverse(uint32_t *hash)$/;"	f
md4_unreverse	simd-intrinsics.c	/^void md4_unreverse(uint32_t *hash)$/;"	f
md5_reverse	simd-intrinsics.c	/^void md5_reverse(uint32_t *hash)$/;"	f
md5_unreverse	simd-intrinsics.c	/^void md5_unreverse(uint32_t *hash)$/;"	f
md5cryptsse	simd-intrinsics.c	/^void md5cryptsse(unsigned char pwd[MD5_SSE_NUM_KEYS][16], unsigned char *salt,$/;"	f
mean_data_rate	ieee802_11_defs.h	/^	le32 mean_data_rate;$/;"	m	struct:wmm_tspec_element
measure_type	ieee802_11_defs.h	/^enum measure_type {$/;"	g
medium_time	ieee802_11_defs.h	/^	le16 medium_time;$/;"	m	struct:wmm_tspec_element
mem	memory.c	/^	void *mem;$/;"	m	struct:rm_list	file:
mem_align	memory.h	312;"	d
mem_alloc	memory.h	148;"	d
mem_alloc	memory.h	157;"	d
mem_alloc_align	memory.h	154;"	d
mem_alloc_align	memory.h	163;"	d
mem_alloc_align_func	memory.c	/^void *mem_alloc_align_func(size_t size, size_t align$/;"	f
mem_alloc_copy	memory.h	152;"	d
mem_alloc_copy	memory.h	161;"	d
mem_alloc_copy_func	memory.c	/^void *mem_alloc_copy_func(void *src, size_t size, size_t align$/;"	f
mem_alloc_func	memory.c	/^void *mem_alloc_func(size_t size$/;"	f
mem_alloc_tiny	memory.h	150;"	d
mem_alloc_tiny	memory.h	159;"	d
mem_alloc_tiny_func	memory.c	/^void *mem_alloc_tiny_func(size_t size, size_t align$/;"	f
mem_alloc_tiny_memory	memory.c	/^static struct rm_list *mem_alloc_tiny_memory;$/;"	v	typeref:struct:rm_list	file:
mem_calloc	memory.h	149;"	d
mem_calloc	memory.h	158;"	d
mem_calloc_align	memory.h	155;"	d
mem_calloc_align	memory.h	164;"	d
mem_calloc_align_func	memory.c	/^void *mem_calloc_align_func(size_t count, size_t size, size_t align$/;"	f
mem_calloc_func	memory.c	/^void *mem_calloc_func(size_t count, size_t size$/;"	f
mem_calloc_tiny	memory.h	151;"	d
mem_calloc_tiny	memory.h	160;"	d
mem_calloc_tiny_func	memory.c	/^void *mem_calloc_tiny_func(size_t size, size_t align$/;"	f
mem_saving_level	memory.c	/^unsigned int mem_saving_level = 0;$/;"	v
mem_size	memdbg.h	/^	size_t mem_size;$/;"	m	struct:MEMDBG_HANDLE_t
merge	ivstools.c	/^int merge( int argc, char *argv[] )$/;"	f
mergeBSSID	aircrack-ng.h	/^struct mergeBSSID$/;"	s
mergebssids	aircrack-ng.c	/^int mergebssids(char * bssidlist, unsigned char * bssid)$/;"	f
message	airodump-ng.h	/^    char message[512];$/;"	m	struct:globals
message	crypto.h	/^    unsigned long message;$/;"	m	struct:Michael
meth	airnodes.c	/^	unsigned int meth;        \/* WPS Config Methods *\/$/;"	m	struct:WPS_INFO	file:
meth	airodump-ng.h	/^    unsigned int meth;        \/* WPS Config Methods *\/$/;"	m	struct:WPS_info
mgnt_action	h80211_types.h	/^	mgnt_action      = 0x0d,$/;"	e	enum:h80211_mgnt
mgnt_assoc_req	h80211_types.h	/^	mgnt_assoc_req   = 0x00,$/;"	e	enum:h80211_mgnt
mgnt_assoc_resp	h80211_types.h	/^	mgnt_assoc_resp  = 0x01,$/;"	e	enum:h80211_mgnt
mgnt_atim	h80211_types.h	/^	mgnt_atim        = 0x09,$/;"	e	enum:h80211_mgnt
mgnt_auth	h80211_types.h	/^	mgnt_auth        = 0x0b,$/;"	e	enum:h80211_mgnt
mgnt_beacon	h80211_types.h	/^	mgnt_beacon      = 0x08,$/;"	e	enum:h80211_mgnt
mgnt_deauth	h80211_types.h	/^	mgnt_deauth      = 0x0c,$/;"	e	enum:h80211_mgnt
mgnt_disassoc	h80211_types.h	/^	mgnt_disassoc    = 0x0a,$/;"	e	enum:h80211_mgnt
mgnt_probe_req	h80211_types.h	/^	mgnt_probe_req   = 0x04,$/;"	e	enum:h80211_mgnt
mgnt_probe_resp	h80211_types.h	/^	mgnt_probe_resp  = 0x05,$/;"	e	enum:h80211_mgnt
mgnt_reassoc_req	h80211_types.h	/^	mgnt_reassoc_req = 0x02,$/;"	e	enum:h80211_mgnt
mgnt_reassoc_resp	h80211_types.h	/^	mgnt_reassoc_resp= 0x03,$/;"	e	enum:h80211_mgnt
mic	crypto.h	/^    unsigned char mic[8];$/;"	m	struct:Michael
mic_failure_interval	tkiptun-ng.c	/^    int mic_failure_interval;           \/* time between allowed mic failures *\/$/;"	m	struct:options	file:
michael_append	crypto.c	/^int michael_append(struct Michael *mic, unsigned char *bytes, int length)$/;"	f
michael_append_byte	crypto.c	/^int michael_append_byte(struct Michael *mic, unsigned char byte)$/;"	f
michael_finalize	crypto.c	/^int michael_finalize(struct Michael *mic)$/;"	f
michael_finalize_zero	crypto.c	/^int michael_finalize_zero(struct Michael *mic)$/;"	f
michael_remove	crypto.c	/^int michael_remove(struct Michael *mic, unsigned char *bytes, int length)$/;"	f
michael_remove_byte	crypto.c	/^int michael_remove_byte(struct Michael *mic, unsigned char bytes[4])$/;"	f
michael_test	crypto.c	/^int michael_test(unsigned char key[8], unsigned char *message, int length, unsigned char out[8])$/;"	f
minimum_data_rate	ieee802_11_defs.h	/^	le32 minimum_data_rate;$/;"	m	struct:wmm_tspec_element
minimum_phy_rate	ieee802_11_defs.h	/^	le32 minimum_phy_rate;$/;"	m	struct:wmm_tspec_element
minimum_service_interval	ieee802_11_defs.h	/^	le32 minimum_service_interval;$/;"	m	struct:wmm_tspec_element
missed	airbase-ng.c	/^    int missed;              \/* number of missed packets  *\/$/;"	m	struct:ST_info	file:
missed	airnodes.c	/^	int missed;              \/* number of missed packets  *\/$/;"	m	struct:STA_INFO	file:
missed	airodump-ng.h	/^    int missed;              \/* number of missed packets  *\/$/;"	m	struct:ST_info
mitm	airbase-ng.c	/^    int mitm;$/;"	m	struct:options	file:
mmx_only	sha1-sse2.S	/^mmx_only:$/;"	l
mmxput	simd-intrinsics.c	/^static MAYBE_INLINE void mmxput(void *buf, unsigned int index, unsigned int bid,$/;"	f	file:
mmxput	sse-intrinsics.c	/^static MAYBE_INLINE void mmxput(void * buf, unsigned int index, unsigned int bid, unsigned int offset, unsigned char * src, unsigned int len)$/;"	f	file:
mmxput2	simd-intrinsics.c	/^static MAYBE_INLINE void mmxput2(void *buf, unsigned int bid, void *src)$/;"	f	file:
mmxput2	sse-intrinsics.c	/^static MAYBE_INLINE void mmxput2(void * buf, unsigned int bid, void * src)$/;"	f	file:
mmxput3	simd-intrinsics.c	/^static MAYBE_INLINE void mmxput3(void *buf, unsigned int bid,$/;"	f	file:
mmxput3	sse-intrinsics.c	/^static MAYBE_INLINE void mmxput3(void * buf, unsigned int bid, unsigned int * offset, int mult, int saltlen, void * src)$/;"	f	file:
mnf_action	include/ieee80211.h	/^	u_int8_t	mnf_action;$/;"	m	struct:ieee80211_mnf
mnf_category	include/ieee80211.h	/^	u_int8_t	mnf_category;$/;"	m	struct:ieee80211_mnf
mnf_dialog	include/ieee80211.h	/^	u_int8_t	mnf_dialog;$/;"	m	struct:ieee80211_mnf
mnf_status	include/ieee80211.h	/^	u_int8_t	mnf_status;$/;"	m	struct:ieee80211_mnf
mode	packetforge-ng.c	/^    int mode;$/;"	m	struct:options	file:
model	aircrack-ng.h	/^	char *model;				\/* CPU Model		*\/$/;"	m	struct:_cpuinfo
more_data	wi_packet.h	/^	uint8_t   more_data:1;$/;"	m	struct:_wi_flags_t
more_frag	wi_packet.h	/^	uint8_t   more_frag:1;$/;"	m	struct:_wi_flags_t
more_fragments_bit	airdecloak-ng.h	/^    int more_fragments_bit;$/;"	m	struct:packet_elt
msec_diff	easside-ng.c	/^unsigned int msec_diff(struct timeval *after, struct timeval *before)$/;"	f
msec_to_tv	easside-ng.c	/^void msec_to_tv(int msec, struct timeval *tv)$/;"	f
msleep	airbase-ng.c	/^int msleep( int msec )$/;"	f
msleep	airtun-ng.c	/^int msleep( int msec )$/;"	f
multi_band_ie	ieee802_11_defs.h	/^struct multi_band_ie {$/;"	s
multi_tid	wi_packet.h	/^	uint16_t   multi_tid:1;$/;"	m	struct:_wi_ctrl_ba_control
mutex	aircrack-ng.h	/^	pthread_mutex_t mutex;$/;"	m	struct:WPA_data
mx_apl	aircrack-ng.c	/^pthread_mutex_t mx_apl;			 \/* lock write access to ap LL   *\/$/;"	v
mx_cap	airbase-ng.c	/^pthread_mutex_t mx_cap;              \/* lock write access to rCF *\/$/;"	v
mx_cf	airbase-ng.c	/^pthread_mutex_t mx_cf;              \/* lock write access to rCF *\/$/;"	v
mx_dic	aircrack-ng.c	/^pthread_mutex_t mx_dic;			 \/* lock access to opt.dict      *\/$/;"	v
mx_eof	aircrack-ng.c	/^pthread_mutex_t mx_eof;			 \/* lock write access to nb_eof  *\/$/;"	v
mx_ivb	aircrack-ng.c	/^pthread_mutex_t mx_ivb;			 \/* lock access to ivbuf array   *\/$/;"	v
mx_nb	aircrack-ng.c	/^static pthread_mutex_t mx_nb = PTHREAD_MUTEX_INITIALIZER;$/;"	v	file:
mx_print	airodump-ng.h	/^    pthread_mutex_t mx_print;			 \/* lock write access to ap LL   *\/$/;"	m	struct:globals
mx_sort	airodump-ng.h	/^    pthread_mutex_t mx_sort;			 \/* lock write access to ap LL   *\/$/;"	m	struct:globals
mx_wpastats	aircrack-ng.c	/^static pthread_mutex_t mx_wpastats = PTHREAD_MUTEX_INITIALIZER;$/;"	v	file:
mygetch	airodump-ng.c	/^int mygetch( ) {$/;"	f
n	aircrack-ptw-lib.c	45;"	d	file:
nBytesInM	crypto.h	/^    unsigned long nBytesInM;$/;"	m	struct:Michael
n_astate	besside-ng.c	/^	int		n_astate;$/;"	m	struct:network	file:
n_attempts	besside-ng.c	/^	int		n_attempts;$/;"	m	struct:network	file:
n_beacon	besside-ng.c	/^	struct packet	n_beacon;$/;"	m	struct:network	typeref:struct:network::packet	file:
n_beacon	wpaclean.c	/^	unsigned char	n_beacon[2048];$/;"	m	struct:network	file:
n_beacon_wrote	besside-ng.c	/^	int		n_beacon_wrote;$/;"	m	struct:network	file:
n_beaconlen	wpaclean.c	/^	int		n_beaconlen;$/;"	m	struct:network	file:
n_bits	osdep/radiotap/radiotap_iter.h	/^	int n_bits;$/;"	m	struct:ieee80211_radiotap_namespace
n_bssid	besside-ng.c	/^	unsigned char	n_bssid[6];$/;"	m	struct:network	file:
n_bssid	wpaclean.c	/^	unsigned char	n_bssid[6];$/;"	m	struct:network	file:
n_chan	besside-ng.c	/^	int		n_chan;$/;"	m	struct:network	file:
n_client_handshake	besside-ng.c	/^	struct client	*n_client_handshake;$/;"	m	struct:network	typeref:struct:network::client	file:
n_client_mac	besside-ng.c	/^	struct client	*n_client_mac;$/;"	m	struct:network	typeref:struct:network::client	file:
n_clients	besside-ng.c	/^	struct client	n_clients;$/;"	m	struct:network	typeref:struct:network::client	file:
n_clients	wpaclean.c	/^	struct client	n_clients;$/;"	m	struct:network	typeref:struct:network::client	file:
n_crack_next	besside-ng.c	/^	int		n_crack_next;$/;"	m	struct:network	file:
n_cracker_wep	besside-ng.c	/^	struct cracker	n_cracker_wep[2];$/;"	m	struct:network	typeref:struct:network::cracker	file:
n_crypto	besside-ng.c	/^	int		n_crypto;$/;"	m	struct:network	file:
n_data_count	besside-ng.c	/^	int		n_data_count;$/;"	m	struct:network	file:
n_dbm	besside-ng.c	/^	int		n_dbm;$/;"	m	struct:network	file:
n_flood_in	besside-ng.c	/^	struct speed	n_flood_in;$/;"	m	struct:network	typeref:struct:network::speed	file:
n_flood_out	besside-ng.c	/^	struct speed	n_flood_out;$/;"	m	struct:network	typeref:struct:network::speed	file:
n_got_mac	besside-ng.c	/^	int		n_got_mac;$/;"	m	struct:network	file:
n_handshake	wpaclean.c	/^	struct client	*n_handshake;$/;"	m	struct:network	typeref:struct:network::client	file:
n_have_beacon	besside-ng.c	/^	int		n_have_beacon;$/;"	m	struct:network	file:
n_key	besside-ng.c	/^	unsigned char	n_key[64];$/;"	m	struct:network	file:
n_key_len	besside-ng.c	/^	int		n_key_len;$/;"	m	struct:network	file:
n_mac_filter	besside-ng.c	/^	int		n_mac_filter;$/;"	m	struct:network	file:
n_next	besside-ng.c	/^	struct network	*n_next;$/;"	m	struct:network	typeref:struct:network::network	file:
n_next	wpaclean.c	/^	struct network	*n_next;$/;"	m	struct:network	typeref:struct:network::network	file:
n_ns	osdep/radiotap/radiotap_iter.h	/^	int n_ns;$/;"	m	struct:ieee80211_radiotap_vendor_namespaces
n_overrides	osdep/radiotap/radiotap_iter.h	/^	int n_overrides;$/;"	m	struct:ieee80211_radiotap_iterator
n_ping_got	besside-ng.c	/^	int		n_ping_got;$/;"	m	struct:network	file:
n_ping_sent	besside-ng.c	/^	int		n_ping_sent;$/;"	m	struct:network	file:
n_prga	besside-ng.c	/^	unsigned char	n_prga[2048];$/;"	m	struct:network	file:
n_prga_len	besside-ng.c	/^	int		n_prga_len;$/;"	m	struct:network	file:
n_ptw	besside-ng.c	/^	PTW_attackstate	*n_ptw;$/;"	m	struct:network	file:
n_replay	besside-ng.c	/^	unsigned char	n_replay[2048];$/;"	m	struct:network	file:
n_replay_got	besside-ng.c	/^	int		n_replay_got;$/;"	m	struct:network	file:
n_replay_last	besside-ng.c	/^	struct timeval	n_replay_last;$/;"	m	struct:network	typeref:struct:network::timeval	file:
n_replay_len	besside-ng.c	/^	int		n_replay_len;$/;"	m	struct:network	file:
n_seq	besside-ng.c	/^	unsigned short	n_seq;$/;"	m	struct:network	file:
n_ssid	besside-ng.c	/^	char		n_ssid[256];$/;"	m	struct:network	file:
n_ssid	wpaclean.c	/^	char		n_ssid[256];$/;"	m	struct:network	file:
n_start	besside-ng.c	/^	struct timeval	n_start;$/;"	m	struct:network	typeref:struct:network::timeval	file:
n_wstate	besside-ng.c	/^	int		n_wstate;$/;"	m	struct:network	file:
na_1st	airodump-ng.h	/^    struct NA_info *na_1st, *na_end;$/;"	m	struct:globals	typeref:struct:globals::NA_info
na_end	airodump-ng.h	/^    struct NA_info *na_1st, *na_end;$/;"	m	struct:globals	typeref:struct:globals::
na_hctx	aircapture.h	/^	hash_ctx_t *na_hctx;$/;"	m	struct:_AIRCAP_G
nai_realm_eap_auth_inner_non_eap	ieee802_11_defs.h	/^enum nai_realm_eap_auth_inner_non_eap {$/;"	g
nai_realm_eap_auth_param	ieee802_11_defs.h	/^enum nai_realm_eap_auth_param {$/;"	g
nai_realm_eap_cred_type	ieee802_11_defs.h	/^enum nai_realm_eap_cred_type {$/;"	g
namac	airodump-ng.h	/^    unsigned char namac[6];  \/* the stations MAC address  *\/$/;"	m	struct:NA_info
name	ezxml/ezxml.h	/^    char *name;      \/\/ tag name$/;"	m	struct:ezxml
nb_aps	aircrack-ng.h	/^	int nb_aps;					 \/* number of targeted APs       *\/$/;"	m	struct:WEP_data
nb_arp	airbase-ng.c	/^    int nb_arp;$/;"	m	struct:options	file:
nb_bad	airdecap-ng.c	/^    unsigned long nb_bad;       \/* # of bad data packets   *\/$/;"	m	struct:decap_stats	file:
nb_bad	airdecloak-ng.h	/^    unsigned long nb_bad;       \/* # of bad data packets   *\/$/;"	m	struct:decloak_stats
nb_bcn	airnodes.c	/^	unsigned long nb_bcn;         \/* total number of beacons       *\/$/;"	m	struct:AP_INFO	file:
nb_bcn	airodump-ng.h	/^    unsigned long nb_bcn;     \/* total number of beacons  *\/$/;"	m	struct:AP_info
nb_cloak_wep	airdecloak-ng.h	/^    unsigned long nb_cloak_wep; \/* # of cloaked WEP pkt  *\/$/;"	m	struct:decloak_stats
nb_data	airnodes.c	/^	unsigned long nb_data;        \/* number of  data packets       *\/$/;"	m	struct:AP_INFO	file:
nb_data	airodump-ng.h	/^    unsigned long nb_data;    \/* number of  data packets  *\/$/;"	m	struct:AP_info
nb_data_old	airnodes.c	/^	unsigned long nb_data_old;    \/* number of data packets\/sec    *\/$/;"	m	struct:AP_INFO	file:
nb_data_old	airodump-ng.h	/^    unsigned long nb_data_old;\/* number of data packets\/sec*\/$/;"	m	struct:AP_info
nb_dataps	airnodes.c	/^	int nb_dataps;                \/* number of data packets\/sec    *\/$/;"	m	struct:AP_INFO	file:
nb_dataps	airodump-ng.h	/^    int nb_dataps;  \/* number of data packets\/sec*\/$/;"	m	struct:AP_info
nb_eof	aircrack-ng.c	/^int  nb_eof = 0;				 \/* # of threads who reached eof *\/$/;"	v
nb_filt_wep	airdecloak-ng.h	/^    unsigned long nb_filt_wep;  \/* # of filtered WEP pkt  *\/$/;"	m	struct:decloak_stats
nb_ivs	aircrack-ng.h	/^	long nb_ivs;				 \/* # of unique IVs in buffer    *\/$/;"	m	struct:WEP_data
nb_ivs	aircrack-ng.h	/^	long nb_ivs;				 \/* total number of unique IVs   *\/$/;"	m	struct:AP_info
nb_ivs_clean	aircrack-ng.h	/^	long nb_ivs_clean;			 \/* total number of unique IVs   *\/$/;"	m	struct:AP_info
nb_ivs_now	aircrack-ng.h	/^	long nb_ivs_now;			 \/* # of unique IVs available    *\/$/;"	m	struct:WEP_data
nb_ivs_vague	aircrack-ng.h	/^	long nb_ivs_vague;				 \/* total number of unique IVs   *\/$/;"	m	struct:AP_info
nb_kprev	aircrack-ng.c	/^long long int nb_kprev;			 \/* last  # of keys tried        *\/$/;"	v
nb_packets	airdecloak-ng.h	/^	int nb_packets;$/;"	m	struct:packet_elt_header
nb_pkt	airbase-ng.c	/^    unsigned long nb_pkt;    \/* total number of packets   *\/$/;"	m	struct:ST_info	file:
nb_pkt	aircrack-ng.c	/^long nb_pkt = 0;				 \/* # of packets read so far     *\/$/;"	v
nb_pkt	airnodes.c	/^	unsigned long nb_pkt;         \/* total number of packets       *\/$/;"	m	struct:AP_INFO	file:
nb_pkt	airnodes.c	/^	unsigned long nb_pkt;    \/* total number of packets   *\/$/;"	m	struct:STA_INFO	file:
nb_pkt	airodump-ng.h	/^    unsigned long nb_pkt;     \/* total number of packets  *\/$/;"	m	struct:AP_info
nb_pkt	airodump-ng.h	/^    unsigned long nb_pkt;    \/* total number of packets   *\/$/;"	m	struct:ST_info
nb_pkt_sent	airbase-ng.c	/^unsigned long nb_pkt_sent;$/;"	v
nb_pkt_sent	aireplay-ng.c	/^unsigned long nb_pkt_sent;$/;"	v
nb_pkt_sent	airtun-ng.c	/^unsigned long nb_pkt_sent;$/;"	v
nb_pkt_sent	tkiptun-ng.c	/^unsigned long nb_pkt_sent;$/;"	v
nb_plain	airdecap-ng.c	/^    unsigned long nb_plain;     \/* # of plaintext packets  *\/$/;"	m	struct:decap_stats	file:
nb_plain	airdecloak-ng.h	/^    unsigned long nb_plain;     \/* # of plaintext packets  *\/$/;"	m	struct:decloak_stats
nb_read	airdecap-ng.c	/^    unsigned long nb_read;      \/* # of packets read       *\/$/;"	m	struct:decap_stats	file:
nb_read	airdecloak-ng.h	/^    unsigned long nb_read;      \/* # of packets read       *\/$/;"	m	struct:decloak_stats
nb_tried	aircrack-ng.c	/^long long int nb_tried;			 \/* total # of keys tried        *\/$/;"	v
nb_unwep	airdecap-ng.c	/^    unsigned long nb_unwep;     \/* # of decrypted WEP pkt  *\/$/;"	m	struct:decap_stats	file:
nb_unwpa	airdecap-ng.c	/^    unsigned long nb_unwpa;     \/* # of decrypted WPA pkt  *\/$/;"	m	struct:decap_stats	file:
nb_wep	airdecap-ng.c	/^    unsigned long nb_wep;       \/* # of WEP data packets   *\/$/;"	m	struct:decap_stats	file:
nb_wep	airdecloak-ng.h	/^    unsigned long nb_wep;       \/* # of WEP data packets   *\/$/;"	m	struct:decloak_stats
nb_wpa	airdecap-ng.c	/^    unsigned long nb_wpa;       \/* # of WPA data packets   *\/$/;"	m	struct:decap_stats	file:
nb_wpa	airdecloak-ng.h	/^    unsigned long nb_wpa;       \/* # of WPA data packets   *\/$/;"	m	struct:decloak_stats
nbcpu	aircrack-ng.h	/^	int nbcpu;					 \/* # of cracker threads$/;"	m	struct:options
nbdict	aircrack-ng.h	/^	int nbdict;				 \/* current dict number  *\/$/;"	m	struct:options
nbsd_close	osdep/netbsd.c	/^static void nbsd_close(struct wif *wi)$/;"	f	file:
nbsd_fd	osdep/netbsd.c	/^static int nbsd_fd(struct wif *wi)$/;"	f	file:
nbsd_get_channel	osdep/netbsd.c	/^static int nbsd_get_channel(struct wif *wi)$/;"	f	file:
nbsd_get_mac	osdep/netbsd.c	/^static int nbsd_get_mac(struct wif *wi, unsigned char *mac)$/;"	f	file:
nbsd_get_monitor	osdep/netbsd.c	/^static int nbsd_get_monitor(struct wif *wi)$/;"	f	file:
nbsd_get_rate	osdep/netbsd.c	/^static int nbsd_get_rate(struct wif *wi)$/;"	f	file:
nbsd_open	osdep/netbsd.c	/^static struct wif *nbsd_open(char *iface)$/;"	f	file:
nbsd_read	osdep/netbsd.c	/^static int nbsd_read(struct wif *wi, unsigned char *h80211, int len,$/;"	f	file:
nbsd_set_channel	osdep/netbsd.c	/^static int nbsd_set_channel(struct wif *wi, int chan)$/;"	f	file:
nbsd_set_mac	osdep/netbsd.c	/^static int nbsd_set_mac(struct wif *wi, unsigned char *mac)$/;"	f	file:
nbsd_set_rate	osdep/netbsd.c	/^static int nbsd_set_rate(struct wif *wi, int rate)$/;"	f	file:
nbsd_write	osdep/netbsd.c	/^static int nbsd_write(struct wif *wi, unsigned char *h80211, int len,$/;"	f	file:
nchan	include/ieee80211.h	/^	u_int8_t nchan;			\/* number channels *\/$/;"	m	struct:ieee80211_band
need_connect	besside-ng.c	/^static int need_connect(struct network *n)$/;"	f	file:
net	airtun-ng.c	/^    unsigned char net;$/;"	m	struct:net_entry	file:
net_add	wpaclean.c	/^static struct network *net_add(unsigned char *bssid)$/;"	f	file:
net_close	osdep/network.c	/^static void net_close(struct wif *wi)$/;"	f	file:
net_cmd	osdep/network.c	/^static int net_cmd(struct priv_net *pn, int command, void *arg, int alen)$/;"	f	file:
net_enque	osdep/network.c	/^static void net_enque(struct priv_net *pn, void *buf, int len)$/;"	f	file:
net_entry	airtun-ng.c	/^struct net_entry$/;"	s	file:
net_fd	osdep/network.c	/^static int net_fd(struct wif *wi)$/;"	f	file:
net_get	osdep/network.c	/^int net_get(int s, void *arg, int *len)$/;"	f
net_get_channel	osdep/network.c	/^static int net_get_channel(struct wif *wi)$/;"	f	file:
net_get_mac	osdep/network.c	/^static int net_get_mac(struct wif *wi, unsigned char *mac)$/;"	f	file:
net_get_monitor	osdep/network.c	/^static int net_get_monitor(struct wif *wi)$/;"	f	file:
net_get_nopacket	osdep/network.c	/^static int net_get_nopacket(struct priv_net *pn, void *arg, int *len)$/;"	f	file:
net_get_rate	osdep/network.c	/^static int net_get_rate(struct wif *wi)$/;"	f	file:
net_hdr	aireplay-ng.c	/^struct net_hdr {$/;"	s	file:
net_hdr	osdep/network.h	/^struct net_hdr {$/;"	s
net_open	osdep/network.c	/^struct wif *net_open(char *iface)$/;"	f
net_read	osdep/network.c	/^static int net_read(struct wif *wi, unsigned char *h80211, int len,$/;"	f	file:
net_read_exact	osdep/network.c	/^int net_read_exact(int s, void *arg, int len)$/;"	f
net_send	osdep/network.c	/^int net_send(int s, int command, void *arg, int len)$/;"	f
net_send_kill	airserv-ng.c	/^static void net_send_kill(struct client *c,$/;"	f	file:
net_set_channel	osdep/network.c	/^static int net_set_channel(struct wif *wi, int chan)$/;"	f	file:
net_set_rate	osdep/network.c	/^static int net_set_rate(struct wif *wi, int rate)$/;"	f	file:
net_write	osdep/network.c	/^static int net_write(struct wif *wi, unsigned char *h80211, int len,$/;"	f	file:
netqueue	osdep/network.c	/^struct netqueue {$/;"	s	file:
nets	airtun-ng.c	/^struct net_entry *nets = NULL;$/;"	v	typeref:struct:net_entry
network	besside-ng.c	/^struct network {$/;"	s	file:
network	wpaclean.c	/^struct network {$/;"	s	file:
network_add	besside-ng.c	/^static struct network *network_add(struct ieee80211_frame *wh)$/;"	f	file:
network_assoc	besside-ng.c	/^static void network_assoc(void *a)$/;"	f	file:
network_auth	besside-ng.c	/^static void network_auth(void *a)$/;"	f	file:
network_connect	besside-ng.c	/^static int network_connect(struct network *n)$/;"	f	file:
network_get	besside-ng.c	/^static struct network *network_get(struct ieee80211_frame *wh)$/;"	f	file:
network_new	besside-ng.c	/^static struct network *network_new(void)$/;"	f	file:
network_print	besside-ng.c	/^static void network_print(struct network *n)$/;"	f	file:
network_update	besside-ng.c	/^static struct network *network_update(struct ieee80211_frame* wh)$/;"	f	file:
new_chan	ieee802_11_defs.h	/^					u8 new_chan;$/;"	m	struct:ieee80211_mgmt::__anon34::__anon43::__anon44::__anon46
new_hash_ctx	hashtable.c	/^static hash_ctx_t *new_hash_ctx($/;"	f	file:
new_hash_single_thread_ctx	hashtable.c	/^hash_ctx_t *new_hash_single_thread_ctx($/;"	f
new_hash_thread_safe_ctx	hashtable.c	/^hash_ctx_t *new_hash_thread_safe_ctx($/;"	f
new_list	llist.c	/^llist* new_list(void *obj)$/;"	f
next	airbase-ng.c	/^    pCF_t           next;           \/* next set of fragments to send *\/$/;"	m	struct:CF_packet	file:
next	airbase-ng.c	/^    pESSID_t        next;$/;"	m	struct:ESSID_list	file:
next	airbase-ng.c	/^    pFrag_t         next;$/;"	m	struct:Fragment_list	file:
next	airbase-ng.c	/^    pMAC_t          next;$/;"	m	struct:MAC_list	file:
next	airbase-ng.c	/^    struct ST_info *next;    \/* the next client in list   *\/$/;"	m	struct:ST_info	typeref:struct:ST_info::ST_info	file:
next	airconf-parse.h	/^	struct _airconf *next;$/;"	m	struct:_airconf	typeref:struct:_airconf::_airconf
next	airconf-parse.h	/^	struct _tag_conf *next;$/;"	m	struct:_tag_conf	typeref:struct:_tag_conf::_tag_conf
next	aircrack-ng.h	/^	struct AP_info *next;		 \/* next AP in linked list       *\/$/;"	m	struct:AP_info	typeref:struct:AP_info::AP_info
next	aircrack-ng.h	/^	struct ST_info *next;		 \/* next supplicant              *\/$/;"	m	struct:ST_info	typeref:struct:ST_info::ST_info
next	aircrack-ng.h	/^	struct mergeBSSID * next;$/;"	m	struct:mergeBSSID	typeref:struct:mergeBSSID::mergeBSSID
next	airdecloak-ng.h	/^    struct packet_elt * next;$/;"	m	struct:packet_elt	typeref:struct:packet_elt::packet_elt
next	airodump-ng.h	/^	struct oui *next;$/;"	m	struct:oui	typeref:struct:oui::oui
next	airodump-ng.h	/^    struct AP_info *next;     \/* next  AP in list         *\/$/;"	m	struct:AP_info	typeref:struct:AP_info::AP_info
next	airodump-ng.h	/^    struct NA_info *next;    \/* the next client in list   *\/$/;"	m	struct:NA_info	typeref:struct:NA_info::NA_info
next	airodump-ng.h	/^    struct ST_info *next;    \/* the next client in list   *\/$/;"	m	struct:ST_info	typeref:struct:ST_info::ST_info
next	airodump-ng.h	/^    struct pkt_buf  *next;      \/* next packet in list *\/$/;"	m	struct:pkt_buf	typeref:struct:pkt_buf::pkt_buf
next	airtun-ng.c	/^    pFrag_t         next;$/;"	m	struct:Fragment_list	file:
next	airtun-ng.c	/^    struct net_entry *next;$/;"	m	struct:net_entry	typeref:struct:net_entry::net_entry	file:
next	besside-ng-crawler.c	/^  struct bsslist *next;$/;"	m	struct:bsslist	typeref:struct:bsslist::bsslist	file:
next	crypto.h	/^    struct WPA_ST_info *next;       \/* next supplicant              *\/$/;"	m	struct:WPA_ST_info	typeref:struct:WPA_ST_info::WPA_ST_info
next	ezxml/ezxml.h	/^    ezxml_t next;    \/\/ next tag with same name in this section at this depth$/;"	m	struct:ezxml
next	hashtable.h	/^	struct _hash_bucket_t *next;$/;"	m	struct:_hash_bucket_t	typeref:struct:_hash_bucket_t::_hash_bucket_t
next	ivstools.c	/^    struct AP_info *next;     \/* next  AP in list         *\/$/;"	m	struct:AP_info	typeref:struct:AP_info::AP_info	file:
next	ivstools.c	/^    struct ST_info *next;    \/* the next client in list   *\/$/;"	m	struct:ST_info	typeref:struct:ST_info::ST_info	file:
next	llist.h	/^	struct _llist *next, *prev;$/;"	m	struct:_llist	typeref:struct:_llist::_llist
next	memory.c	/^	struct rm_list *next;$/;"	m	struct:rm_list	typeref:struct:rm_list::rm_list	file:
next_dict	aircrack-ng.c	/^int next_dict(int nb)$/;"	f
next_key	aircrack-ng.c	/^int next_key( char **key, int keysize )$/;"	f
next_keystream	packetforge-ng.c	/^int next_keystream(unsigned char *dest, int size, unsigned char *bssid, int minlen)$/;"	f
next_packet_pointer	airdecloak-ng.c	/^BOOLEAN next_packet_pointer() {$/;"	f
next_packet_pointer_from_ap	airdecloak-ng.c	/^BOOLEAN next_packet_pointer_from_ap() {$/;"	f
next_packet_pointer_from_client	airdecloak-ng.c	/^BOOLEAN next_packet_pointer_from_client() {$/;"	f
next_packet_pointer_same_fromToDS_and_source	airdecloak-ng.c	/^BOOLEAN next_packet_pointer_same_fromToDS_and_source(struct packet_elt * packet) {$/;"	f
next_packet_pointer_same_fromToDS_and_source_as_current	airdecloak-ng.c	/^BOOLEAN next_packet_pointer_same_fromToDS_and_source_as_current() {$/;"	f
next_ptw_try	aircrack-ng.h	/^        int next_ptw_try;$/;"	m	struct:options
nh_data	aireplay-ng.c	/^	uint8_t		nh_data[0];$/;"	m	struct:net_hdr	file:
nh_data	osdep/network.h	/^	uint8_t		nh_data[0];$/;"	m	struct:net_hdr
nh_len	aireplay-ng.c	/^	uint32_t	nh_len;$/;"	m	struct:net_hdr	file:
nh_len	osdep/network.h	/^	uint32_t	nh_len;$/;"	m	struct:net_hdr
nh_type	aireplay-ng.c	/^	uint8_t		nh_type;$/;"	m	struct:net_hdr	file:
nh_type	osdep/network.h	/^	uint8_t		nh_type;$/;"	m	struct:net_hdr
nkeys	aircrack-ng.h	/^	int nkeys;						\/* buffer capacity *\/$/;"	m	struct:WPA_data
nl80211	osdep/linux.c	/^    struct genl_family *nl80211;$/;"	m	struct:nl80211_state	typeref:struct:nl80211_state::genl_family	file:
nl80211_cleanup	osdep/linux.c	/^static void nl80211_cleanup(struct nl80211_state *state)$/;"	f	file:
nl80211_state	osdep/linux.c	/^struct nl80211_state {$/;"	s	file:
nl_cache	osdep/linux.c	/^    struct nl_cache *nl_cache;$/;"	m	struct:nl80211_state	typeref:struct:nl80211_state::nl_cache	file:
nl_sock	osdep/linux.c	/^    struct nl_handle *nl_sock;$/;"	m	struct:nl80211_state	typeref:struct:nl80211_state::nl_handle	file:
nl_socket_alloc	osdep/linux.c	/^static inline struct nl_handle *nl_socket_alloc(void)$/;"	f	file:
nl_socket_free	osdep/linux.c	/^static inline void nl_socket_free(struct nl_handle *h)$/;"	f	file:
no_convert	airdecap-ng.c	/^    int no_convert;$/;"	m	struct:options	file:
no_mmx	sha1-sse2.S	/^no_mmx:$/;"	l
no_stdin	aircrack-ng.h	/^	int no_stdin;				 \/* if dict == stdin     *\/$/;"	m	struct:options
nobroadprobe	airbase-ng.c	/^    int nobroadprobe;$/;"	m	struct:options	file:
nodetect	aireplay-ng.c	/^    int nodetect;$/;"	m	struct:options	file:
nodetect	tkiptun-ng.c	/^    int nodetect;$/;"	m	struct:options	file:
nominal_msdu_size	ieee802_11_defs.h	/^	le16 nominal_msdu_size;$/;"	m	struct:wmm_tspec_element
not_use	wi_packet.h	/^	uint16_t   not_use:1; \/\/ not use$/;"	m	struct:_wi_qos_control
npackets	aireplay-ng.c	/^    int npackets;$/;"	m	struct:options	file:
npackets	tkiptun-ng.c	/^    int npackets;$/;"	m	struct:options	file:
nr_chan_width	ieee802_11_defs.h	/^enum nr_chan_width {$/;"	g
ns	osdep/radiotap/radiotap_iter.h	/^	const struct ieee80211_radiotap_namespace *ns;$/;"	m	struct:ieee80211_radiotap_vendor_namespaces	typeref:struct:ieee80211_radiotap_vendor_namespaces::ieee80211_radiotap_namespace
ntohl	osdep/byteorder.h	436;"	d
ntohs	osdep/byteorder.h	433;"	d
num_cards	airodump-ng.h	/^    int num_cards;$/;"	m	struct:globals
num_elements	hashtable.h	/^	uint64_t num_elements;$/;"	m	struct:_hash_ctx_t
num_elements_hash	hashtable.c	/^uint64_t num_elements_hash(hash_ctx_t *ctx)$/;"	f
num_packets	packetforge-ng.c	/^    int num_packets;$/;"	m	struct:options	file:
num_rcv_x2	include/if_llc.h	/^		uint8_t num_rcv_x2;$/;"	m	struct:llc::__anon6::__anon8
num_rcv_x2	include/if_llc.h	/^		uint8_t num_rcv_x2;$/;"	m	struct:llc::__anon6::__anon9
num_snd_x2	include/if_llc.h	/^		uint8_t num_snd_x2;$/;"	m	struct:llc::__anon6::__anon8
numaps	airodump-ng.h	/^    int numaps;               \/* number of APs on the current list *\/$/;"	m	struct:globals
o	MD5_std.h	/^	} o;$/;"	m	struct:__anon28	typeref:struct:__anon28::__anon31
obj	llist.h	/^	void *obj;$/;"	m	struct:_llist
obsd_close	osdep/openbsd.c	/^static void obsd_close(struct wif *wi)$/;"	f	file:
obsd_fd	osdep/openbsd.c	/^static int obsd_fd(struct wif *wi)$/;"	f	file:
obsd_get_channel	osdep/openbsd.c	/^static int obsd_get_channel(struct wif *wi)$/;"	f	file:
obsd_get_mac	osdep/openbsd.c	/^static int obsd_get_mac(struct wif *wi, unsigned char *mac)$/;"	f	file:
obsd_get_monitor	osdep/openbsd.c	/^static int obsd_get_monitor(struct wif *wi)$/;"	f	file:
obsd_get_rate	osdep/openbsd.c	/^static int obsd_get_rate(struct wif *wi)$/;"	f	file:
obsd_open	osdep/openbsd.c	/^static struct wif *obsd_open(char *iface)$/;"	f	file:
obsd_read	osdep/openbsd.c	/^static int obsd_read(struct wif *wi, unsigned char *h80211, int len,$/;"	f	file:
obsd_set_channel	osdep/openbsd.c	/^static int obsd_set_channel(struct wif *wi, int chan)$/;"	f	file:
obsd_set_mac	osdep/openbsd.c	/^static int obsd_set_mac(struct wif *wi, unsigned char *mac)$/;"	f	file:
obsd_set_rate	osdep/openbsd.c	/^static int obsd_set_rate(struct wif *wi, int rate)$/;"	f	file:
obsd_write	osdep/openbsd.c	/^static int obsd_write(struct wif *wi, unsigned char *h80211, int len,$/;"	f	file:
octet	include/ethernet.h	/^	u_char octet[ETHER_ADDR_LEN];$/;"	m	struct:ether_addr
odd	MD5_std.h	/^	MD5_block *even, *odd;$/;"	m	struct:__anon27
off	ezxml/ezxml.h	/^    size_t off;      \/\/ tag offset from start of parent tag character content$/;"	m	struct:ezxml
off1	aircrack-ng.c	/^	int off1;$/;"	m	struct:__anon1	file:
off2	aircrack-ng.c	/^	int off2;$/;"	m	struct:__anon1	file:
oldkeystream	tkiptun-ng.c	/^    unsigned char oldkeystream[2048];   \/* user-defined old keystream *\/$/;"	m	struct:options	file:
oldkeystreamlen	tkiptun-ng.c	/^    int oldkeystreamlen;    \/* user-defined old keystream length *\/$/;"	m	struct:options	file:
one_beacon	airodump-ng.h	/^    int one_beacon;         \/* Record only 1 beacon?*\/$/;"	m	struct:globals
oneshot	aircrack-ng.h	/^	int oneshot;				 \/* Do PTW once *\/$/;"	m	struct:options
op	hashtable.h	/^	hash_op *op;$/;"	m	struct:_hash_ctx_t
op_class	ieee802_11_defs.h	/^	u8 op_class;$/;"	m	struct:ieee80211_2040_intol_chan_report
op_class	ieee802_11_defs.h	/^	u8 op_class;$/;"	m	struct:multi_band_ie
open_card_and_sock	airserv-ng.c	/^static void open_card_and_sock(struct sstate *ss, char *dev, int port, int chan)$/;"	f	file:
open_existing_pcap	airdecloak-ng.c	/^FILE * open_existing_pcap(const char * filename) {$/;"	f
open_oui_file	airodump-ng.c	/^FILE *open_oui_file(void) {$/;"	f
open_pcap	besside-ng.c	/^static int open_pcap(char *fname)$/;"	f	file:
open_pcap	wpaclean.c	/^static int open_pcap(char *fname)$/;"	f	file:
open_sock	airserv-ng.c	/^static void open_sock(struct sstate *ss, int port)$/;"	f	file:
open_tap	easside-ng.c	/^void open_tap(struct east_state *es) {$/;"	f
open_wepfile	wesside-ng.c	/^static void open_wepfile(struct wstate *ws)$/;"	f	file:
open_wifi	easside-ng.c	/^void open_wifi(struct east_state *es)$/;"	f
openfile	airdecloak-ng.c	/^FILE * openfile(const char * filename, const char * mode, int fatal)$/;"	f
openraw	osdep/linux.c	/^static int openraw(struct priv_linux *dev, char *iface, int fd, int *arptype,$/;"	f	file:
opensysfs	osdep/linux.c	/^static int opensysfs(struct priv_linux *dev, char *iface, int fd) {$/;"	f	file:
operation_mode	ieee802_11_defs.h	/^	le16 operation_mode; \/* B8..B23 *\/$/;"	m	struct:ieee80211_ht_operation
opt	airbase-ng.c	/^opt;$/;"	v	typeref:struct:options
opt	aircrack-ng.h	/^opt;$/;"	v	typeref:struct:options
opt	airdecap-ng.c	/^opt;$/;"	v	typeref:struct:options
opt	aireplay-ng.c	/^opt;$/;"	v	typeref:struct:options
opt	airtun-ng.c	/^opt;$/;"	v	typeref:struct:options
opt	packetforge-ng.c	/^} opt;$/;"	v	typeref:struct:options
opt	tkiptun-ng.c	/^opt;$/;"	v	typeref:struct:options
options	airbase-ng.c	/^struct options$/;"	s	file:
options	aircrack-ng.h	/^struct options$/;"	s
options	airdecap-ng.c	/^struct options$/;"	s	file:
options	aireplay-ng.c	/^struct options$/;"	s	file:
options	airtun-ng.c	/^struct options$/;"	s	file:
options	packetforge-ng.c	/^struct options$/;"	s	file:
options	tkiptun-ng.c	/^struct options$/;"	s	file:
order_flag	wi_packet.h	/^	uint8_t   order_flag:1;$/;"	m	struct:_wi_flags_t
ordered	ezxml/ezxml.h	/^    ezxml_t ordered; \/\/ next tag, same section and depth, in original order$/;"	m	struct:ezxml
org_code	include/if_llc.h	/^		uint8_t  org_code[3];$/;"	m	struct:llc::__anon6::__anon11
other	airodump-ng.h	/^    int other;               \/* number of other frames    *\/$/;"	m	struct:NA_info
oui	airodump-ng.h	/^struct oui {$/;"	s
oui	ieee802_11_defs.h	/^					u8 oui[3];$/;"	m	struct:ieee80211_mgmt::__anon34::__anon43::__anon44::__anon54
oui	ieee802_11_defs.h	/^	u8 oui[3]; \/* 00:50:f2 *\/$/;"	m	struct:wmm_information_element
oui	ieee802_11_defs.h	/^	u8 oui[3]; \/* 00:50:f2 *\/$/;"	m	struct:wmm_parameter_element
oui	ieee802_11_defs.h	/^	u8 oui[3]; \/* 00:50:f2 *\/$/;"	m	struct:wmm_tspec_element
oui	osdep/radiotap/radiotap_iter.h	/^	uint32_t oui;$/;"	m	struct:ieee80211_radiotap_namespace
oui	wi_packet.h	/^	uint8_t oui[3];$/;"	m	struct:_wi_data_llc
oui_cmp	common.h	158;"	d
oui_cpy	common.h	159;"	d
oui_subtype	ieee802_11_defs.h	/^	u8 oui_subtype; \/* 0 *\/$/;"	m	struct:wmm_information_element
oui_subtype	ieee802_11_defs.h	/^	u8 oui_subtype; \/* 1 *\/$/;"	m	struct:wmm_parameter_element
oui_subtype	ieee802_11_defs.h	/^	u8 oui_subtype; \/* 2 *\/$/;"	m	struct:wmm_tspec_element
oui_t	common.h	138;"	d
oui_type	ieee802_11_defs.h	/^	u8 oui_type; \/* 2 *\/$/;"	m	struct:wmm_information_element
oui_type	ieee802_11_defs.h	/^	u8 oui_type; \/* 2 *\/$/;"	m	struct:wmm_parameter_element
oui_type	ieee802_11_defs.h	/^	u8 oui_type; \/* 2 *\/$/;"	m	struct:wmm_tspec_element
our_network	easside-ng.c	/^int our_network(struct east_state *es, struct ieee80211_frame *wh)$/;"	f
out	MD5_std.h	/^	MD5_binary out[MD5_N];$/;"	m	struct:__anon33
output_format_csv	airodump-ng.h	/^    int output_format_csv;$/;"	m	struct:globals
output_format_kismet_csv	airodump-ng.h	/^    int output_format_kismet_csv;$/;"	m	struct:globals
output_format_kismet_netxml	airodump-ng.h	/^    int output_format_kismet_netxml;$/;"	m	struct:globals
output_format_pcap	airodump-ng.h	/^    int output_format_pcap;$/;"	m	struct:globals
overrides	osdep/radiotap/parse.c	/^static const struct radiotap_override overrides[] = {$/;"	v	typeref:struct:radiotap_override	file:
overrides	osdep/radiotap/radiotap_iter.h	/^	const struct radiotap_override *overrides;$/;"	m	struct:ieee80211_radiotap_iterator	typeref:struct:ieee80211_radiotap_iterator::radiotap_override
ow_mac	easside-ng.c	/^	unsigned char	ow_mac[6];$/;"	m	struct:owned	file:
ow_next	easside-ng.c	/^	struct owned	*ow_next;$/;"	m	struct:owned	typeref:struct:owned::owned	file:
own	easside-ng.c	/^void own(struct east_state *es)$/;"	f
own	wesside-ng.c	/^static void own(struct wstate *ws)$/;"	f	file:
own_channels	airodump-ng.h	/^    int * own_channels;	    \/* custom channel list  *\/$/;"	m	struct:globals
own_frequencies	airodump-ng.h	/^    int * own_frequencies;	    \/* custom frequency list  *\/$/;"	m	struct:globals
owned	easside-ng.c	/^struct owned {$/;"	s	file:
p	MD5_std.h	/^		MD5_block p, ps, pp, psp;$/;"	m	struct:__anon28::__anon31
p	MD5_std.h	/^		MD5_block p, sp, pp, spp;$/;"	m	struct:__anon28::__anon30
p	MD5_std.h	/^		int p, s, ps, pp, psp;$/;"	m	struct:__anon28::__anon29
p2p_act_frame_type	ieee802_11_defs.h	/^enum p2p_act_frame_type {$/;"	g
p2p_action_frame_type	ieee802_11_defs.h	/^enum p2p_action_frame_type {$/;"	g
p2p_attr_id	ieee802_11_defs.h	/^enum p2p_attr_id {$/;"	g
p2p_role_indication	ieee802_11_defs.h	/^enum p2p_role_indication {$/;"	g
p2p_sd_status	ieee802_11_defs.h	/^enum p2p_sd_status {$/;"	g
p2p_service_protocol_type	ieee802_11_defs.h	/^enum p2p_service_protocol_type {$/;"	g
p2p_status_code	ieee802_11_defs.h	/^enum p2p_status_code {$/;"	g
p2ps_feature_capab	ieee802_11_defs.h	/^struct p2ps_feature_capab {$/;"	s
pCF_t	airbase-ng.c	/^typedef struct CF_packet *pCF_t;$/;"	t	typeref:struct:CF_packet	file:
pCurBucket	hashtable.h	43;"	d
pCurLock	hashtable.h	44;"	d
pESSID_t	airbase-ng.c	/^typedef struct ESSID_list* pESSID_t;$/;"	t	typeref:struct:ESSID_list	file:
pFrag_t	airbase-ng.c	/^typedef struct Fragment_list* pFrag_t;$/;"	t	typeref:struct:Fragment_list	file:
pFrag_t	airtun-ng.c	/^typedef struct Fragment_list* pFrag_t;$/;"	t	typeref:struct:Fragment_list	file:
pMAC_t	airbase-ng.c	/^typedef struct MAC_list* pMAC_t;$/;"	t	typeref:struct:MAC_list	file:
p_data	besside-ng.c	/^	unsigned char	p_data[2048];$/;"	m	struct:packet	file:
p_data	wpaclean.c	/^        unsigned char   p_data[2048];$/;"	m	struct:packet	file:
p_len	besside-ng.c	/^	int		p_len;$/;"	m	struct:packet	file:
p_len	wpaclean.c	/^        int             p_len;$/;"	m	struct:packet	file:
packet	airdecloak-ng.h	/^    unsigned char   *packet;    \/* packet *\/$/;"	m	struct:packet_elt
packet	airodump-ng.h	/^    unsigned char   *packet;    \/* packet *\/$/;"	m	struct:pkt_buf
packet	besside-ng.c	/^struct packet {$/;"	s	file:
packet	wpaclean.c	/^struct packet {$/;"	s	file:
packet_copy	besside-ng.c	/^static void packet_copy(struct packet *p, void *d, int len)$/;"	f	file:
packet_copy	wpaclean.c	/^static void packet_copy(struct packet *p, void *d, int len)$/;"	f	file:
packet_dump	packetforge-ng.c	/^int packet_dump(unsigned char* packet, int length)$/;"	f
packet_elt	airdecloak-ng.h	/^struct packet_elt$/;"	s
packet_elt_header	airdecloak-ng.h	/^struct packet_elt_header {$/;"	s
packet_recv	airbase-ng.c	/^int packet_recv(unsigned char* packet, int length, struct AP_conf *apc, int external)$/;"	f
packet_recv	airtun-ng.c	/^int packet_recv(unsigned char* packet, int length)$/;"	f
packet_write_pcap	besside-ng.c	/^static void packet_write_pcap(int fd, struct packet *p)$/;"	f	file:
packet_write_pcap	wpaclean.c	/^static void packet_write_pcap(int fd, struct packet *p)$/;"	f	file:
packet_xmit	airbase-ng.c	/^int packet_xmit(unsigned char* packet, int length)$/;"	f
packet_xmit	airtun-ng.c	/^int packet_xmit(unsigned char* packet, int length)$/;"	f
packet_xmit_external	airbase-ng.c	/^int packet_xmit_external(unsigned char* packet, int length, struct AP_conf *apc)$/;"	f
packets	airodump-ng.h	/^    struct pkt_buf *packets;  \/* list of captured packets (last few seconds) *\/$/;"	m	struct:AP_info	typeref:struct:AP_info::pkt_buf
packets_collected	aircrack-ptw-lib.h	/^        int packets_collected;$/;"	m	struct:__anon71
param	ieee802_11_defs.h	/^	le16 param; \/* B24..B39 *\/$/;"	m	struct:ieee80211_ht_operation
param_id	include/ieee80211.h	/^	u_int8_t	param_id;$/;"	m	struct:ieee80211_wme_param
param_len	include/ieee80211.h	/^	u_int8_t	param_len;$/;"	m	struct:ieee80211_wme_param
param_oui	include/ieee80211.h	/^	u_int8_t	param_oui[3];$/;"	m	struct:ieee80211_wme_param
param_oui_sybtype	include/ieee80211.h	/^	u_int8_t	param_oui_sybtype;$/;"	m	struct:ieee80211_wme_param
param_oui_type	include/ieee80211.h	/^	u_int8_t	param_oui_type;$/;"	m	struct:ieee80211_wme_param
param_qosInfo	include/ieee80211.h	/^	u_int8_t	param_qosInfo;$/;"	m	struct:ieee80211_wme_param
param_reserved	include/ieee80211.h	/^	u_int8_t	param_reserved;$/;"	m	struct:ieee80211_wme_param
param_version	include/ieee80211.h	/^	u_int8_t	param_version;$/;"	m	struct:ieee80211_wme_param
params_acParams	include/ieee80211.h	/^	struct ieee80211_wme_acparams	params_acParams[WME_NUM_AC];$/;"	m	struct:ieee80211_wme_param	typeref:struct:ieee80211_wme_param::ieee80211_wme_acparams
parent	ezxml/ezxml.h	/^    ezxml_t parent;  \/\/ parent tag, NULL if current tag is root tag$/;"	m	struct:ezxml
parse_addr1	airconf-parse.c	/^static int parse_addr1(ezxml_t root, addr1_conf *addr1)$/;"	f	file:
parse_addr2	airconf-parse.c	/^static int parse_addr2(ezxml_t root, addr2_conf *addr2)$/;"	f	file:
parse_addr3	airconf-parse.c	/^static int parse_addr3(ezxml_t root, addr3_conf *addr3)$/;"	f	file:
parse_addr4	airconf-parse.c	/^static int parse_addr4(ezxml_t root, addr4_conf *addr4)$/;"	f	file:
parse_elem_vendor	besside-ng.c	/^static int parse_elem_vendor(struct network *n, unsigned char *e, int l)$/;"	f	file:
parse_elem_vendor	wpaclean.c	/^static int parse_elem_vendor(unsigned char *e, int l)$/;"	f	file:
parse_hex	besside-ng.c	/^static int parse_hex(unsigned char *out, char *in, int l)$/;"	f	file:
parse_rsn	besside-ng.c	/^static int parse_rsn(struct network *n, unsigned char *p, int l, int rsn)$/;"	f	file:
parse_rsn	wpaclean.c	/^static int parse_rsn(unsigned char *p, int l, int rsn)$/;"	f	file:
parse_tag_conf	airconf-parse.c	/^tag_conf* parse_tag_conf(ezxml_t root)$/;"	f
parse_tags	airbase-ng.c	/^unsigned char* parse_tags(unsigned char *flags, unsigned char type, int length, int *taglen)$/;"	f
parse_timestamp	airodump-ng.c	/^static char *parse_timestamp(unsigned long long timestamp) {$/;"	f	file:
passphrase	airdecap-ng.c	/^    char passphrase[65];$/;"	m	struct:options	file:
passphrase	airtun-ng.c	/^    char passphrase[65];$/;"	m	struct:options	file:
payload_type	wi_packet.h	/^	uint16_t   payload_type:1;$/;"	m	struct:_wi_qos_control
pbcc	wi_packet.h	/^	uint16_t   pbcc:1;$/;"	m	struct:_wi_beacon_capa_flag
pc_channel	osdep/cygwin.c	/^	int		pc_channel;$/;"	m	struct:priv_cygwin	file:
pc_close	osdep/cygwin.c	/^	void		(*pc_close)(void);$/;"	m	struct:priv_cygwin	file:
pc_did_init	osdep/cygwin.c	/^	int		pc_did_init;$/;"	m	struct:priv_cygwin	file:
pc_frequency	osdep/cygwin.c	/^	int		pc_frequency;$/;"	m	struct:priv_cygwin	file:
pc_get_mac	osdep/cygwin.c	/^	int		(*pc_get_mac)(void *mac);$/;"	m	struct:priv_cygwin	file:
pc_init	osdep/cygwin.c	/^	int		(*pc_init)(char *param);$/;"	m	struct:priv_cygwin	file:
pc_inject	osdep/cygwin.c	/^	int		(*pc_inject)(void *buf, int len, struct tx_info *ti);$/;"	m	struct:priv_cygwin	file:
pc_pipe	osdep/cygwin.c	/^	int		pc_pipe[2]; \/* reader -> parent *\/$/;"	m	struct:priv_cygwin	file:
pc_reader	osdep/cygwin.c	/^	pthread_t	pc_reader;$/;"	m	struct:priv_cygwin	file:
pc_running	osdep/cygwin.c	/^	volatile int	pc_running;$/;"	m	struct:priv_cygwin	file:
pc_set_chan	osdep/cygwin.c	/^	int		(*pc_set_chan)(int chan);$/;"	m	struct:priv_cygwin	file:
pc_set_freq	osdep/cygwin.c	/^	int		(*pc_set_freq)(int freq);$/;"	m	struct:priv_cygwin	file:
pc_set_mac	osdep/cygwin.c	/^	int		(*pc_set_mac)(void *mac);$/;"	m	struct:priv_cygwin	file:
pc_sniff	osdep/cygwin.c	/^	int		(*pc_sniff)(void *buf, int len, struct rx_info *ri);$/;"	m	struct:priv_cygwin	file:
pc_wi	osdep/cygwin.c	/^	struct wif	*pc_wi;$/;"	m	struct:priv_cygwin	typeref:struct:priv_cygwin::wif	file:
pcap_file_header	pcap.h	/^struct pcap_file_header$/;"	s
pcap_pkthdr	pcap.h	/^struct pcap_pkthdr$/;"	s
peak_data_rate	ieee802_11_defs.h	/^	le32 peak_data_rate;$/;"	m	struct:wmm_tspec_element
peer_nonce	ieee802_11_defs.h	/^	u8 peer_nonce[32];$/;"	m	struct:ieee80211_ampe_ie
pexit	misc.h	134;"	d
pf_buf	osdep/freebsd.c	/^	unsigned char			pf_buf[4096];$/;"	m	struct:priv_fbsd	file:
pf_chan	osdep/file.c	/^	int		pf_chan;$/;"	m	struct:priv_file	file:
pf_chan	osdep/freebsd.c	/^        int                             pf_chan;$/;"	m	struct:priv_fbsd	file:
pf_dtl	osdep/file.c	/^	int		pf_dtl;$/;"	m	struct:priv_file	file:
pf_fd	osdep/file.c	/^	int		pf_fd;$/;"	m	struct:priv_file	file:
pf_fd	osdep/freebsd.c	/^	int				pf_fd;$/;"	m	struct:priv_fbsd	file:
pf_ifr	osdep/freebsd.c	/^	struct ifreq			pf_ifr;$/;"	m	struct:priv_fbsd	typeref:struct:priv_fbsd::ifreq	file:
pf_ireq	osdep/freebsd.c	/^	struct ieee80211req		pf_ireq;$/;"	m	struct:priv_fbsd	typeref:struct:priv_fbsd::ieee80211req	file:
pf_mac	osdep/file.c	/^	unsigned char	pf_mac[6];$/;"	m	struct:priv_file	file:
pf_next	osdep/freebsd.c	/^	unsigned char			*pf_next;$/;"	m	struct:priv_fbsd	file:
pf_nocrc	osdep/freebsd.c	/^	int				pf_nocrc;$/;"	m	struct:priv_fbsd	file:
pf_rate	osdep/file.c	/^	int		pf_rate;$/;"	m	struct:priv_file	file:
pf_s	osdep/freebsd.c	/^	int				pf_s;$/;"	m	struct:priv_fbsd	file:
pf_totlen	osdep/freebsd.c	/^	int				pf_totlen;$/;"	m	struct:priv_fbsd	file:
pf_txparams	osdep/freebsd.c	/^        struct ieee80211_bpf_params	pf_txparams;$/;"	m	struct:priv_fbsd	typeref:struct:priv_fbsd::ieee80211_bpf_params	file:
pfh_in	airbase-ng.c	/^    struct pcap_file_header pfh_in;$/;"	m	struct:devices	typeref:struct:devices::pcap_file_header	file:
pfh_in	aireplay-ng.c	/^    struct pcap_file_header pfh_in;$/;"	m	struct:devices	typeref:struct:devices::pcap_file_header	file:
pfh_in	airodump-ng.h	/^    struct pcap_file_header pfh_in;$/;"	m	struct:globals	typeref:struct:globals::pcap_file_header
pfh_in	airtun-ng.c	/^    struct pcap_file_header pfh_in;$/;"	m	struct:devices	typeref:struct:devices::pcap_file_header	file:
pfh_in	osdep/linux.c	/^    struct pcap_file_header pfh_in;$/;"	m	struct:priv_linux	typeref:struct:priv_linux::pcap_file_header	file:
pfh_in	packetforge-ng.c	/^    struct pcap_file_header pfh_in;$/;"	m	struct:devices	typeref:struct:devices::pcap_file_header	file:
pfh_in	tkiptun-ng.c	/^    struct pcap_file_header pfh_in;$/;"	m	struct:devices	typeref:struct:devices::pcap_file_header	file:
phy_type	ieee802_11_defs.h	/^enum phy_type {$/;"	g
pi	ezxml/ezxml.c	/^    char ***pi;           \/\/ processing instructions$/;"	m	struct:ezxml_root	file:
pi_iv	wesside-ng.c	/^	unsigned char	pi_iv[3];$/;"	m	struct:prga_info	file:
pi_len	wesside-ng.c	/^	int		pi_len;$/;"	m	struct:prga_info	file:
pi_prga	wesside-ng.c	/^	unsigned char	*pi_prga;$/;"	m	struct:prga_info	file:
pid	wi_packet.h	/^	uint8_t pid[2];$/;"	m	struct:_wi_data_llc
ping	aireplay-ng.c	/^    unsigned int  ping[REQUESTS];$/;"	m	struct:APt	file:
ping	tkiptun-ng.c	/^    unsigned int  ping[REQUESTS];$/;"	m	struct:APt	file:
ping_reply	besside-ng.c	/^static void ping_reply(struct network *n, struct ieee80211_frame *wh)$/;"	f	file:
ping_send	besside-ng.c	/^static void ping_send(struct network *n)$/;"	f	file:
pkt_buf	airodump-ng.h	/^struct pkt_buf$/;"	s
pkt_count	aircapture.h	/^	uint32_t pkt_count;$/;"	m	struct:_AIRCAP_SAMPLE_DATA
pktbuf	airconf-parse.h	/^	uint8_t pktbuf[4096];$/;"	m	struct:_airconf
pktbuf_len	airconf-parse.h	/^	int pktbuf_len;$/;"	m	struct:_airconf
pktlen	packetforge-ng.c	/^    int pktlen;$/;"	m	struct:options	file:
pl_mac	osdep/linux.c	/^    unsigned char pl_mac[6];$/;"	m	struct:priv_linux	file:
plctx	aircapture.h	/^	LOG_CTX *plctx;$/;"	m	struct:_AIRCAP_G
plctx	airshooter.h	/^	LOG_CTX *plctx;$/;"	m	struct:_AIRSHOOT_G
plink_action_field	ieee802_11_defs.h	/^enum plink_action_field {$/;"	g
pmk	aircrack-ng.h	/^	uint8_t pmk[32];$/;"	m	struct:hashdb_rec
pmk	airdecap-ng.c	/^    unsigned char pmk[40];$/;"	m	struct:options	file:
pmk	airtun-ng.c	/^    unsigned char pmk[40];$/;"	m	struct:options	file:
pmk	tkiptun-ng.c	/^    unsigned char pmk[128];         \/* pmk derived from the essid and psk *\/$/;"	m	struct:options	file:
pn	crypto.h	/^    unsigned char pn[6];                \/* Packet Number (WPA-CCMP) *\/$/;"	m	struct:WPA_ST_info
pn_buf	osdep/netbsd.c	/^	unsigned char			pn_buf[4096];$/;"	m	struct:priv_nbsd	file:
pn_chan	osdep/netbsd.c	/^        int                             pn_chan;$/;"	m	struct:priv_nbsd	file:
pn_fd	osdep/netbsd.c	/^	int				pn_fd;$/;"	m	struct:priv_nbsd	file:
pn_ifr	osdep/netbsd.c	/^	struct ifreq			pn_ifr;$/;"	m	struct:priv_nbsd	typeref:struct:priv_nbsd::ifreq	file:
pn_ireq	osdep/netbsd.c	/^	struct ieee80211chanreq		pn_ireq;$/;"	m	struct:priv_nbsd	typeref:struct:priv_nbsd::ieee80211chanreq	file:
pn_next	osdep/netbsd.c	/^	unsigned char			*pn_next;$/;"	m	struct:priv_nbsd	file:
pn_nocrc	osdep/netbsd.c	/^	int				pn_nocrc;$/;"	m	struct:priv_nbsd	file:
pn_queue	osdep/network.c	/^	struct netqueue	pn_queue;$/;"	m	struct:priv_net	typeref:struct:priv_net::netqueue	file:
pn_queue_free	osdep/network.c	/^	struct netqueue	pn_queue_free;$/;"	m	struct:priv_net	typeref:struct:priv_net::netqueue	file:
pn_queue_len	osdep/network.c	/^	int		pn_queue_len;$/;"	m	struct:priv_net	file:
pn_s	osdep/netbsd.c	/^	int				pn_s;$/;"	m	struct:priv_nbsd	file:
pn_s	osdep/network.c	/^	int		pn_s;$/;"	m	struct:priv_net	file:
pn_totlen	osdep/netbsd.c	/^	int				pn_totlen;$/;"	m	struct:priv_nbsd	file:
po_buf	osdep/openbsd.c	/^	unsigned char			po_buf[4096];$/;"	m	struct:priv_obsd	file:
po_chan	osdep/openbsd.c	/^        int                             po_chan;$/;"	m	struct:priv_obsd	file:
po_fd	osdep/openbsd.c	/^	int				po_fd;$/;"	m	struct:priv_obsd	file:
po_ifr	osdep/openbsd.c	/^	struct ifreq			po_ifr;$/;"	m	struct:priv_obsd	typeref:struct:priv_obsd::ifreq	file:
po_ireq	osdep/openbsd.c	/^	struct ieee80211chanreq		po_ireq;$/;"	m	struct:priv_obsd	typeref:struct:priv_obsd::ieee80211chanreq	file:
po_next	osdep/openbsd.c	/^	unsigned char			*po_next;$/;"	m	struct:priv_obsd	file:
po_nocrc	osdep/openbsd.c	/^	int				po_nocrc;$/;"	m	struct:priv_obsd	file:
po_s	osdep/openbsd.c	/^	int				po_s;$/;"	m	struct:priv_obsd	file:
po_totlen	osdep/openbsd.c	/^	int				po_totlen;$/;"	m	struct:priv_obsd	file:
poll	aircrack-ng.h	/^	vote poll[64][256];			 \/* KoreK cryptanalysis results  *\/$/;"	m	struct:WEP_data
pop_list	llist.c	/^llist *pop_list(llist *node)$/;"	f
port_in	aireplay-ng.c	/^    int port_in;$/;"	m	struct:options	file:
port_in	tkiptun-ng.c	/^    int port_in;$/;"	m	struct:options	file:
port_out	aireplay-ng.c	/^    int port_out;$/;"	m	struct:options	file:
port_out	tkiptun-ng.c	/^    int port_out;$/;"	m	struct:options	file:
post_input	wesside-ng.c	/^static void post_input(struct wstate *ws, struct timeval *now)$/;"	f	file:
power	airbase-ng.c	/^    int power;               \/* last signal power         *\/$/;"	m	struct:ST_info	file:
power	airnodes.c	/^	int power;               \/* last signal power         *\/$/;"	m	struct:STA_INFO	file:
power	airodump-ng.h	/^    int power;               \/* last signal power         *\/$/;"	m	struct:NA_info
power	airodump-ng.h	/^    int power;               \/* last signal power         *\/$/;"	m	struct:ST_info
power_index	airnodes.c	/^	int power_index;              \/* index in power ring buffer    *\/$/;"	m	struct:AP_INFO	file:
power_index	airodump-ng.h	/^    int power_index;          \/* index in power ring buf. *\/$/;"	m	struct:AP_info
power_lvl	airnodes.c	/^	int power_lvl[NB_PWR];        \/* signal power ring buffer      *\/$/;"	m	struct:AP_INFO	file:
power_lvl	airodump-ng.h	/^    int power_lvl[NB_PWR];    \/* signal power ring buffer *\/$/;"	m	struct:AP_info
pp	MD5_std.h	/^		MD5_block p, ps, pp, psp;$/;"	m	struct:__anon28::__anon31
pp	MD5_std.h	/^		MD5_block p, sp, pp, spp;$/;"	m	struct:__anon28::__anon30
pp	MD5_std.h	/^		int p, s, ps, pp, psp;$/;"	m	struct:__anon28::__anon29
ppi_decode	osdep/airpcap.c	/^int ppi_decode(const u_char *p, int caplen, int *hdrlen, int *power)$/;"	f
preamble	airnodes.c	/^	int preamble;                 \/* 0 = long, 1 = short           *\/$/;"	m	struct:AP_INFO	file:
preamble	airodump-ng.h	/^    int preamble;             \/* 0 = long, 1 = short      *\/$/;"	m	struct:AP_info
prefix	MD5_std.h	/^	char *prefix;$/;"	m	struct:__anon33
prefix	airbase-ng.c	/^    char *prefix;$/;"	m	struct:options	file:
prefix	airodump-ng.h	/^    char *prefix;$/;"	m	struct:globals
prelen	MD5_std.h	/^	int prelen;$/;"	m	struct:__anon33
prepare_fragstate	wesside-ng.c	/^static void prepare_fragstate(struct wstate *ws, struct frag_state* fs, int pad)$/;"	f	file:
prev	airbase-ng.c	/^    struct ST_info *prev;    \/* the prev client in list   *\/$/;"	m	struct:ST_info	typeref:struct:ST_info::ST_info	file:
prev	airdecloak-ng.h	/^    struct packet_elt * prev;$/;"	m	struct:packet_elt	typeref:struct:packet_elt::packet_elt
prev	airodump-ng.h	/^    struct AP_info *prev;     \/* prev. AP in list         *\/$/;"	m	struct:AP_info	typeref:struct:AP_info::AP_info
prev	airodump-ng.h	/^    struct NA_info *prev;    \/* the prev client in list   *\/$/;"	m	struct:NA_info	typeref:struct:NA_info::NA_info
prev	airodump-ng.h	/^    struct ST_info *prev;    \/* the prev client in list   *\/$/;"	m	struct:ST_info	typeref:struct:ST_info::ST_info
prev	hashtable.h	/^	struct _hash_bucket_t *prev;$/;"	m	struct:_hash_bucket_t	typeref:struct:_hash_bucket_t::_hash_bucket_t
prev	ivstools.c	/^    struct AP_info *prev;     \/* prev. AP in list         *\/$/;"	m	struct:AP_info	typeref:struct:AP_info::AP_info	file:
prev	ivstools.c	/^    struct ST_info *prev;    \/* the prev client in list   *\/$/;"	m	struct:ST_info	typeref:struct:ST_info::ST_info	file:
prev	llist.h	/^	struct _llist *next, *prev;$/;"	m	struct:_llist	typeref:struct:_llist::
prev_bssid	airodump-ng.h	/^    unsigned char prev_bssid[6];$/;"	m	struct:globals
prev_bssid	ivstools.c	/^    unsigned char prev_bssid[6];$/;"	m	struct:globals	file:
prev_bssid	packetforge-ng.c	/^    unsigned char prev_bssid[6];$/;"	m	struct:options	file:
prev_packet_pointer	airdecloak-ng.c	/^BOOLEAN prev_packet_pointer() {$/;"	f
prev_packet_pointer_same_fromToDS_and_source	airdecloak-ng.c	/^BOOLEAN prev_packet_pointer_same_fromToDS_and_source(struct packet_elt * packet) {$/;"	f
prev_packet_pointer_same_fromToDS_and_source_as_current	airdecloak-ng.c	/^BOOLEAN prev_packet_pointer_same_fromToDS_and_source_as_current() {$/;"	f
prga	airbase-ng.c	/^    unsigned char *prga;$/;"	m	struct:options	file:
prga	aireplay-ng.c	/^    unsigned char *prga;$/;"	m	struct:options	file:
prga	airtun-ng.c	/^    unsigned char *prga;$/;"	m	struct:options	file:
prga	packetforge-ng.c	/^    unsigned char *prga;$/;"	m	struct:options	file:
prga	tkiptun-ng.c	/^    unsigned char *prga;$/;"	m	struct:options	file:
prga_get	besside-ng.c	/^static void prga_get(struct network *n)$/;"	f	file:
prga_info	wesside-ng.c	/^struct prga_info {$/;"	s	file:
prgalen	airbase-ng.c	/^    int prgalen;$/;"	m	struct:options	file:
prgalen	aireplay-ng.c	/^    int prgalen;$/;"	m	struct:options	file:
prgalen	airtun-ng.c	/^    int prgalen;$/;"	m	struct:options	file:
prgalen	packetforge-ng.c	/^    int prgalen;$/;"	m	struct:options	file:
prgalen	tkiptun-ng.c	/^    int prgalen;$/;"	m	struct:options	file:
primary_chan	ieee802_11_defs.h	/^	u8 primary_chan;$/;"	m	struct:ieee80211_ht_operation
printErrorCloseAndReturn	osdep/airpcap.c	/^int printErrorCloseAndReturn(const char * err, int retValue)$/;"	f
print_airconf	airconf-parse.c	/^void print_airconf(airconf *conf)$/;"	f
print_airshooter_packet	airbase-ng.c	/^void print_airshooter_packet ( unsigned char h80211[], int caplen )$/;"	f
print_airshooter_packet	airdecloak-ng.c	/^void print_airshooter_packet(struct packet_elt * packet) {$/;"	f
print_airshooter_packet	airtun-ng.c	/^void print_airshooter_packet ( unsigned char h80211[], int caplen )$/;"	f
print_args	aircapture-main.c	/^void print_args(int argc, char** argv)$/;"	f
print_help	airolib-ng.c	/^void print_help(const char * msg) {$/;"	f
print_hex	besside-ng.c	/^static inline void print_hex(void *p, int len)$/;"	f	file:
print_hexdump	airconf-parse.c	/^void print_hexdump(uint8_t *data, int len)$/;"	f
print_hexstr	airconf-parse.c	/^void print_hexstr(uint8_t *data, int len)$/;"	f
print_list	besside-ng.c	/^static void print_list(char *label, check_cb cb)$/;"	f	file:
print_list	llist.c	/^void print_list(llist *head, void(*print)(void *))$/;"	f
print_network	wpaclean.c	/^static void print_network(struct network *n)$/;"	f	file:
print_radiotap_namespace	osdep/radiotap/parse.c	/^static void print_radiotap_namespace(struct ieee80211_radiotap_iterator *iter)$/;"	f	file:
print_state	besside-ng.c	/^static void print_state(int UNUSED(x))$/;"	f	file:
print_state_network	besside-ng.c	/^static void print_state_network(struct network *n)$/;"	f	file:
print_statistics	airdecloak-ng.c	/^BOOLEAN print_statistics() {$/;"	f
print_status	besside-ng.c	/^static void print_status(int advance)$/;"	f	file:
print_taglist_detail	airconf-parse.c	/^void print_taglist_detail(tag_conf *tag)$/;"	f
print_taglist_simple	airconf-parse.c	/^void print_taglist_simple(tag_conf *tag)$/;"	f
print_test_namespace	osdep/radiotap/parse.c	/^static void print_test_namespace(struct ieee80211_radiotap_iterator *iter)$/;"	f	file:
print_usage	packetforge-ng.c	/^void print_usage(void)$/;"	f
print_work	besside-ng.c	/^static void print_work(void)$/;"	f	file:
printf_time	easside-ng.c	/^void printf_time(char *fmt, ...)$/;"	f
priority	wi_packet.h	/^	uint16_t   priority:3;$/;"	m	struct:_wi_qos_control
priv_cygwin	osdep/cygwin.c	/^struct priv_cygwin {$/;"	s	file:
priv_fbsd	osdep/freebsd.c	/^struct priv_fbsd {$/;"	s	file:
priv_file	osdep/file.c	/^struct priv_file {$/;"	s	file:
priv_linux	osdep/linux.c	/^struct priv_linux {$/;"	s	file:
priv_nbsd	osdep/netbsd.c	/^struct priv_nbsd {$/;"	s	file:
priv_net	osdep/network.c	/^struct priv_net {$/;"	s	file:
priv_obsd	osdep/openbsd.c	/^struct priv_obsd {$/;"	s	file:
privacy	wi_packet.h	/^	uint16_t   privacy:1;$/;"	m	struct:_wi_beacon_capa_flag
probability	aircrack-ng.h	/^	int probability;			\/* %of correct answers *\/$/;"	m	struct:options
probe_index	airbase-ng.c	/^    int probe_index;         \/* probed ESSIDs ring index  *\/$/;"	m	struct:ST_info	file:
probe_index	airnodes.c	/^	int probe_index;         \/* probed ESSIDs ring index  *\/$/;"	m	struct:STA_INFO	file:
probe_index	airodump-ng.h	/^    int probe_index;         \/* probed ESSIDs ring index  *\/$/;"	m	struct:ST_info
probe_resp	ieee802_11_defs.h	/^		} STRUCT_PACKED probe_resp;$/;"	m	union:ieee80211_mgmt::__anon34	typeref:struct:ieee80211_mgmt::__anon34::__anon42
probes	airbase-ng.c	/^    char probes[NB_PRB][256];\/* probed ESSIDs ring buffer *\/$/;"	m	struct:ST_info	file:
probes	airnodes.c	/^	char probes[NB_PRB][MAX_IE_SIZE];$/;"	m	struct:STA_INFO	file:
probes	airodump-ng.h	/^    char probes[NB_PRB][MAX_IE_ELEMENT_SIZE];$/;"	m	struct:ST_info
proc_ctl	wesside-ng.c	/^static void proc_ctl(struct wstate *ws, int stype)$/;"	f	file:
proc_data	wesside-ng.c	/^static void proc_data(struct wstate *ws, struct ieee80211_frame *wh, int len)$/;"	f	file:
proc_mgt	wesside-ng.c	/^static void proc_mgt(struct wstate *ws, int stype, unsigned char *body)$/;"	f	file:
process_beacon	wpaclean.c	/^static void process_beacon(struct ieee80211_frame *wh, int totlen)$/;"	f	file:
process_data	wpaclean.c	/^static void process_data(struct ieee80211_frame *wh, int len)$/;"	f	file:
process_directory	besside-ng-crawler.c	/^void process_directory(const char *dir, time_t begin) {$/;"	f
process_eapol	besside-ng.c	/^static void process_eapol(struct network *n, struct client *c, unsigned char *p,$/;"	f	file:
process_eapol	wpaclean.c	/^static void process_eapol(struct network *n, struct client *c, unsigned char *p,$/;"	f	file:
process_eapol_networks	besside-ng-crawler.c	/^void process_eapol_networks(pcap_t *handle, struct bsslist *bsl) {$/;"	f
process_file	besside-ng-crawler.c	/^void process_file(const char *file) {$/;"	f
process_packet	wpaclean.c	/^static void process_packet(void *packet, int len)$/;"	f	file:
progname	aircrack-ng.c	/^char * progname = NULL;$/;"	v
promiscuous	airbase-ng.c	/^    int promiscuous;$/;"	m	struct:options	file:
protect	wi_packet.h	/^	uint8_t   protect:1;$/;"	m	struct:_wi_flags_t
ps	MD5_std.h	/^		MD5_block p, ps, pp, psp;$/;"	m	struct:__anon28::__anon31
ps	MD5_std.h	/^		int p, s, ps, pp, psp;$/;"	m	struct:__anon28::__anon29
psk	tkiptun-ng.c	/^    char  psk[128];         \/* shared passphrase among the clients *\/$/;"	m	struct:options	file:
psp	MD5_std.h	/^		MD5_block p, ps, pp, psp;$/;"	m	struct:__anon28::__anon31
psp	MD5_std.h	/^		int p, s, ps, pp, psp;$/;"	m	struct:__anon28::__anon29
ptk	crypto.h	/^    unsigned char ptk[80];              \/* pairwise transcient key      *\/$/;"	m	struct:WPA_ST_info
ptk	tkiptun-ng.c	/^    unsigned char ptk[80];          \/* ptk calculated from all pieces captured in the handshake *\/$/;"	m	struct:options	file:
ptw_add	besside-ng.c	/^static int ptw_add(struct network *n, struct ieee80211_frame *wh,$/;"	f	file:
ptw_attack	aircrack-ng.h	/^	int ptw_attack;$/;"	m	struct:options
ptw_clean	aircrack-ng.h	/^	PTW_attackstate *ptw_clean;$/;"	m	struct:AP_info
ptw_free	besside-ng.c	/^static void ptw_free(struct network *n)$/;"	f	file:
ptw_vague	aircrack-ng.h	/^	PTW_attackstate *ptw_vague;$/;"	m	struct:AP_info
public_action	ieee802_11_defs.h	/^				} STRUCT_PACKED public_action;$/;"	m	union:ieee80211_mgmt::__anon34::__anon43::__anon44	typeref:struct:ieee80211_mgmt::__anon34::__anon43::__anon44::__anon53
put_be32	sha1-git.c	110;"	d	file:
put_be32	sha1-git.c	119;"	d	file:
put_crc32	easside-ng.c	/^void put_crc32(void *data, int len)$/;"	f
pwn	besside-ng.c	/^static void pwn(void)$/;"	f	file:
pwn	wpaclean.c	/^static void pwn(char *fname)$/;"	f	file:
pwned	besside-ng.c	/^static void pwned(struct network *n)$/;"	f	file:
pwr	aireplay-ng.c	/^    int  pwr[REQUESTS];$/;"	m	struct:APt	file:
pwr	tkiptun-ng.c	/^    int  pwr[REQUESTS];$/;"	m	struct:APt	file:
pwr_mgt	wi_packet.h	/^	uint8_t   pwr_mgt:1;$/;"	m	struct:_wi_flags_t
q_buf	osdep/network.c	/^	unsigned char	q_buf[2048];$/;"	m	struct:netqueue	file:
q_len	osdep/network.c	/^	int		q_len;$/;"	m	struct:netqueue	file:
q_next	osdep/network.c	/^	struct netqueue	*q_next;$/;"	m	struct:netqueue	typeref:struct:netqueue::netqueue	file:
q_prev	osdep/network.c	/^	struct netqueue	*q_prev;$/;"	m	struct:netqueue	typeref:struct:netqueue::netqueue	file:
qap_ps_buffer_state	wi_packet.h	/^	uint16_t   qap_ps_buffer_state:8;$/;"	m	struct:_wi_qos_control
qos_action	ieee802_11_defs.h	/^enum qos_action {$/;"	g
qos_fr_ds	airnodes.c	/^	int qos_fr_ds;           \/* does it receive 802.11e   *\/$/;"	m	struct:STA_INFO	file:
qos_fr_ds	airodump-ng.h	/^    int qos_fr_ds;           \/* does it receive 802.11e   *\/$/;"	m	struct:ST_info
qos_info	ieee802_11_defs.h	/^	u8 qos_info; \/* AP\/STA specific QoS info *\/$/;"	m	struct:wmm_information_element
qos_info	ieee802_11_defs.h	/^	u8 qos_info; \/* AP\/STA specific QoS info *\/$/;"	m	struct:wmm_parameter_element
qos_to_ds	airnodes.c	/^	int qos_to_ds;           \/* does it use 802.11e to ds *\/$/;"	m	struct:STA_INFO	file:
qos_to_ds	airodump-ng.h	/^    int qos_to_ds;           \/* does it use 802.11e to ds *\/$/;"	m	struct:ST_info
qstrstr	qstrstr.c	/^int qstrstr(char *buf, size_t buflen, const char *match)$/;"	f
query_int	airolib-ng.c	/^int query_int(sqlite3* db, const char* sql) {$/;"	f
query_reason	ieee802_11_defs.h	/^					u8 query_reason;$/;"	m	struct:ieee80211_mgmt::__anon34::__anon43::__anon44::__anon57
queue_add	osdep/network.c	/^static void queue_add(struct netqueue *head, struct netqueue *q)$/;"	f	file:
queue_del	osdep/network.c	/^static void queue_del(struct netqueue *q)$/;"	f	file:
queue_get	osdep/network.c	/^static int queue_get(struct priv_net *pn, void *buf, int len)$/;"	f	file:
queue_get_slot	osdep/network.c	/^static struct netqueue *queue_get_slot(struct priv_net *pn)$/;"	f	file:
queue_len	easside-ng.c	/^int queue_len(struct east_state *es)$/;"	f
quiet	airbase-ng.c	/^    int quiet;$/;"	m	struct:options	file:
rBSSID	airbase-ng.c	/^pMAC_t      rBSSID;$/;"	v
rCF	airbase-ng.c	/^pCF_t       rCF;$/;"	v
rClient	airbase-ng.c	/^pMAC_t      rClient;$/;"	v
rESSID	airbase-ng.c	/^pESSID_t    rESSID;$/;"	v
rESSIDmutex	airbase-ng.c	/^pthread_mutex_t	rESSIDmutex;$/;"	v
rFragment	airbase-ng.c	/^pFrag_t     rFragment;$/;"	v
rFragment	airtun-ng.c	/^pFrag_t     rFragment;$/;"	v
r_apmac	tkiptun-ng.c	/^    unsigned char r_apmac[6];$/;"	m	struct:options	file:
r_bssid	airbase-ng.c	/^    unsigned char r_bssid[6];$/;"	m	struct:options	file:
r_bssid	aireplay-ng.c	/^    unsigned char r_bssid[6];$/;"	m	struct:options	file:
r_bssid	airtun-ng.c	/^    unsigned char r_bssid[6];$/;"	m	struct:options	file:
r_bssid	tkiptun-ng.c	/^    unsigned char r_bssid[6];$/;"	m	struct:options	file:
r_dip	aireplay-ng.c	/^    unsigned char r_dip[4];$/;"	m	struct:options	file:
r_dip	tkiptun-ng.c	/^    unsigned char r_dip[4];$/;"	m	struct:options	file:
r_dmac	airbase-ng.c	/^    unsigned char r_dmac[6];$/;"	m	struct:options	file:
r_dmac	aireplay-ng.c	/^    unsigned char r_dmac[6];$/;"	m	struct:options	file:
r_dmac	airtun-ng.c	/^    unsigned char r_dmac[6];$/;"	m	struct:options	file:
r_dmac	tkiptun-ng.c	/^    unsigned char r_dmac[6];$/;"	m	struct:options	file:
r_essid	aireplay-ng.c	/^    char r_essid[33];$/;"	m	struct:options	file:
r_essid	tkiptun-ng.c	/^    char r_essid[33];$/;"	m	struct:options	file:
r_fctrl	aireplay-ng.c	/^    int r_fctrl;$/;"	m	struct:options	file:
r_fctrl	tkiptun-ng.c	/^    int r_fctrl;$/;"	m	struct:options	file:
r_fromdsinj	aireplay-ng.c	/^    int r_fromdsinj;$/;"	m	struct:options	file:
r_fromdsinj	tkiptun-ng.c	/^    int r_fromdsinj;$/;"	m	struct:options	file:
r_nbpps	airbase-ng.c	/^    int r_nbpps;$/;"	m	struct:options	file:
r_nbpps	aireplay-ng.c	/^    int r_nbpps;$/;"	m	struct:options	file:
r_nbpps	airtun-ng.c	/^    int r_nbpps;$/;"	m	struct:options	file:
r_nbpps	tkiptun-ng.c	/^    int r_nbpps;$/;"	m	struct:options	file:
r_sip	aireplay-ng.c	/^    unsigned char r_sip[4];$/;"	m	struct:options	file:
r_sip	tkiptun-ng.c	/^    unsigned char r_sip[4];$/;"	m	struct:options	file:
r_smac	airbase-ng.c	/^    unsigned char r_smac[6];$/;"	m	struct:options	file:
r_smac	aireplay-ng.c	/^    unsigned char r_smac[6];$/;"	m	struct:options	file:
r_smac	airtun-ng.c	/^    unsigned char r_smac[6];$/;"	m	struct:options	file:
r_smac	tkiptun-ng.c	/^    unsigned char r_smac[6];$/;"	m	struct:options	file:
r_smac_set	aireplay-ng.c	/^    char r_smac_set;$/;"	m	struct:options	file:
r_smac_set	tkiptun-ng.c	/^    char r_smac_set;$/;"	m	struct:options	file:
r_trans	airtun-ng.c	/^    unsigned char r_trans[6];$/;"	m	struct:options	file:
radio_mesurment	wi_packet.h	/^	uint16_t   radio_mesurment:1;$/;"	m	struct:_wi_beacon_capa_flag
radiotap_align_size	osdep/radiotap/radiotap_iter.h	/^struct radiotap_align_size {$/;"	s
radiotap_ns	osdep/radiotap/radiotap.c	/^static const struct ieee80211_radiotap_namespace radiotap_ns = {$/;"	v	typeref:struct:ieee80211_radiotap_namespace	file:
radiotap_override	osdep/radiotap/radiotap_iter.h	/^struct radiotap_override {$/;"	s
rand	common.h	45;"	d
rand	common.h	46;"	d
rate	osdep/linux.c	/^    int rate;$/;"	m	struct:priv_linux	file:
rate_from	airbase-ng.c	/^    int rate_from;           \/* last bitrate from station *\/$/;"	m	struct:ST_info	file:
rate_from	airnodes.c	/^	int rate_from;           \/* last bitrate from station *\/$/;"	m	struct:STA_INFO	file:
rate_from	airodump-ng.h	/^    int rate_from;           \/* last bitrate from station *\/$/;"	m	struct:ST_info
rate_to	airbase-ng.c	/^    int rate_to;             \/* last bitrate to station   *\/$/;"	m	struct:ST_info	file:
rate_to	airnodes.c	/^	int rate_to;             \/* last bitrate to station   *\/$/;"	m	struct:STA_INFO	file:
rate_to	airodump-ng.h	/^    int rate_to;             \/* last bitrate to station   *\/$/;"	m	struct:ST_info
rates	aircapture.h	/^	el *rates;$/;"	m	struct:el_list
raw_file	packetforge-ng.c	/^    char *raw_file;$/;"	m	struct:options	file:
rawdata	aircapture.h	/^	uint8_t rawdata[4096];$/;"	m	struct:_AIRCAP_DATA
rawdata_size	aircapture.h	/^	size_t rawdata_size;$/;"	m	struct:_AIRCAP_DATA
rb	aircrack-ng.c	/^read_buf rb, crb;$/;"	v
rc4_crypt	crypto.c	/^void rc4_crypt( struct rc4_state *s, unsigned char *data, int length )$/;"	f
rc4_setup	crypto.c	/^void rc4_setup( struct rc4_state *s, unsigned char *key,  int length )$/;"	f
rc4_state	crypto.h	/^struct rc4_state$/;"	s
rc4init	aircrack-ptw-lib.c	/^static void rc4init ( uint8_t * key, int keylen, rc4state * state) {$/;"	f	file:
rc4initial	aircrack-ptw-lib.c	/^static const uint32_t rc4initial[] =$/;"	v	file:
rc4state	aircrack-ptw-lib.c	/^} rc4state;$/;"	t	typeref:struct:__anon22	file:
rc4test	aircrack-ptw-lib.c	/^static int rc4test(uint8_t *key, int keylen, uint8_t *iv, uint8_t *keystream)$/;"	f	file:
rc4test	aircrack-ptw-lib.h	/^	rc4test_func rc4test;$/;"	m	struct:__anon71
rc4test_amd64_sse2	aircrack-ptw-lib.c	/^static int rc4test_amd64_sse2(uint8_t *key, int keylen, uint8_t *iv, uint8_t *keystream)$/;"	f	file:
rc4test_func	aircrack-ptw-lib.h	/^typedef int (*rc4test_func)(uint8_t *key, int keylen, uint8_t *iv, uint8_t *keystream);$/;"	t
rc4update	aircrack-ptw-lib.c	/^static uint8_t rc4update(rc4state * state) {$/;"	f	file:
rcpi	ieee802_11_defs.h	/^	u8 rcpi;$/;"	m	struct:rrm_link_measurement_report
readLine	common.c	/^int readLine(char line[], int maxlength)$/;"	f
read_ack	easside-ng.c	/^void read_ack(struct east_state *es, struct ieee80211_frame *wh, int len)$/;"	f
read_assoc_resp	easside-ng.c	/^void read_assoc_resp(struct east_state *es, struct ieee80211_frame *wh, int len)$/;"	f
read_auth	easside-ng.c	/^void read_auth(struct east_state *es, struct ieee80211_frame *wh, int len)$/;"	f
read_beacon	easside-ng.c	/^void read_beacon(struct east_state *es, struct ieee80211_frame *wh, int len)$/;"	f
read_buddy	easside-ng.c	/^void read_buddy(struct east_state *es)$/;"	f
read_buf	aircrack-ng.c	/^read_buf;$/;"	t	typeref:struct:__anon1	file:
read_ctl	easside-ng.c	/^void read_ctl(struct east_state *es, struct ieee80211_frame *wh, int len)$/;"	f
read_data	easside-ng.c	/^void read_data(struct east_state *es, struct ieee80211_frame *wh, int len)$/;"	f
read_deauth	easside-ng.c	/^void read_deauth(struct east_state *es, struct ieee80211_frame *wh, int len)$/;"	f
read_disassoc	easside-ng.c	/^void read_disassoc(struct east_state *es, struct ieee80211_frame *wh, int len)$/;"	f
read_line	airodump-ng.c	/^static int read_line(int sock, char *buffer, int pos, int size)$/;"	f	file:
read_mgt	easside-ng.c	/^void read_mgt(struct east_state *es, struct ieee80211_frame *wh, int len)$/;"	f
read_packet	airbase-ng.c	/^int read_packet(void *buf, size_t count)$/;"	f
read_packet	aireplay-ng.c	/^int read_packet(void *buf, size_t count, struct rx_info *ri)$/;"	f
read_packet	airtun-ng.c	/^int read_packet(void *buf, size_t count)$/;"	f
read_packet	tkiptun-ng.c	/^int read_packet(void *buf, size_t count, struct rx_info *ri)$/;"	f
read_packet	wesside-ng.c	/^static int read_packet(struct wstate *ws, unsigned char *dst, int len)$/;"	f	file:
read_packets	airdecloak-ng.c	/^BOOLEAN read_packets(void)$/;"	f
read_pkts	airodump-ng.h	/^int read_pkts=0;$/;"	v
read_prga	airbase-ng.c	/^int read_prga(unsigned char **dest, char *file)$/;"	f
read_prga	aireplay-ng.c	/^int read_prga(unsigned char **dest, char *file)$/;"	f
read_prga	airtun-ng.c	/^int read_prga(unsigned char **dest, char *file)$/;"	f
read_prga	packetforge-ng.c	/^int read_prga(unsigned char **dest, char *file)$/;"	f
read_prga	tkiptun-ng.c	/^int read_prga(unsigned char **dest, char *file)$/;"	f
read_raw_packet	packetforge-ng.c	/^int read_raw_packet(unsigned char* dest, char* srcfile, int length)$/;"	f
read_sleep	aireplay-ng.c	/^void read_sleep( unsigned long usec )$/;"	f
read_sleep	tkiptun-ng.c	/^void read_sleep( unsigned long usec )$/;"	f
read_tap	easside-ng.c	/^void read_tap(struct east_state *es)$/;"	f
read_thread	aircrack-ng.c	/^void read_thread( void *arg )$/;"	f
read_wifi	easside-ng.c	/^void read_wifi(struct east_state *es)$/;"	f
realloc	memdbg.h	142;"	d
realloc	memdbg.h	153;"	d
realloc	memory.c	69;"	d	file:
rearrange_frequencies	airodump-ng.c	/^int rearrange_frequencies()$/;"	f
reason	wi_packet.h	/^	uint16_t   reason; \/\/ 2 byte$/;"	m	struct:_wi_deauth_fixed
reason_code	ieee802_11_defs.h	/^			le16 reason_code;$/;"	m	struct:ieee80211_mgmt::__anon34::__anon36
reason_code	ieee802_11_defs.h	/^			le16 reason_code;$/;"	m	struct:ieee80211_mgmt::__anon34::__anon40
reassoc	aireplay-ng.c	/^    int reassoc;$/;"	m	struct:options	file:
reassoc_req	ieee802_11_defs.h	/^		} STRUCT_PACKED reassoc_req;$/;"	m	union:ieee80211_mgmt::__anon34	typeref:struct:ieee80211_mgmt::__anon34::__anon39
reassoc_resp	ieee802_11_defs.h	/^		} STRUCT_PACKED assoc_resp, reassoc_resp;$/;"	m	union:ieee80211_mgmt::__anon34	typeref:struct:ieee80211_mgmt::__anon34::__anon38
rec_size	aircrack-ng.h	/^	uint8_t rec_size;$/;"	m	struct:hashdb_rec
received	include/if_arp.h	/^	uint64_t received;	\/* # of ARP packets received by this host. *\/$/;"	m	struct:arpstat
record_data	airbase-ng.c	/^    int record_data;$/;"	m	struct:options	file:
record_data	airodump-ng.h	/^    int record_data;		\/* do we record data?   *\/$/;"	m	struct:globals
recv_cu	airsock.c	/^int recv_cu(int sock, uint8_t *buf, size_t buflen, int sec, int usec, int flag)$/;"	f
recv_pkt_count	aircapture.h	/^	uint64_t recv_pkt_count;$/;"	m	struct:_AIRCAP_G
recv_t	airsock.c	/^int recv_t(int sock, uint8_t *buf, size_t buflen,$/;"	f
recv_u	airsock.c	/^int recv_u(int sock, uint8_t *buf, size_t buflen,$/;"	f
redirect	easside-ng.c	/^void redirect(struct east_state *es, struct timeval *tv)$/;"	f
redirect_enque	easside-ng.c	/^void redirect_enque(struct east_state *es, struct ieee80211_frame *wh, int len)$/;"	f
redirect_sendfrag	easside-ng.c	/^void redirect_sendfrag(struct east_state *es, struct rpacket *rp)$/;"	f
redirect_sendip	easside-ng.c	/^void redirect_sendip(struct east_state *es, struct rpacket *rp)$/;"	f
remove_last_uncomplete_node	airdecloak-ng.c	/^void remove_last_uncomplete_node() {$/;"	f
remove_namac	airodump-ng.c	/^int remove_namac(unsigned char* mac)$/;"	f
remove_packet	easside-ng.c	/^void remove_packet(struct east_state *es, int id)$/;"	f
remove_tag	airbase-ng.c	/^int remove_tag(unsigned char *flags, unsigned char type, int *length)$/;"	f
remove_votes	aircrack-ng.c	/^int remove_votes(int keybyte, unsigned char value)$/;"	f
repeat	airtun-ng.c	/^    int repeat;$/;"	m	struct:options	file:
replace	hashtable.h	/^	int replace;$/;"	m	struct:_hash_ctx_t
replay_check	besside-ng.c	/^static void replay_check(void *a)$/;"	f	file:
req_mode	ieee802_11_defs.h	/^					u8 req_mode;$/;"	m	struct:ieee80211_mgmt::__anon34::__anon43::__anon44::__anon55
reserved	ieee802_11_defs.h	/^	u8 reserved; \/* 0 *\/$/;"	m	struct:wmm_parameter_element
reserved	ieee802_11_defs.h	/^	u8 reserved;$/;"	m	struct:p2ps_feature_capab
reserved	wi_packet.h	/^	uint16_t   reserved:9;$/;"	m	struct:_wi_ctrl_ba_control
reserved1	aircrack-ng.h	/^	uint8_t reserved1[3];$/;"	m	struct:hashdb_head
reset	easside-ng.c	/^void reset(struct east_state *es)$/;"	f
resetSelection	airodump-ng.c	/^void resetSelection()$/;"	f
reset_current_packet_pointer	airdecloak-ng.c	/^void reset_current_packet_pointer() {$/;"	f
reset_current_packet_pointer_to_ap_packet	airdecloak-ng.c	/^BOOLEAN reset_current_packet_pointer_to_ap_packet() {$/;"	f
reset_current_packet_pointer_to_client_packet	airdecloak-ng.c	/^BOOLEAN reset_current_packet_pointer_to_client_packet() {$/;"	f
reset_ifaces	aireplay-ng.c	/^int reset_ifaces()$/;"	f
reset_ifaces	tkiptun-ng.c	/^int reset_ifaces()$/;"	f
reset_term	airodump-ng.c	/^void reset_term() {$/;"	f
result_data_handler	aircapture-main.c	/^void result_data_handler(AIRCAP_G *g, void *data)$/;"	f
result_data_handler	wips-inspect.c	/^void result_data_handler(AIRCAP_G *g, void *data)$/;"	f
result_sample_data_handler	aircapture-main.c	/^void result_sample_data_handler(AIRCAP_G *g, void *data)$/;"	f
result_sample_data_handler	wips-inspect.c	/^void result_sample_data_handler(AIRCAP_G *g, void *data)$/;"	f
resume	besside-ng.c	/^static void resume(void)$/;"	f	file:
resume_network	besside-ng.c	/^static void resume_network(char *buf)$/;"	f	file:
retry	wi_packet.h	/^	uint8_t   retry:1;$/;"	m	struct:_wi_flags_t
retry_bit	airdecloak-ng.h	/^    int retry_bit;$/;"	m	struct:packet_elt
ri	aircapture.h	/^	struct rx_info ri;$/;"	m	struct:_AIRCAP_DATA	typeref:struct:_AIRCAP_DATA::rx_info
ri_antenna	osdep/osdep.h	/^        uint32_t ri_antenna;$/;"	m	struct:rx_info
ri_channel	osdep/osdep.h	/^        uint32_t ri_channel;$/;"	m	struct:rx_info
ri_freq	osdep/osdep.h	/^        uint32_t ri_freq;$/;"	m	struct:rx_info
ri_mactime	osdep/osdep.h	/^        uint64_t ri_mactime;$/;"	m	struct:rx_info
ri_noise	osdep/osdep.h	/^        int32_t ri_noise;$/;"	m	struct:rx_info
ri_power	osdep/osdep.h	/^        int32_t ri_power;$/;"	m	struct:rx_info
ri_rate	osdep/osdep.h	/^        uint32_t ri_rate;$/;"	m	struct:rx_info
right	crypto.h	/^    unsigned long right;$/;"	m	struct:Michael
ringbuffer	airbase-ng.c	/^    int ringbuffer;$/;"	m	struct:options	file:
ringbuffer	aireplay-ng.c	/^    int ringbuffer;$/;"	m	struct:options	file:
ringbuffer	tkiptun-ng.c	/^    int ringbuffer;$/;"	m	struct:options	file:
rm_list	memory.c	/^struct rm_list$/;"	s	file:
ror	simd-intrinsics.c	1693;"	d	file:
ror	simd-intrinsics.c	1750;"	d	file:
ror	simd-intrinsics.c	2274;"	d	file:
ror	simd-intrinsics.c	2331;"	d	file:
rot16_mask	sse-intrinsics.c	153;"	d	file:
rot16_mask	sse-intrinsics.c	167;"	d	file:
round0	sha1-sse2.S	/^round0:$/;"	l
round1	sha1-sse2.S	/^round1:$/;"	l
round2	sha1-sse2.S	/^round2:$/;"	l
round3	sha1-sse2.S	/^round3:$/;"	l
rp_id	easside-ng.c	/^	int		rp_id;$/;"	m	struct:rpacket	file:
rp_len	easside-ng.c	/^	int		rp_len;$/;"	m	struct:rpacket	file:
rp_next	easside-ng.c	/^	struct rpacket	*rp_next;$/;"	m	struct:rpacket	typeref:struct:rpacket::rpacket	file:
rp_packet	easside-ng.c	/^	unsigned char	rp_packet[2048];$/;"	m	struct:rpacket	file:
rpacket	easside-ng.c	/^struct rpacket {$/;"	s	file:
rrm	ieee802_11_defs.h	/^				} STRUCT_PACKED rrm;$/;"	m	union:ieee80211_mgmt::__anon34::__anon43::__anon44	typeref:struct:ieee80211_mgmt::__anon34::__anon43::__anon44::__anon60
rrm_link_measurement_report	ieee802_11_defs.h	/^struct rrm_link_measurement_report {$/;"	s
rrm_link_measurement_request	ieee802_11_defs.h	/^struct rrm_link_measurement_request {$/;"	s
rsni	ieee802_11_defs.h	/^	u8 rsni;$/;"	m	struct:rrm_link_measurement_report
rtap_namespace_sizes	osdep/radiotap/radiotap.c	/^static const struct radiotap_align_size rtap_namespace_sizes[] = {$/;"	v	typeref:struct:radiotap_align_size	file:
rtc	aireplay-ng.c	/^    int rtc;$/;"	m	struct:options	file:
rts_r	airodump-ng.h	/^    int rts_r;               \/* number of RTS frames (rx) *\/$/;"	m	struct:NA_info
rts_t	airodump-ng.h	/^    int rts_t;               \/* number of RTS frames (tx) *\/$/;"	m	struct:NA_info
rx_ant_id	ieee802_11_defs.h	/^	u8 rx_ant_id;$/;"	m	struct:rrm_link_measurement_report
rx_highest	ieee802_11_defs.h	/^		le16 rx_highest;$/;"	m	struct:ieee80211_vht_capabilities::__anon61
rx_info	osdep/osdep.h	/^struct rx_info {$/;"	s
rx_map	ieee802_11_defs.h	/^		le16 rx_map;$/;"	m	struct:ieee80211_vht_capabilities::__anon61
rx_quality	airnodes.c	/^	int rx_quality;               \/* percent of captured beacons   *\/$/;"	m	struct:AP_INFO	file:
rx_quality	airodump-ng.h	/^    int    rx_quality;        \/* percent of captured beacons *\/$/;"	m	struct:AP_info
rxreplies	include/if_arp.h	/^	uint64_t rxreplies;	\/* # of ARP replies received by this host. *\/$/;"	m	struct:arpstat
rxrequests	include/if_arp.h	/^	uint64_t rxrequests;	\/* # of ARP requests received by this host. *\/$/;"	m	struct:arpstat
s	MD5_std.h	/^		int p, s, ps, pp, psp;$/;"	m	struct:__anon28::__anon29
s	MD5_std.h	/^	char s[8];$/;"	m	struct:__anon28
s	aircrack-ptw-lib.c	/^	uint32_t s[n];$/;"	m	struct:__anon22	file:
s	ezxml/ezxml.c	/^    char *s;              \/\/ start of work area$/;"	m	struct:ezxml_root	file:
s0	simd-intrinsics.c	1626;"	d	file:
s0	simd-intrinsics.c	2196;"	d	file:
s0	simd-intrinsics.c	2197;"	d	file:
s0	simd-intrinsics.c	2205;"	d	file:
s0	simd-intrinsics.c	2206;"	d	file:
s0	sse-intrinsics.c	1496;"	d	file:
s0	sse-intrinsics.c	1878;"	d	file:
s0	sse-intrinsics.c	1879;"	d	file:
s1	simd-intrinsics.c	1637;"	d	file:
s1	simd-intrinsics.c	2200;"	d	file:
s1	simd-intrinsics.c	2201;"	d	file:
s1	simd-intrinsics.c	2217;"	d	file:
s1	simd-intrinsics.c	2218;"	d	file:
s1	sse-intrinsics.c	1507;"	d	file:
s1	sse-intrinsics.c	1890;"	d	file:
s1	sse-intrinsics.c	1891;"	d	file:
s16	ieee802_11_defs.h	/^typedef int16_t s16;$/;"	t
s32	ieee802_11_defs.h	/^typedef int32_t s32;$/;"	t
s32	pseudo_intrinsics.h	/^	uint32_t s32[SIMD_COEF_32];$/;"	m	union:__anon25
s64	ieee802_11_defs.h	/^typedef int64_t s64;$/;"	t
s64	pseudo_intrinsics.h	/^	uint64_t s64[SIMD_COEF_64];$/;"	m	union:__anon25
s8	ieee802_11_defs.h	/^typedef int8_t s8;$/;"	t
s_chan	besside-ng.c	/^	int		s_chan;$/;"	m	struct:state	file:
s_curnet	besside-ng.c	/^	struct network	*s_curnet;$/;"	m	struct:state	typeref:struct:state::network	file:
s_face	airbase-ng.c	/^    char *s_face;$/;"	m	struct:options	file:
s_face	aireplay-ng.c	/^    char *s_face;$/;"	m	struct:options	file:
s_face	airtun-ng.c	/^    char *s_face;$/;"	m	struct:options	file:
s_face	tkiptun-ng.c	/^    char *s_face;$/;"	m	struct:options	file:
s_file	airbase-ng.c	/^    char *s_file;$/;"	m	struct:options	file:
s_file	aireplay-ng.c	/^    char *s_file;$/;"	m	struct:options	file:
s_file	airodump-ng.h	/^    char*   s_file;         \/* source file to read packets *\/$/;"	m	struct:globals
s_file	airtun-ng.c	/^    char *s_file;$/;"	m	struct:options	file:
s_file	tkiptun-ng.c	/^    char *s_file;$/;"	m	struct:options	file:
s_hopchan	besside-ng.c	/^	struct channel	*s_hopchan;$/;"	m	struct:state	typeref:struct:state::channel	file:
s_hopcycles	besside-ng.c	/^	unsigned int	s_hopcycles;$/;"	m	struct:state	file:
s_iface	airodump-ng.h	/^    char*   s_iface;        \/* source interface to read from *\/$/;"	m	struct:globals
s_mac	besside-ng.c	/^	unsigned char	s_mac[6];$/;"	m	struct:state	file:
s_networks	besside-ng.c	/^	struct network	s_networks;$/;"	m	struct:state	typeref:struct:state::network	file:
s_now	besside-ng.c	/^	struct timeval	s_now;$/;"	m	struct:state	typeref:struct:state::timeval	file:
s_num	besside-ng.c	/^	unsigned int	s_num;$/;"	m	struct:speed	file:
s_ri	besside-ng.c	/^	struct rx_info	*s_ri;$/;"	m	struct:state	typeref:struct:state::rx_info	file:
s_speed	besside-ng.c	/^	unsigned int	s_speed;$/;"	m	struct:speed	file:
s_start	besside-ng.c	/^	struct timeval	s_start;$/;"	m	struct:speed	typeref:struct:speed::timeval	file:
s_start	besside-ng.c	/^	struct timeval	s_start;$/;"	m	struct:state	typeref:struct:state::timeval	file:
s_state	besside-ng.c	/^	int		s_state;$/;"	m	struct:state	file:
s_timers	besside-ng.c	/^	struct timer	s_timers;$/;"	m	struct:state	typeref:struct:state::timer	file:
s_wepfd	besside-ng.c	/^	int		s_wepfd;$/;"	m	struct:state	file:
s_wi	besside-ng.c	/^	struct wif	*s_wi;$/;"	m	struct:state	typeref:struct:state::wif	file:
s_wpafd	besside-ng.c	/^	int		s_wpafd;$/;"	m	struct:state	file:
sa	ieee802_11_defs.h	/^	u8 sa[6];$/;"	m	struct:ieee80211_mgmt
sa_query_req	ieee802_11_defs.h	/^				} STRUCT_PACKED sa_query_req;$/;"	m	union:ieee80211_mgmt::__anon34::__anon43::__anon44	typeref:struct:ieee80211_mgmt::__anon34::__anon43::__anon44::__anon49
sa_query_resp	ieee802_11_defs.h	/^				} STRUCT_PACKED sa_query_resp;$/;"	m	union:ieee80211_mgmt::__anon34::__anon43::__anon44	typeref:struct:ieee80211_mgmt::__anon34::__anon43::__anon44::__anon50
safe_read	aircrack-ng.c	/^int safe_read( int fd, void *buf, size_t len )$/;"	f
safe_write	aircrack-ng.c	/^int safe_write( int fd, void *buf, size_t len )$/;"	f
sample_hash_compare	aircapture.c	/^static int sample_hash_compare(const void *a, const void *b)$/;"	f	file:
sample_hash_free	aircapture.c	/^static void sample_hash_free(void *a)$/;"	f	file:
sample_hash_func	aircapture.c	/^static int sample_hash_func(const void *a)$/;"	f	file:
sample_hash_op	aircapture.c	/^static hash_op sample_hash_op = {$/;"	v	file:
sampling_hash_ctx	aircapture.h	/^	hash_ctx_t *sampling_hash_ctx;$/;"	m	struct:_AIRCAP_G
sampling_sec	aircapture.h	/^	int sampling_sec;$/;"	m	struct:_AIRCAP_G
sanitize_xml	airodump-ng.c	/^char * sanitize_xml(unsigned char * text, int length)$/;"	f
save_gps	airodump-ng.h	/^    int save_gps;           \/* keep gps file flag   *\/$/;"	m	struct:globals
save_key	wesside-ng.c	/^static void save_key(unsigned char *key, int len)$/;"	f	file:
save_log	besside-ng.c	/^static void save_log(void)$/;"	f	file:
save_network	besside-ng.c	/^static void save_network(FILE *f, struct network *n)$/;"	f	file:
save_network	wpaclean.c	/^static void save_network(struct network *n)$/;"	f	file:
save_prga	aireplay-ng.c	/^void save_prga(char *filename, unsigned char *iv, unsigned char *prga, int prgalen)$/;"	f
save_prga	easside-ng.c	/^void save_prga(struct east_state *es)$/;"	f
save_prga	tkiptun-ng.c	/^void save_prga(char *filename, unsigned char *iv, unsigned char *prga, int prgalen)$/;"	f
scan_active_dwell	ieee802_11_defs.h	/^	le16 scan_active_dwell;$/;"	m	struct:ieee80211_obss_scan_parameters
scan_active_total_per_channel	ieee802_11_defs.h	/^	le16 scan_active_total_per_channel;$/;"	m	struct:ieee80211_obss_scan_parameters
scan_activity_threshold	ieee802_11_defs.h	/^	le16 scan_activity_threshold;$/;"	m	struct:ieee80211_obss_scan_parameters
scan_passive_dwell	ieee802_11_defs.h	/^	le16 scan_passive_dwell;$/;"	m	struct:ieee80211_obss_scan_parameters
scan_passive_total_per_channel	ieee802_11_defs.h	/^	le16 scan_passive_total_per_channel;$/;"	m	struct:ieee80211_obss_scan_parameters
scan_start	besside-ng.c	/^static void scan_start(void)$/;"	f	file:
schan	include/ieee80211.h	/^	u_int8_t schan;			\/* starting channel *\/$/;"	m	struct:ieee80211_band
searchInside	osdep/linux.c	/^static char * searchInside(const char * dir, const char * filename)$/;"	f	file:
security	airnodes.c	/^	int security;                 \/* ENC_*, AUTH_*, STD_*          *\/$/;"	m	struct:AP_INFO	file:
security	airodump-ng.h	/^    int security;             \/* ENC_*, AUTH_*, STD_*     *\/$/;"	m	struct:AP_info
seen	common.h	/^	boolean seen;$/;"	m	struct:mac_seen_t
seen_iv	aircrack-ptw-lib.h	/^        uint8_t seen_iv[PTW_IVTABLELEN];$/;"	m	struct:__anon71
selected_ap	airodump-ng.h	/^    int selected_ap;$/;"	m	struct:globals
selected_bssid	airodump-ng.h	/^    unsigned char selected_bssid[6];	\/* bssid that is selected *\/$/;"	m	struct:globals
selected_pairwise_suite	ieee802_11_defs.h	/^	u8 selected_pairwise_suite[4];$/;"	m	struct:ieee80211_ampe_ie
selected_sta	airodump-ng.h	/^    int selected_sta;$/;"	m	struct:globals
selection_ap	airodump-ng.h	/^    int selection_ap;$/;"	m	struct:globals
selection_sta	airodump-ng.h	/^    int selection_sta;$/;"	m	struct:globals
self	log.h	/^	struct _LOG_CTX *self;$/;"	m	struct:_LOG_CTX	typeref:struct:_LOG_CTX::_LOG_CTX
send_ack	wesside-ng.c	/^static void send_ack(struct wstate *ws)$/;"	f	file:
send_arp	wesside-ng.c	/^static void send_arp(struct wstate *ws, unsigned short op, char* srcip,$/;"	f	file:
send_assoc	easside-ng.c	/^void send_assoc(struct east_state *es, struct timeval *tv)$/;"	f
send_assoc	wesside-ng.c	/^static void send_assoc(struct wstate *ws)$/;"	f	file:
send_auth	besside-ng.c	/^static void send_auth(struct network *n)$/;"	f	file:
send_auth	easside-ng.c	/^void send_auth(struct east_state *es, struct timeval *tv)$/;"	f
send_auth	wesside-ng.c	/^static void send_auth(struct wstate *ws)$/;"	f	file:
send_cu	airsock.c	/^int send_cu(int sock, uint8_t *buf, size_t buflen, int sec, int usec, int flag)$/;"	f
send_fragment	wesside-ng.c	/^static void send_fragment(struct wstate *ws, struct frag_state* fs,$/;"	f	file:
send_fragments	aireplay-ng.c	/^void send_fragments(unsigned char *packet, int packet_len, unsigned char *iv, unsigned char *keystream, int fragsize, int ska)$/;"	f
send_fragments	tkiptun-ng.c	/^void send_fragments(unsigned char *packet, int packet_len, unsigned char *iv, unsigned char *keystream, int fragsize, int ska)$/;"	f
send_frame	easside-ng.c	/^void send_frame(struct east_state *es, void *buf, int len)$/;"	f
send_frame	wesside-ng.c	/^static void send_frame(struct wstate *ws, unsigned char* buf, int len)$/;"	f	file:
send_interval	airshooter.h	/^	int send_interval; \/\/ usec$/;"	m	struct:_AIRSHOOT_G
send_msg	airsock.c	/^int send_msg(int sock, struct msghdr *msgh,$/;"	f
send_packet	airbase-ng.c	/^int send_packet(void *buf, size_t count)$/;"	f
send_packet	aireplay-ng.c	/^int send_packet(void *buf, size_t count)$/;"	f
send_packet	airtun-ng.c	/^int send_packet(void *buf, size_t count)$/;"	f
send_packet	tkiptun-ng.c	/^int send_packet(void *buf, size_t count)$/;"	f
send_probe_request	airodump-ng.c	/^int send_probe_request(struct wif *wi)$/;"	f
send_probe_requests	airodump-ng.c	/^int send_probe_requests(struct wif *wi[], int cards)$/;"	f
send_t	airsock.c	/^int send_t(int sock, uint8_t *buf, size_t buflen,$/;"	f
send_u	airsock.c	/^int send_u(int sock, uint8_t *buf, size_t buflen,$/;"	f
send_whohas	easside-ng.c	/^void send_whohas(struct east_state *es, struct timeval *tv)$/;"	f
sendeapol	airbase-ng.c	/^    int sendeapol;$/;"	m	struct:options	file:
seq	wi_packet.h	/^	uint16_t   seq;       \/\/ 2 byte$/;"	m	struct:_wi_auth_fixed
seq_ctrl	ieee802_11_defs.h	/^	le16 seq_ctrl;$/;"	m	struct:ieee80211_hdr
seq_ctrl	ieee802_11_defs.h	/^	le16 seq_ctrl;$/;"	m	struct:ieee80211_mgmt
seq_number	wi_packet.h	/^	uint16_t    seq_number:12;$/;"	m	struct:_wi_fragseq_t
sequence	airbase-ng.c	/^    unsigned short  sequence;$/;"	m	struct:Fragment_list	file:
sequence	airtun-ng.c	/^    unsigned short  sequence;$/;"	m	struct:Fragment_list	file:
sequence_number	airdecloak-ng.h	/^    int sequence_number;$/;"	m	struct:packet_elt
serv	airserv-ng.c	/^static void serv(struct sstate *ss, char *dev, int port, int chan)$/;"	f	file:
service_start_time	ieee802_11_defs.h	/^	le32 service_start_time;$/;"	m	struct:wmm_tspec_element
sessions	aircrack-ptw-lib.h	/^        PTW_session sessions[PTW_CONTROLSESSIONS];$/;"	m	struct:__anon71
sessions_collected	aircrack-ptw-lib.h	/^        int sessions_collected;$/;"	m	struct:__anon71
set	aireplay-ng.c	/^    unsigned char set;$/;"	m	struct:APt	file:
set	tkiptun-ng.c	/^    unsigned char set;$/;"	m	struct:APt	file:
setW	sha1-git.c	89;"	d	file:
setW	sha1-git.c	91;"	d	file:
setW	sha1-git.c	93;"	d	file:
setWEP	airbase-ng.c	/^    int setWEP;$/;"	m	struct:options	file:
set_IVidx	airbase-ng.c	/^int set_IVidx(unsigned char* packet)$/;"	f
set_IVidx	airtun-ng.c	/^int set_IVidx(unsigned char* packet, int data_begin)$/;"	f
set_IVidx	packetforge-ng.c	/^int set_IVidx(unsigned char* packet)$/;"	f
set_bitrate	aireplay-ng.c	/^int set_bitrate(struct wif *wi, int rate)$/;"	f
set_bitrate	tkiptun-ng.c	/^int set_bitrate(struct wif *wi, int rate)$/;"	f
set_bssid	packetforge-ng.c	/^int set_bssid(unsigned char* packet)$/;"	f
set_chan	easside-ng.c	/^void set_chan(struct east_state *es)$/;"	f
set_chan	wesside-ng.c	/^static void set_chan(struct wstate *ws, int c)$/;"	f	file:
set_clear_arp	airbase-ng.c	/^int set_clear_arp(unsigned char *buf, unsigned char *smac, unsigned char *dmac) \/\/set first 22 bytes$/;"	f
set_clear_arp	aireplay-ng.c	/^int set_clear_arp(unsigned char *buf, unsigned char *smac, unsigned char *dmac) \/\/set first 22 bytes$/;"	f
set_clear_arp	tkiptun-ng.c	/^int set_clear_arp(unsigned char *buf, unsigned char *smac, unsigned char *dmac) \/\/set first 22 bytes$/;"	f
set_clear_ip	airbase-ng.c	/^int set_clear_ip(unsigned char *buf, int ip_len) \/\/set first 9 bytes$/;"	f
set_clear_ip	aireplay-ng.c	/^int set_clear_ip(unsigned char *buf, int ip_len) \/\/set first 9 bytes$/;"	f
set_clear_ip	tkiptun-ng.c	/^int set_clear_ip(unsigned char *buf, int ip_len) \/\/set first 9 bytes$/;"	f
set_dicts	aircrack-ng.c	/^int set_dicts(char* optargs)$/;"	f
set_dip	packetforge-ng.c	/^int set_dip(unsigned char* packet, int offset)$/;"	f
set_dmac	packetforge-ng.c	/^int set_dmac(unsigned char* packet)$/;"	f
set_dport	packetforge-ng.c	/^int set_dport(unsigned char* packet)$/;"	f
set_encryption_filter	airodump-ng.c	/^int set_encryption_filter(const char* input)$/;"	f
set_entry	airtun-ng.c	/^void set_entry(unsigned char *adress, unsigned char network) {$/;"	f
set_final_arp	airbase-ng.c	/^int set_final_arp(unsigned char *buf, unsigned char *mymac)$/;"	f
set_final_arp	aireplay-ng.c	/^int set_final_arp(unsigned char *buf, unsigned char *mymac)$/;"	f
set_final_ip	airbase-ng.c	/^int set_final_ip(unsigned char *buf, unsigned char *mymac)$/;"	f
set_final_ip	aireplay-ng.c	/^int set_final_ip(unsigned char *buf, unsigned char *mymac)$/;"	f
set_ip_ttl	packetforge-ng.c	/^int set_ip_ttl(unsigned char* packet)$/;"	f
set_ipid	packetforge-ng.c	/^int set_ipid(unsigned char* packet, int offset)$/;"	f
set_keepalive	airsock.c	/^int set_keepalive(int sock, int keep_count, int keep_idle, int keep_interval) {$/;"	f
set_key	wpapsk.c	/^static void set_key(char *key, int index, wpapsk_password *in)$/;"	f	file:
set_mac	besside-ng.c	/^static void set_mac(void *mac)$/;"	f	file:
set_mac	easside-ng.c	/^void set_mac(struct east_state *es)$/;"	f
set_monitor	osdep/linux.c	/^int set_monitor( struct priv_linux *dev, char *iface, int fd )$/;"	f
set_node_complete	airdecloak-ng.c	/^void set_node_complete() {$/;"	f
set_prga	wesside-ng.c	/^static void set_prga(struct wstate *ws, unsigned char* iv,$/;"	f	file:
set_rst_close	airsock.c	/^int set_rst_close(int sock) {$/;"	f
set_sip	packetforge-ng.c	/^int set_sip(unsigned char* packet, int offset)$/;"	f
set_smac	packetforge-ng.c	/^int set_smac(unsigned char* packet)$/;"	f
set_sport	packetforge-ng.c	/^int set_sport(unsigned char* packet)$/;"	f
set_tap_ip	easside-ng.c	/^void set_tap_ip(struct east_state *es)$/;"	f
set_tofromds	packetforge-ng.c	/^int set_tofromds(unsigned char* packet)$/;"	f
setup_card	airodump-ng.c	/^int setup_card(char *iface, struct wif **wis)$/;"	f
setup_internet	easside-ng.c	/^void setup_internet(struct east_state *es)$/;"	f
setup_wifi_card	wifi_setup.c	/^int setup_wifi_card(char *iface, struct wif **wi)$/;"	f
sha1_reverse	simd-intrinsics.c	/^void sha1_reverse(uint32_t *hash)$/;"	f
sha1_unreverse	simd-intrinsics.c	/^void sha1_unreverse(uint32_t *hash)$/;"	f
sha224_reverse	simd-intrinsics.c	/^void sha224_reverse(uint32_t *hash)$/;"	f
sha224_unreverse	simd-intrinsics.c	/^void sha224_unreverse(uint32_t *hash)$/;"	f
sha256_reverse	simd-intrinsics.c	/^void sha256_reverse(uint32_t *hash)$/;"	f
sha256_unreverse	simd-intrinsics.c	/^void sha256_unreverse()$/;"	f
sha384_reverse	simd-intrinsics.c	/^void sha384_reverse(ARCH_WORD_64 *hash)$/;"	f
sha384_unreverse	simd-intrinsics.c	/^void sha384_unreverse(ARCH_WORD_64 *hash)$/;"	f
sha512_reverse	simd-intrinsics.c	/^void sha512_reverse(uint64_t *hash)$/;"	f
sha512_unreverse	simd-intrinsics.c	/^void sha512_unreverse()$/;"	f
sharedkey	airbase-ng.c	/^    unsigned char sharedkey[3][4096]; \/* array for 3 packets with a size of \\$/;"	m	struct:options	file:
sharedkey	airodump-ng.h	/^    unsigned char sharedkey[3][4096]; \/* array for 3 packets with a size of \\$/;"	m	struct:globals
shasse2_cpuid	sha1-sse2.S	/^ shasse2_cpuid:$/;"	l
shasse2_data	sha1-sse2.S	/^ shasse2_data:$/;"	l
shasse2_ends	sha1-sse2.S	/^ shasse2_ends:$/;"	l
shasse2_init	sha1-sse2.S	/^ shasse2_init:$/;"	l
shoot_handler	airshooter-main.c	/^static void shoot_handler(AIRSHOOT_G *g, void *data)$/;"	f	file:
shoot_handler	wips-inspect.c	/^void shoot_handler(AIRSHOOT_G *g, void *data)$/;"	f
shoot_tv	airshooter.h	/^	elapsed_tv shoot_tv;$/;"	m	struct:_AIRSHOOT_RESULT
shooter_g	wips-inspect.c	/^static AIRSHOOT_G shooter_g;$/;"	v	file:
shooter_time	airshooter.h	/^	int shooter_time;$/;"	m	struct:_AIRSHOOT_G
short_preamble	wi_packet.h	/^	uint16_t   short_preamble:1;$/;"	m	struct:_wi_beacon_capa_flag
short_slot_time	wi_packet.h	/^	uint16_t   short_slot_time:1;$/;"	m	struct:_wi_beacon_capa_flag
should_attack	besside-ng.c	/^static int should_attack(struct network *n)$/;"	f	file:
showASCII	aircrack-ng.h	/^	int showASCII;				 \/* Show ASCII version of*\/$/;"	m	struct:options
show_ack	airodump-ng.h	/^    int show_ack;$/;"	m	struct:globals
show_ap	airodump-ng.h	/^    int show_ap;$/;"	m	struct:globals
show_manufacturer	airodump-ng.h	/^    int show_manufacturer;$/;"	m	struct:globals
show_result	sha1-sse2.h	/^void show_result(char* key, unsigned char* pmk)$/;"	f
show_sta	airodump-ng.h	/^    int show_sta;$/;"	m	struct:globals
show_stats	airolib-ng.c	/^void show_stats(sqlite3* db, int precise) {$/;"	f
show_uptime	airodump-ng.h	/^    int show_uptime;$/;"	m	struct:globals
show_wep_stats	aircrack-ng.c	/^void show_wep_stats( int B, int force, PTW_tableentry table[PTW_KEYHSBYTES][PTW_n], int choices[KEYHSBYTES], int depth[KEYHSBYTES], int prod )$/;"	f
show_wep_stats	besside-ng.c	/^void show_wep_stats(int UNUSED(B), int UNUSED(force),$/;"	f
show_wep_stats	wesside-ng.c	/^void show_wep_stats( int B, int force, PTW_tableentry table[PTW_KEYHSBYTES][PTW_n], int choices[KEYHSBYTES], int depth[KEYHSBYTES], int prod, int keylimit )$/;"	f
show_wpa_stats	aircrack-ng.c	/^void show_wpa_stats( char *key, int keylen, unsigned char pmk[32], unsigned char ptk[64],$/;"	f
show_wps	airodump-ng.h	/^    int show_wps;$/;"	m	struct:globals
sibling	ezxml/ezxml.h	/^    ezxml_t sibling; \/\/ next tag with different name in same section and depth$/;"	m	struct:ezxml
sigchild	wesside-ng.c	/^static void sigchild(int x)$/;"	f	file:
sigfigs	pcap.h	/^    uint32_t sigfigs;$/;"	m	struct:pcap_file_header
sighand	easside-ng.c	/^void sighand(int sig)$/;"	f
sighandler	airbase-ng.c	/^void sighandler( int signum )$/;"	f
sighandler	aircapture-main.c	/^void sighandler(int signum)$/;"	f
sighandler	aircrack-ng.c	/^void sighandler( int signum )$/;"	f
sighandler	aireplay-ng.c	/^void sighandler( int signum )$/;"	f
sighandler	airodump-ng.c	/^void sighandler( int signum)$/;"	f
sighandler	airserv-ng.c	/^void sighandler( int signum )$/;"	f
sighandler	airshooter-main.c	/^void sighandler(int signum)$/;"	f
sighandler	airtun-ng.c	/^void sighandler( int signum )$/;"	f
sighandler	tkiptun-ng.c	/^void sighandler( int signum )$/;"	f
sighandler	wips-inspect.c	/^void sighandler(int signum)$/;"	f
signal_quality	airdecloak-ng.h	/^    int signal_quality;$/;"	m	struct:packet_elt
simdsize	aircrack-ng.h	/^	int simdsize;				\/* SIMD size		*\/$/;"	m	struct:_cpuinfo
singlechan	airodump-ng.h	/^    int singlechan;         \/* channel hopping set 1*\/$/;"	m	struct:globals
singlefreq	airodump-ng.h	/^    int singlefreq;         \/* frequency hopping: 1 *\/$/;"	m	struct:globals
sip	packetforge-ng.c	/^    unsigned char sip[4];$/;"	m	struct:options	file:
size	osdep/radiotap/radiotap_iter.h	/^	uint8_t align:4, size:4;$/;"	m	struct:radiotap_align_size
size	osdep/radiotap/radiotap_iter.h	/^	uint8_t align:4, size:4;$/;"	m	struct:radiotap_override
size	packetforge-ng.c	/^    int size;$/;"	m	struct:options	file:
size	sha1-git.h	/^	unsigned long long size;$/;"	m	struct:__anon15
sk_len	airbase-ng.c	/^    int sk_len;$/;"	m	struct:options	file:
sk_len	airodump-ng.h	/^    int sk_len;$/;"	m	struct:globals
sk_len2	airbase-ng.c	/^    int sk_len2;$/;"	m	struct:options	file:
sk_len2	airodump-ng.h	/^    int sk_len2;$/;"	m	struct:globals
sk_start	airbase-ng.c	/^    time_t sk_start;$/;"	m	struct:options	file:
sk_start	airodump-ng.h	/^    time_t sk_start;$/;"	m	struct:globals
ska_auth1	aireplay-ng.c	/^unsigned char ska_auth1[]     = "\\xb0\\x00\\x3a\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00"$/;"	v
ska_auth1	tkiptun-ng.c	/^unsigned char ska_auth1[]     = "\\xb0\\x00\\x3a\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00"$/;"	v
ska_auth3	aireplay-ng.c	/^unsigned char ska_auth3[4096] = "\\xb0\\x40\\x3a\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00"$/;"	v
ska_auth3	tkiptun-ng.c	/^unsigned char ska_auth3[4096] = "\\xb0\\x40\\x3a\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00"$/;"	v
skalen	airbase-ng.c	/^    int skalen;$/;"	m	struct:options	file:
skip_columns	airodump-ng.h	/^    int skip_columns;$/;"	m	struct:globals
slf_prot_action	ieee802_11_defs.h	/^				} STRUCT_PACKED slf_prot_action;$/;"	m	union:ieee80211_mgmt::__anon34::__anon43::__anon44	typeref:struct:ieee80211_mgmt::__anon34::__anon43::__anon44::__anon58
smac	packetforge-ng.c	/^    unsigned char smac[6];$/;"	m	struct:options	file:
snaplen	pcap.h	/^    uint32_t snaplen;$/;"	m	struct:pcap_file_header
snonce	crypto.h	/^    unsigned char snonce[32];           \/* supplicant nonce             *\/$/;"	m	struct:WPA_ST_info
snonce	include/eapol.h	/^    uint8_t snonce[32];   \/* supplicant nonce         *\/$/;"	m	struct:WPA_hdsk
sort_by	airodump-ng.h	/^    int sort_by;$/;"	m	struct:globals
sort_inv	airodump-ng.h	/^    int sort_inv;$/;"	m	struct:globals
sort_tag	airconf-parse.c	/^tag_conf* sort_tag(tag_conf *tag)$/;"	f
sorthelper	aircrack-ptw-lib.c	/^} sorthelper;$/;"	t	typeref:struct:__anon23	file:
source	airbase-ng.c	/^    unsigned char   source[6];$/;"	m	struct:Fragment_list	file:
source	airdecloak-ng.h	/^    unsigned char  source[6];$/;"	m	struct:packet_elt
source	airtun-ng.c	/^    unsigned char   source[6];$/;"	m	struct:Fragment_list	file:
sp	MD5_std.h	/^		MD5_block p, sp, pp, spp;$/;"	m	struct:__anon28::__anon30
spec_mgnt	wi_packet.h	/^	uint16_t   spec_mgnt:1;$/;"	m	struct:_wi_beacon_capa_flag
speed	besside-ng.c	/^struct speed {$/;"	s	file:
speed_add	besside-ng.c	/^static void speed_add(struct speed *s)$/;"	f	file:
speed_calculate	besside-ng.c	/^static void speed_calculate(struct speed *s)$/;"	f	file:
sport	packetforge-ng.c	/^    unsigned short sport;$/;"	m	struct:options	file:
spp	MD5_std.h	/^		MD5_block p, sp, pp, spp;$/;"	m	struct:__anon28::__anon30
sprintcat	cpuid.c	/^void sprintcat(char *dest, const char *src, size_t len) {$/;"	f
sql_calcpmk	airolib-ng.c	/^void sql_calcpmk(sqlite3_context* context, int argc, sqlite3_value** values) {$/;"	f
sql_error	airolib-ng.c	/^void sql_error(sqlite3* db) {$/;"	f
sql_exec	airolib-ng.c	/^int sql_exec(sqlite3* db, const char *sql) {$/;"	f
sql_exec_cb	airolib-ng.c	/^int sql_exec_cb(sqlite3* db, const char *sql, void* callback, void* cb_arg) {$/;"	f
sql_exportcow	airolib-ng.c	/^int sql_exportcow(void* arg, int ccount, char** values, char** columnnames) {$/;"	f
sql_prepare	airolib-ng.c	/^int sql_prepare(sqlite3 *db, const char *sql, sqlite3_stmt **ppStmt, int wait) {$/;"	f
sql_stdout	airolib-ng.c	/^int sql_stdout(sqlite3* db, const char* sql, int* rowcount) {$/;"	f
sql_step	airolib-ng.c	/^int sql_step(sqlite3_stmt* stmt, int wait) {$/;"	f
sql_verify_essid	airolib-ng.c	/^void sql_verify_essid(sqlite3_context* context, int argc, sqlite3_value** values) {$/;"	f
sql_verify_passwd	airolib-ng.c	/^void sql_verify_passwd(sqlite3_context* context, int argc, sqlite3_value** values) {$/;"	f
sql_wpacallback	aircrack-ng.c	/^int sql_wpacallback(void* arg, int ccount, char** values, char** columnnames ) {$/;"	f
sqlite_regexp	airolib-ng.c	/^void sqlite_regexp(sqlite3_context* context, int argc, sqlite3_value** values) {$/;"	f
srand	common.h	47;"	d
srand	common.h	48;"	d
srcbuf	airbase-ng.c	/^unsigned char srcbuf[4096];$/;"	v
srcbuf	aireplay-ng.c	/^unsigned char srcbuf[4096];$/;"	v
srcbuf	airtun-ng.c	/^unsigned char srcbuf[4096];$/;"	v
srcbuf	tkiptun-ng.c	/^unsigned char srcbuf[4096];$/;"	v
ss_clients	airserv-ng.c	/^	struct client	ss_clients;$/;"	m	struct:sstate	typeref:struct:sstate::client	file:
ss_level	airserv-ng.c	/^	int		ss_level;$/;"	m	struct:sstate	file:
ss_s	airserv-ng.c	/^	int		ss_s;$/;"	m	struct:sstate	file:
ss_wi	airserv-ng.c	/^	struct wif	*ss_wi;$/;"	m	struct:sstate	typeref:struct:sstate::wif	file:
ssap	wi_packet.h	/^	uint8_t ssap;$/;"	m	struct:_wi_data_llc
ssid	aircapture.h	/^	el *ssid;$/;"	m	struct:el_list
ssid	aircrack-ng.h	/^	uint8_t ssid[32];$/;"	m	struct:hashdb_head
ssid_length	airbase-ng.c	/^    int ssid_length[NB_PRB]; \/* ssid lengths ring buffer  *\/$/;"	m	struct:ST_info	file:
ssid_length	airnodes.c	/^	int ssid_length;              \/* length of ssid                *\/$/;"	m	struct:AP_INFO	file:
ssid_length	airnodes.c	/^	int ssid_length[NB_PRB]; \/* ssid lengths ring buffer  *\/$/;"	m	struct:STA_INFO	file:
ssid_length	airodump-ng.h	/^    int ssid_length;          \/* length of ssid           *\/$/;"	m	struct:AP_info
ssid_length	airodump-ng.h	/^    int ssid_length[NB_PRB]; \/* ssid lengths ring buffer  *\/$/;"	m	struct:ST_info
ssid_length	ivstools.c	/^    int ssid_length;          \/* length of ssid           *\/$/;"	m	struct:AP_info	file:
ssidlen	aircrack-ng.h	/^	uint8_t ssidlen;$/;"	m	struct:hashdb_head
sstate	airserv-ng.c	/^static struct sstate {$/;"	s	file:
st_1st	airbase-ng.c	/^    struct ST_info *st_1st, *st_end;$/;"	m	struct:options	typeref:struct:options::ST_info	file:
st_1st	aircrack-ng.h	/^	struct ST_info *st_1st;		 \/* linked list of stations      *\/$/;"	m	struct:AP_info	typeref:struct:AP_info::ST_info
st_1st	airodump-ng.h	/^    struct ST_info *st_1st, *st_end;$/;"	m	struct:globals	typeref:struct:globals::ST_info
st_1st	airtun-ng.c	/^struct WPA_ST_info *st_1st = NULL;$/;"	v	typeref:struct:WPA_ST_info
st_1st	ivstools.c	/^    struct ST_info *st_1st, *st_end;$/;"	m	struct:globals	typeref:struct:globals::ST_info	file:
st_end	airbase-ng.c	/^    struct ST_info *st_1st, *st_end;$/;"	m	struct:options	typeref:struct:options::	file:
st_end	airodump-ng.h	/^    struct ST_info *st_1st, *st_end;$/;"	m	struct:globals	typeref:struct:globals::
st_end	ivstools.c	/^    struct ST_info *st_1st, *st_end;$/;"	m	struct:globals	typeref:struct:globals::	file:
st_hctx	aircapture.h	/^	hash_ctx_t *st_hctx;$/;"	m	struct:_AIRCAP_G
sta_addr	ieee802_11_defs.h	/^					u8 sta_addr[ETH_ALEN];$/;"	m	struct:ieee80211_mgmt::__anon34::__anon43::__anon44::__anon47
sta_addr	ieee802_11_defs.h	/^					u8 sta_addr[ETH_ALEN];$/;"	m	struct:ieee80211_mgmt::__anon34::__anon43::__anon44::__anon48
sta_addr_conf	airconf-parse.h	/^} sta_addr_conf;$/;"	t	typeref:struct:_sta_addr_conf
sta_find_hash	airnodes.c	/^static STA_INFO* sta_find_hash(hash_ctx_t *ctx, uint8_t stamc)$/;"	f	file:
sta_hash_compare	airnodes.c	/^static int sta_hash_compare(const void *a, const void *b)$/;"	f	file:
sta_hash_free	airnodes.c	/^static void sta_hash_free(void *a)$/;"	f	file:
sta_hash_func	airnodes.c	/^static int sta_hash_func(const void *a)$/;"	f	file:
sta_hash_op	airnodes.c	/^static hash_op sta_hash_op = {$/;"	v	file:
sta_infos	airnodes.c	/^	hash_ctx_t *sta_infos;$/;"	m	struct:NODES_INFO	file:
sta_init	airnodes.c	/^static STA_INFO *sta_init()$/;"	f	file:
stamac	airnodes.c	/^	uint8_t stamac[6];        \/* the client's MAC address  *\/$/;"	m	struct:STA_INFO	file:
standalone	ezxml/ezxml.c	/^    short standalone;     \/\/ non-zero if <?xml standalone="yes"?>$/;"	m	struct:ezxml_root	file:
start	airshooter.h	/^	time_t start;$/;"	m	struct:_AIRSHOOT_G
start	common.h	/^	struct timeval start;$/;"	m	struct:_elapsed_tv	typeref:struct:_elapsed_tv::timeval
start	wesside-ng.c	/^static void start(struct wstate *ws, char *dev)$/;"	f	file:
start_flood	besside-ng.c	/^static void start_flood(struct network *n)$/;"	f	file:
start_print_ap	airodump-ng.h	/^    int start_print_ap;$/;"	m	struct:globals
start_print_sta	airodump-ng.h	/^    int start_print_sta;$/;"	m	struct:globals
start_reader	osdep/cygwin_tap.c	/^static int start_reader(struct tip_cygwin *priv)$/;"	f	file:
starting_seq	wi_packet.h	/^	uint16_t   starting_seq:12;$/;"	m	struct:_wi_ctrl_ba_starting_sequence_control
state	aircrack-ptw-lib.c	157;"	d	file:
state	aircrack-ptw-lib.c	271;"	d	file:
state	airnodes.c	/^	unsigned char state;      \/* Current WPS state *\/$/;"	m	struct:WPS_INFO	file:
state	airodump-ng.h	/^    unsigned char state;      \/* Current WPS state *\/$/;"	m	struct:WPS_info
state	besside-ng.c	/^struct state {$/;"	s	file:
state	include/eapol.h	/^    uint8_t state;        \/* handshake completion     *\/$/;"	m	struct:WPA_hdsk
state	osdep/linux.c	/^struct nl80211_state state;$/;"	v	typeref:struct:nl80211_state
stats	airdecap-ng.c	/^stats;$/;"	v	typeref:struct:decap_stats
stats	airdecloak-ng.c	/^struct decloak_stats stats;$/;"	v	typeref:struct:decloak_stats
stats_caps	besside-ng-crawler.c	/^uint32_t stats_caps = 0;$/;"	v
stats_dirs	besside-ng-crawler.c	/^uint32_t stats_dirs = 0;$/;"	v
stats_eapols	besside-ng-crawler.c	/^uint32_t stats_eapols = 0;$/;"	v
stats_files	besside-ng-crawler.c	/^uint32_t stats_files = 0;$/;"	v
stats_networks	besside-ng-crawler.c	/^uint32_t stats_networks = 0;$/;"	v
stats_noncaps	besside-ng-crawler.c	/^uint32_t stats_noncaps = 0;$/;"	v
stats_packets	besside-ng-crawler.c	/^uint32_t stats_packets = 0;$/;"	v
status	ieee802_11_defs.h	/^	u8 status;$/;"	m	struct:wnm_sleep_element
status	wi_packet.h	/^	uint16_t            status;     \/\/ 2 byte, 0x0000 = successful$/;"	m	struct:_wi_assoc_resp_fixed
status	wi_packet.h	/^	uint16_t   status;    \/\/ 2 byte (0x0000: successful)$/;"	m	struct:_wi_auth_fixed
status_code	ieee802_11_defs.h	/^					le16 status_code;$/;"	m	struct:ieee80211_mgmt::__anon34::__anon43::__anon44::__anon48
status_code	ieee802_11_defs.h	/^					u8 status_code;$/;"	m	struct:ieee80211_mgmt::__anon34::__anon43::__anon44::__anon45
status_code	ieee802_11_defs.h	/^					u8 status_code;$/;"	m	struct:ieee80211_mgmt::__anon34::__anon43::__anon44::__anon56
status_code	ieee802_11_defs.h	/^			le16 status_code;$/;"	m	struct:ieee80211_mgmt::__anon34::__anon35
status_code	ieee802_11_defs.h	/^			le16 status_code;$/;"	m	struct:ieee80211_mgmt::__anon34::__anon38
status_format	airdecloak-ng.c	/^char * status_format(int status) {$/;"	f
stdin_dict	aircrack-ng.h	/^	int stdin_dict;$/;"	m	struct:options
stmac	airbase-ng.c	/^    unsigned char stmac[6];  \/* the client's MAC address  *\/$/;"	m	struct:ST_info	file:
stmac	aircrack-ng.h	/^	unsigned char stmac[6];		 \/* client MAC address           *\/$/;"	m	struct:ST_info
stmac	airodump-ng.h	/^    unsigned char stmac[6];  \/* the client's MAC address  *\/$/;"	m	struct:ST_info
stmac	crypto.h	/^    unsigned char stmac[6];             \/* supplicant MAC               *\/$/;"	m	struct:WPA_ST_info
stmac	include/eapol.h	/^    uint8_t stmac[6];     \/* supplicant MAC           *\/$/;"	m	struct:WPA_hdsk
stmac	ivstools.c	/^    unsigned char stmac[6];  \/* the client's MAC address  *\/$/;"	m	struct:ST_info	file:
stmt_stdout	airolib-ng.c	/^int stmt_stdout(sqlite3_stmt* stmt, int* rowcount) {$/;"	f
stop_capture	wips-inspect.c	/^void stop_capture()$/;"	f
stop_reader	osdep/cygwin_tap.c	/^static int stop_reader(struct tip_cygwin *priv)$/;"	f	file:
stop_shooter	wips-inspect.c	/^void stop_shooter()$/;"	f
store_bad	airdecap-ng.c	/^    int store_bad;$/;"	m	struct:options	file:
store_wpa_handshake	airbase-ng.c	/^int store_wpa_handshake(struct ST_info *st_cur)$/;"	f
str	osdep/cygwin.c	41;"	d	file:
str2bin_mac_array	airconf-parse.c	/^int str2bin_mac_array(const char *str, uint8_t mac[])$/;"	f
str2mac	easside-ng.c	/^int str2mac(unsigned char *mac, char *str)$/;"	f
str2mac	wesside-ng.c	/^static void str2mac(unsigned char* dst, char* mac)$/;"	f	file:
str_alloc_copy	memory.h	153;"	d
str_alloc_copy	memory.h	162;"	d
str_alloc_copy_func	memory.c	/^char *str_alloc_copy_func(char *src$/;"	f
strbuf	airbase-ng.c	/^char strbuf[512];$/;"	v
strbuf	aireplay-ng.c	/^char strbuf[512];$/;"	v
strbuf	airtun-ng.c	/^char strbuf[512];$/;"	v
strbuf	tkiptun-ng.c	/^char strbuf[512];$/;"	v
strchr_n	airodump-ng.c	/^static char *strchr_n(char *str, int c, size_t n)$/;"	f	file:
strdup	memdbg.h	144;"	d
strdup	memdbg.h	156;"	d
strdup	memory.h	188;"	d
strdup_MSVC	memory.c	/^char *strdup_MSVC(const char *str)$/;"	f
strip_spaces	besside-ng.c	/^static char *strip_spaces(char *p)$/;"	f	file:
stristr	osdep/cygwin.c	/^char *stristr(const char *String, const char *Pattern)$/;"	f
stuff_for_net	wesside-ng.c	/^static void stuff_for_net(struct wstate *ws, struct ieee80211_frame* wh, int rd)$/;"	f	file:
stuff_for_us	wesside-ng.c	/^static void stuff_for_us(struct wstate *ws, struct ieee80211_frame* wh, int len)$/;"	f	file:
subRoundX	sha1-sse2.S	/^#define subRoundX(a, b, c, d, e, f, k, data)    \\$/;"	d
subRoundY	sha1-sse2.S	/^#define subRoundY(a, b, c, d, e, f, k, data)    \\$/;"	d
subns	osdep/radiotap/radiotap_iter.h	/^	uint8_t subns;$/;"	m	struct:ieee80211_radiotap_namespace
subtype	wi_packet.h	/^	uint8_t    subtype:4;$/;"	m	struct:_wi_fc_t
supported_mcs_set	ieee802_11_defs.h	/^	u8 supported_mcs_set[16];$/;"	m	struct:ieee80211_ht_capabilities
surplus_bandwidth_allowance	ieee802_11_defs.h	/^	le16 surplus_bandwidth_allowance;$/;"	m	struct:wmm_tspec_element
suspension_interval	ieee802_11_defs.h	/^	le32 suspension_interval;$/;"	m	struct:wmm_tspec_element
swap_endian64_mask	pseudo_intrinsics.h	380;"	d
swap_endian64_mask	pseudo_intrinsics.h	510;"	d
swap_endian64_mask	sse-intrinsics.c	176;"	d	file:
swap_endian_mask	pseudo_intrinsics.h	376;"	d
swap_endian_mask	pseudo_intrinsics.h	506;"	d
swap_endian_mask	sse-intrinsics.c	174;"	d	file:
swap_ra_ta	airtun-ng.c	/^void swap_ra_ta(unsigned char *h80211) {$/;"	f
switch_count	ieee802_11_defs.h	/^					u8 switch_count;$/;"	m	struct:ieee80211_mgmt::__anon34::__anon43::__anon44::__anon46
switch_mode	ieee802_11_defs.h	/^					u8 switch_mode;$/;"	m	struct:ieee80211_mgmt::__anon34::__anon43::__anon44::__anon46
sys	log.h	/^	L_SYS sys;$/;"	m	struct:_LOG_CTX
sysfs_inject	osdep/linux.c	/^    int sysfs_inject;$/;"	m	struct:priv_linux	file:
szaDriverTypes	osdep/linux.c	/^static const char * szaDriverTypes[] = {$/;"	v	file:
t	aircapture.h	/^	uint8_t t;$/;"	m	struct:el
t_arg	besside-ng.c	/^	void		*t_arg;$/;"	m	struct:timer	file:
t_begin	aircrack-ng.c	/^struct timeval t_begin;			 \/* time at start of attack      *\/$/;"	v	typeref:struct:timeval
t_begin	wesside-ng.c	/^struct timeval t_begin;			 \/* time at start of attack      *\/$/;"	v	typeref:struct:timeval
t_cb	besside-ng.c	/^	timer_cb	t_cb;$/;"	m	struct:timer	file:
t_crc	crypto.h	/^    unsigned long t_crc;        \/* last ToDS   frame CRC        *\/$/;"	m	struct:WPA_ST_info
t_dictup	aircrack-ng.c	/^struct timeval t_dictup;		\/* next dictionary total read   *\/$/;"	v	typeref:struct:timeval
t_kprev	aircrack-ng.c	/^struct timeval t_kprev;			 \/* time at start of window      *\/$/;"	v	typeref:struct:timeval
t_next	besside-ng.c	/^	struct timer	*t_next;$/;"	m	struct:timer	typeref:struct:timer::timer	file:
t_stats	aircrack-ng.c	/^struct timeval t_stats;			 \/* time since last update       *\/$/;"	v	typeref:struct:timeval
t_stats	wesside-ng.c	/^struct timeval t_stats;			 \/* time since last update       *\/$/;"	v	typeref:struct:timeval
t_tv	besside-ng.c	/^	struct timeval	t_tv;$/;"	m	struct:timer	typeref:struct:timer::timeval	file:
table	aircrack-ptw-lib.h	/^        PTW_tableentry table[PTW_KEYHSBYTES][PTW_n];$/;"	m	struct:__anon71
tag	airconf-parse.h	/^	uint8_t tag;$/;"	m	struct:_tag_conf
tag	wi_packet.h	/^	uint8_t   tag;$/;"	m	struct:_wi_tag_t
tag_conf	airconf-parse.h	/^} tag_conf;$/;"	t	typeref:struct:_tag_conf
tags	airconf-parse.h	/^	tag_conf *tags;$/;"	m	struct:_airconf
target	aircrack-ng.h	/^	int target;					 \/* flag set if AP is a target   *\/$/;"	m	struct:AP_info
target_ap_addr	ieee802_11_defs.h	/^					u8 target_ap_addr[ETH_ALEN];$/;"	m	struct:ieee80211_mgmt::__anon34::__anon43::__anon44::__anon47
target_ap_addr	ieee802_11_defs.h	/^					u8 target_ap_addr[ETH_ALEN];$/;"	m	struct:ieee80211_mgmt::__anon34::__anon43::__anon44::__anon48
tc_guid	osdep/cygwin_tap.c	/^	char		tc_guid[256];$/;"	m	struct:tip_cygwin	file:
tc_h	osdep/cygwin_tap.c	/^	HANDLE		tc_h;$/;"	m	struct:tip_cygwin	file:
tc_key	osdep/cygwin_tap.c	/^	HKEY		tc_key;$/;"	m	struct:tip_cygwin	file:
tc_mtx	osdep/cygwin_tap.c	/^	pthread_mutex_t	tc_mtx;$/;"	m	struct:tip_cygwin	file:
tc_name	osdep/cygwin_tap.c	/^	char		tc_name[MAX_IFACE_NAME];$/;"	m	struct:tip_cygwin	file:
tc_pipe	osdep/cygwin_tap.c	/^	int		tc_pipe[2]; \/* reader -> parent *\/$/;"	m	struct:tip_cygwin	file:
tc_reader	osdep/cygwin_tap.c	/^	pthread_t	tc_reader;$/;"	m	struct:tip_cygwin	file:
tc_running	osdep/cygwin_tap.c	/^	volatile int	tc_running;$/;"	m	struct:tip_cygwin	file:
tcp_test	aireplay-ng.c	/^int tcp_test(const char* ip_str, const short port)$/;"	f
test_compare	hashtable.c	/^int test_compare(const void *a, const void *b)$/;"	f
test_copy	hashtable.c	/^void *test_copy(const void *d)$/;"	f
test_desc	hashtable.c	/^void test_desc(const void *d)$/;"	f
test_free	hashtable.c	/^void test_free(void *d)$/;"	f
test_hash_func	hashtable.c	/^int test_hash_func(const void *d)$/;"	f
textcolor	airodump-ng.c	/^void textcolor(int attr, int fg, int bg)$/;"	f
textcolor_bg	airodump-ng.c	/^void textcolor_bg(int bg)$/;"	f
textcolor_fg	airodump-ng.c	/^void textcolor_fg(int fg)$/;"	f
textstyle	airodump-ng.c	/^void textstyle(int attr)$/;"	f
tf_destroy	osdep/darwin_tap.c	/^    int        tf_destroy;$/;"	m	struct:tip_darwin	file:
tf_destroy	osdep/freebsd_tap.c	/^	int		tf_destroy;$/;"	m	struct:tip_fbsd	file:
tf_fd	osdep/darwin_tap.c	/^    int        tf_fd;$/;"	m	struct:tip_darwin	file:
tf_fd	osdep/freebsd_tap.c	/^	int		tf_fd;$/;"	m	struct:tip_fbsd	file:
tf_ifr	osdep/darwin_tap.c	/^    struct ifreq    tf_ifr;$/;"	m	struct:tip_darwin	typeref:struct:tip_darwin::ifreq	file:
tf_ifr	osdep/freebsd_tap.c	/^	struct ifreq	tf_ifr;$/;"	m	struct:tip_fbsd	typeref:struct:tip_fbsd::ifreq	file:
tf_ioctls	osdep/darwin_tap.c	/^    int        tf_ioctls;$/;"	m	struct:tip_darwin	file:
tf_ioctls	osdep/freebsd_tap.c	/^	int		tf_ioctls;$/;"	m	struct:tip_fbsd	file:
tf_name	osdep/darwin_tap.c	/^    char        tf_name[MAX_IFACE_NAME];$/;"	m	struct:tip_darwin	file:
tf_name	osdep/freebsd_tap.c	/^	char		tf_name[MAX_IFACE_NAME];$/;"	m	struct:tip_fbsd	file:
this_arg	osdep/radiotap/radiotap_iter.h	/^	unsigned char *this_arg;$/;"	m	struct:ieee80211_radiotap_iterator
this_arg_index	osdep/radiotap/radiotap_iter.h	/^	int this_arg_index;$/;"	m	struct:ieee80211_radiotap_iterator
this_arg_size	osdep/radiotap/radiotap_iter.h	/^	int this_arg_size;$/;"	m	struct:ieee80211_radiotap_iterator
thiszone	pcap.h	/^    int32_t thiszone;$/;"	m	struct:pcap_file_header
thread	aircrack-ng.h	/^	int	thread;						\/* number of this thread *\/$/;"	m	struct:WPA_data
threadid	aircrack-ng.h	/^	int	threadid;						\/* id of this thread *\/$/;"	m	struct:WPA_data
threadxnt	wpapsk.h	/^int threadxnt;$/;"	v
ti_alloc	osdep/osdep.c	/^struct tif *ti_alloc(int sz)$/;"	f
ti_close	osdep/osdep.c	/^void ti_close(struct tif *ti)$/;"	f
ti_close	osdep/osdep.h	/^	void	(*ti_close)(struct tif *ti);$/;"	m	struct:tif
ti_close_cygwin	osdep/cygwin_tap.c	/^static void ti_close_cygwin(struct tif *ti)$/;"	f	file:
ti_close_darwin	osdep/darwin_tap.c	/^static void ti_close_darwin(struct tif *ti) {$/;"	f	file:
ti_close_fbsd	osdep/freebsd_tap.c	/^static void ti_close_fbsd(struct tif *ti)$/;"	f	file:
ti_close_linux	osdep/linux_tap.c	/^static void ti_close_linux(struct tif *ti)$/;"	f	file:
ti_close_nbsd	osdep/netbsd_tap.c	/^static void ti_close_nbsd(struct tif *ti)$/;"	f	file:
ti_close_obsd	osdep/openbsd_tap.c	/^static void ti_close_obsd(struct tif *ti)$/;"	f	file:
ti_destroy	osdep/darwin_tap.c	/^static void ti_destroy(struct tip_darwin *priv) {$/;"	f	file:
ti_destroy	osdep/freebsd_tap.c	/^static void ti_destroy(struct tip_fbsd *priv)$/;"	f	file:
ti_destroy	osdep/netbsd_tap.c	/^static void ti_destroy(struct tip_nbsd *priv)$/;"	f	file:
ti_destroy	osdep/openbsd_tap.c	/^static void ti_destroy(struct tip_obsd *priv)$/;"	f	file:
ti_do_free	osdep/cygwin_tap.c	/^static void ti_do_free(struct tif *ti)$/;"	f	file:
ti_do_free	osdep/darwin_tap.c	/^static void ti_do_free(struct tif *ti) {$/;"	f	file:
ti_do_free	osdep/freebsd_tap.c	/^static void ti_do_free(struct tif *ti)$/;"	f	file:
ti_do_free	osdep/linux_tap.c	/^static void ti_do_free(struct tif *ti)$/;"	f	file:
ti_do_free	osdep/netbsd_tap.c	/^static void ti_do_free(struct tif *ti)$/;"	f	file:
ti_do_free	osdep/openbsd_tap.c	/^static void ti_do_free(struct tif *ti)$/;"	f	file:
ti_do_io	osdep/cygwin_tap.c	/^static int ti_do_io(struct tip_cygwin *priv, void *buf, int len,$/;"	f	file:
ti_do_io_lock	osdep/cygwin_tap.c	/^static int ti_do_io_lock(struct tip_cygwin *priv, void *buf, int len,$/;"	f	file:
ti_do_open_cygwin	osdep/cygwin_tap.c	/^static int ti_do_open_cygwin(struct tip_cygwin *priv)$/;"	f	file:
ti_do_open_darwin	osdep/darwin_tap.c	/^static int ti_do_open_darwin(struct tif *ti, char *name) {$/;"	f	file:
ti_do_open_fbsd	osdep/freebsd_tap.c	/^static int ti_do_open_fbsd(struct tif *ti, char *name)$/;"	f	file:
ti_do_open_linux	osdep/linux_tap.c	/^static int ti_do_open_linux(struct tif *ti, char *name)$/;"	f	file:
ti_do_open_nbsd	osdep/netbsd_tap.c	/^static int ti_do_open_nbsd(struct tif *ti, char *name)$/;"	f	file:
ti_do_open_obsd	osdep/openbsd_tap.c	/^static int ti_do_open_obsd(struct tif *ti, char *name)$/;"	f	file:
ti_do_reset	osdep/cygwin_tap.c	/^static int ti_do_reset(HDEVINFO *hdi, SP_DEVINFO_DATA *did)$/;"	f	file:
ti_fd	osdep/osdep.c	/^int ti_fd(struct tif *ti)$/;"	f
ti_fd	osdep/osdep.h	/^	int	(*ti_fd)(struct tif *ti);$/;"	m	struct:tif
ti_fd_cygwin	osdep/cygwin_tap.c	/^static int ti_fd_cygwin(struct tif *ti)$/;"	f	file:
ti_fd_darwin	osdep/darwin_tap.c	/^static int ti_fd_darwin(struct tif *ti) {$/;"	f	file:
ti_fd_fbsd	osdep/freebsd_tap.c	/^static int ti_fd_fbsd(struct tif *ti)$/;"	f	file:
ti_fd_linux	osdep/linux_tap.c	/^static int ti_fd_linux(struct tif *ti)$/;"	f	file:
ti_fd_nbsd	osdep/netbsd_tap.c	/^static int ti_fd_nbsd(struct tif *ti)$/;"	f	file:
ti_fd_obsd	osdep/openbsd_tap.c	/^static int ti_fd_obsd(struct tif *ti)$/;"	f	file:
ti_get_devs_component	osdep/cygwin_tap.c	/^static int ti_get_devs_component(struct tip_cygwin *priv, char *name)$/;"	f	file:
ti_get_mtu	osdep/osdep.c	/^int ti_get_mtu(struct tif *ti)$/;"	f
ti_get_mtu	osdep/osdep.h	/^	int	(*ti_get_mtu)(struct tif *ti);$/;"	m	struct:tif
ti_get_mtu_linux	osdep/linux_tap.c	/^static int ti_get_mtu_linux(struct tif *ti)$/;"	f	file:
ti_is_us	osdep/cygwin_tap.c	/^static int ti_is_us(struct tip_cygwin *priv, HDEVINFO *hdi,$/;"	f	file:
ti_media_status	osdep/cygwin_tap.c	/^static int ti_media_status(struct tip_cygwin *priv, int on)$/;"	f	file:
ti_mtu	airbase-ng.c	/^    int ti_mtu;         \/\/MTU of tun\/tap interface$/;"	m	struct:options	file:
ti_name	osdep/osdep.c	/^char *ti_name(struct tif *ti)$/;"	f
ti_name	osdep/osdep.h	/^	char	*(*ti_name)(struct tif *ti);$/;"	m	struct:tif
ti_name_cygwin	osdep/cygwin_tap.c	/^static char *ti_name_cygwin(struct tif *ti)$/;"	f	file:
ti_name_darwin	osdep/darwin_tap.c	/^static char *ti_name_darwin(struct tif *ti) {$/;"	f	file:
ti_name_fbsd	osdep/freebsd_tap.c	/^static char *ti_name_fbsd(struct tif *ti)$/;"	f	file:
ti_name_linux	osdep/linux_tap.c	/^static char *ti_name_linux(struct tif *ti)$/;"	f	file:
ti_name_nbsd	osdep/netbsd_tap.c	/^static char *ti_name_nbsd(struct tif *ti)$/;"	f	file:
ti_name_obsd	osdep/openbsd_tap.c	/^static char *ti_name_obsd(struct tif *ti)$/;"	f	file:
ti_open	osdep/cygwin_tap.c	/^struct tif *ti_open(char *iface)$/;"	f
ti_open	osdep/darwin_tap.c	/^struct tif *ti_open(char *iface) {$/;"	f
ti_open	osdep/dummy_tap.c	/^struct tif *ti_open(char *iface)$/;"	f
ti_open	osdep/freebsd_tap.c	/^struct tif *ti_open(char *iface)$/;"	f
ti_open	osdep/linux_tap.c	/^struct tif *ti_open(char *iface)$/;"	f
ti_open	osdep/netbsd_tap.c	/^struct tif *ti_open(char *iface)$/;"	f
ti_open	osdep/openbsd_tap.c	/^struct tif *ti_open(char *iface)$/;"	f
ti_open_cygwin	osdep/cygwin_tap.c	/^static struct tif *ti_open_cygwin(char *iface)$/;"	f	file:
ti_open_darwin	osdep/darwin_tap.c	/^static struct tif *ti_open_darwin(char *iface) {$/;"	f	file:
ti_open_dummy	osdep/dummy_tap.c	/^static struct tif *ti_open_dummy(char *iface)$/;"	f	file:
ti_open_fbsd	osdep/freebsd_tap.c	/^static struct tif *ti_open_fbsd(char *iface)$/;"	f	file:
ti_open_linux	osdep/linux_tap.c	/^static struct tif *ti_open_linux(char *iface)$/;"	f	file:
ti_open_nbsd	osdep/netbsd_tap.c	/^static struct tif *ti_open_nbsd(char *iface)$/;"	f	file:
ti_open_obsd	osdep/openbsd_tap.c	/^static struct tif *ti_open_obsd(char *iface)$/;"	f	file:
ti_priv	osdep/osdep.c	/^void *ti_priv(struct tif *ti)$/;"	f
ti_priv	osdep/osdep.h	/^	void	*ti_priv;$/;"	m	struct:tif
ti_rate	osdep/osdep.h	/^        unsigned int     ti_rate;$/;"	m	struct:tx_info
ti_read	osdep/osdep.c	/^int ti_read(struct tif *ti, void *buf, int len)$/;"	f
ti_read	osdep/osdep.h	/^	int	(*ti_read)(struct tif *ti, void *buf, int len);$/;"	m	struct:tif
ti_read_cygwin	osdep/cygwin_tap.c	/^static int ti_read_cygwin(struct tif *ti, void *buf, int len)$/;"	f	file:
ti_read_darwin	osdep/darwin_tap.c	/^static int ti_read_darwin(struct tif *ti, void *buf, int len) {$/;"	f	file:
ti_read_fbsd	osdep/freebsd_tap.c	/^static int ti_read_fbsd(struct tif *ti, void *buf, int len)$/;"	f	file:
ti_read_linux	osdep/linux_tap.c	/^static int ti_read_linux(struct tif *ti, void *buf, int len)$/;"	f	file:
ti_read_nbsd	osdep/netbsd_tap.c	/^static int ti_read_nbsd(struct tif *ti, void *buf, int len)$/;"	f	file:
ti_read_obsd	osdep/openbsd_tap.c	/^static int ti_read_obsd(struct tif *ti, void *buf, int len)$/;"	f	file:
ti_read_packet	osdep/cygwin_tap.c	/^static int ti_read_packet(struct tip_cygwin *priv, void *buf, int len)$/;"	f	file:
ti_read_reg	osdep/cygwin_tap.c	/^static int ti_read_reg(struct tip_cygwin *priv, char *key, char *res, int len)$/;"	f	file:
ti_reader	osdep/cygwin_tap.c	/^static void *ti_reader(void *arg)$/;"	f	file:
ti_reset	osdep/cygwin_tap.c	/^static int ti_reset(struct tip_cygwin *priv)$/;"	f	file:
ti_reset_state	osdep/cygwin_tap.c	/^static int ti_reset_state(HDEVINFO *hdi, SP_DEVINFO_DATA *did, DWORD state)$/;"	f	file:
ti_restart	osdep/cygwin_tap.c	/^static int ti_restart(struct tip_cygwin *priv)$/;"	f	file:
ti_set_ip	osdep/osdep.c	/^int ti_set_ip(struct tif *ti, struct in_addr *ip)$/;"	f
ti_set_ip	osdep/osdep.h	/^	int	(*ti_set_ip)(struct tif *ti, struct in_addr *ip);$/;"	m	struct:tif
ti_set_ip_cygwin	osdep/cygwin_tap.c	/^static int ti_set_ip_cygwin(struct tif *ti, struct in_addr *ip)$/;"	f	file:
ti_set_ip_darwin	osdep/darwin_tap.c	/^static int ti_set_ip_darwin(struct tif *ti, struct in_addr *ip) {$/;"	f	file:
ti_set_ip_fbsd	osdep/freebsd_tap.c	/^static int ti_set_ip_fbsd(struct tif *ti, struct in_addr *ip)$/;"	f	file:
ti_set_ip_linux	osdep/linux_tap.c	/^static int ti_set_ip_linux(struct tif *ti, struct in_addr *ip)$/;"	f	file:
ti_set_ip_nbsd	osdep/netbsd_tap.c	/^static int ti_set_ip_nbsd(struct tif *ti, struct in_addr *ip)$/;"	f	file:
ti_set_ip_obsd	osdep/openbsd_tap.c	/^static int ti_set_ip_obsd(struct tif *ti, struct in_addr *ip)$/;"	f	file:
ti_set_mac	osdep/osdep.c	/^int ti_set_mac(struct tif *ti, unsigned char *mac)$/;"	f
ti_set_mac	osdep/osdep.h	/^	int	(*ti_set_mac)(struct tif *ti, unsigned char *mac);$/;"	m	struct:tif
ti_set_mac_cygwin	osdep/cygwin_tap.c	/^static int ti_set_mac_cygwin(struct tif *ti, unsigned char *mac)$/;"	f	file:
ti_set_mac_darwin	osdep/darwin_tap.c	/^static int ti_set_mac_darwin(struct tif *ti, unsigned char *mac) {$/;"	f	file:
ti_set_mac_fbsd	osdep/freebsd_tap.c	/^static int ti_set_mac_fbsd(struct tif *ti, unsigned char *mac)$/;"	f	file:
ti_set_mac_linux	osdep/linux_tap.c	/^static int ti_set_mac_linux(struct tif *ti, unsigned char *mac)$/;"	f	file:
ti_set_mac_nbsd	osdep/netbsd_tap.c	/^static int ti_set_mac_nbsd(struct tif *ti, unsigned char *mac)$/;"	f	file:
ti_set_mac_obsd	osdep/openbsd_tap.c	/^static int ti_set_mac_obsd(struct tif *ti, unsigned char *mac)$/;"	f	file:
ti_set_mtu	osdep/osdep.c	/^int ti_set_mtu(struct tif *ti, int mtu)$/;"	f
ti_set_mtu	osdep/osdep.h	/^	int	(*ti_set_mtu)(struct tif *ti, int mtu);$/;"	m	struct:tif
ti_set_mtu_cygwin	osdep/cygwin_tap.c	/^static int ti_set_mtu_cygwin(struct tif *ti, int mtu)$/;"	f	file:
ti_set_mtu_darwin	osdep/darwin_tap.c	/^static int ti_set_mtu_darwin(struct tif *ti, int mtu) {$/;"	f	file:
ti_set_mtu_fbsd	osdep/freebsd_tap.c	/^static int ti_set_mtu_fbsd(struct tif *ti, int mtu)$/;"	f	file:
ti_set_mtu_linux	osdep/linux_tap.c	/^static int ti_set_mtu_linux(struct tif *ti, int mtu)$/;"	f	file:
ti_set_mtu_nbsd	osdep/netbsd_tap.c	/^static int ti_set_mtu_nbsd(struct tif *ti, int mtu)$/;"	f	file:
ti_set_mtu_obsd	osdep/openbsd_tap.c	/^static int ti_set_mtu_obsd(struct tif *ti, int mtu)$/;"	f	file:
ti_try_open	osdep/cygwin_tap.c	/^static int ti_try_open(struct tip_cygwin *priv, char *guid)$/;"	f	file:
ti_wait_complete	osdep/cygwin_tap.c	/^static int ti_wait_complete(struct tip_cygwin *priv, OVERLAPPED *o)$/;"	f	file:
ti_write	osdep/osdep.c	/^int ti_write(struct tif *ti, void *buf, int len)$/;"	f
ti_write	osdep/osdep.h	/^	int	(*ti_write)(struct tif *ti, void *buf, int len);$/;"	m	struct:tif
ti_write_cygwin	osdep/cygwin_tap.c	/^static int ti_write_cygwin(struct tif *ti, void *buf, int len)$/;"	f	file:
ti_write_darwin	osdep/darwin_tap.c	/^static int ti_write_darwin(struct tif *ti, void *buf, int len) {$/;"	f	file:
ti_write_fbsd	osdep/freebsd_tap.c	/^static int ti_write_fbsd(struct tif *ti, void *buf, int len)$/;"	f	file:
ti_write_linux	osdep/linux_tap.c	/^static int ti_write_linux(struct tif *ti, void *buf, int len)$/;"	f	file:
ti_write_nbsd	osdep/netbsd_tap.c	/^static int ti_write_nbsd(struct tif *ti, void *buf, int len)$/;"	f	file:
ti_write_obsd	osdep/openbsd_tap.c	/^static int ti_write_obsd(struct tif *ti, void *buf, int len)$/;"	f	file:
tid	aircrack-ng.c	/^pthread_t tid[MAX_THREADS];$/;"	v
tid_for_frame	wi_packet.h	/^	uint16_t   tid_for_frame:4;$/;"	m	struct:_wi_ctrl_ba_control
tif	osdep/osdep.h	/^struct tif {$/;"	s
tim_bitctl	include/ieee80211.h	/^	u_int8_t	tim_bitctl;		\/* bitmap control *\/$/;"	m	struct:ieee80211_tim_ie
tim_bitmap	include/ieee80211.h	/^	u_int8_t	tim_bitmap[1];		\/* variable-length bitmap *\/$/;"	m	struct:ieee80211_tim_ie
tim_count	include/ieee80211.h	/^	u_int8_t	tim_count;		\/* DTIM count *\/$/;"	m	struct:ieee80211_tim_ie
tim_ie	include/ieee80211.h	/^	u_int8_t	tim_ie;			\/* IEEE80211_ELEMID_TIM *\/$/;"	m	struct:ieee80211_tim_ie
tim_len	include/ieee80211.h	/^	u_int8_t	tim_len;$/;"	m	struct:ieee80211_tim_ie
tim_period	include/ieee80211.h	/^	u_int8_t	tim_period;		\/* DTIM period *\/$/;"	m	struct:ieee80211_tim_ie
time_diff	besside-ng.c	/^static int time_diff(struct timeval *past, struct timeval *now)$/;"	f	file:
time_print	wesside-ng.c	/^static void time_print(char* fmt, ...)$/;"	f	file:
time_printf	besside-ng.c	/^static void time_printf(int verb, char *fmt, ...)$/;"	f	file:
timebase_rand	common.c	/^void timebase_rand(uint8_t randbuf[], int size)$/;"	f
timeoutFrag	airbase-ng.c	/^int timeoutFrag()$/;"	f
timeoutFrag	airtun-ng.c	/^int timeoutFrag()$/;"	f
timeouts	include/if_arp.h	/^	uint64_t timeouts;	\/* # of times with entries removed *\/$/;"	m	struct:arpstat
timer	besside-ng.c	/^struct timer {$/;"	s	file:
timer_cb	besside-ng.c	/^typedef void (*timer_cb)(void*);$/;"	t	file:
timer_cb2str	besside-ng.c	/^static const char *timer_cb2str(timer_cb cb)$/;"	f	file:
timer_check	besside-ng.c	/^static void timer_check(void)$/;"	f	file:
timer_in	besside-ng.c	/^static void timer_in(int us, timer_cb cb, void *arg)$/;"	f	file:
timer_next	besside-ng.c	/^static void timer_next(struct timeval *tv)$/;"	f	file:
timestamp	airnodes.c	/^	unsigned long long timestamp; \/* Timestamp to calculate uptime *\/$/;"	m	struct:AP_INFO	file:
timestamp	airodump-ng.h	/^    unsigned long long timestamp;$/;"	m	struct:AP_info
timestamp	ieee802_11_defs.h	/^			u8 timestamp[8];$/;"	m	struct:ieee80211_mgmt::__anon34::__anon41
timestamp	ieee802_11_defs.h	/^			u8 timestamp[8];$/;"	m	struct:ieee80211_mgmt::__anon34::__anon42
timestamp	wi_packet.h	/^	uint64_t            timestamp;  \/\/ 8 byte$/;"	m	struct:_wi_beacon_fixed
tinit	airbase-ng.c	/^    time_t tinit, tlast;     \/* first and last time seen  *\/$/;"	m	struct:ST_info	file:
tinit	airnodes.c	/^	time_t tinit, tlast;     \/* first and last time seen  *\/$/;"	m	struct:STA_INFO	file:
tinit	airnodes.c	/^	time_t tinit, tlast;$/;"	m	struct:AP_INFO	file:
tinit	airodump-ng.h	/^    time_t tinit, tlast;      \/* first and last time seen *\/$/;"	m	struct:AP_info
tinit	airodump-ng.h	/^    time_t tinit, tlast;     \/* first and last time seen  *\/$/;"	m	struct:NA_info
tinit	airodump-ng.h	/^    time_t tinit, tlast;     \/* first and last time seen  *\/$/;"	m	struct:ST_info
tip_cygwin	osdep/cygwin_tap.c	/^struct tip_cygwin {$/;"	s	file:
tip_darwin	osdep/darwin_tap.c	/^struct tip_darwin {$/;"	s	file:
tip_fbsd	osdep/freebsd_tap.c	/^struct tip_fbsd {$/;"	s	file:
tip_linux	osdep/linux_tap.c	/^struct tip_linux {$/;"	s	file:
tip_nbsd	osdep/netbsd_tap.c	/^struct tip_nbsd {$/;"	s	file:
tip_obsd	osdep/openbsd_tap.c	/^struct tip_obsd {$/;"	s	file:
tl_fd	osdep/linux_tap.c	/^	int		tl_fd;$/;"	m	struct:tip_linux	file:
tl_ifr	osdep/linux_tap.c	/^	struct ifreq	tl_ifr;$/;"	m	struct:tip_linux	typeref:struct:tip_linux::ifreq	file:
tl_ioctls	osdep/linux_tap.c	/^	int		tl_ioctls;$/;"	m	struct:tip_linux	file:
tl_name	osdep/linux_tap.c	/^	char		tl_name[MAX_IFACE_NAME];$/;"	m	struct:tip_linux	file:
tlast	airbase-ng.c	/^    time_t tinit, tlast;     \/* first and last time seen  *\/$/;"	m	struct:ST_info	file:
tlast	airnodes.c	/^	time_t tinit, tlast;     \/* first and last time seen  *\/$/;"	m	struct:STA_INFO	file:
tlast	airnodes.c	/^	time_t tinit, tlast;$/;"	m	struct:AP_INFO	file:
tlast	airodump-ng.h	/^    time_t tinit, tlast;      \/* first and last time seen *\/$/;"	m	struct:AP_info
tlast	airodump-ng.h	/^    time_t tinit, tlast;     \/* first and last time seen  *\/$/;"	m	struct:NA_info
tlast	airodump-ng.h	/^    time_t tinit, tlast;     \/* first and last time seen  *\/$/;"	m	struct:ST_info
tmp1	sha1-sse2.S	/^#define tmp1 %xmm5$/;"	d
tmp2	sha1-sse2.S	/^#define tmp2 %xmm6$/;"	d
tmp3	sha1-sse2.S	/^#define tmp3 %xmm7$/;"	d
tmp4	sha1-sse2.S	/^#define tmp4 ctxa$/;"	d
tmp5	sha1-sse2.S	/^#define tmp5 ctxb$/;"	d
tmpbuf	airbase-ng.c	/^unsigned char tmpbuf[4096];$/;"	v
tmpbuf	aireplay-ng.c	/^unsigned char tmpbuf[4096];$/;"	v
tmpbuf	airtun-ng.c	/^unsigned char tmpbuf[4096];$/;"	v
tmpbuf	packetforge-ng.c	/^unsigned char tmpbuf[2048];$/;"	v
tmpbuf	tkiptun-ng.c	/^unsigned char tmpbuf[4096];$/;"	v
tn_destroy	osdep/netbsd_tap.c	/^	int		tn_destroy;$/;"	m	struct:tip_nbsd	file:
tn_fd	osdep/netbsd_tap.c	/^	int		tn_fd;$/;"	m	struct:tip_nbsd	file:
tn_ifr	osdep/netbsd_tap.c	/^	struct ifreq	tn_ifr;$/;"	m	struct:tip_nbsd	typeref:struct:tip_nbsd::ifreq	file:
tn_ioctls	osdep/netbsd_tap.c	/^	int		tn_ioctls;$/;"	m	struct:tip_nbsd	file:
tn_name	osdep/netbsd_tap.c	/^	char		tn_name[MAX_IFACE_NAME];$/;"	m	struct:tip_nbsd	file:
toDS	airdecloak-ng.h	/^    int toDS;$/;"	m	struct:packet_elt
to_destroy	osdep/openbsd_tap.c	/^	int		to_destroy;$/;"	m	struct:tip_obsd	file:
to_fd	osdep/openbsd_tap.c	/^	int		to_fd;$/;"	m	struct:tip_obsd	file:
to_ifr	osdep/openbsd_tap.c	/^	struct ifreq	to_ifr;$/;"	m	struct:tip_obsd	typeref:struct:tip_obsd::ifreq	file:
to_ioctls	osdep/openbsd_tap.c	/^	int		to_ioctls;$/;"	m	struct:tip_obsd	file:
to_me	easside-ng.c	/^int to_me(struct east_state *es, struct ieee80211_frame *wh)$/;"	f
to_name	osdep/openbsd_tap.c	/^	char		to_name[MAX_IFACE_NAME];$/;"	m	struct:tip_obsd	file:
tods	airbase-ng.c	/^    int tods;$/;"	m	struct:options	file:
tods	airtun-ng.c	/^    int tods;$/;"	m	struct:options	file:
tods	packetforge-ng.c	/^    char tods;$/;"	m	struct:options	file:
tods	wi_packet.h	/^	uint8_t   tods:1;$/;"	m	struct:_wi_flags_t
too_early	easside-ng.c	/^int too_early(struct timeval *tv, int to, struct timeval *last_sent)$/;"	f
totaldicts	aircrack-ng.h	/^	int totaldicts;				\/* total loaded dictionaries	*\/$/;"	m	struct:options
tpc	ieee802_11_defs.h	/^	struct tpc_report tpc;$/;"	m	struct:rrm_link_measurement_report	typeref:struct:rrm_link_measurement_report::tpc_report
tpc_report	ieee802_11_defs.h	/^struct tpc_report {$/;"	s
trans_id	ieee802_11_defs.h	/^					u8 trans_id[WLAN_SA_QUERY_TR_ID_LEN];$/;"	m	struct:ieee80211_mgmt::__anon34::__anon43::__anon44::__anon49
trans_id	ieee802_11_defs.h	/^					u8 trans_id[WLAN_SA_QUERY_TR_ID_LEN];$/;"	m	struct:ieee80211_mgmt::__anon34::__anon43::__anon44::__anon50
tried	aircrack-ptw-lib.c	/^int tried, max_tries;$/;"	v
trim	airodump-ng.c	/^void trim(char *str)$/;"	f
true	airdecloak-ng.h	/^typedef enum {false, true} BOOLEAN;$/;"	e	enum:__anon68
try_crack	wesside-ng.c	/^static void try_crack(struct wstate *ws)$/;"	f	file:
ts_delay	include/ieee80211.h	/^	u_int8_t	ts_delay[4];$/;"	m	struct:ieee80211_wme_tspec
ts_id	include/ieee80211.h	/^	u_int8_t	ts_id;$/;"	m	struct:ieee80211_wme_tspec
ts_inactv_intv	include/ieee80211.h	/^	u_int8_t	ts_inactv_intv[4];$/;"	m	struct:ieee80211_wme_tspec
ts_info	ieee802_11_defs.h	/^	u8 ts_info[3];$/;"	m	struct:wmm_tspec_element
ts_len	include/ieee80211.h	/^	u_int8_t	ts_len;$/;"	m	struct:ieee80211_wme_tspec
ts_max_burst	include/ieee80211.h	/^	u_int8_t	ts_max_burst[4];$/;"	m	struct:ieee80211_wme_tspec
ts_max_msdu	include/ieee80211.h	/^	u_int8_t	ts_max_msdu[2];$/;"	m	struct:ieee80211_wme_tspec
ts_max_svc	include/ieee80211.h	/^	u_int8_t	ts_max_svc[4];$/;"	m	struct:ieee80211_wme_tspec
ts_mean_rate	include/ieee80211.h	/^	u_int8_t	ts_mean_rate[4];$/;"	m	struct:ieee80211_wme_tspec
ts_medium_time	include/ieee80211.h	/^	u_int8_t	ts_medium_time[2];$/;"	m	struct:ieee80211_wme_tspec
ts_min_phy	include/ieee80211.h	/^	u_int8_t	ts_min_phy[4];$/;"	m	struct:ieee80211_wme_tspec
ts_min_rate	include/ieee80211.h	/^	u_int8_t	ts_min_rate[4];$/;"	m	struct:ieee80211_wme_tspec
ts_min_svc	include/ieee80211.h	/^	u_int8_t	ts_min_svc[4];$/;"	m	struct:ieee80211_wme_tspec
ts_nom_msdu	include/ieee80211.h	/^	u_int8_t	ts_nom_msdu[2];$/;"	m	struct:ieee80211_wme_tspec
ts_oui	include/ieee80211.h	/^	u_int8_t	ts_oui[3];$/;"	m	struct:ieee80211_wme_tspec
ts_oui_subtype	include/ieee80211.h	/^	u_int8_t	ts_oui_subtype;$/;"	m	struct:ieee80211_wme_tspec
ts_oui_type	include/ieee80211.h	/^	u_int8_t	ts_oui_type;$/;"	m	struct:ieee80211_wme_tspec
ts_peak_rate	include/ieee80211.h	/^	u_int8_t	ts_peak_rate[4];$/;"	m	struct:ieee80211_wme_tspec
ts_start_svc	include/ieee80211.h	/^	u_int8_t	ts_start_svc[4];$/;"	m	struct:ieee80211_wme_tspec
ts_surplus	include/ieee80211.h	/^	u_int8_t	ts_surplus[2];$/;"	m	struct:ieee80211_wme_tspec
ts_susp_intv	include/ieee80211.h	/^	u_int8_t	ts_susp_intv[4];$/;"	m	struct:ieee80211_wme_tspec
ts_tsinfo	include/ieee80211.h	/^	u_int8_t	ts_tsinfo[3];$/;"	m	struct:ieee80211_wme_tspec
ts_version	include/ieee80211.h	/^	u_int8_t	ts_version;$/;"	m	struct:ieee80211_wme_tspec
tsf_offs	ieee802_11_defs.h	/^	u8 tsf_offs[8];$/;"	m	struct:multi_band_ie
ttl	packetforge-ng.c	/^    int ttl;$/;"	m	struct:options	file:
tv	aircapture.h	/^	struct timeval tv;$/;"	m	struct:_AIRCAP_DATA	typeref:struct:_AIRCAP_DATA::timeval
tv	aircapture.h	/^	struct timeval tv;$/;"	m	struct:_AIRCAP_SAMPLE_DATA	typeref:struct:_AIRCAP_SAMPLE_DATA::timeval
tv	airnodes.c	/^	struct timeval tv;            \/* time for data per second      *\/$/;"	m	struct:AP_INFO	typeref:struct:AP_INFO::timeval	file:
tv	airodump-ng.h	/^    struct timeval tv;        \/* time for data per second *\/$/;"	m	struct:AP_info	typeref:struct:AP_info::timeval
tv	airodump-ng.h	/^    struct timeval tv;       \/* time for ack per second   *\/$/;"	m	struct:NA_info	typeref:struct:NA_info::timeval
tv_sec	pcap.h	/^    int32_t tv_sec;$/;"	m	struct:pcap_pkthdr
tv_usec	pcap.h	/^    int32_t tv_usec;$/;"	m	struct:pcap_pkthdr
tx_ant_id	ieee802_11_defs.h	/^	u8 tx_ant_id;$/;"	m	struct:rrm_link_measurement_report
tx_bf_capability_info	ieee802_11_defs.h	/^	le32 tx_bf_capability_info;$/;"	m	struct:ieee80211_ht_capabilities
tx_highest	ieee802_11_defs.h	/^		le16 tx_highest;$/;"	m	struct:ieee80211_vht_capabilities::__anon61
tx_info	osdep/osdep.h	/^struct tx_info {$/;"	s
tx_map	ieee802_11_defs.h	/^		le16 tx_map;$/;"	m	struct:ieee80211_vht_capabilities::__anon61
tx_power	ieee802_11_defs.h	/^	s8 tx_power;$/;"	m	struct:rrm_link_measurement_request
tx_power	ieee802_11_defs.h	/^	u8 tx_power;$/;"	m	struct:tpc_report
tx_power	osdep/linux.c	/^    int tx_power;$/;"	m	struct:priv_linux	file:
txop_limit	ieee802_11_defs.h	/^	le16 txop_limit;$/;"	m	struct:wmm_ac_parameter
txreplies	include/if_arp.h	/^	uint64_t txreplies;	\/* # of ARP replies sent by this host. *\/$/;"	m	struct:arpstat
txrequests	include/if_arp.h	/^	uint64_t txrequests;	\/* # of ARP requests sent by this host. *\/$/;"	m	struct:arpstat
txt	ezxml/ezxml.h	/^    char *txt;       \/\/ tag character content, empty string if none$/;"	m	struct:ezxml
type	wi_packet.h	/^	uint8_t    type:2;$/;"	m	struct:_wi_fc_t
type_frmr	include/if_llc.h	/^	    } type_frmr \/* XXX __packed ??? *\/;$/;"	m	union:llc::__anon6	typeref:struct:llc::__anon6::__anon10
type_i	include/if_llc.h	/^	    } type_i \/* XXX __packed ??? *\/;$/;"	m	union:llc::__anon6	typeref:struct:llc::__anon6::__anon8
type_raw	include/if_llc.h	/^	    } type_raw \/* XXX __packed ??? *\/;$/;"	m	union:llc::__anon6	typeref:struct:llc::__anon6::__anon12
type_s	include/if_llc.h	/^	    } type_s \/* XXX __packed ??? *\/;$/;"	m	union:llc::__anon6	typeref:struct:llc::__anon6::__anon9
type_u	include/if_llc.h	/^	    } type_u \/* XXX __packed ??? *\/;$/;"	m	union:llc::__anon6	typeref:struct:llc::__anon6::__anon7
u	ezxml/ezxml.c	/^    char *u;              \/\/ UTF-8 conversion of string if original was UTF-16$/;"	m	struct:ezxml_root	file:
u	ieee802_11_defs.h	/^			} u;$/;"	m	struct:ieee80211_mgmt::__anon34::__anon43	typeref:union:ieee80211_mgmt::__anon34::__anon43::__anon44
u	ieee802_11_defs.h	/^	} u;$/;"	m	struct:ieee80211_mgmt	typeref:union:ieee80211_mgmt::__anon34
u16	ieee802_11_defs.h	/^typedef uint16_t u16;$/;"	t
u32	ieee802_11_defs.h	/^typedef uint32_t u32;$/;"	t
u64	ieee802_11_defs.h	/^typedef uint64_t u64;$/;"	t
u8	ieee802_11_defs.h	/^typedef uint8_t u8;$/;"	t
u_int16_t	osdep/byteorder.h	/^			typedef uint16_t u_int16_t;$/;"	t
u_int16_t	osdep/byteorder.h	/^	typedef uint16_t u_int16_t;$/;"	t
u_int32_t	osdep/byteorder.h	/^			typedef uint32_t u_int32_t;$/;"	t
u_int32_t	osdep/byteorder.h	/^	typedef uint32_t u_int32_t;$/;"	t
u_int64_t	osdep/byteorder.h	/^			typedef uint64_t u_int64_t;$/;"	t
u_int64_t	osdep/byteorder.h	/^	typedef uint64_t u_int64_t;$/;"	t
u_int8_t	osdep/byteorder.h	/^			typedef uint8_t  u_int8_t;$/;"	t
u_int8_t	osdep/byteorder.h	/^	typedef uint8_t  u_int8_t;$/;"	t
uint	osdep/byteorder.h	229;"	d
uiv_root	aircrack-ng.h	/^	unsigned char **uiv_root;			 \/* IV uniqueness root struct    *\/$/;"	m	struct:AP_info
uiv_root	airnodes.c	/^	unsigned char **uiv_root;     \/* unique iv root structure      *\/$/;"	m	struct:AP_INFO	file:
uiv_root	airodump-ng.h	/^    unsigned char **uiv_root; \/* unique iv root structure *\/$/;"	m	struct:AP_info
uiv_root	ivstools.c	/^    unsigned char **uiv_root; \/* unique iv root structure *\/$/;"	m	struct:AP_info	file:
uniqueiv_check	uniqueiv.c	/^int uniqueiv_check( unsigned char **uiv_root, unsigned char IV[3] )$/;"	f
uniqueiv_init	uniqueiv.c	/^unsigned char **uniqueiv_init( void )$/;"	f
uniqueiv_mark	uniqueiv.c	/^int uniqueiv_mark( unsigned char **uiv_root, unsigned char IV[3] )$/;"	f
uniqueiv_wipe	uniqueiv.c	/^void uniqueiv_wipe( unsigned char **uiv_root )$/;"	f
unix_accept_t	airsock.c	/^int unix_accept_t(int sock, int sec, int usec,$/;"	f
unix_connect_t	airsock.c	/^int unix_connect_t(const char *sock_file, int blocking)$/;"	f
unix_connect_u	airsock.c	/^int unix_connect_u(const char *sock_file, int blocking)$/;"	f
unused	aircrack-ng.h	/^	char unused[2];				 \/* Alignment *\/$/;"	m	struct:mergeBSSID
update_dataps	airodump-ng.c	/^int update_dataps()$/;"	f
update_ivbuf	aircrack-ng.c	/^int update_ivbuf( void )$/;"	f
update_rx_quality	airodump-ng.c	/^void update_rx_quality( )$/;"	f
update_s	airodump-ng.h	/^    int update_s;	    \/* update delay in sec  *\/$/;"	m	struct:globals
usage	airbase-ng.c	/^char usage[] =$/;"	v
usage	aircapture-main.c	/^void usage(int argc, char** argv)$/;"	f
usage	aircrack-ng.c	/^char usage[] =$/;"	v
usage	airdecap-ng.c	/^char usage[] =$/;"	v
usage	airdecloak-ng.c	/^void usage() {$/;"	f
usage	aireplay-ng.c	/^char usage[] =$/;"	v
usage	airodump-ng.c	/^char usage[] =$/;"	v
usage	airserv-ng.c	/^static void usage(char *p)$/;"	f	file:
usage	airshooter-main.c	/^void usage(const char *p)$/;"	f
usage	airtun-ng.c	/^char usage[] =$/;"	v
usage	besside-ng.c	/^static void usage(char *prog)$/;"	f	file:
usage	buddy-ng.c	/^void usage()$/;"	f
usage	easside-ng.c	/^void usage(char *p)$/;"	f
usage	ivstools.c	/^void usage(int what)$/;"	f
usage	makeivs-ng.c	/^char usage[] =$/;"	v
usage	packetforge-ng.c	/^char usage[] =$/;"	v
usage	set_channel.c	/^void usage()$/;"	f
usage	tkiptun-ng.c	/^char usage[] =$/;"	v
usage	wesside-ng.c	/^static void usage(char* pname)$/;"	f	file:
usage	wips-inspect.c	/^void usage(const char *p)$/;"	f
useDll	osdep/cygwin.c	/^	int		useDll;$/;"	m	struct:priv_cygwin	file:
use_fixed_nonce	airbase-ng.c	/^    int use_fixed_nonce;$/;"	m	struct:options	file:
usegpsd	airodump-ng.h	/^    int usegpsd;            \/* do we use GPSd?      *\/$/;"	m	struct:globals
ushort	osdep/byteorder.h	228;"	d
v	aircapture.h	/^	uint8_t *v;$/;"	m	struct:el
v	wpapsk.h	/^	uint8_t  v[PLAINTEXT_LENGTH + 1];$/;"	m	struct:__anon64
v	wpapsk.h	/^	uint8_t  v[PLAINTEXT_LENGTH + 1];$/;"	m	struct:wpapsk_password
v32	pseudo_intrinsics.h	/^	vtype32 v32;$/;"	m	union:__anon25
v64	pseudo_intrinsics.h	/^	vtype64 v64;$/;"	m	union:__anon25
vacuum	airolib-ng.c	/^void vacuum(sqlite3* db, int deep) {$/;"	f
vadd_epi32	pseudo_intrinsics.h	144;"	d
vadd_epi32	pseudo_intrinsics.h	187;"	d
vadd_epi32	pseudo_intrinsics.h	329;"	d
vadd_epi32	pseudo_intrinsics.h	433;"	d
vadd_epi32	pseudo_intrinsics.h	86;"	d
vadd_epi64	pseudo_intrinsics.h	145;"	d
vadd_epi64	pseudo_intrinsics.h	188;"	d
vadd_epi64	pseudo_intrinsics.h	330;"	d
vadd_epi64	pseudo_intrinsics.h	434;"	d
vadd_epi64	pseudo_intrinsics.h	87;"	d
val	aircrack-ng.h	/^typedef struct { int idx, val; }$/;"	m	struct:__anon72
val	kstats.c	/^typedef struct { int idx, val; } vote;$/;"	m	struct:__anon13	file:
valid_h80211_ctrl	h80211_types.h	69;"	d
valid_h80211_data	h80211_types.h	122;"	d
valid_h80211_frame	h80211_types.h	28;"	d
valid_h80211_mgnt	h80211_types.h	51;"	d
valid_mac_string	airconf-parse.c	/^int valid_mac_string(const char* macstr)$/;"	f
valid_ptk	crypto.h	/^    int keyver, valid_ptk;$/;"	m	struct:WPA_ST_info
validity_interval	ieee802_11_defs.h	/^					u8 validity_interval;$/;"	m	struct:ieee80211_mgmt::__anon34::__anon43::__anon44::__anon55
value	aircrack-ptw-lib.c	/^	uint8_t value;$/;"	m	struct:__anon23	file:
vand	pseudo_intrinsics.h	146;"	d
vand	pseudo_intrinsics.h	189;"	d
vand	pseudo_intrinsics.h	331;"	d
vand	pseudo_intrinsics.h	435;"	d
vand	pseudo_intrinsics.h	88;"	d
vandnot	pseudo_intrinsics.h	147;"	d
vandnot	pseudo_intrinsics.h	190;"	d
vandnot	pseudo_intrinsics.h	332;"	d
vandnot	pseudo_intrinsics.h	436;"	d
vandnot	pseudo_intrinsics.h	89;"	d
vanyeq_epi32	pseudo_intrinsics.h	/^static inline int vanyeq_epi32(vtype x, vtype y)$/;"	f
vanyeq_epi32	pseudo_intrinsics.h	174;"	d
vanyeq_epi32	pseudo_intrinsics.h	226;"	d
vanyeq_epi32	pseudo_intrinsics.h	374;"	d
vanyeq_epi32	pseudo_intrinsics.h	502;"	d
variable	ieee802_11_defs.h	/^					u8 variable[]; \/* FT Request *\/$/;"	m	struct:ieee80211_mgmt::__anon34::__anon43::__anon44::__anon47
variable	ieee802_11_defs.h	/^					u8 variable[]; \/* FT Request *\/$/;"	m	struct:ieee80211_mgmt::__anon34::__anon43::__anon44::__anon48
variable	ieee802_11_defs.h	/^					u8 variable[];$/;"	m	struct:ieee80211_mgmt::__anon34::__anon43::__anon44::__anon45
variable	ieee802_11_defs.h	/^					u8 variable[];$/;"	m	struct:ieee80211_mgmt::__anon34::__anon43::__anon44::__anon51
variable	ieee802_11_defs.h	/^					u8 variable[];$/;"	m	struct:ieee80211_mgmt::__anon34::__anon43::__anon44::__anon52
variable	ieee802_11_defs.h	/^					u8 variable[];$/;"	m	struct:ieee80211_mgmt::__anon34::__anon43::__anon44::__anon53
variable	ieee802_11_defs.h	/^					u8 variable[];$/;"	m	struct:ieee80211_mgmt::__anon34::__anon43::__anon44::__anon54
variable	ieee802_11_defs.h	/^					u8 variable[];$/;"	m	struct:ieee80211_mgmt::__anon34::__anon43::__anon44::__anon55
variable	ieee802_11_defs.h	/^					u8 variable[];$/;"	m	struct:ieee80211_mgmt::__anon34::__anon43::__anon44::__anon56
variable	ieee802_11_defs.h	/^					u8 variable[];$/;"	m	struct:ieee80211_mgmt::__anon34::__anon43::__anon44::__anon57
variable	ieee802_11_defs.h	/^					u8 variable[];$/;"	m	struct:ieee80211_mgmt::__anon34::__anon43::__anon44::__anon58
variable	ieee802_11_defs.h	/^					u8 variable[];$/;"	m	struct:ieee80211_mgmt::__anon34::__anon43::__anon44::__anon59
variable	ieee802_11_defs.h	/^					u8 variable[];$/;"	m	struct:ieee80211_mgmt::__anon34::__anon43::__anon44::__anon60
variable	ieee802_11_defs.h	/^			u8 variable[];$/;"	m	struct:ieee80211_mgmt::__anon34::__anon35
variable	ieee802_11_defs.h	/^			u8 variable[];$/;"	m	struct:ieee80211_mgmt::__anon34::__anon36
variable	ieee802_11_defs.h	/^			u8 variable[];$/;"	m	struct:ieee80211_mgmt::__anon34::__anon37
variable	ieee802_11_defs.h	/^			u8 variable[];$/;"	m	struct:ieee80211_mgmt::__anon34::__anon38
variable	ieee802_11_defs.h	/^			u8 variable[];$/;"	m	struct:ieee80211_mgmt::__anon34::__anon39
variable	ieee802_11_defs.h	/^			u8 variable[];$/;"	m	struct:ieee80211_mgmt::__anon34::__anon40
variable	ieee802_11_defs.h	/^			u8 variable[];$/;"	m	struct:ieee80211_mgmt::__anon34::__anon41
variable	ieee802_11_defs.h	/^			u8 variable[];$/;"	m	struct:ieee80211_mgmt::__anon34::__anon42
variable	ieee802_11_defs.h	/^	u8 variable[0];	\/* Channel List *\/$/;"	m	struct:ieee80211_2040_intol_chan_report
variable	ieee802_11_defs.h	/^	u8 variable[0];$/;"	m	struct:multi_band_ie
variable	ieee802_11_defs.h	/^	u8 variable[0];$/;"	m	struct:rrm_link_measurement_report
variable	ieee802_11_defs.h	/^	u8 variable[0];$/;"	m	struct:rrm_link_measurement_request
vchar	common.c	/^char vchar(char ch)$/;"	f
vcmov	pseudo_intrinsics.h	148;"	d
vcmov	pseudo_intrinsics.h	191;"	d
vcmov	pseudo_intrinsics.h	262;"	d
vcmov	pseudo_intrinsics.h	264;"	d
vcmov	pseudo_intrinsics.h	333;"	d
vcmov	pseudo_intrinsics.h	438;"	d
vcmov	pseudo_intrinsics.h	440;"	d
vcmov	pseudo_intrinsics.h	90;"	d
vcmov_emu	pseudo_intrinsics.h	642;"	d
vcmov_emu	pseudo_intrinsics.h	644;"	d
vcmpeq_epi32	pseudo_intrinsics.h	336;"	d
vcmpeq_epi32	pseudo_intrinsics.h	444;"	d
vcmpeq_epi8_mask	pseudo_intrinsics.h	269;"	d
vcmpeq_epi8_mask	pseudo_intrinsics.h	335;"	d
vcmpeq_epi8_mask	pseudo_intrinsics.h	443;"	d
vcvtsi32	pseudo_intrinsics.h	337;"	d
vcvtsi32	pseudo_intrinsics.h	446;"	d
verbose	airbase-ng.c	/^    int verbose;$/;"	m	struct:options	file:
verify	airolib-ng.c	/^void verify(sqlite3* db, int complete) {$/;"	f
verify_essid	airolib-ng.c	/^int verify_essid(char* essid) {$/;"	f
verify_passwd	airolib-ng.c	/^int verify_passwd(char* passwd) {$/;"	f
version	airnodes.c	/^	unsigned char version;    \/* WPS Version *\/$/;"	m	struct:WPS_INFO	file:
version	airodump-ng.h	/^    unsigned char version;    \/* WPS Version *\/$/;"	m	struct:WPS_info
version	ieee802_11_defs.h	/^	u8 version; \/* 1 *\/$/;"	m	struct:wmm_tspec_element
version	ieee802_11_defs.h	/^	u8 version; \/* 1 for WMM version 1.0 *\/$/;"	m	struct:wmm_information_element
version	ieee802_11_defs.h	/^	u8 version; \/* 1 for WMM version 1.0 *\/$/;"	m	struct:wmm_parameter_element
version	pcap.h	/^    uint16_t version;$/;"	m	struct:ivs2_filehdr
version	wi_packet.h	/^	uint8_t    version:2;$/;"	m	struct:_wi_fc_t
version_major	pcap.h	/^    uint16_t version_major;$/;"	m	struct:pcap_file_header
version_minor	pcap.h	/^    uint16_t version_minor;$/;"	m	struct:pcap_file_header
version_type_subtype	airdecloak-ng.h	/^    unsigned char version_type_subtype; \/\/ First byte$/;"	m	struct:packet_elt
vgather_epi32	pseudo_intrinsics.h	197;"	d
vgather_epi32	pseudo_intrinsics.h	338;"	d
vgather_epi64	pseudo_intrinsics.h	198;"	d
vgather_epi64	pseudo_intrinsics.h	339;"	d
vhex_print	common.c	/^int vhex_print(char* buf, size_t buflen, uint8_t *data, size_t datalen)$/;"	f
vht_basic_mcs_set	ieee802_11_defs.h	/^	le16 vht_basic_mcs_set;$/;"	m	struct:ieee80211_vht_operation
vht_capabilities_info	ieee802_11_defs.h	/^	le32 vht_capabilities_info;$/;"	m	struct:ieee80211_vht_capabilities
vht_op_info_chan_center_freq_seg0_idx	ieee802_11_defs.h	/^	u8 vht_op_info_chan_center_freq_seg0_idx;$/;"	m	struct:ieee80211_vht_operation
vht_op_info_chan_center_freq_seg1_idx	ieee802_11_defs.h	/^	u8 vht_op_info_chan_center_freq_seg1_idx;$/;"	m	struct:ieee80211_vht_operation
vht_op_info_chwidth	ieee802_11_defs.h	/^	u8 vht_op_info_chwidth;$/;"	m	struct:ieee80211_vht_operation
vht_supported_mcs_set	ieee802_11_defs.h	/^	} vht_supported_mcs_set;$/;"	m	struct:ieee80211_vht_capabilities	typeref:struct:ieee80211_vht_capabilities::__anon61
vinsert_epi32	pseudo_intrinsics.h	340;"	d
vinsert_epi32	pseudo_intrinsics.h	448;"	d
visual_inspection	aircrack-ng.h	/^	int visual_inspection;       \/* Enabling\/disabling visual    *\/$/;"	m	struct:options
vload	pseudo_intrinsics.h	149;"	d
vload	pseudo_intrinsics.h	199;"	d
vload	pseudo_intrinsics.h	341;"	d
vload	pseudo_intrinsics.h	449;"	d
vload	pseudo_intrinsics.h	91;"	d
vloadu	pseudo_intrinsics.h	150;"	d
vloadu	pseudo_intrinsics.h	200;"	d
vloadu	pseudo_intrinsics.h	342;"	d
vloadu	pseudo_intrinsics.h	450;"	d
vloadu	pseudo_intrinsics.h	92;"	d
vloadu_emu	pseudo_intrinsics.h	/^static INLINE vtype vloadu_emu(const void *addr)$/;"	f
vmovemask_epi8	pseudo_intrinsics.h	343;"	d
vmovemask_epi8	pseudo_intrinsics.h	451;"	d
vns	osdep/radiotap/parse.c	/^static const struct ieee80211_radiotap_vendor_namespaces vns = {$/;"	v	typeref:struct:ieee80211_radiotap_vendor_namespaces	file:
vns_array	osdep/radiotap/parse.c	/^static const struct ieee80211_radiotap_namespace vns_array[] = {$/;"	v	typeref:struct:ieee80211_radiotap_namespace	file:
vor	pseudo_intrinsics.h	152;"	d
vor	pseudo_intrinsics.h	201;"	d
vor	pseudo_intrinsics.h	344;"	d
vor	pseudo_intrinsics.h	452;"	d
vor	pseudo_intrinsics.h	94;"	d
vorn	pseudo_intrinsics.h	95;"	d
vote	aircrack-ng.h	/^vote;$/;"	t	typeref:struct:__anon72
vote	kstats.c	/^typedef struct { int idx, val; } vote;$/;"	t	typeref:struct:__anon13	file:
votes	aircrack-ng.h	/^	int votes[N_ATTACKS];			\/* votes for korek attacks *\/$/;"	m	struct:options
votes	aircrack-ptw-lib.h	/^	int votes;$/;"	m	struct:__anon69
vpermute2x128	pseudo_intrinsics.h	345;"	d
vpermute2x128	pseudo_intrinsics.h	454;"	d
vpermute4x64_epi64	pseudo_intrinsics.h	346;"	d
vpermute4x64_epi64	pseudo_intrinsics.h	453;"	d
vroti16_epi32	pseudo_intrinsics.h	100;"	d
vroti16_epi32	pseudo_intrinsics.h	155;"	d
vroti16_epi32	pseudo_intrinsics.h	204;"	d
vroti16_epi32	pseudo_intrinsics.h	349;"	d
vroti16_epi32	pseudo_intrinsics.h	457;"	d
vroti16_epi32	pseudo_intrinsics.h	464;"	d
vroti16_epi32	pseudo_intrinsics.h	466;"	d
vroti16_epi32	pseudo_intrinsics.h	468;"	d
vroti_epi32	pseudo_intrinsics.h	153;"	d
vroti_epi32	pseudo_intrinsics.h	202;"	d
vroti_epi32	pseudo_intrinsics.h	347;"	d
vroti_epi32	pseudo_intrinsics.h	456;"	d
vroti_epi32	pseudo_intrinsics.h	460;"	d
vroti_epi32	pseudo_intrinsics.h	96;"	d
vroti_epi32_emu	pseudo_intrinsics.h	662;"	d
vroti_epi64	pseudo_intrinsics.h	154;"	d
vroti_epi64	pseudo_intrinsics.h	203;"	d
vroti_epi64	pseudo_intrinsics.h	348;"	d
vroti_epi64	pseudo_intrinsics.h	458;"	d
vroti_epi64	pseudo_intrinsics.h	461;"	d
vroti_epi64	pseudo_intrinsics.h	98;"	d
vroti_epi64_emu	pseudo_intrinsics.h	666;"	d
vs_public_action	ieee802_11_defs.h	/^				} STRUCT_PACKED vs_public_action;$/;"	m	union:ieee80211_mgmt::__anon34::__anon43::__anon44	typeref:struct:ieee80211_mgmt::__anon34::__anon43::__anon44::__anon54
vscatter_epi32	pseudo_intrinsics.h	205;"	d
vscatter_epi64	pseudo_intrinsics.h	206;"	d
vset1_epi32	pseudo_intrinsics.h	101;"	d
vset1_epi32	pseudo_intrinsics.h	156;"	d
vset1_epi32	pseudo_intrinsics.h	208;"	d
vset1_epi32	pseudo_intrinsics.h	351;"	d
vset1_epi32	pseudo_intrinsics.h	473;"	d
vset1_epi64	pseudo_intrinsics.h	102;"	d
vset1_epi64	pseudo_intrinsics.h	157;"	d
vset1_epi64	pseudo_intrinsics.h	209;"	d
vset1_epi64	pseudo_intrinsics.h	352;"	d
vset1_epi64	pseudo_intrinsics.h	475;"	d
vset1_epi64	pseudo_intrinsics.h	478;"	d
vset1_epi64x	pseudo_intrinsics.h	580;"	d
vset1_epi8	pseudo_intrinsics.h	207;"	d
vset1_epi8	pseudo_intrinsics.h	350;"	d
vset1_epi8	pseudo_intrinsics.h	472;"	d
vset_epi32	pseudo_intrinsics.h	103;"	d
vset_epi32	pseudo_intrinsics.h	158;"	d
vset_epi32	pseudo_intrinsics.h	210;"	d
vset_epi32	pseudo_intrinsics.h	353;"	d
vset_epi32	pseudo_intrinsics.h	471;"	d
vset_epi64	pseudo_intrinsics.h	104;"	d
vset_epi64	pseudo_intrinsics.h	159;"	d
vset_epi64	pseudo_intrinsics.h	211;"	d
vset_epi64	pseudo_intrinsics.h	354;"	d
vset_epi64	pseudo_intrinsics.h	476;"	d
vset_epi64	pseudo_intrinsics.h	479;"	d
vset_epi64x	pseudo_intrinsics.h	581;"	d
vsetzero	pseudo_intrinsics.h	105;"	d
vsetzero	pseudo_intrinsics.h	160;"	d
vsetzero	pseudo_intrinsics.h	212;"	d
vsetzero	pseudo_intrinsics.h	355;"	d
vsetzero	pseudo_intrinsics.h	481;"	d
vshuffle_epi32	pseudo_intrinsics.h	213;"	d
vshuffle_epi32	pseudo_intrinsics.h	357;"	d
vshuffle_epi32	pseudo_intrinsics.h	485;"	d
vshuffle_epi8	pseudo_intrinsics.h	270;"	d
vshuffle_epi8	pseudo_intrinsics.h	356;"	d
vshuffle_epi8	pseudo_intrinsics.h	483;"	d
vshufflehi_epi16	pseudo_intrinsics.h	271;"	d
vshufflehi_epi16	pseudo_intrinsics.h	358;"	d
vshufflehi_epi16	pseudo_intrinsics.h	486;"	d
vshufflelo_epi16	pseudo_intrinsics.h	272;"	d
vshufflelo_epi16	pseudo_intrinsics.h	359;"	d
vshufflelo_epi16	pseudo_intrinsics.h	487;"	d
vslli_epi16	pseudo_intrinsics.h	273;"	d
vslli_epi16	pseudo_intrinsics.h	360;"	d
vslli_epi16	pseudo_intrinsics.h	488;"	d
vslli_epi32	pseudo_intrinsics.h	106;"	d
vslli_epi32	pseudo_intrinsics.h	161;"	d
vslli_epi32	pseudo_intrinsics.h	214;"	d
vslli_epi32	pseudo_intrinsics.h	361;"	d
vslli_epi32	pseudo_intrinsics.h	489;"	d
vslli_epi64	pseudo_intrinsics.h	107;"	d
vslli_epi64	pseudo_intrinsics.h	162;"	d
vslli_epi64	pseudo_intrinsics.h	215;"	d
vslli_epi64	pseudo_intrinsics.h	362;"	d
vslli_epi64	pseudo_intrinsics.h	490;"	d
vslli_epi64a	pseudo_intrinsics.h	649;"	d
vslli_epi64a	pseudo_intrinsics.h	653;"	d
vsrli_epi16	pseudo_intrinsics.h	274;"	d
vsrli_epi16	pseudo_intrinsics.h	363;"	d
vsrli_epi16	pseudo_intrinsics.h	491;"	d
vsrli_epi32	pseudo_intrinsics.h	108;"	d
vsrli_epi32	pseudo_intrinsics.h	163;"	d
vsrli_epi32	pseudo_intrinsics.h	216;"	d
vsrli_epi32	pseudo_intrinsics.h	364;"	d
vsrli_epi32	pseudo_intrinsics.h	492;"	d
vsrli_epi64	pseudo_intrinsics.h	109;"	d
vsrli_epi64	pseudo_intrinsics.h	164;"	d
vsrli_epi64	pseudo_intrinsics.h	217;"	d
vsrli_epi64	pseudo_intrinsics.h	365;"	d
vsrli_epi64	pseudo_intrinsics.h	493;"	d
vstore	pseudo_intrinsics.h	110;"	d
vstore	pseudo_intrinsics.h	165;"	d
vstore	pseudo_intrinsics.h	218;"	d
vstore	pseudo_intrinsics.h	366;"	d
vstore	pseudo_intrinsics.h	494;"	d
vstoreu	pseudo_intrinsics.h	111;"	d
vstoreu	pseudo_intrinsics.h	166;"	d
vstoreu	pseudo_intrinsics.h	219;"	d
vstoreu	pseudo_intrinsics.h	367;"	d
vstoreu	pseudo_intrinsics.h	495;"	d
vstoreu_emu	pseudo_intrinsics.h	/^static INLINE void vstoreu_emu(void *addr, vtype v)$/;"	f
vswap32	pseudo_intrinsics.h	126;"	d
vswap32	pseudo_intrinsics.h	176;"	d
vswap32	pseudo_intrinsics.h	276;"	d
vswap32	pseudo_intrinsics.h	295;"	d
vswap32	pseudo_intrinsics.h	384;"	d
vswap32	pseudo_intrinsics.h	508;"	d
vswap32	pseudo_intrinsics.h	516;"	d
vswap32_emu	pseudo_intrinsics.h	632;"	d
vswap64	pseudo_intrinsics.h	127;"	d
vswap64	pseudo_intrinsics.h	177;"	d
vswap64	pseudo_intrinsics.h	285;"	d
vswap64	pseudo_intrinsics.h	296;"	d
vswap64	pseudo_intrinsics.h	387;"	d
vswap64	pseudo_intrinsics.h	512;"	d
vswap64	pseudo_intrinsics.h	522;"	d
vswap64_emu	pseudo_intrinsics.h	637;"	d
vternarylogic	pseudo_intrinsics.h	265;"	d
vtype	pseudo_intrinsics.h	/^typedef __m128i vtype;$/;"	t
vtype	pseudo_intrinsics.h	/^typedef __m256i vtype;$/;"	t
vtype	pseudo_intrinsics.h	/^typedef __m512i vtype;$/;"	t
vtype	pseudo_intrinsics.h	/^typedef __m64i vtype;$/;"	t
vtype	pseudo_intrinsics.h	/^typedef uint32x4_t vtype; \/* the default one *\/$/;"	t
vtype	pseudo_intrinsics.h	/^} vtype;$/;"	t	typeref:union:__anon25
vtype	simd-intrinsics.h	176;"	d
vtype	simd-intrinsics.h	65;"	d
vtype32	pseudo_intrinsics.h	/^typedef vector unsigned int vtype32;$/;"	t
vtype64	pseudo_intrinsics.h	/^typedef uint64x2_t vtype64;$/;"	t
vtype64	pseudo_intrinsics.h	/^typedef vector unsigned long vtype64;$/;"	t
vtype8	pseudo_intrinsics.h	/^typedef uint8x16_t vtype8;$/;"	t
vunpackhi_epi32	pseudo_intrinsics.h	113;"	d
vunpackhi_epi32	pseudo_intrinsics.h	168;"	d
vunpackhi_epi32	pseudo_intrinsics.h	220;"	d
vunpackhi_epi32	pseudo_intrinsics.h	368;"	d
vunpackhi_epi32	pseudo_intrinsics.h	496;"	d
vunpackhi_epi64	pseudo_intrinsics.h	114;"	d
vunpackhi_epi64	pseudo_intrinsics.h	169;"	d
vunpackhi_epi64	pseudo_intrinsics.h	221;"	d
vunpackhi_epi64	pseudo_intrinsics.h	369;"	d
vunpackhi_epi64	pseudo_intrinsics.h	497;"	d
vunpacklo_epi32	pseudo_intrinsics.h	115;"	d
vunpacklo_epi32	pseudo_intrinsics.h	170;"	d
vunpacklo_epi32	pseudo_intrinsics.h	222;"	d
vunpacklo_epi32	pseudo_intrinsics.h	370;"	d
vunpacklo_epi32	pseudo_intrinsics.h	498;"	d
vunpacklo_epi64	pseudo_intrinsics.h	116;"	d
vunpacklo_epi64	pseudo_intrinsics.h	171;"	d
vunpacklo_epi64	pseudo_intrinsics.h	223;"	d
vunpacklo_epi64	pseudo_intrinsics.h	371;"	d
vunpacklo_epi64	pseudo_intrinsics.h	499;"	d
vxor	pseudo_intrinsics.h	117;"	d
vxor	pseudo_intrinsics.h	172;"	d
vxor	pseudo_intrinsics.h	224;"	d
vxor	pseudo_intrinsics.h	372;"	d
vxor	pseudo_intrinsics.h	500;"	d
w	MD5_std.h	/^	MD5_word w[15];$/;"	m	union:__anon26
wait_for_beacon	aireplay-ng.c	/^int wait_for_beacon(unsigned char *bssid, unsigned char *capa, char *essid)$/;"	f
wait_for_beacon	tkiptun-ng.c	/^int wait_for_beacon(unsigned char *bssid, unsigned char *capa, char *essid)$/;"	f
watchdog_next	besside-ng.c	/^static int watchdog_next(struct network *n)$/;"	f	file:
weight	aircrack-ptw-lib.h	/^	int weight;$/;"	m	struct:__anon70
wep	airbase-ng.c	/^    char            wep;$/;"	m	struct:Fragment_list	file:
wep	airbase-ng.c	/^    int wep;                 \/* capability encryption bit *\/$/;"	m	struct:ST_info	file:
wep	aircrack-ng.h	/^} wep;$/;"	v	typeref:struct:WEP_data
wep	airtun-ng.c	/^    char            wep;$/;"	m	struct:Fragment_list	file:
wep_crack	besside-ng.c	/^static void wep_crack(struct network *n)$/;"	f	file:
wep_crack_start	besside-ng.c	/^static void wep_crack_start(struct network *n)$/;"	f	file:
wep_decloak	aircrack-ng.h	/^	int wep_decloak;$/;"	m	struct:options
wep_flood	besside-ng.c	/^static void wep_flood(void *a)$/;"	f	file:
wepify	wesside-ng.c	/^static void wepify(struct wstate *ws, unsigned char* body, int dlen)$/;"	f	file:
wepkey	airbase-ng.c	/^    unsigned char wepkey[64];$/;"	m	struct:options	file:
wepkey	airdecap-ng.c	/^    unsigned char wepkey[64];$/;"	m	struct:options	file:
wepkey	airtun-ng.c	/^    unsigned char wepkey[64];$/;"	m	struct:options	file:
wepkey_crack_success	aircrack-ng.c	/^int wepkey_crack_success = 0;$/;"	v
weplen	airbase-ng.c	/^    int weplen, crypt;$/;"	m	struct:options	file:
weplen	airdecap-ng.c	/^    int weplen, crypt;$/;"	m	struct:options	file:
weplen	airtun-ng.c	/^    int weplen, crypt;$/;"	m	struct:options	file:
wfa_wnm_notif_subelem_id	ieee802_11_defs.h	/^enum wfa_wnm_notif_subelem_id {$/;"	g
wi	aircapture.h	/^	struct wif *wi;$/;"	m	struct:_AIRCAP_G	typeref:struct:_AIRCAP_G::wif
wi	airshooter.h	/^	struct wif *wi;$/;"	m	struct:_AIRSHOOT_G	typeref:struct:_AIRSHOOT_G::wif
wiToolsPath	osdep/linux.c	/^static char * wiToolsPath(const char * tool)$/;"	f	file:
wi_alloc	osdep/osdep.c	/^struct wif *wi_alloc(int sz)$/;"	f
wi_assoc_req_fixed	wi_packet.h	/^wi_assoc_req_fixed; \/\/ 4 byte$/;"	t	typeref:struct:_wi_assoc_req_fixed
wi_assoc_resp_fixed	wi_packet.h	/^wi_assoc_resp_fixed; \/\/ 6 byte$/;"	t	typeref:struct:_wi_assoc_resp_fixed
wi_auth_fixed	wi_packet.h	/^wi_auth_fixed; \/\/ 6 byte$/;"	t	typeref:struct:_wi_auth_fixed
wi_beacon_capa_flag	wi_packet.h	/^wi_beacon_capa_flag; \/\/ 2 byte$/;"	t	typeref:struct:_wi_beacon_capa_flag
wi_beacon_fixed	wi_packet.h	/^wi_beacon_fixed; \/\/ 12 byte$/;"	t	typeref:struct:_wi_beacon_fixed
wi_build_channel	osdep/osdep.c	/^void wi_build_channel(struct wif *wi)$/;"	f
wi_ch	osdep/osdep.h	/^	struct wif_ch wi_ch[MAX_NUM_CHANNEL];$/;"	m	struct:wif	typeref:struct:wif::wif_ch
wi_close	osdep/osdep.c	/^void wi_close(struct wif *wi)$/;"	f
wi_close	osdep/osdep.h	/^	void	(*wi_close)(struct wif *);$/;"	m	struct:wif
wi_ctrl_ba_bitmap	wi_packet.h	/^wi_ctrl_ba_bitmap; \/\/ 8 byte$/;"	t	typeref:struct:_wi_ctrl_ba_bitmap
wi_ctrl_ba_ctrl	wi_packet.h	/^wi_ctrl_ba_ctrl; \/\/ 2 byte$/;"	t	typeref:struct:_wi_ctrl_ba_control
wi_ctrl_ba_ssc	wi_packet.h	/^wi_ctrl_ba_ssc; \/\/ 2 byte$/;"	t	typeref:struct:_wi_ctrl_ba_starting_sequence_control
wi_ctrl_hdr_t	wi_packet.h	/^typedef struct _wi_ctrl_hdr_t wi_ctrl_hdr_t;$/;"	t	typeref:struct:_wi_ctrl_hdr_t
wi_data_llc	wi_packet.h	/^wi_data_llc;$/;"	t	typeref:struct:_wi_data_llc
wi_deauth_fixed	wi_packet.h	/^wi_deauth_fixed; \/\/ 2 byte$/;"	t	typeref:struct:_wi_deauth_fixed
wi_fc_t	wi_packet.h	/^typedef struct _wi_fc_t wi_fc_t; \/\/ 2 byte$/;"	t	typeref:struct:_wi_fc_t
wi_fd	aircapture.h	/^	int wi_fd;$/;"	m	struct:_AIRCAP_G
wi_fd	airshooter.h	/^	int wi_fd;$/;"	m	struct:_AIRSHOOT_G
wi_fd	osdep/osdep.c	/^int wi_fd(struct wif *wi)$/;"	f
wi_fd	osdep/osdep.h	/^	int	(*wi_fd)(struct wif *);$/;"	m	struct:wif
wi_flags_t	wi_packet.h	/^typedef struct _wi_flags_t wi_flags_t; \/\/ 1 byte$/;"	t	typeref:struct:_wi_flags_t
wi_fragseq_t	wi_packet.h	/^typedef struct _wi_fragseq_t wi_fragseq_t; \/\/ 2 byte$/;"	t	typeref:struct:_wi_fragseq_t
wi_get_channel	osdep/osdep.c	/^int wi_get_channel(struct wif *wi)$/;"	f
wi_get_channel	osdep/osdep.h	/^	int	(*wi_get_channel)(struct wif *);$/;"	m	struct:wif
wi_get_freq	osdep/osdep.c	/^int wi_get_freq(struct wif *wi)$/;"	f
wi_get_freq	osdep/osdep.h	/^	int	(*wi_get_freq)(struct wif *);$/;"	m	struct:wif
wi_get_ifname	osdep/osdep.c	/^char *wi_get_ifname(struct wif *wi)$/;"	f
wi_get_mac	osdep/osdep.c	/^int wi_get_mac(struct wif *wi, unsigned char *mac)$/;"	f
wi_get_mac	osdep/osdep.h	/^	int	(*wi_get_mac)(struct wif *, unsigned char *mac);$/;"	m	struct:wif
wi_get_monitor	osdep/osdep.c	/^int wi_get_monitor(struct wif *wi)$/;"	f
wi_get_monitor	osdep/osdep.h	/^	int	(*wi_get_monitor)(struct wif *);$/;"	m	struct:wif
wi_get_mtu	osdep/osdep.c	/^int wi_get_mtu(struct wif *wi)$/;"	f
wi_get_mtu	osdep/osdep.h	/^	int	(*wi_get_mtu)(struct wif *);$/;"	m	struct:wif
wi_get_rate	osdep/osdep.c	/^int wi_get_rate(struct wif *wi)$/;"	f
wi_get_rate	osdep/osdep.h	/^	int	(*wi_get_rate)(struct wif *);$/;"	m	struct:wif
wi_hdr_t	wi_packet.h	/^typedef struct _wi_hdr_t wi_hdr_t;$/;"	t	typeref:struct:_wi_hdr_t
wi_interface	osdep/osdep.h	/^	char	wi_interface[MAX_IFACE_NAME];$/;"	m	struct:wif
wi_open	osdep/osdep.c	/^struct wif *wi_open(char *iface)$/;"	f
wi_open_osdep	osdep/cygwin.c	/^struct wif *wi_open_osdep(char *iface)$/;"	f
wi_open_osdep	osdep/darwin.c	/^struct wif *wi_open_osdep(char *iface)$/;"	f
wi_open_osdep	osdep/dummy.c	/^struct wif *wi_open_osdep(char *iface)$/;"	f
wi_open_osdep	osdep/freebsd.c	/^struct wif *wi_open_osdep(char *iface)$/;"	f
wi_open_osdep	osdep/linux.c	/^struct wif *wi_open_osdep(char *iface)$/;"	f
wi_open_osdep	osdep/netbsd.c	/^struct wif *wi_open_osdep(char *iface)$/;"	f
wi_open_osdep	osdep/openbsd.c	/^struct wif *wi_open_osdep(char *iface)$/;"	f
wi_priv	osdep/osdep.c	/^void *wi_priv(struct wif *wi)$/;"	f
wi_priv	osdep/osdep.h	/^	void	*wi_priv;$/;"	m	struct:wif
wi_qos_control	wi_packet.h	/^wi_qos_control; \/\/ 2 byte$/;"	t	typeref:struct:_wi_qos_control
wi_read	osdep/osdep.c	/^int wi_read(struct wif *wi, unsigned char *h80211, int len, struct rx_info *ri)$/;"	f
wi_read	osdep/osdep.h	/^	int	(*wi_read) (struct wif *, unsigned char *h80211, int len, struct rx_info *);$/;"	m	struct:wif
wi_reassoc_req_fixed	wi_packet.h	/^wi_reassoc_req_fixed; \/\/ 10 byte$/;"	t	typeref:struct:_wi_reassoc_req_fixed
wi_reassoc_resp_fixed	wi_packet.h	/^wi_reassoc_resp_fixed; \/\/ 6 byte$/;"	t
wi_set_channel	osdep/osdep.c	/^int wi_set_channel(struct wif *wi, int chan)$/;"	f
wi_set_channel	osdep/osdep.h	/^	int	(*wi_set_channel)(struct wif *, int chan);$/;"	m	struct:wif
wi_set_freq	osdep/osdep.c	/^int wi_set_freq(struct wif *wi, int freq)$/;"	f
wi_set_freq	osdep/osdep.h	/^	int	(*wi_set_freq)(struct wif *, int freq);$/;"	m	struct:wif
wi_set_mac	osdep/osdep.c	/^int wi_set_mac(struct wif *wi, unsigned char *mac)$/;"	f
wi_set_mac	osdep/osdep.h	/^	int	(*wi_set_mac)(struct wif *, unsigned char *mac);$/;"	m	struct:wif
wi_set_mtu	osdep/osdep.c	/^int wi_set_mtu(struct wif *wi, int mtu)$/;"	f
wi_set_mtu	osdep/osdep.h	/^	int	(*wi_set_mtu)(struct wif *, int mtu);$/;"	m	struct:wif
wi_set_rate	osdep/osdep.c	/^int wi_set_rate(struct wif *wi, int rate)$/;"	f
wi_set_rate	osdep/osdep.h	/^	int	(*wi_set_rate)(struct wif *, int rate);$/;"	m	struct:wif
wi_tag_t	wi_packet.h	/^typedef struct _wi_tag_t wi_tag_t;$/;"	t	typeref:struct:_wi_tag_t
wi_write	osdep/osdep.c	/^int wi_write(struct wif *wi, unsigned char *h80211, int len,$/;"	f
wi_write	osdep/osdep.h	/^	int	(*wi_write)(struct wif *, unsigned char *h80211, int len, struct tx_info *);$/;"	m	struct:wif
width_trigger_scan_interval	ieee802_11_defs.h	/^	le16 width_trigger_scan_interval;$/;"	m	struct:ieee80211_obss_scan_parameters
wif	osdep/osdep.h	/^struct wif {$/;"	s
wif_ch	osdep/channel.h	/^struct wif_ch$/;"	s
wif_mtu	airbase-ng.c	/^    int wif_mtu;        \/\/MTU of wireless interface$/;"	m	struct:options	file:
wifi_assoc_resp	besside-ng.c	/^static void wifi_assoc_resp(struct network *n, struct ieee80211_frame *wh,$/;"	f	file:
wifi_auth	besside-ng.c	/^static void wifi_auth(struct network *n, struct ieee80211_frame *wh,$/;"	f	file:
wifi_beacon	besside-ng.c	/^static void wifi_beacon(struct network *n, struct ieee80211_frame *wh,$/;"	f	file:
wifi_ctl	besside-ng.c	/^static void wifi_ctl(struct ieee80211_frame *wh, int len)$/;"	f	file:
wifi_data	besside-ng.c	/^static void wifi_data(struct network *n, struct ieee80211_frame *wh, int len)$/;"	f	file:
wifi_display_subelem	ieee802_11_defs.h	/^enum wifi_display_subelem {$/;"	g
wifi_mgt	besside-ng.c	/^static void wifi_mgt(struct network *n, struct ieee80211_frame *wh, int len)$/;"	f	file:
wifi_read	besside-ng.c	/^static void wifi_read(void)$/;"	f	file:
wifi_send	besside-ng.c	/^static void wifi_send(void *p, int len)$/;"	f	file:
window_x2	include/if_llc.h	/^		uint8_t window_x2;$/;"	m	struct:llc::__anon6::__anon7
wkp	aircrack-ng.h	/^	char * wkp;					 \/* EWSA Project file *\/$/;"	m	struct:options
wkp_frame	wkp-frame.h	/^char wkp_frame[WKP_FRAME_LENGTH] = {$/;"	v
wl	airodump-ng.h	/^    char * wl;$/;"	m	struct:globals
wl	osdep/linux.c	/^    char *wl;$/;"	m	struct:priv_linux	file:
wlanctlng	airodump-ng.h	/^    char * wlanctlng;$/;"	m	struct:globals
wlanctlng	osdep/linux.c	/^    char *wlanctlng; \/* XXX never set *\/$/;"	m	struct:priv_linux	file:
wme_id	include/ieee80211.h	/^	u_int8_t	wme_id;		\/* IEEE80211_ELEMID_VENDOR *\/$/;"	m	struct:ieee80211_wme_info
wme_info	include/ieee80211.h	/^	u_int8_t	wme_info;	\/* QoS info *\/$/;"	m	struct:ieee80211_wme_info
wme_len	include/ieee80211.h	/^	u_int8_t	wme_len;	\/* length in bytes *\/$/;"	m	struct:ieee80211_wme_info
wme_oui	include/ieee80211.h	/^	u_int8_t	wme_oui[3];	\/* 0x00, 0x50, 0xf2 *\/$/;"	m	struct:ieee80211_wme_info
wme_subtype	include/ieee80211.h	/^	u_int8_t	wme_subtype;	\/* OUI subtype *\/$/;"	m	struct:ieee80211_wme_info
wme_type	include/ieee80211.h	/^	u_int8_t	wme_type;	\/* OUI type *\/$/;"	m	struct:ieee80211_wme_info
wme_version	include/ieee80211.h	/^	u_int8_t	wme_version;	\/* spec revision *\/$/;"	m	struct:ieee80211_wme_info
wmm_ac	ieee802_11_defs.h	/^enum wmm_ac {$/;"	g
wmm_ac_parameter	ieee802_11_defs.h	/^struct wmm_ac_parameter {$/;"	s
wmm_action	ieee802_11_defs.h	/^				} STRUCT_PACKED wmm_action;$/;"	m	union:ieee80211_mgmt::__anon34::__anon43::__anon44	typeref:struct:ieee80211_mgmt::__anon34::__anon43::__anon44::__anon45
wmm_information_element	ieee802_11_defs.h	/^struct wmm_information_element {$/;"	s
wmm_parameter_element	ieee802_11_defs.h	/^struct wmm_parameter_element {$/;"	s
wmm_tspec_element	ieee802_11_defs.h	/^struct wmm_tspec_element {$/;"	s
wnm_action	ieee802_11_defs.h	/^enum wnm_action {$/;"	g
wnm_sleep_element	ieee802_11_defs.h	/^struct wnm_sleep_element {$/;"	s
wnm_sleep_mode_response_status	ieee802_11_defs.h	/^enum wnm_sleep_mode_response_status {$/;"	g
wnm_sleep_mode_subelement_id	ieee802_11_defs.h	/^enum wnm_sleep_mode_subelement_id {$/;"	g
wnm_sleep_req	ieee802_11_defs.h	/^				} STRUCT_PACKED wnm_sleep_req;$/;"	m	union:ieee80211_mgmt::__anon34::__anon43::__anon44	typeref:struct:ieee80211_mgmt::__anon34::__anon43::__anon44::__anon51
wnm_sleep_resp	ieee802_11_defs.h	/^				} STRUCT_PACKED wnm_sleep_resp;$/;"	m	union:ieee80211_mgmt::__anon34::__anon43::__anon44	typeref:struct:ieee80211_mgmt::__anon34::__anon43::__anon44::__anon52
word	aircrack-ng.h	/^	char *word;$/;"	m	struct:hashdb_rec
wordcount	aircrack-ng.h	/^	long long int wordcount;		\/* Total wordcount for all dicts*\/$/;"	m	struct:options
wordcount	aircrack-ng.h	/^	off_t	wordcount;			\/* Total amount of words in dict file *\/$/;"	m	struct:dictfiles
wpa	airbase-ng.c	/^    struct WPA_hdsk wpa;     \/* WPA handshake data        *\/$/;"	m	struct:ST_info	typeref:struct:ST_info::WPA_hdsk	file:
wpa	aircapture.h	/^	el *wpa;$/;"	m	struct:el_list
wpa	aircrack-ng.h	/^	struct WPA_hdsk wpa;		 \/* WPA handshake data           *\/$/;"	m	struct:ST_info	typeref:struct:ST_info::WPA_hdsk
wpa	aircrack-ng.h	/^	struct WPA_hdsk wpa;		 \/* valid WPA handshake data     *\/$/;"	m	struct:AP_info	typeref:struct:AP_info::WPA_hdsk
wpa	airnodes.c	/^	struct WPA_hdsk wpa;     \/* WPA handshake data        *\/$/;"	m	struct:STA_INFO	typeref:struct:STA_INFO::WPA_hdsk	file:
wpa	airodump-ng.h	/^    struct WPA_hdsk wpa;     \/* WPA handshake data        *\/$/;"	m	struct:ST_info	typeref:struct:ST_info::WPA_hdsk
wpa	ivstools.c	/^    struct WPA_hdsk wpa;     \/* WPA handshake data        *\/$/;"	m	struct:ST_info	typeref:struct:ST_info::WPA_hdsk	file:
wpa	tkiptun-ng.c	/^    struct WPA_hdsk wpa;    \/* valid WPA handshake data     *\/$/;"	m	struct:options	typeref:struct:options::WPA_hdsk	file:
wpa1type	airbase-ng.c	/^    int wpa1type;$/;"	m	struct:options	file:
wpa2type	airbase-ng.c	/^    int wpa2type;$/;"	m	struct:options	file:
wpa_authselcnt	include/ieee80211.h	/^	u_int16_t	wpa_authselcnt;	\/* authentication selector cnt*\/$/;"	m	struct:ieee80211_ie_wpa
wpa_authsels	include/ieee80211.h	/^	u_int32_t	wpa_authsels[8];\/* selectors *\/$/;"	m	struct:ieee80211_ie_wpa
wpa_bssid	airodump-ng.h	/^    unsigned char wpa_bssid[6];   \/* the wpa handshake bssid   *\/$/;"	m	struct:globals
wpa_caps	include/ieee80211.h	/^	u_int16_t	wpa_caps;	\/* 802.11i capabilities *\/$/;"	m	struct:ieee80211_ie_wpa
wpa_client	airbase-ng.c	/^int wpa_client(struct ST_info *st_cur,unsigned char* tag, int length)$/;"	f
wpa_crack	besside-ng.c	/^static void wpa_crack(struct network *n)$/;"	f	file:
wpa_data	aircrack-ng.c	/^struct WPA_data wpa_data[MAX_THREADS];$/;"	v	typeref:struct:WPA_data
wpa_essid	tkiptun-ng.c	/^    char  wpa_essid[256];   \/* essid used for calculating the pmk out of the psk *\/$/;"	m	struct:options	file:
wpa_id	include/ieee80211.h	/^	u_int8_t	wpa_id;		\/* IEEE80211_ELEMID_VENDOR *\/$/;"	m	struct:ieee80211_ie_wpa
wpa_len	include/ieee80211.h	/^	u_int8_t	wpa_len;	\/* length in bytes *\/$/;"	m	struct:ieee80211_ie_wpa
wpa_mcipher	include/ieee80211.h	/^	u_int32_t	wpa_mcipher[1];	\/* multicast\/group key cipher *\/$/;"	m	struct:ieee80211_ie_wpa
wpa_oui	include/ieee80211.h	/^	u_int8_t	wpa_oui[3];	\/* 0x00, 0x50, 0xf2 *\/$/;"	m	struct:ieee80211_ie_wpa
wpa_pmkidcnt	include/ieee80211.h	/^	u_int16_t	wpa_pmkidcnt;	\/* 802.11i pmkid count *\/$/;"	m	struct:ieee80211_ie_wpa
wpa_pmkids	include/ieee80211.h	/^	u_int16_t	wpa_pmkids[8];	\/* 802.11i pmkids *\/$/;"	m	struct:ieee80211_ie_wpa
wpa_receive_passphrase	aircrack-ng.c	/^inline int wpa_receive_passphrase(char *key, struct WPA_data* data)$/;"	f
wpa_send_passphrase	aircrack-ng.c	/^inline int wpa_send_passphrase(char *key, struct WPA_data* data, int lock)$/;"	f
wpa_sta	tkiptun-ng.c	/^    struct WPA_ST_info wpa_sta; \/* used to calculate the pmk *\/$/;"	m	struct:options	typeref:struct:options::WPA_ST_info	file:
wpa_stored	ivstools.c	/^    int wpa_stored;           \/* wpa stored in ivs file?   *\/$/;"	m	struct:AP_info	file:
wpa_time	tkiptun-ng.c	/^    time_t wpa_time;           \/* time when the wpa handshake arrived *\/$/;"	m	struct:options	file:
wpa_type	include/ieee80211.h	/^	u_int8_t	wpa_type;	\/* OUI type *\/$/;"	m	struct:ieee80211_ie_wpa
wpa_uciphercnt	include/ieee80211.h	/^	u_int16_t	wpa_uciphercnt;	\/* # pairwise key ciphers *\/$/;"	m	struct:ieee80211_ie_wpa
wpa_uciphers	include/ieee80211.h	/^	u_int32_t	wpa_uciphers[8];\/* ciphers *\/$/;"	m	struct:ieee80211_ie_wpa
wpa_upload	besside-ng.c	/^static void wpa_upload(void)$/;"	f	file:
wpa_version	include/ieee80211.h	/^	u_int16_t	wpa_version;	\/* spec revision *\/$/;"	m	struct:ieee80211_ie_wpa
wpa_wordlists_done	aircrack-ng.c	/^int wpa_wordlists_done = 0;$/;"	v
wpahash	airbase-ng.c	/^    int wpahash;             \/* 1=md5(tkip) 2=sha1(ccmp)  *\/$/;"	m	struct:ST_info	file:
wpapass	wpapsk.c	/^wpapsk_password *wpapass[128]	= { 0 };$/;"	v
wpapsk_password	wpapsk.h	/^struct wpapsk_password {$/;"	s
wpapsk_password	wpapsk.h	/^} wpapsk_password;$/;"	t	typeref:struct:__anon64
wpapsk_sse	wpapsk.c	/^static MAYBE_INLINE void wpapsk_sse(int threadid, int count, char *salt, wpapsk_password * in)$/;"	f	file:
wpatype	airbase-ng.c	/^    int wpatype;             \/* 1=wpa1 2=wpa2             *\/$/;"	m	struct:ST_info	file:
wps	airnodes.c	/^	WPS_INFO wps;$/;"	m	struct:AP_INFO	file:
wps	airodump-ng.h	/^    struct WPS_info wps;$/;"	m	struct:AP_info	typeref:struct:AP_info::WPS_info
wrap	buddy-ng.c	/^int wrap;$/;"	v
write_cap_packet	packetforge-ng.c	/^int write_cap_packet(unsigned char* packet, int length)$/;"	f
write_packet	airdecap-ng.c	/^int write_packet( FILE *f_out, struct pcap_pkthdr *pkh, unsigned char *h80211 )$/;"	f
write_packet	airdecloak-ng.c	/^BOOLEAN write_packet(FILE * file, struct packet_elt * packet)$/;"	f
write_packets	airdecloak-ng.c	/^BOOLEAN write_packets() {$/;"	f
write_pcap	besside-ng.c	/^static void write_pcap(int fd, void *p, int len)$/;"	f	file:
write_pcap	wpaclean.c	/^static void write_pcap(int fd, void *p, int len)$/;"	f	file:
ws	airodump-ng.h	/^    struct winsize ws;      \/* console window size  *\/$/;"	m	struct:globals	typeref:struct:globals::winsize
ws_ack_timeout	wesside-ng.c	/^	unsigned int		ws_ack_timeout;$/;"	m	struct:wstate	file:
ws_apchan	wesside-ng.c	/^	int			ws_apchan;$/;"	m	struct:wstate	file:
ws_arpsend	wesside-ng.c	/^	struct timeval		ws_arpsend;$/;"	m	struct:wstate	typeref:struct:wstate::timeval	file:
ws_bss	wesside-ng.c	/^	unsigned char		ws_bss[6];$/;"	m	struct:wstate	file:
ws_chan	wesside-ng.c	/^	int			ws_chan;$/;"	m	struct:wstate	file:
ws_cipher	wesside-ng.c	/^	unsigned char		*ws_cipher;$/;"	m	struct:wstate	file:
ws_clen	wesside-ng.c	/^	int			ws_clen;$/;"	m	struct:wstate	file:
ws_crack_dur	wesside-ng.c	/^	int			ws_crack_dur;$/;"	m	struct:wstate	file:
ws_crack_pid	wesside-ng.c	/^	int			ws_crack_pid;$/;"	m	struct:wstate	file:
ws_crack_start	wesside-ng.c	/^	struct timeval		ws_crack_start;$/;"	m	struct:wstate	typeref:struct:wstate::timeval	file:
ws_dfs	wesside-ng.c	/^	struct frag_state	ws_dfs;$/;"	m	struct:wstate	typeref:struct:wstate::frag_state	file:
ws_dpi	wesside-ng.c	/^	struct prga_info	ws_dpi;$/;"	m	struct:wstate	typeref:struct:wstate::prga_info	file:
ws_fd	wesside-ng.c	/^	int			ws_fd;$/;"	m	struct:wstate	file:
ws_fs	wesside-ng.c	/^	struct frag_state	ws_fs;$/;"	m	struct:wstate	typeref:struct:wstate::frag_state	file:
ws_have_mac	wesside-ng.c	/^	int			ws_have_mac;$/;"	m	struct:wstate	file:
ws_ignore_ack	wesside-ng.c	/^	int			ws_ignore_ack;$/;"	m	struct:wstate	file:
ws_iv	wesside-ng.c	/^	unsigned char		ws_iv[3];$/;"	m	struct:wstate	file:
ws_last_wcount	wesside-ng.c	/^	struct timeval		ws_last_wcount;$/;"	m	struct:wstate	typeref:struct:wstate::timeval	file:
ws_last_wep_count	wesside-ng.c	/^	unsigned int		ws_last_wep_count;$/;"	m	struct:wstate	file:
ws_lasthop	wesside-ng.c	/^	struct timeval		ws_lasthop;$/;"	m	struct:wstate	typeref:struct:wstate::timeval	file:
ws_max_chan	wesside-ng.c	/^	int			ws_max_chan;$/;"	m	struct:wstate	file:
ws_min_prga	wesside-ng.c	/^	int			ws_min_prga;$/;"	m	struct:wstate	file:
ws_myip	wesside-ng.c	/^	char			ws_myip[16];$/;"	m	struct:wstate	file:
ws_mymac	wesside-ng.c	/^	unsigned char		ws_mymac[6];$/;"	m	struct:wstate	file:
ws_netip	wesside-ng.c	/^	char			*ws_netip;$/;"	m	struct:wstate	file:
ws_netip_arg	wesside-ng.c	/^	int			ws_netip_arg;$/;"	m	struct:wstate	file:
ws_packets	wesside-ng.c	/^	unsigned int		ws_packets;$/;"	m	struct:wstate	file:
ws_pi	wesside-ng.c	/^	struct prga_info	ws_pi;$/;"	m	struct:wstate	typeref:struct:wstate::prga_info	file:
ws_psent	wesside-ng.c	/^	unsigned int		ws_psent;$/;"	m	struct:wstate	file:
ws_ptw	wesside-ng.c	/^	PTW_attackstate		*ws_ptw;$/;"	m	struct:wstate	file:
ws_rate	wesside-ng.c	/^	unsigned int		ws_rate;$/;"	m	struct:wstate	file:
ws_real_start	wesside-ng.c	/^	struct timeval		ws_real_start;$/;"	m	struct:wstate	typeref:struct:wstate::timeval	file:
ws_retries	wesside-ng.c	/^	int			ws_retries;$/;"	m	struct:wstate	file:
ws_rtrmac	wesside-ng.c	/^	unsigned char		*ws_rtrmac;$/;"	m	struct:wstate	file:
ws_ssid	wesside-ng.c	/^	char			*ws_ssid;$/;"	m	struct:wstate	file:
ws_state	wesside-ng.c	/^	int			ws_state;$/;"	m	struct:wstate	file:
ws_thresh_incr	wesside-ng.c	/^	int			ws_thresh_incr;$/;"	m	struct:wstate	file:
ws_tsent	wesside-ng.c	/^	struct timeval		ws_tsent;$/;"	m	struct:wstate	typeref:struct:wstate::timeval	file:
ws_victim_mac	wesside-ng.c	/^	unsigned char		*ws_victim_mac;$/;"	m	struct:wstate	file:
ws_waiting_ack	wesside-ng.c	/^	int			ws_waiting_ack;$/;"	m	struct:wstate	file:
ws_wep_thresh	wesside-ng.c	/^	int			ws_wep_thresh;$/;"	m	struct:wstate	file:
ws_wi	wesside-ng.c	/^	struct wif		*ws_wi;$/;"	m	struct:wstate	typeref:struct:wstate::wif	file:
wstate	wesside-ng.c	/^struct wstate {$/;"	s	file:
wstate2str	besside-ng.c	/^static const char *wstate2str(int astate)$/;"	f	file:
x	crypto.h	/^    int x, y, m[256];$/;"	m	struct:rc4_state
x0123	aircrack-ptw-lib.c	/^static const uint32_t __attribute__((used)) __attribute__((aligned (16))) x0123 [4] = { 0, 1, 2, 3 };$/;"	v	file:
x4444	aircrack-ptw-lib.c	/^static const uint32_t __attribute__((used)) __attribute__((aligned (16))) x4444 [4] = { 4, 4, 4, 4 };$/;"	v	file:
xmalloc	besside-ng.c	/^static void *xmalloc(size_t sz)$/;"	f	file:
xmitcount	airbase-ng.c	/^    int             xmitcount;      \/* how often was this frame sent *\/$/;"	m	struct:CF_packet	file:
xml	ezxml/ezxml.c	/^    struct ezxml xml;     \/\/ is a super-struct built on top of ezxml struct$/;"	m	struct:ezxml_root	typeref:struct:ezxml_root::ezxml	file:
xor	easside-ng.c	/^void xor(void *out, void *clear, void *cipher, int len)$/;"	f
xor_keystream	airbase-ng.c	/^int xor_keystream(unsigned char *ph80211, unsigned char *keystream, int len)$/;"	f
xor_keystream	aireplay-ng.c	/^int xor_keystream(unsigned char *ph80211, unsigned char *keystream, int len)$/;"	f
xor_keystream	airtun-ng.c	/^int xor_keystream(unsigned char *ph80211, unsigned char *keystream, int len)$/;"	f
xor_keystream	tkiptun-ng.c	/^int xor_keystream(unsigned char *ph80211, unsigned char *keystream, int len)$/;"	f
xpmk1	wpapsk.c	/^unsigned char *xpmk1[128]	= { NULL };$/;"	v
xpmk2	wpapsk.c	/^unsigned char *xpmk2[128]	= { NULL };$/;"	v
xpmk3	wpapsk.c	/^unsigned char *xpmk3[128]	= { NULL };$/;"	v
xpmk4	wpapsk.c	/^unsigned char *xpmk4[128]	= { NULL };$/;"	v
xpmk5	wpapsk.c	/^unsigned char *xpmk5[128]	= { NULL };$/;"	v
xpmk6	wpapsk.c	/^unsigned char *xpmk6[128]	= { NULL };$/;"	v
xpmk7	wpapsk.c	/^unsigned char *xpmk7[128]	= { NULL };$/;"	v
xpmk8	wpapsk.c	/^unsigned char *xpmk8[128]	= { NULL };$/;"	v
xsse_crypt1	wpapsk.c	/^unsigned char *xsse_crypt1[128] = { NULL };$/;"	v
xsse_crypt2	wpapsk.c	/^unsigned char *xsse_crypt2[128] = { NULL };$/;"	v
xsse_hash1	wpapsk.c	/^unsigned char *xsse_hash1[128]	= { NULL };$/;"	v
xstr	osdep/cygwin.c	40;"	d	file:
y	crypto.h	/^    int x, y, m[256];$/;"	m	struct:rc4_state
