!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
-prefix	scripts/airdrop-ng/Makefile	/^	python setup.py install --prefix="$(prefix)" --record files.txt$/;"	m
-prefix	scripts/airgraph-ng/Makefile	/^	python setup.py install --prefix="$(prefix)" --record files.txt$/;"	m
ABORT	src/aireplay-ng.c	83;"	d	file:
ABORT	src/tkiptun-ng.c	82;"	d	file:
ABS	src/common.h	72;"	d
AC	src/MD5_std.h	/^	MD5_word AC[64];$/;"	m	struct:__anon30
AC2IFP	src/include/if_arp.h	110;"	d
ACCESSPOINTS_DATATABLE	lib/csharp/WirelessPanda/Readers/Reader.cs	/^        public const string ACCESSPOINTS_DATATABLE = "Access Points";$/;"	f	class:WirelessPanda.Readers.Reader
AC_ROOT	Makefile	/^AC_ROOT		= .$/;"	m
AC_ROOT	manpages/Makefile	/^AC_ROOT		= ..$/;"	m
AC_ROOT	scripts/Makefile	/^AC_ROOT		= ..$/;"	m
AC_ROOT	scripts/airdrop-ng/Makefile	/^AC_ROOT		= ..\/..$/;"	m
AC_ROOT	scripts/airdrop-ng/doc/Makefile	/^AC_ROOT		= ..\/..\/..\/$/;"	m
AC_ROOT	scripts/airgraph-ng/Makefile	/^AC_ROOT		= ..\/..$/;"	m
AC_ROOT	scripts/airgraph-ng/lib/Makefile	/^AC_ROOT		= ..\/..\/..$/;"	m
AC_ROOT	scripts/airgraph-ng/man/Makefile	/^AC_ROOT		= ..\/..\/..$/;"	m
AC_ROOT	scripts/versuck-ng/Makefile	/^AC_ROOT		= ..\/..$/;"	m
AC_ROOT	src/Makefile	/^AC_ROOT		= ..$/;"	m
AC_ROOT	src/osdep/Makefile	/^AC_ROOT	= ..\/..$/;"	m
AC_ROOT	test/Makefile	/^AC_ROOT		= ..$/;"	m
AC_ROOT	test/cryptounittest/Makefile	/^AC_ROOT         = ..\/..$/;"	m
ADAPTER_KEY	src/osdep/tap-win32/common.h	63;"	d
AES_KEY	src/gcrypt-openssl-wrapper.h	50;"	d
AES_encrypt	src/gcrypt-openssl-wrapper.h	51;"	d
AES_set_encrypt_key	src/gcrypt-openssl-wrapper.h	52;"	d
AF_UNIX	lib/csharp/MonoExample/NDesk-dbus/UnixNativeTransport.cs	/^		public const short AF_UNIX = 1;$/;"	f	class:NDesk.DBus.Transports.UnixSocket
AIRCRACK_NG_BIG_ENDIAN	src/osdep/byteorder.h	249;"	d
AIRCRACK_NG_BIG_ENDIAN	src/osdep/byteorder.h	251;"	d
AIRCRACK_NG_BIG_ENDIAN	src/osdep/byteorder.h	253;"	d
AIRCRACK_NG_BYTE_ORDER	src/osdep/byteorder.h	210;"	d
AIRCRACK_NG_BYTE_ORDER	src/osdep/byteorder.h	262;"	d
AIRCRACK_NG_BYTE_ORDER	src/osdep/byteorder.h	264;"	d
AIRCRACK_NG_BYTE_ORDER	src/osdep/byteorder.h	268;"	d
AIRCRACK_NG_BYTE_ORDER	src/osdep/byteorder.h	270;"	d
AIRCRACK_NG_BYTE_ORDER	src/osdep/byteorder.h	274;"	d
AIRCRACK_NG_BYTE_ORDER	src/osdep/byteorder.h	276;"	d
AIRCRACK_NG_BYTE_ORDER_DEFINED	src/osdep/byteorder.h	121;"	d
AIRCRACK_NG_BYTE_ORDER_DEFINED	src/osdep/byteorder.h	176;"	d
AIRCRACK_NG_BYTE_ORDER_DEFINED	src/osdep/byteorder.h	208;"	d
AIRCRACK_NG_BYTE_ORDER_DEFINED	src/osdep/byteorder.h	223;"	d
AIRCRACK_NG_BYTE_ORDER_DEFINED	src/osdep/byteorder.h	97;"	d
AIRCRACK_NG_LITTLE_ENDIAN	src/osdep/byteorder.h	241;"	d
AIRCRACK_NG_LITTLE_ENDIAN	src/osdep/byteorder.h	243;"	d
AIRCRACK_NG_LITTLE_ENDIAN	src/osdep/byteorder.h	245;"	d
AIRODUMP_NG_CAP_EXT	src/airodump-ng.h	129;"	d
AIRODUMP_NG_CSV_EXT	src/airodump-ng.h	125;"	d
AIRODUMP_NG_GPS_EXT	src/airodump-ng.h	128;"	d
ALLOW_MACS	src/airbase-ng.c	101;"	d	file:
ALL_WPA1_TAGS	src/airbase-ng.c	150;"	d	file:
ALL_WPA2_TAGS	src/airbase-ng.c	145;"	d	file:
ALT_DATE_FORMAT	lib/csharp/WirelessPanda/Readers/NetXMLReader.cs	/^        protected override string ALT_DATE_FORMAT$/;"	p	class:WirelessPanda.Readers.NetXMLReader
ALT_DATE_FORMAT	lib/csharp/WirelessPanda/Readers/Reader.cs	/^        protected virtual string ALT_DATE_FORMAT$/;"	p	class:WirelessPanda.Readers.Reader
ALT_DATE_FORMAT	lib/csharp/WirelessPanda/Readers/kismetCsvReader.cs	/^        protected override string ALT_DATE_FORMAT$/;"	p	class:WirelessPanda.Readers.KismetCsvReader
AP	lib/csharp/WirelessPanda/Station.cs	/^        public AccessPoint AP$/;"	p	class:WirelessPanda.Station
AP_conf	src/airbase-ng.c	/^struct AP_conf$/;"	s	file:
AP_info	src/aircrack-ng.h	/^struct AP_info$/;"	s
AP_info	src/airodump-ng.h	/^struct AP_info$/;"	s
AP_info	src/ivstools.c	/^struct AP_info$/;"	s	file:
APt	src/aireplay-ng.c	/^struct APt$/;"	s	file:
APt	src/tkiptun-ng.c	/^struct APt$/;"	s	file:
AR	common.mak	/^	AR	= $(TOOL_PREFIX)ar$/;"	m
AR	common.mak	/^	AR	= xiar$/;"	m
ARCH_ALLOWS_UNALIGNED	src/arch.h	98;"	d
ARCH_BITS	src/arch.h	91;"	d
ARCH_BITS_LOG	src/arch.h	92;"	d
ARCH_BITS_STR	src/arch.h	93;"	d
ARCH_INDEX	src/arch.h	99;"	d
ARCH_INT_GT_32	src/arch.h	95;"	d
ARCH_LITTLE_ENDIAN	src/arch.h	94;"	d
ARCH_SIZE	src/arch.h	90;"	d
ARCH_WORD	src/arch.h	86;"	d
ARCH_WORD	src/arch.h	88;"	d
ARCH_WORD_32	src/jcommon.h	/^typedef unsigned int ARCH_WORD_32;$/;"	t
ARCH_WORD_32	src/jcommon.h	/^typedef unsigned short ARCH_WORD_32;$/;"	t
ARCH_WORD_64	src/jcommon.h	/^typedef unsigned int ARCH_WORD_64;$/;"	t
ARCH_WORD_64	src/jcommon.h	/^typedef unsigned long long ARCH_WORD_64;$/;"	t
ARPHRD_ARCNET	src/include/if_arp.h	50;"	d
ARPHRD_ETHER	src/include/if_arp.h	48;"	d
ARPHRD_FRELAY	src/include/if_arp.h	51;"	d
ARPHRD_IEEE1394	src/include/if_arp.h	52;"	d
ARPHRD_IEEE802	src/include/if_arp.h	49;"	d
ARPHRD_IEEE80211	src/osdep/linux.c	145;"	d	file:
ARPHRD_IEEE80211_FULL	src/osdep/linux.c	147;"	d	file:
ARPHRD_IEEE80211_PRISM	src/osdep/linux.c	146;"	d	file:
ARPHRD_INFINIBAND	src/include/if_arp.h	53;"	d
ARPOP_INVREPLY	src/include/if_arp.h	63;"	d
ARPOP_INVREQUEST	src/include/if_arp.h	62;"	d
ARPOP_REPLY	src/include/if_arp.h	59;"	d
ARPOP_REQUEST	src/include/if_arp.h	58;"	d
ARPOP_REVREPLY	src/include/if_arp.h	61;"	d
ARPOP_REVREQUEST	src/include/if_arp.h	60;"	d
ARPSTAT_ADD	src/include/if_arp.h	139;"	d
ARPSTAT_DEC	src/include/if_arp.h	143;"	d
ARPSTAT_INC	src/include/if_arp.h	142;"	d
ARPSTAT_SUB	src/include/if_arp.h	141;"	d
ARP_REQ	src/packetforge-ng.c	49;"	d	file:
ARP_req	src/airbase-ng.c	/^struct ARP_req$/;"	s	file:
ARP_req	src/aireplay-ng.c	/^struct ARP_req$/;"	s	file:
ARP_req	src/airtun-ng.c	/^struct ARP_req$/;"	s	file:
ARP_req	src/tkiptun-ng.c	/^struct ARP_req$/;"	s	file:
ASCII_DISREGARD_STRENGTH	src/aircrack-ng.h	63;"	d
ASCII_HIGH_T	src/aircrack-ng.h	61;"	d
ASCII_LOW_T	src/aircrack-ng.h	60;"	d
ASCII_VOTE_STRENGTH_T	src/aircrack-ng.h	62;"	d
ASMFLAG	common.mak	/^	ASMFLAG	= -masm=intel$/;"	m
ASM_AC	src/Makefile	/^ASM_AC		= sha1-sse2.S$/;"	m
ASSOCIATION_REQUEST	src/airdecloak-ng.h	76;"	d
ASSOCIATION_RESPONSE	src/airdecloak-ng.h	77;"	d
ASSOC_REQ	src/airbase-ng.c	112;"	d	file:
ASSOC_REQ	src/aireplay-ng.c	93;"	d	file:
ASSOC_REQ	src/tkiptun-ng.c	92;"	d	file:
ASTATE_DEAUTH	src/besside-ng.c	/^	ASTATE_DEAUTH,$/;"	e	enum:__anon17	file:
ASTATE_DONE	src/besside-ng.c	/^	ASTATE_DONE,$/;"	e	enum:__anon17	file:
ASTATE_NONE	src/besside-ng.c	/^	ASTATE_NONE = 0,$/;"	e	enum:__anon17	file:
ASTATE_PING	src/besside-ng.c	/^	ASTATE_PING,$/;"	e	enum:__anon17	file:
ASTATE_READY	src/besside-ng.c	/^	ASTATE_READY,$/;"	e	enum:__anon17	file:
ASTATE_UNREACH	src/besside-ng.c	/^	ASTATE_UNREACH,$/;"	e	enum:__anon17	file:
ASTATE_WEP_FLOOD	src/besside-ng.c	/^	ASTATE_WEP_FLOOD,$/;"	e	enum:__anon17	file:
ASTATE_WEP_PRGA_GET	src/besside-ng.c	/^	ASTATE_WEP_PRGA_GET,$/;"	e	enum:__anon17	file:
ASTATE_WPA_CRACK	src/besside-ng.c	/^	ASTATE_WPA_CRACK,$/;"	e	enum:__anon17	file:
AS_CHECK_INET	src/easside-ng.c	/^	AS_CHECK_INET,$/;"	e	enum:__anon33	file:
AS_DECRYPT_ARP	src/easside-ng.c	/^	AS_DECRYPT_ARP,$/;"	e	enum:__anon33	file:
AS_DECRYPT_IP	src/easside-ng.c	/^	AS_DECRYPT_IP,$/;"	e	enum:__anon33	file:
AS_FIND_IP	src/easside-ng.c	/^	AS_FIND_IP,$/;"	e	enum:__anon33	file:
AS_FIND_RTR_MAC	src/easside-ng.c	/^	AS_FIND_RTR_MAC,$/;"	e	enum:__anon33	file:
AS_NOPRGA	src/easside-ng.c	/^	AS_NOPRGA = 0,$/;"	e	enum:__anon33	file:
AS_PRGA_EXPAND	src/easside-ng.c	/^	AS_PRGA_EXPAND,$/;"	e	enum:__anon33	file:
AS_REDIRECT	src/easside-ng.c	/^	AS_REDIRECT$/;"	e	enum:__anon33	file:
ATF_COM	src/include/if_arp.h	95;"	d
ATF_INUSE	src/include/if_arp.h	94;"	d
ATF_PERM	src/include/if_arp.h	96;"	d
ATF_PUBL	src/include/if_arp.h	97;"	d
ATF_USETRAILERS	src/include/if_arp.h	98;"	d
ATHEROS_CAP_BOOST	src/include/ieee80211.h	538;"	d
ATHEROS_CAP_COMPRESSION	src/include/ieee80211.h	535;"	d
ATHEROS_CAP_FAST_FRAME	src/include/ieee80211.h	536;"	d
ATHEROS_CAP_TURBO_PRIME	src/include/ieee80211.h	534;"	d
ATH_OUI	src/include/ieee80211.h	540;"	d
ATH_OUI_TYPE	src/include/ieee80211.h	541;"	d
ATH_OUI_VERSION	src/include/ieee80211.h	542;"	d
ATTRIBUTE_NO_ADDRESS_SAFETY_ANALYSIS	src/misc.h	197;"	d
ATTRIBUTE_NO_ADDRESS_SAFETY_ANALYSIS	src/misc.h	202;"	d
AUTHENTICATION	src/airdecloak-ng.h	75;"	d
AUTH_FIELD	src/airodump-ng.h	68;"	d
AUTH_MGT	src/airodump-ng.h	66;"	d
AUTH_OPN	src/airodump-ng.h	64;"	d
AUTH_PSK	src/airodump-ng.h	65;"	d
AUTH_REQ	src/airbase-ng.c	108;"	d	file:
AUTH_REQ	src/aireplay-ng.c	89;"	d	file:
AUTH_REQ	src/tkiptun-ng.c	88;"	d	file:
A_4_s13	src/aircrack-ng.h	/^	A_4_s13,					 \/* stable       13% on q = 4    *\/$/;"	e	enum:KoreK_attacks
A_4_s13	src/kstats.c	/^    A_4_s13,                    \/* stable       13% on q = 4    *\/$/;"	e	enum:KoreK_attacks	file:
A_4_u5_1	src/aircrack-ng.h	/^	A_4_u5_1,					 \/* unstable      5% on q = 4    *\/$/;"	e	enum:KoreK_attacks
A_4_u5_1	src/kstats.c	/^    A_4_u5_1,                   \/* unstable      5% on q = 4    *\/$/;"	e	enum:KoreK_attacks	file:
A_4_u5_2	src/aircrack-ng.h	/^	A_4_u5_2,					 \/* unstable      5% on q = 4    *\/$/;"	e	enum:KoreK_attacks
A_4_u5_2	src/kstats.c	/^    A_4_u5_2,                   \/* unstable      5% on q = 4    *\/$/;"	e	enum:KoreK_attacks	file:
A_neg	src/aircrack-ng.h	/^	A_neg						 \/* helps reject false positives *\/$/;"	e	enum:KoreK_attacks
A_neg	src/kstats.c	/^    A_neg                       \/* helps reject false positives *\/$/;"	e	enum:KoreK_attacks	file:
A_s13	src/aircrack-ng.h	/^	A_s13,						 \/* stable       13%             *\/$/;"	e	enum:KoreK_attacks
A_s13	src/kstats.c	/^    A_s13,                      \/* stable       13%             *\/$/;"	e	enum:KoreK_attacks	file:
A_s3	src/aircrack-ng.h	/^	A_s3,						 \/* stable        3%             *\/$/;"	e	enum:KoreK_attacks
A_s3	src/kstats.c	/^    A_s3,                       \/* stable        3%             *\/$/;"	e	enum:KoreK_attacks	file:
A_s5_1	src/aircrack-ng.h	/^	A_s5_1,						 \/* standard      5% (~FMS)      *\/$/;"	e	enum:KoreK_attacks
A_s5_1	src/kstats.c	/^    A_s5_1,                     \/* standard      5% (~FMS)      *\/$/;"	e	enum:KoreK_attacks	file:
A_s5_2	src/aircrack-ng.h	/^	A_s5_2,						 \/* other stable  5%             *\/$/;"	e	enum:KoreK_attacks
A_s5_2	src/kstats.c	/^    A_s5_2,                     \/* other stable  5%             *\/$/;"	e	enum:KoreK_attacks	file:
A_s5_3	src/aircrack-ng.h	/^	A_s5_3,						 \/* other stable  5%             *\/$/;"	e	enum:KoreK_attacks
A_s5_3	src/kstats.c	/^    A_s5_3,                     \/* other stable  5%             *\/$/;"	e	enum:KoreK_attacks	file:
A_u13_1	src/aircrack-ng.h	/^	A_u13_1,					 \/* unstable     13%             *\/$/;"	e	enum:KoreK_attacks
A_u13_1	src/kstats.c	/^    A_u13_1,                    \/* unstable     13%             *\/$/;"	e	enum:KoreK_attacks	file:
A_u13_2	src/aircrack-ng.h	/^	A_u13_2,					 \/* unstable ?   13%             *\/$/;"	e	enum:KoreK_attacks
A_u13_2	src/kstats.c	/^    A_u13_2,                    \/* unstable ?   13%             *\/$/;"	e	enum:KoreK_attacks	file:
A_u13_3	src/aircrack-ng.h	/^	A_u13_3,					 \/* unstable ?   13%             *\/$/;"	e	enum:KoreK_attacks
A_u13_3	src/kstats.c	/^    A_u13_3,                    \/* unstable ?   13%             *\/$/;"	e	enum:KoreK_attacks	file:
A_u15	src/aircrack-ng.h	/^	A_u15,						 \/* semi-stable  15%             *\/$/;"	e	enum:KoreK_attacks
A_u15	src/kstats.c	/^    A_u15,                      \/* semi-stable  15%             *\/$/;"	e	enum:KoreK_attacks	file:
A_u5_1	src/aircrack-ng.h	/^	A_u5_1,						 \/* unstable      5% no good ?   *\/$/;"	e	enum:KoreK_attacks
A_u5_1	src/kstats.c	/^    A_u5_1,                     \/* unstable      5% no good ?   *\/$/;"	e	enum:KoreK_attacks	file:
A_u5_2	src/aircrack-ng.h	/^	A_u5_2,						 \/* unstable      5%             *\/$/;"	e	enum:KoreK_attacks
A_u5_2	src/kstats.c	/^    A_u5_2,                     \/* unstable      5%             *\/$/;"	e	enum:KoreK_attacks	file:
A_u5_3	src/aircrack-ng.h	/^	A_u5_3,						 \/* unstable      5% no good     *\/$/;"	e	enum:KoreK_attacks
A_u5_3	src/kstats.c	/^    A_u5_3,                     \/* unstable      5% no good     *\/$/;"	e	enum:KoreK_attacks	file:
A_u5_4	src/aircrack-ng.h	/^	A_u5_4,						 \/* unstable      5%             *\/$/;"	e	enum:KoreK_attacks
A_u5_4	src/kstats.c	/^    A_u5_4,                     \/* unstable      5%             *\/$/;"	e	enum:KoreK_attacks	file:
Accept	lib/csharp/MonoExample/NDesk-dbus/UnixNativeTransport.cs	/^		public UnixSocket Accept ()$/;"	m	class:NDesk.DBus.Transports.UnixSocket
AccessPoint	lib/csharp/WirelessPanda/AccessPoint.cs	/^    public class AccessPoint : WirelessDevice, IEquatable<AccessPoint>$/;"	c	namespace:WirelessPanda
AccessPoints	lib/csharp/WirelessPanda/Readers/Reader.cs	/^        public virtual AccessPoint[] AccessPoints$/;"	p	class:WirelessPanda.Readers.Reader
AccessPoints	lib/csharp/WirelessPanda/Readers/UniversalReader.cs	/^        public override AccessPoint[] AccessPoints$/;"	p	class:WirelessPanda.Readers.UniversalReader
AddMatch	lib/csharp/MonoExample/NDesk-dbus/Bus.cs	/^		internal protected override void AddMatch (string rule)$/;"	m	class:NDesk.DBus.Bus
AddMatch	lib/csharp/MonoExample/NDesk-dbus/Connection.cs	/^		internal protected virtual void AddMatch (string rule)$/;"	m	class:NDesk.DBus.Connection
AddMatch	lib/csharp/MonoExample/NDesk-dbus/DBus.cs	/^		void AddMatch (string rule);$/;"	m	interface:org.freedesktop.DBus.IBus
Address	lib/csharp/MonoExample/NDesk-dbus/Address.cs	/^	static class Address$/;"	c	namespace:NDesk.DBus
AddressEntry	lib/csharp/MonoExample/NDesk-dbus/Address.cs	/^	class AddressEntry$/;"	c	namespace:NDesk.DBus
AllowReplacement	lib/csharp/MonoExample/NDesk-dbus/DBus.cs	/^		AllowReplacement = 0x1,$/;"	e	enum:org.freedesktop.DBus.NameFlag	file:
AlreadyOwner	lib/csharp/MonoExample/NDesk-dbus/DBus.cs	/^		AlreadyOwner,$/;"	e	enum:org.freedesktop.DBus.RequestNameReply	file:
AlreadyRunning	lib/csharp/MonoExample/NDesk-dbus/DBus.cs	/^		AlreadyRunning,$/;"	e	enum:org.freedesktop.DBus.StartReply	file:
Altitude	lib/csharp/WirelessPanda/Coordinates.cs	/^        public double Altitude$/;"	p	class:WirelessPanda.Coordinates
Append	lib/csharp/MonoExample/NDesk-dbus/MatchRule.cs	/^		void Append (StringBuilder sb, string key, string value)$/;"	m	class:NDesk.DBus.MatchRule	file:
AppendArg	lib/csharp/MonoExample/NDesk-dbus/MatchRule.cs	/^		void AppendArg (StringBuilder sb, int index, string value)$/;"	m	class:NDesk.DBus.MatchRule	file:
AreEqual	lib/csharp/MonoExample/NDesk-dbus/Mapper.cs	/^		static bool AreEqual (Type[] a, Type[] b)$/;"	m	class:NDesk.DBus.Mapper	file:
ArgDirection	lib/csharp/MonoExample/NDesk-dbus/Signature.cs	/^	enum ArgDirection$/;"	g	namespace:NDesk.DBus
Args	lib/csharp/MonoExample/NDesk-dbus/MatchRule.cs	/^		public readonly SortedDictionary<int,string> Args = new SortedDictionary<int,string> ();$/;"	f	class:NDesk.DBus.MatchRule
ArgumentAttribute	lib/csharp/MonoExample/NDesk-dbus/Mapper.cs	/^		public ArgumentAttribute (string name)$/;"	m	class:NDesk.DBus.ArgumentAttribute
ArgumentAttribute	lib/csharp/MonoExample/NDesk-dbus/Mapper.cs	/^	public class ArgumentAttribute : Attribute$/;"	c	namespace:NDesk.DBus
Array	lib/csharp/MonoExample/NDesk-dbus/Signature.cs	/^		Array = (byte)'a',$/;"	e	enum:NDesk.DBus.DType	file:
AuthString	lib/csharp/MonoExample/NDesk-dbus/SocketTransport.cs	/^		public override string AuthString ()$/;"	m	class:NDesk.DBus.Transports.SocketTransport
AuthString	lib/csharp/MonoExample/NDesk-dbus/Transport.cs	/^		public abstract string AuthString ();$/;"	m	class:NDesk.DBus.Transports.Transport
AuthString	lib/csharp/MonoExample/NDesk-dbus/UnixTransport.cs	/^		public override string AuthString ()$/;"	m	class:NDesk.DBus.Transports.UnixTransport
Authenticate	lib/csharp/MonoExample/NDesk-dbus/Connection.cs	/^		void Authenticate ()$/;"	m	class:NDesk.DBus.Connection	file:
Authentication	lib/csharp/WirelessPanda/AccessPoint.cs	/^        public string Authentication$/;"	p	class:WirelessPanda.AccessPoint
BEACON_FRAME	src/airdecloak-ng.h	73;"	d
BF_ASM	src/arch.h	465;"	d
BF_SCALE	src/arch.h	466;"	d
BF_X2	src/arch.h	489;"	d
BF_X2	src/arch.h	491;"	d
BINFILES	src/Makefile	/^BINFILES        = aircrack-ng$(EXE) airdecap-ng$(EXE) packetforge-ng$(EXE) \\$/;"	m
BITALIGN	src/simd-intrinsics.c	479;"	d	file:
BITALIGN	src/simd-intrinsics.c	481;"	d	file:
BITS	src/simd-intrinsics.h	106;"	d
BITS	src/simd-intrinsics.h	108;"	d
BITS	src/simd-intrinsics.h	110;"	d
BITS	src/simd-intrinsics.h	112;"	d
BITWISE_MASK	src/uniqueiv.h	47;"	d
BITWISE_OFFT	src/uniqueiv.h	43;"	d
BLEN	test/cryptounittest/test-encrypt-wep.c	32;"	d	file:
BLOCK_MACS	src/airbase-ng.c	102;"	d	file:
BOOLEAN	src/airdecloak-ng.h	/^typedef enum {false, true} BOOLEAN;$/;"	t	typeref:enum:__anon38
BROADCAST	src/crypto.h	62;"	d
BSSID	lib/csharp/WirelessPanda/WirelessDevice.cs	/^        public string BSSID$/;"	p	class:WirelessPanda.WirelessDevice
BUFFER_SIZE	test/cryptounittest/test-decrypt-ccmp.c	33;"	d	file:
BUFFER_SIZE	test/cryptounittest/test-encrypt-ccmp.c	33;"	d	file:
BUFFER_TIME	src/airodump-ng.h	118;"	d
BUFSIZE	contrib/commview/commview.c	21;"	d	file:
BadAddressException	lib/csharp/MonoExample/NDesk-dbus/Address.cs	/^		public BadAddressException (string reason) : base (reason) {}$/;"	m	class:NDesk.DBus.BadAddressException
BadAddressException	lib/csharp/MonoExample/NDesk-dbus/Address.cs	/^	public class BadAddressException : Exception$/;"	c	namespace:NDesk.DBus
Base	lib/csharp/MonoExample/NDesk-dbus/UnixNativeTransport.cs	/^		public IntPtr Base;$/;"	f	struct:NDesk.DBus.Transports.IOVector
Beacon	lib/csharp/WirelessPanda/AccessPoint.cs	/^        public ulong Beacon$/;"	p	class:WirelessPanda.AccessPoint
Beacons	lib/csharp/WirelessPanda/AccessPoint.cs	/^        public long Beacons$/;"	p	class:WirelessPanda.AccessPoint
BestLocation	lib/csharp/WirelessPanda/AccessPoint.cs	/^        public Coordinates BestLocation$/;"	p	class:WirelessPanda.AccessPoint
BestNoise	lib/csharp/WirelessPanda/AccessPoint.cs	/^        public int BestNoise$/;"	p	class:WirelessPanda.AccessPoint
BestQuality	lib/csharp/WirelessPanda/AccessPoint.cs	/^        public int BestQuality$/;"	p	class:WirelessPanda.AccessPoint
BestSignal	lib/csharp/WirelessPanda/AccessPoint.cs	/^        public int BestSignal$/;"	p	class:WirelessPanda.AccessPoint
Big	lib/csharp/MonoExample/NDesk-dbus/Protocol.cs	/^		Big = (byte)'B',$/;"	e	enum:NDesk.DBus.EndianFlag	file:
Bind	lib/csharp/MonoExample/NDesk-dbus/UnixNativeTransport.cs	/^		public void Bind (byte[] local_end)$/;"	m	class:NDesk.DBus.Transports.UnixSocket
Body	lib/csharp/MonoExample/NDesk-dbus/Message.cs	/^		public byte[] Body;$/;"	f	class:NDesk.DBus.Message
Boolean	lib/csharp/MonoExample/NDesk-dbus/Signature.cs	/^		Boolean = (byte)'b',$/;"	e	enum:NDesk.DBus.DType	file:
Bus	lib/csharp/MonoExample/NDesk-dbus/Bus.cs	/^		public Bus (string address) : base (address)$/;"	m	class:NDesk.DBus.Bus
Bus	lib/csharp/MonoExample/NDesk-dbus/Bus.cs	/^	public sealed class Bus : Connection$/;"	c	namespace:NDesk.DBus
BusName	lib/csharp/MonoExample/NDesk-dbus/BusObject.cs	/^		public string BusName$/;"	p	class:NDesk.DBus.BusObject
BusObject	lib/csharp/MonoExample/NDesk-dbus/BusObject.cs	/^		public BusObject ()$/;"	m	class:NDesk.DBus.BusObject
BusObject	lib/csharp/MonoExample/NDesk-dbus/BusObject.cs	/^		public BusObject (Connection conn, string bus_name, ObjectPath object_path)$/;"	m	class:NDesk.DBus.BusObject
BusObject	lib/csharp/MonoExample/NDesk-dbus/BusObject.cs	/^	class BusObject$/;"	c	namespace:NDesk.DBus
Byte	lib/csharp/MonoExample/NDesk-dbus/Signature.cs	/^		Byte = (byte)'y',$/;"	e	enum:NDesk.DBus.DType	file:
CACHE_BANK_SHIFT	src/jcommon.h	102;"	d
CC	common.mak	/^	CC	= $(TOOL_PREFIX)cc$/;"	m
CC	common.mak	/^	CC	= $(TOOL_PREFIX)gcc$/;"	m
CC	common.mak	/^	CC	= icc$/;"	m
CC_CACHE_ALIGN	src/jcommon.h	88;"	d
CC_CACHE_ALIGN	src/jcommon.h	91;"	d
CDP_VTP	src/crypto.h	64;"	d
CFC_base_filter	src/airdecloak-ng.h	194;"	d
CFC_filter_consecutive_sn	src/airdecloak-ng.c	/^int CFC_filter_consecutive_sn() {$/;"	f
CFC_filter_consecutive_sn_ap	src/airdecloak-ng.c	/^int CFC_filter_consecutive_sn_ap() {$/;"	f
CFC_filter_consecutive_sn_client	src/airdecloak-ng.c	/^int CFC_filter_consecutive_sn_client() {$/;"	f
CFC_filter_duplicate_iv	src/airdecloak-ng.c	/^int CFC_filter_duplicate_iv() {$/;"	f
CFC_filter_duplicate_sn	src/airdecloak-ng.c	/^int CFC_filter_duplicate_sn() {$/;"	f
CFC_filter_duplicate_sn_ap	src/airdecloak-ng.c	/^int CFC_filter_duplicate_sn_ap() {$/;"	f
CFC_filter_duplicate_sn_client	src/airdecloak-ng.c	/^int CFC_filter_duplicate_sn_client() {$/;"	f
CFC_filter_signal	src/airdecloak-ng.c	/^int CFC_filter_signal() {$/;"	f
CFC_filter_signal_duplicate_and_consecutive_sn	src/airdecloak-ng.c	/^int CFC_filter_signal_duplicate_and_consecutive_sn() {$/;"	f
CFC_mark_all_frames_with_status_to	src/airdecloak-ng.c	/^int CFC_mark_all_frames_with_status_to(int original_status, int new_status) {$/;"	f
CFC_with_valid_packets_mark_others_with_identical_sn_cloaked	src/airdecloak-ng.c	/^int CFC_with_valid_packets_mark_others_with_identical_sn_cloaked() {$/;"	f
CFLAGS	common.mak	/^CFLAGS		?= -g -W -Wall -O3 $/;"	m
CFLAGS	contrib/airpcap/Makefile	/^CFLAGS = -g -I$(ROOT)\/..\/developers\/Airpcap_Devpack\/include -I$(ROOT)\/src\/osdep$/;"	m
CF_packet	src/airbase-ng.c	/^struct CF_packet$/;"	s	file:
CLOAKED_FRAME	src/airdecloak-ng.h	61;"	d
CLOAKING	src/uniqueiv.h	55;"	d
CLOSE_IT	src/aircrack-ng.h	74;"	d
COMMON_CFLAGS	common.mak	/^		COMMON_CFLAGS := $(COMMON_CFLAGS)$/;"	m
COMMON_CFLAGS	common.mak	/^COMMON_CFLAGS	=$/;"	m
CONTROLSESSIONS	src/aircrack-ptw-lib.c	46;"	d	file:
CORETEMP_PATH	src/cpuid.c	51;"	d	file:
COVERITY_BUILD	Makefile	/^COVERITY_BUILD	?= cov-build$/;"	m
COVERITY_CREDS_DIR	Makefile	/^COVERITY_CREDS_DIR	= coverity$/;"	m
COVERITY_DIR	Makefile	/^COVERITY_DIR	= cov-int$/;"	m
COVERITY_EMAIL	Makefile	/^COVERITY_EMAIL	= $(shell cat ${COVERITY_CREDS_DIR}\/email)$/;"	m
COVERITY_TAR_GZ	Makefile	/^COVERITY_TAR_GZ	= Aircrack-ng.tar.gz$/;"	m
COVERITY_TOKEN	Makefile	/^COVERITY_TOKEN	= $(shell cat ${COVERITY_CREDS_DIR}\/token)$/;"	m
CPUFREQ_CPU0C	src/cpuid.c	49;"	d	file:
CPUFREQ_CPU0M	src/cpuid.c	50;"	d	file:
CPUID	src/common.h	81;"	d
CPUID	src/common.h	83;"	d
CPUID_MMX_AVAILABLE	src/common.h	76;"	d
CPUID_NOTHING_AVAILABLE	src/common.h	78;"	d
CPUID_SSE2_AVAILABLE	src/common.h	77;"	d
CPU_DETECT	src/arch.h	101;"	d
CPU_DETECT	src/arch.h	108;"	d
CPU_DETECT	src/arch.h	109;"	d
CPU_DETECT	src/arch.h	121;"	d
CPU_DETECT	src/arch.h	122;"	d
CPU_DETECT	src/arch.h	134;"	d
CPU_DETECT	src/arch.h	135;"	d
CPU_DETECT	src/arch.h	147;"	d
CPU_DETECT	src/arch.h	148;"	d
CPU_DETECT	src/arch.h	182;"	d
CPU_DETECT	src/arch.h	183;"	d
CPU_DETECT	src/arch.h	238;"	d
CPU_FALLBACK_BINARY	src/arch.h	115;"	d
CPU_FALLBACK_BINARY	src/arch.h	128;"	d
CPU_FALLBACK_BINARY	src/arch.h	141;"	d
CPU_FALLBACK_BINARY	src/arch.h	154;"	d
CPU_FALLBACK_BINARY	src/arch.h	189;"	d
CPU_FALLBACK_BINARY	src/arch.h	242;"	d
CPU_FALLBACK_BINARY	src/arch.h	302;"	d
CPU_FALLBACK_BINARY	src/arch.h	303;"	d
CPU_FALLBACK_BINARY_DEFAULT	src/arch.h	116;"	d
CPU_FALLBACK_BINARY_DEFAULT	src/arch.h	129;"	d
CPU_FALLBACK_BINARY_DEFAULT	src/arch.h	142;"	d
CPU_FALLBACK_BINARY_DEFAULT	src/arch.h	155;"	d
CPU_FALLBACK_BINARY_DEFAULT	src/arch.h	190;"	d
CPU_FALLBACK_BINARY_DEFAULT	src/arch.h	243;"	d
CPU_IA32	src/johnswap.h	64;"	d
CPU_IA32	src/johnswap.h	65;"	d
CPU_INTEL_LE	src/johnswap.h	67;"	d
CPU_INTEL_LE	src/johnswap.h	68;"	d
CPU_NAME	src/arch.h	104;"	d
CPU_NAME	src/arch.h	112;"	d
CPU_NAME	src/arch.h	113;"	d
CPU_NAME	src/arch.h	125;"	d
CPU_NAME	src/arch.h	126;"	d
CPU_NAME	src/arch.h	138;"	d
CPU_NAME	src/arch.h	139;"	d
CPU_NAME	src/arch.h	151;"	d
CPU_NAME	src/arch.h	152;"	d
CPU_NAME	src/arch.h	186;"	d
CPU_NAME	src/arch.h	187;"	d
CPU_NAME	src/arch.h	236;"	d
CPU_NAME	src/arch.h	237;"	d
CPU_NAME	src/arch.h	299;"	d
CPU_NAME	src/arch.h	300;"	d
CPU_REQ	src/arch.h	110;"	d
CPU_REQ	src/arch.h	123;"	d
CPU_REQ	src/arch.h	136;"	d
CPU_REQ	src/arch.h	149;"	d
CPU_REQ	src/arch.h	184;"	d
CPU_REQ	src/arch.h	239;"	d
CPU_REQ_AVX	src/arch.h	185;"	d
CPU_REQ_AVX2	src/arch.h	240;"	d
CPU_REQ_AVX512BW	src/arch.h	150;"	d
CPU_REQ_AVX512F	src/arch.h	137;"	d
CPU_REQ_SSE4_1	src/arch.h	124;"	d
CPU_REQ_SSSE3	src/arch.h	111;"	d
CPU_REQ_XOP	src/arch.h	298;"	d
CPU_X64	src/johnswap.h	61;"	d
CPU_X64	src/johnswap.h	62;"	d
CRYPTO_NONE	src/besside-ng.c	/^	CRYPTO_NONE = 0,$/;"	e	enum:__anon16	file:
CRYPTO_WEP	src/besside-ng.c	/^	CRYPTO_WEP,$/;"	e	enum:__anon16	file:
CRYPTO_WPA	src/besside-ng.c	/^	CRYPTO_WPA,$/;"	e	enum:__anon16	file:
CRYPTO_WPA_MGT	src/besside-ng.c	/^	CRYPTO_WPA_MGT,$/;"	e	enum:__anon16	file:
CRYPT_NONE	src/airbase-ng.c	82;"	d	file:
CRYPT_NONE	src/airdecap-ng.c	49;"	d	file:
CRYPT_NONE	src/airtun-ng.c	70;"	d	file:
CRYPT_WEP	src/airbase-ng.c	83;"	d	file:
CRYPT_WEP	src/airdecap-ng.c	50;"	d	file:
CRYPT_WEP	src/airtun-ng.c	71;"	d	file:
CRYPT_WPA	src/airdecap-ng.c	51;"	d	file:
CRYPT_WPA	src/airtun-ng.c	72;"	d	file:
CSVFileFormat	lib/csharp/WirelessPanda/Readers/csvReader.cs	/^        public enum CSVFileFormat$/;"	g	class:WirelessPanda.Readers.CsvReader
CV_Header	contrib/commview/commview.c	/^struct CV_Header {$/;"	s	file:
CV_Header2	contrib/commview/commview.c	/^struct CV_Header2 {$/;"	s	file:
CXX	common.mak	/^	CXX	= $(TOOL_PREFIX)c++$/;"	m
CXX	common.mak	/^	CXX	= $(TOOL_PREFIX)g++$/;"	m
CXX	common.mak	/^	CXX	= icpc$/;"	m
CXXFLAGS	common.mak	/^CXXFLAGS	= $(CFLAGS) $(ASMFLAG) -fdata-sections -ffunction-sections$/;"	m
CYGWIN_DLL_CLOSE	contrib/peek/omnipeek.c	/^void CYGWIN_DLL_CLOSE (void)$/;"	f
CYGWIN_DLL_CLOSE	src/osdep/cygwin.h	30;"	d
CYGWIN_DLL_GET_MAC	contrib/peek/omnipeek.c	/^int CYGWIN_DLL_GET_MAC (unsigned char* UNUSED(mac))$/;"	f
CYGWIN_DLL_GET_MAC	src/osdep/cygwin.h	28;"	d
CYGWIN_DLL_INIT	contrib/peek/omnipeek.c	/^int CYGWIN_DLL_INIT (char *param)$/;"	f
CYGWIN_DLL_INIT	src/osdep/cygwin.h	23;"	d
CYGWIN_DLL_INJECT	contrib/peek/omnipeek.c	/^int CYGWIN_DLL_INJECT (void* buf, int len,$/;"	f
CYGWIN_DLL_INJECT	src/osdep/cygwin.h	26;"	d
CYGWIN_DLL_SET_CHAN	contrib/peek/omnipeek.c	/^int CYGWIN_DLL_SET_CHAN (int chan)$/;"	f
CYGWIN_DLL_SET_CHAN	src/osdep/cygwin.h	24;"	d
CYGWIN_DLL_SET_FREQ	src/osdep/cygwin.h	25;"	d
CYGWIN_DLL_SET_MAC	contrib/peek/omnipeek.c	/^int CYGWIN_DLL_SET_MAC (unsigned char* UNUSED(mac))$/;"	f
CYGWIN_DLL_SET_MAC	src/osdep/cygwin.h	29;"	d
CYGWIN_DLL_SNIFF	contrib/peek/omnipeek.c	/^int CYGWIN_DLL_SNIFF (void *buf, int len, struct rx_info* UNUSED(ri))$/;"	f
CYGWIN_DLL_SNIFF	src/osdep/cygwin.h	27;"	d
Carrier	lib/csharp/WirelessPanda/AccessPoint.cs	/^        public string Carrier$/;"	p	class:WirelessPanda.AccessPoint
Ch	src/simd-intrinsics.c	1656;"	d	file:
Ch	src/simd-intrinsics.c	2238;"	d	file:
Ch	src/sse-intrinsics.c	1520;"	d	file:
Ch	src/sse-intrinsics.c	1904;"	d	file:
Channel	lib/csharp/WirelessPanda/WirelessDevice.cs	/^        public int Channel$/;"	p	class:WirelessPanda.WirelessDevice
ChannelFlags	contrib/airpcap/airpcap.c	/^	u_int16_t	ChannelFlags;$/;"	m	struct:_PPI_FIELD_802_11_COMMON	file:
ChannelFlags	src/osdep/airpcap.c	/^	u_int16_t	ChannelFlags;$/;"	m	struct:_PPI_FIELD_802_11_COMMON	file:
ChannelFrequency	contrib/airpcap/airpcap.c	/^	u_int16_t	ChannelFrequency;$/;"	m	struct:_PPI_FIELD_802_11_COMMON	file:
ChannelFrequency	src/osdep/airpcap.c	/^	u_int16_t	ChannelFrequency;$/;"	m	struct:_PPI_FIELD_802_11_COMMON	file:
Cipher	lib/csharp/WirelessPanda/AccessPoint.cs	/^        public string Cipher$/;"	p	class:WirelessPanda.AccessPoint
Clear	lib/csharp/WirelessPanda/Readers/Reader.cs	/^        protected void Clear()$/;"	m	class:WirelessPanda.Readers.Reader
ClientList	lib/csharp/WirelessPanda/AccessPoint.cs	/^        public List<Station> ClientList$/;"	p	class:WirelessPanda.AccessPoint
ClientState	lib/csharp/MonoExample/NDesk-dbus/Authentication.cs	/^	enum ClientState$/;"	g	namespace:NDesk.DBus.Authentication
Cloaked	lib/csharp/WirelessPanda/AccessPoint.cs	/^        public bool Cloaked$/;"	p	class:WirelessPanda.AccessPoint
CloseNotification	lib/csharp/MonoExample/NDesk-dbus/Notifications.cs	/^		void CloseNotification (uint id);$/;"	m	interface:org.freedesktop.Notifications
CloseWrite	lib/csharp/MonoExample/NDesk-dbus/MessageWriter.cs	/^		public void CloseWrite ()$/;"	m	class:NDesk.DBus.MessageWriter
Completed	lib/csharp/MonoExample/NDesk-dbus/PendingCall.cs	/^		public event Action<Message> Completed;$/;"	E	class:NDesk.DBus.PendingCall
Concat	lib/csharp/MonoExample/NDesk-dbus/Signature.cs	/^		public static Signature Concat (Signature s1, Signature s2)$/;"	m	struct:NDesk.DBus.Signature
Connect	lib/csharp/MonoExample/NDesk-dbus/UnixNativeTransport.cs	/^		public void Connect (byte[] remote_end)$/;"	m	class:NDesk.DBus.Transports.UnixSocket
Connection	lib/csharp/MonoExample/NDesk-dbus/BusObject.cs	/^		public Connection Connection$/;"	p	class:NDesk.DBus.BusObject
Connection	lib/csharp/MonoExample/NDesk-dbus/Connection.cs	/^		internal Connection (Transport transport)$/;"	m	class:NDesk.DBus.Connection	file:
Connection	lib/csharp/MonoExample/NDesk-dbus/Connection.cs	/^		internal Connection (string address)$/;"	m	class:NDesk.DBus.Connection	file:
Connection	lib/csharp/MonoExample/NDesk-dbus/Connection.cs	/^		protected Connection () {}$/;"	m	class:NDesk.DBus.Connection
Connection	lib/csharp/MonoExample/NDesk-dbus/Connection.cs	/^		static Connection ()$/;"	m	class:NDesk.DBus.Connection	file:
Connection	lib/csharp/MonoExample/NDesk-dbus/Connection.cs	/^	public partial class Connection$/;"	c	namespace:NDesk.DBus
Connection	lib/csharp/MonoExample/NDesk-dbus/Message.cs	/^		public Connection Connection;$/;"	f	class:NDesk.DBus.Message
Connection	lib/csharp/MonoExample/NDesk-dbus/Transport.cs	/^		public Connection Connection$/;"	p	class:NDesk.DBus.Transports.Transport
ConstructDynamicReply	lib/csharp/MonoExample/NDesk-dbus/Mapper.cs	/^		public static Message ConstructDynamicReply (MethodCall method_call, MethodInfo mi, object retVal, object[] vals)$/;"	m	class:NDesk.DBus.MessageHelper
ConstructReply	lib/csharp/MonoExample/NDesk-dbus/Mapper.cs	/^		public static Message ConstructReply (MethodCall method_call, params object[] vals)$/;"	m	class:NDesk.DBus.MessageHelper
Coordinates	lib/csharp/WirelessPanda/Coordinates.cs	/^        public Coordinates(double latitude, double longitude)$/;"	m	class:WirelessPanda.Coordinates
Coordinates	lib/csharp/WirelessPanda/Coordinates.cs	/^        public Coordinates(double latitude, double longitude, double altitude) : this(latitude, longitude)$/;"	m	class:WirelessPanda.Coordinates
Coordinates	lib/csharp/WirelessPanda/Coordinates.cs	/^        public Coordinates(double latitude, double longitude, double altitude, double speed) : this(latitude, longitude, altitude)$/;"	m	class:WirelessPanda.Coordinates
Coordinates	lib/csharp/WirelessPanda/Coordinates.cs	/^        public Coordinates(string latitude = null, string longitude = null, string altitude = null, string speed = null)$/;"	m	class:WirelessPanda.Coordinates
Coordinates	lib/csharp/WirelessPanda/Coordinates.cs	/^    public class Coordinates$/;"	c	namespace:WirelessPanda
Copy	lib/csharp/MonoExample/NDesk-dbus/Signature.cs	/^		public static Signature Copy (Signature sig)$/;"	m	struct:NDesk.DBus.Signature
Create	lib/csharp/MonoExample/NDesk-dbus/Transport.cs	/^		public static Transport Create (AddressEntry entry)$/;"	m	class:NDesk.DBus.Transports.Transport
CreateMatchRule	lib/csharp/MonoExample/NDesk-dbus/MessageFilter.cs	/^		public static string CreateMatchRule (MessageType mtype)$/;"	m	class:NDesk.DBus.MessageFilter
CreateUnknownMethodError	lib/csharp/MonoExample/NDesk-dbus/Mapper.cs	/^		public static Message CreateUnknownMethodError (MethodCall method_call)$/;"	m	class:NDesk.DBus.MessageHelper
Crypt	lib/csharp/WirelessPanda/AccessPoint.cs	/^        public ulong Crypt$/;"	p	class:WirelessPanda.AccessPoint
CsvReader	lib/csharp/WirelessPanda/Readers/csvReader.cs	/^        public CsvReader(string filename) : base(filename) { }$/;"	m	class:WirelessPanda.Readers.CsvReader
CsvReader	lib/csharp/WirelessPanda/Readers/csvReader.cs	/^    public class CsvReader : Reader$/;"	c	namespace:WirelessPanda.Readers
Culture	lib/csharp/Example1/Example1/Properties/Resources.Designer.cs	/^        internal static global::System.Globalization.CultureInfo Culture {$/;"	p	class:Example1.Properties.Resources
DATE_FORMAT	lib/csharp/WirelessPanda/Readers/NetXMLReader.cs	/^        protected override string DATE_FORMAT$/;"	p	class:WirelessPanda.Readers.NetXMLReader
DATE_FORMAT	lib/csharp/WirelessPanda/Readers/Reader.cs	/^        protected virtual string DATE_FORMAT$/;"	p	class:WirelessPanda.Readers.Reader
DATE_FORMAT	lib/csharp/WirelessPanda/Readers/csvReader.cs	/^        protected override string DATE_FORMAT$/;"	p	class:WirelessPanda.Readers.CsvReader
DATE_FORMAT	lib/csharp/WirelessPanda/Readers/kismetCsvReader.cs	/^        protected override string DATE_FORMAT$/;"	p	class:WirelessPanda.Readers.KismetCsvReader
DBusName	lib/csharp/MonoExample/NDesk-dbus/Bus.cs	/^		static readonly string DBusName = "org.freedesktop.DBus";$/;"	f	class:NDesk.DBus.Bus	file:
DBusPath	lib/csharp/MonoExample/NDesk-dbus/Bus.cs	/^		static readonly ObjectPath DBusPath = new ObjectPath ("\/org\/freedesktop\/DBus");$/;"	f	class:NDesk.DBus.Bus	file:
DEAUTH_REQ	src/airbase-ng.c	104;"	d	file:
DEAUTH_REQ	src/aireplay-ng.c	85;"	d	file:
DEAUTH_REQ	src/tkiptun-ng.c	84;"	d	file:
DEFAULT_ADAPT_NAME	contrib/airpcap/airpcap.c	/^static const char * DEFAULT_ADAPT_NAME = "\\\\\\\\.\\\\airpcap00";$/;"	v	file:
DEFAULT_CWIDTH	src/airodump-ng.h	41;"	d
DEFAULT_HOPFREQ	src/airodump-ng.h	40;"	d
DEFAULT_MIC_FAILURE_INTERVAL	src/tkiptun-ng.c	126;"	d	file:
DES_128K	src/arch.h	167;"	d
DES_ASM	src/arch.h	166;"	d
DES_BS	src/arch.h	173;"	d
DES_BS	src/arch.h	210;"	d
DES_BS	src/arch.h	211;"	d
DES_BS	src/arch.h	251;"	d
DES_BS	src/arch.h	252;"	d
DES_BS	src/arch.h	261;"	d
DES_BS	src/arch.h	262;"	d
DES_BS_ALGORITHM_NAME	src/arch.h	176;"	d
DES_BS_ALGORITHM_NAME	src/arch.h	212;"	d
DES_BS_ALGORITHM_NAME	src/arch.h	214;"	d
DES_BS_ALGORITHM_NAME	src/arch.h	221;"	d
DES_BS_ALGORITHM_NAME	src/arch.h	226;"	d
DES_BS_ALGORITHM_NAME	src/arch.h	232;"	d
DES_BS_ALGORITHM_NAME	src/arch.h	245;"	d
DES_BS_ALGORITHM_NAME	src/arch.h	253;"	d
DES_BS_ALGORITHM_NAME	src/arch.h	255;"	d
DES_BS_ALGORITHM_NAME	src/arch.h	263;"	d
DES_BS_ALGORITHM_NAME	src/arch.h	265;"	d
DES_BS_ALGORITHM_NAME	src/arch.h	272;"	d
DES_BS_ALGORITHM_NAME	src/arch.h	276;"	d
DES_BS_ALGORITHM_NAME	src/arch.h	281;"	d
DES_BS_ALGORITHM_NAME	src/arch.h	285;"	d
DES_BS_ALGORITHM_NAME	src/arch.h	288;"	d
DES_BS_ALGORITHM_NAME	src/arch.h	293;"	d
DES_BS_ASM	src/arch.h	192;"	d
DES_BS_ASM	src/arch.h	269;"	d
DES_BS_ASM	src/arch.h	291;"	d
DES_BS_EXPAND	src/arch.h	295;"	d
DES_BS_NO_AVX128	src/arch.h	218;"	d
DES_BS_NO_AVX256	src/arch.h	248;"	d
DES_BS_NO_MMX	src/arch.h	229;"	d
DES_BS_NO_MMX	src/arch.h	278;"	d
DES_BS_NO_MMX	src/arch.h	283;"	d
DES_BS_VECTOR	src/arch.h	175;"	d
DES_BS_VECTOR	src/arch.h	207;"	d
DES_BS_VECTOR	src/arch.h	220;"	d
DES_BS_VECTOR	src/arch.h	225;"	d
DES_BS_VECTOR	src/arch.h	231;"	d
DES_BS_VECTOR	src/arch.h	235;"	d
DES_BS_VECTOR	src/arch.h	249;"	d
DES_BS_VECTOR	src/arch.h	259;"	d
DES_BS_VECTOR	src/arch.h	271;"	d
DES_BS_VECTOR	src/arch.h	274;"	d
DES_BS_VECTOR	src/arch.h	279;"	d
DES_BS_VECTOR	src/arch.h	284;"	d
DES_BS_VECTOR	src/arch.h	287;"	d
DES_BS_VECTOR	src/arch.h	292;"	d
DES_BS_VECTOR_SIZE	src/arch.h	206;"	d
DES_BS_VECTOR_SIZE	src/arch.h	219;"	d
DES_BS_VECTOR_SIZE	src/arch.h	224;"	d
DES_BS_VECTOR_SIZE	src/arch.h	230;"	d
DES_BS_VECTOR_SIZE	src/arch.h	275;"	d
DES_BS_VECTOR_SIZE	src/arch.h	280;"	d
DES_COPY	src/arch.h	172;"	d
DES_EXTB	src/arch.h	171;"	d
DES_MASK	src/arch.h	169;"	d
DES_SCALE	src/arch.h	170;"	d
DES_X2	src/arch.h	168;"	d
DEVICE_COMMON_PART	src/osdep/airpcap.c	80;"	d	file:
DEVICE_HEADER	contrib/airpcap/airpcap.c	/^static const char * DEVICE_HEADER = "\\\\\\\\.\\\\";$/;"	v	file:
DEVICE_PREFIX	src/osdep/airpcap.c	79;"	d	file:
DIRECTION_BACKWARD	src/airdecloak-ng.h	54;"	d
DIRECTION_FORWARD	src/airdecloak-ng.h	55;"	d
DLL	contrib/airpcap/Makefile	/^DLL	= airpcap.dll$/;"	m
DLL	contrib/commview/Makefile	/^DLL	= commview.dll$/;"	m
DLL	contrib/peek/Makefile	/^DLL	= $(NAME).dll$/;"	m
DLL_EXTENSION	src/osdep/cygwin.c	43;"	d	file:
DOCFILES	Makefile	/^DOCFILES        = ChangeLog INSTALLING README LICENSE AUTHORS VERSION$/;"	m
DOCFILES	scripts/airdrop-ng/Makefile	/^DOCFILES        = README$/;"	m
DOCFILES	scripts/airdrop-ng/doc/Makefile	/^DOCFILES = Apple.sample.txt dropRules.conf.example$/;"	m
DOCFILES	scripts/airgraph-ng/Makefile	/^DOCFILES        = README$/;"	m
DOCFILES	scripts/versuck-ng/Makefile	/^DOCFILES        = README$/;"	m
DOPCAP	src/osdep/Makefile	/^	DOPCAP		= $(AR) x $(AC_ROOT)\/..\/developers\/Airpcap_Devpack\/lib\/libairpcap.a$/;"	m
DOPCAP	src/osdep/Makefile	/^	DOPCAP		=$/;"	m
DProxy	lib/csharp/MonoExample/NDesk-dbus/DProxy.cs	/^		public DProxy (BusObject busObject, Type type) : base(type)$/;"	m	class:NDesk.DBus.DProxy
DProxy	lib/csharp/MonoExample/NDesk-dbus/DProxy.cs	/^	internal class DProxy : RealProxy$/;"	c	namespace:NDesk.DBus
DRIVER_TYPE	src/osdep/linux.c	/^} DRIVER_TYPE;$/;"	t	typeref:enum:__anon35	file:
DROPPED_FRAME	src/airdecloak-ng.h	63;"	d
DT_ACX	src/osdep/linux.c	/^        DT_ACX,$/;"	e	enum:__anon35	file:
DT_AT76USB	src/osdep/linux.c	/^        DT_AT76USB,$/;"	e	enum:__anon35	file:
DT_BCM43XX	src/osdep/linux.c	/^        DT_BCM43XX,$/;"	e	enum:__anon35	file:
DT_HOSTAP	src/osdep/linux.c	/^        DT_HOSTAP,$/;"	e	enum:__anon35	file:
DT_IPW2200	src/osdep/linux.c	/^        DT_IPW2200$/;"	e	enum:__anon35	file:
DT_MAC80211_RT	src/osdep/linux.c	/^        DT_MAC80211_RT,$/;"	e	enum:__anon35	file:
DT_MADWIFI	src/osdep/linux.c	/^        DT_MADWIFI,$/;"	e	enum:__anon35	file:
DT_MADWIFING	src/osdep/linux.c	/^        DT_MADWIFING,$/;"	e	enum:__anon35	file:
DT_NULL	src/osdep/linux.c	/^        DT_NULL = 0,$/;"	e	enum:__anon35	file:
DT_ORINOCO	src/osdep/linux.c	/^        DT_ORINOCO,$/;"	e	enum:__anon35	file:
DT_WLANNG	src/osdep/linux.c	/^        DT_WLANNG,$/;"	e	enum:__anon35	file:
DT_ZD1211RW	src/osdep/linux.c	/^        DT_ZD1211RW,$/;"	e	enum:__anon35	file:
DType	lib/csharp/MonoExample/NDesk-dbus/Signature.cs	/^	enum DType : byte$/;"	g	namespace:NDesk.DBus
DataFrames	lib/csharp/WirelessPanda/AccessPoint.cs	/^        public ulong DataFrames$/;"	p	class:WirelessPanda.AccessPoint
DataSize	lib/csharp/WirelessPanda/AccessPoint.cs	/^        public ulong DataSize$/;"	p	class:WirelessPanda.AccessPoint
Dataset	lib/csharp/WirelessPanda/Readers/Reader.cs	/^        public virtual DataSet Dataset$/;"	p	class:WirelessPanda.Readers.Reader
Dataset	lib/csharp/WirelessPanda/Readers/UniversalReader.cs	/^        public override DataSet Dataset$/;"	p	class:WirelessPanda.Readers.UniversalReader
DateTimeToUnix	lib/csharp/MonoExample/NDesk-dbus/Authentication.cs	/^		public static long DateTimeToUnix (DateTime time)$/;"	m	class:NDesk.DBus.Authentication.SaslClient
DbmAntNoise	contrib/airpcap/airpcap.c	/^	int8_t		DbmAntNoise;$/;"	m	struct:_PPI_FIELD_802_11_COMMON	file:
DbmAntNoise	src/osdep/airpcap.c	/^	int8_t		DbmAntNoise;$/;"	m	struct:_PPI_FIELD_802_11_COMMON	file:
DbmAntSignal	contrib/airpcap/airpcap.c	/^	int8_t		DbmAntSignal;$/;"	m	struct:_PPI_FIELD_802_11_COMMON	file:
DbmAntSignal	src/osdep/airpcap.c	/^	int8_t		DbmAntSignal;$/;"	m	struct:_PPI_FIELD_802_11_COMMON	file:
Decomposed	lib/csharp/MonoExample/NDesk-dbus/Protocol.cs	/^		internal string[] Decomposed$/;"	p	class:NDesk.DBus.ObjectPath
Decrypted	lib/csharp/WirelessPanda/AccessPoint.cs	/^        public bool Decrypted$/;"	p	class:WirelessPanda.AccessPoint
Default	lib/csharp/Example1/Example1/Properties/Settings.Designer.cs	/^        public static Settings Default {$/;"	p	class:Example1.Properties.Settings
Destination	lib/csharp/MonoExample/NDesk-dbus/MatchRule.cs	/^		public string Destination;$/;"	f	class:NDesk.DBus.MatchRule
Destination	lib/csharp/MonoExample/NDesk-dbus/Protocol.cs	/^			Destination,$/;"	e	enum:NDesk.DBus.FieldCode	file:
Destination	lib/csharp/MonoExample/NDesk-dbus/Wrapper.cs	/^		public string Destination;$/;"	f	class:NDesk.DBus.MethodCall
DictEntry	lib/csharp/MonoExample/NDesk-dbus/Signature.cs	/^		DictEntry = (byte)'e',$/;"	e	enum:NDesk.DBus.DType	file:
DictEntryBegin	lib/csharp/MonoExample/NDesk-dbus/Signature.cs	/^		DictEntryBegin = (byte)'{',$/;"	e	enum:NDesk.DBus.DType	file:
DictEntryEnd	lib/csharp/MonoExample/NDesk-dbus/Signature.cs	/^		DictEntryEnd = (byte)'}',$/;"	e	enum:NDesk.DBus.DType	file:
DispatchSignals	lib/csharp/MonoExample/NDesk-dbus/Connection.cs	/^		internal void DispatchSignals ()$/;"	m	class:NDesk.DBus.Connection	file:
Dispose	lib/csharp/Example1/Example1/Form1.Designer.cs	/^        protected override void Dispose(bool disposing)$/;"	m	class:Example1.Form1
DoNotQueue	lib/csharp/MonoExample/NDesk-dbus/DBus.cs	/^		DoNotQueue = 0x4,$/;"	e	enum:org.freedesktop.DBus.NameFlag	file:
Double	lib/csharp/MonoExample/NDesk-dbus/Signature.cs	/^		Double = (byte)'d',$/;"	e	enum:NDesk.DBus.DType	file:
EAP_detected	src/airodump-ng.h	/^	int EAP_detected;$/;"	m	struct:AP_info
ENC_CCMP	src/airodump-ng.h	58;"	d
ENC_FIELD	src/airodump-ng.h	62;"	d
ENC_TKIP	src/airodump-ng.h	56;"	d
ENC_WEP	src/airodump-ng.h	55;"	d
ENC_WEP104	src/airodump-ng.h	60;"	d
ENC_WEP40	src/airodump-ng.h	59;"	d
ENC_WRAP	src/airodump-ng.h	57;"	d
ENDC	scripts/airdrop-ng/airdrop/__init__.py	/^    ENDC = '\\033[0m'    #white$/;"	v	class:bcolors
END_PIC	src/sha1-sse2.S	/^#define END_PIC()   popq  %rbx$/;"	d
END_PIC	src/sha1-sse2.S	/^#define END_PIC()$/;"	d
ESSID	lib/csharp/WirelessPanda/AccessPoint.cs	/^        public string ESSID$/;"	p	class:WirelessPanda.AccessPoint
ESSID	src/ivstools.c	51;"	d	file:
ESSIDLength	lib/csharp/WirelessPanda/AccessPoint.cs	/^        public byte ESSIDLength$/;"	p	class:WirelessPanda.AccessPoint
ESSID_list	src/airbase-ng.c	/^struct ESSID_list$/;"	s	file:
ETHERMIN	src/include/ethernet.h	345;"	d
ETHERMTU	src/include/ethernet.h	344;"	d
ETHERMTU_JUMBO	src/include/ethernet.h	346;"	d
ETHERTYPE_8023	src/include/ethernet.h	80;"	d
ETHERTYPE_AARP	src/include/ethernet.h	241;"	d
ETHERTYPE_ACCTON	src/include/ethernet.h	295;"	d
ETHERTYPE_AEONIC	src/include/ethernet.h	183;"	d
ETHERTYPE_ALPHA	src/include/ethernet.h	263;"	d
ETHERTYPE_AMBER	src/include/ethernet.h	153;"	d
ETHERTYPE_AMOEBA	src/include/ethernet.h	258;"	d
ETHERTYPE_APOLLO	src/include/ethernet.h	243;"	d
ETHERTYPE_APOLLODOMAIN	src/include/ethernet.h	179;"	d
ETHERTYPE_APPLETALK	src/include/ethernet.h	222;"	d
ETHERTYPE_APPLITEK	src/include/ethernet.h	230;"	d
ETHERTYPE_ARGONAUT	src/include/ethernet.h	187;"	d
ETHERTYPE_ARP	src/include/ethernet.h	96;"	d
ETHERTYPE_AT	src/include/ethernet.h	221;"	d
ETHERTYPE_ATALK	src/include/ethernet.h	220;"	d
ETHERTYPE_ATOMIC	src/include/ethernet.h	304;"	d
ETHERTYPE_ATT	src/include/ethernet.h	208;"	d
ETHERTYPE_ATTSTANFORD	src/include/ethernet.h	173;"	d
ETHERTYPE_AUTOPHON	src/include/ethernet.h	209;"	d
ETHERTYPE_AXIS	src/include/ethernet.h	319;"	d
ETHERTYPE_BCLOOP	src/include/ethernet.h	328;"	d
ETHERTYPE_BOFL	src/include/ethernet.h	246;"	d
ETHERTYPE_CABLETRON	src/include/ethernet.h	168;"	d
ETHERTYPE_CHAOS	src/include/ethernet.h	94;"	d
ETHERTYPE_COMDESIGN	src/include/ethernet.h	210;"	d
ETHERTYPE_COMPUGRAPHIC	src/include/ethernet.h	211;"	d
ETHERTYPE_COUNTERPOINT	src/include/ethernet.h	204;"	d
ETHERTYPE_CRONUS	src/include/ethernet.h	170;"	d
ETHERTYPE_CRONUSVLN	src/include/ethernet.h	169;"	d
ETHERTYPE_DCA	src/include/ethernet.h	117;"	d
ETHERTYPE_DDE	src/include/ethernet.h	214;"	d
ETHERTYPE_DEBNI	src/include/ethernet.h	329;"	d
ETHERTYPE_DECAM	src/include/ethernet.h	198;"	d
ETHERTYPE_DECCUST	src/include/ethernet.h	151;"	d
ETHERTYPE_DECDIAG	src/include/ethernet.h	150;"	d
ETHERTYPE_DECDNS	src/include/ethernet.h	189;"	d
ETHERTYPE_DECDTS	src/include/ethernet.h	191;"	d
ETHERTYPE_DECEXPER	src/include/ethernet.h	144;"	d
ETHERTYPE_DECLAST	src/include/ethernet.h	194;"	d
ETHERTYPE_DECLTM	src/include/ethernet.h	192;"	d
ETHERTYPE_DECMUMPS	src/include/ethernet.h	154;"	d
ETHERTYPE_DECNETBIOS	src/include/ethernet.h	193;"	d
ETHERTYPE_DECnet	src/include/ethernet.h	147;"	d
ETHERTYPE_DELTACON	src/include/ethernet.h	303;"	d
ETHERTYPE_DIDDLE	src/include/ethernet.h	141;"	d
ETHERTYPE_DLOG1	src/include/ethernet.h	88;"	d
ETHERTYPE_DLOG2	src/include/ethernet.h	89;"	d
ETHERTYPE_DN	src/include/ethernet.h	148;"	d
ETHERTYPE_DOGFIGHT	src/include/ethernet.h	119;"	d
ETHERTYPE_DSMD	src/include/ethernet.h	186;"	d
ETHERTYPE_ECMA	src/include/ethernet.h	93;"	d
ETHERTYPE_ENCRYPT	src/include/ethernet.h	190;"	d
ETHERTYPE_ES	src/include/ethernet.h	202;"	d
ETHERTYPE_EXCELAN	src/include/ethernet.h	174;"	d
ETHERTYPE_EXPERDATA	src/include/ethernet.h	199;"	d
ETHERTYPE_FLIP	src/include/ethernet.h	259;"	d
ETHERTYPE_FLOWCONTROL	src/include/ethernet.h	313;"	d
ETHERTYPE_FRARP	src/include/ethernet.h	98;"	d
ETHERTYPE_GENDYN	src/include/ethernet.h	207;"	d
ETHERTYPE_HAYES	src/include/ethernet.h	251;"	d
ETHERTYPE_HIPPI_FP	src/include/ethernet.h	273;"	d
ETHERTYPE_HITACHI	src/include/ethernet.h	316;"	d
ETHERTYPE_HP	src/include/ethernet.h	171;"	d
ETHERTYPE_IEEEPUP	src/include/ethernet.h	102;"	d
ETHERTYPE_IEEEPUPAT	src/include/ethernet.h	103;"	d
ETHERTYPE_IMLBL	src/include/ethernet.h	142;"	d
ETHERTYPE_IMLBLDIAG	src/include/ethernet.h	140;"	d
ETHERTYPE_IP	src/include/ethernet.h	90;"	d
ETHERTYPE_IPAS	src/include/ethernet.h	311;"	d
ETHERTYPE_IPV6	src/include/ethernet.h	302;"	d
ETHERTYPE_IPX	src/include/ethernet.h	254;"	d
ETHERTYPE_IPXNEW	src/include/ethernet.h	184;"	d
ETHERTYPE_KALPANA	src/include/ethernet.h	297;"	d
ETHERTYPE_LANBRIDGE	src/include/ethernet.h	185;"	d
ETHERTYPE_LANPROBE	src/include/ethernet.h	322;"	d
ETHERTYPE_LAT	src/include/ethernet.h	149;"	d
ETHERTYPE_LBACK	src/include/ethernet.h	325;"	d
ETHERTYPE_LITTLE	src/include/ethernet.h	203;"	d
ETHERTYPE_LOGICRAFT	src/include/ethernet.h	261;"	d
ETHERTYPE_LOOPBACK	src/include/ethernet.h	324;"	d
ETHERTYPE_MATRA	src/include/ethernet.h	213;"	d
ETHERTYPE_MAX	src/include/ethernet.h	334;"	d
ETHERTYPE_MERIT	src/include/ethernet.h	215;"	d
ETHERTYPE_MICP	src/include/ethernet.h	308;"	d
ETHERTYPE_MOPDL	src/include/ethernet.h	145;"	d
ETHERTYPE_MOPRC	src/include/ethernet.h	146;"	d
ETHERTYPE_MOTOROLA	src/include/ethernet.h	277;"	d
ETHERTYPE_MPLS	src/include/ethernet.h	317;"	d
ETHERTYPE_MPLS_MCAST	src/include/ethernet.h	318;"	d
ETHERTYPE_MUMPS	src/include/ethernet.h	257;"	d
ETHERTYPE_NBPCC	src/include/ethernet.h	128;"	d
ETHERTYPE_NBPCLAIM	src/include/ethernet.h	133;"	d
ETHERTYPE_NBPCLREQ	src/include/ethernet.h	129;"	d
ETHERTYPE_NBPCLRSP	src/include/ethernet.h	130;"	d
ETHERTYPE_NBPCREQ	src/include/ethernet.h	126;"	d
ETHERTYPE_NBPCRSP	src/include/ethernet.h	127;"	d
ETHERTYPE_NBPDG	src/include/ethernet.h	131;"	d
ETHERTYPE_NBPDGB	src/include/ethernet.h	132;"	d
ETHERTYPE_NBPDLTE	src/include/ethernet.h	134;"	d
ETHERTYPE_NBPRAR	src/include/ethernet.h	136;"	d
ETHERTYPE_NBPRAS	src/include/ethernet.h	135;"	d
ETHERTYPE_NBPRST	src/include/ethernet.h	137;"	d
ETHERTYPE_NBPSCD	src/include/ethernet.h	125;"	d
ETHERTYPE_NBPVCD	src/include/ethernet.h	124;"	d
ETHERTYPE_NBS	src/include/ethernet.h	92;"	d
ETHERTYPE_NCD	src/include/ethernet.h	262;"	d
ETHERTYPE_NESTAR	src/include/ethernet.h	172;"	d
ETHERTYPE_NETBEUI	src/include/ethernet.h	278;"	d
ETHERTYPE_NOVELL	src/include/ethernet.h	255;"	d
ETHERTYPE_NS	src/include/ethernet.h	86;"	d
ETHERTYPE_NSAT	src/include/ethernet.h	87;"	d
ETHERTYPE_NSCOMPAT	src/include/ethernet.h	97;"	d
ETHERTYPE_NTRAILER	src/include/ethernet.h	115;"	d
ETHERTYPE_NTRAILER	src/include/ethernet.h	342;"	d
ETHERTYPE_OS9	src/include/ethernet.h	163;"	d
ETHERTYPE_OS9NET	src/include/ethernet.h	164;"	d
ETHERTYPE_PACER	src/include/ethernet.h	229;"	d
ETHERTYPE_PAE	src/include/ethernet.h	323;"	d
ETHERTYPE_PCS	src/include/ethernet.h	139;"	d
ETHERTYPE_PLANNING	src/include/ethernet.h	196;"	d
ETHERTYPE_PPP	src/include/ethernet.h	315;"	d
ETHERTYPE_PPPOE	src/include/ethernet.h	321;"	d
ETHERTYPE_PPPOEDISC	src/include/ethernet.h	320;"	d
ETHERTYPE_PRIMENTS	src/include/ethernet.h	167;"	d
ETHERTYPE_PUP	src/include/ethernet.h	82;"	d
ETHERTYPE_PUPAT	src/include/ethernet.h	83;"	d
ETHERTYPE_RACAL	src/include/ethernet.h	166;"	d
ETHERTYPE_RATIONAL	src/include/ethernet.h	267;"	d
ETHERTYPE_RAWFR	src/include/ethernet.h	157;"	d
ETHERTYPE_RCL	src/include/ethernet.h	120;"	d
ETHERTYPE_RDP	src/include/ethernet.h	307;"	d
ETHERTYPE_RETIX	src/include/ethernet.h	240;"	d
ETHERTYPE_REVARP	src/include/ethernet.h	182;"	d
ETHERTYPE_SCA	src/include/ethernet.h	152;"	d
ETHERTYPE_SECTRA	src/include/ethernet.h	301;"	d
ETHERTYPE_SECUREDATA	src/include/ethernet.h	312;"	d
ETHERTYPE_SGITW	src/include/ethernet.h	272;"	d
ETHERTYPE_SG_BOUNCE	src/include/ethernet.h	178;"	d
ETHERTYPE_SG_DIAG	src/include/ethernet.h	175;"	d
ETHERTYPE_SG_NETGAMES	src/include/ethernet.h	176;"	d
ETHERTYPE_SG_RESV	src/include/ethernet.h	177;"	d
ETHERTYPE_SIMNET	src/include/ethernet.h	143;"	d
ETHERTYPE_SLOW	src/include/ethernet.h	314;"	d
ETHERTYPE_SNA	src/include/ethernet.h	235;"	d
ETHERTYPE_SNMP	src/include/ethernet.h	264;"	d
ETHERTYPE_SONIX	src/include/ethernet.h	330;"	d
ETHERTYPE_SPIDER	src/include/ethernet.h	224;"	d
ETHERTYPE_SPRITE	src/include/ethernet.h	84;"	d
ETHERTYPE_STP	src/include/ethernet.h	274;"	d
ETHERTYPE_TALARIS	src/include/ethernet.h	249;"	d
ETHERTYPE_TALARISMC	src/include/ethernet.h	296;"	d
ETHERTYPE_TCPCOMP	src/include/ethernet.h	310;"	d
ETHERTYPE_TCPSM	src/include/ethernet.h	327;"	d
ETHERTYPE_TEC	src/include/ethernet.h	266;"	d
ETHERTYPE_TIGAN	src/include/ethernet.h	181;"	d
ETHERTYPE_TRAIL	src/include/ethernet.h	114;"	d
ETHERTYPE_TRAIL	src/include/ethernet.h	341;"	d
ETHERTYPE_TRANSETHER	src/include/ethernet.h	156;"	d
ETHERTYPE_TYMSHARE	src/include/ethernet.h	180;"	d
ETHERTYPE_UBBST	src/include/ethernet.h	162;"	d
ETHERTYPE_UBDEBUG	src/include/ethernet.h	101;"	d
ETHERTYPE_UBDIAGLOOP	src/include/ethernet.h	160;"	d
ETHERTYPE_UBDL	src/include/ethernet.h	158;"	d
ETHERTYPE_UBNIU	src/include/ethernet.h	159;"	d
ETHERTYPE_UBNMC	src/include/ethernet.h	161;"	d
ETHERTYPE_VALID	src/include/ethernet.h	118;"	d
ETHERTYPE_VARIAN	src/include/ethernet.h	236;"	d
ETHERTYPE_VAXELN	src/include/ethernet.h	188;"	d
ETHERTYPE_VEECO	src/include/ethernet.h	206;"	d
ETHERTYPE_VEXP	src/include/ethernet.h	200;"	d
ETHERTYPE_VGLAB	src/include/ethernet.h	252;"	d
ETHERTYPE_VINES	src/include/ethernet.h	104;"	d
ETHERTYPE_VINESECHO	src/include/ethernet.h	106;"	d
ETHERTYPE_VINESLOOP	src/include/ethernet.h	105;"	d
ETHERTYPE_VITAL	src/include/ethernet.h	331;"	d
ETHERTYPE_VLAN	src/include/ethernet.h	244;"	d
ETHERTYPE_VLTLMAN	src/include/ethernet.h	217;"	d
ETHERTYPE_VPROD	src/include/ethernet.h	201;"	d
ETHERTYPE_VURESERVED	src/include/ethernet.h	260;"	d
ETHERTYPE_WATERLOO	src/include/ethernet.h	250;"	d
ETHERTYPE_WELLFLEET	src/include/ethernet.h	247;"	d
ETHERTYPE_X25	src/include/ethernet.h	95;"	d
ETHERTYPE_X75	src/include/ethernet.h	91;"	d
ETHERTYPE_XNSSM	src/include/ethernet.h	326;"	d
ETHERTYPE_XTP	src/include/ethernet.h	271;"	d
ETHER_ADDR_LEN	src/include/ethernet.h	14;"	d
ETHER_ALIGN	src/include/ethernet.h	29;"	d
ETHER_BPF_MTAP	src/include/ethernet.h	354;"	d
ETHER_CRC_LEN	src/include/ethernet.h	16;"	d
ETHER_CRC_POLY_BE	src/include/ethernet.h	49;"	d
ETHER_CRC_POLY_LE	src/include/ethernet.h	48;"	d
ETHER_HDR_LEN	src/include/ethernet.h	17;"	d
ETHER_IS_MULTICAST	src/include/ethernet.h	73;"	d
ETHER_IS_VALID_LEN	src/include/ethernet.h	54;"	d
ETHER_MAX_FRAME	src/include/ethernet.h	35;"	d
ETHER_MAX_LEN	src/include/ethernet.h	19;"	d
ETHER_MAX_LEN_JUMBO	src/include/ethernet.h	20;"	d
ETHER_MIN_LEN	src/include/ethernet.h	18;"	d
ETHER_TYPE_LEN	src/include/ethernet.h	15;"	d
ETHER_VLAN_ENCAP_LEN	src/include/ethernet.h	22;"	d
ETH_P_80211_RAW	src/osdep/linux.c	142;"	d	file:
EVP_md5	src/gcrypt-openssl-wrapper.h	47;"	d
EVP_sha1	src/gcrypt-openssl-wrapper.h	48;"	d
EXE	common.mak	/^EXE		= .exe$/;"	m
EXE	common.mak	/^EXE		=$/;"	m
EXTENDED_RATES	src/airbase-ng.c	126;"	d	file:
EXTERNC	src/linecount.h	37;"	d
EXTERNC	src/linecount.h	39;"	d
EXT_IN	src/airbase-ng.c	85;"	d	file:
EXT_OUT	src/airbase-ng.c	86;"	d	file:
Empty	lib/csharp/MonoExample/NDesk-dbus/Signature.cs	/^		public static readonly Signature Empty = new Signature (String.Empty);$/;"	f	struct:NDesk.DBus.Signature
Encoding	lib/csharp/WirelessPanda/AccessPoint.cs	/^        public string Encoding$/;"	p	class:WirelessPanda.AccessPoint
Encryption	lib/csharp/WirelessPanda/AccessPoint.cs	/^        public string Encryption$/;"	p	class:WirelessPanda.AccessPoint
EndianFlag	lib/csharp/MonoExample/NDesk-dbus/Protocol.cs	/^	enum EndianFlag : byte$/;"	g	namespace:NDesk.DBus
Endianness	lib/csharp/MonoExample/NDesk-dbus/Protocol.cs	/^		public EndianFlag Endianness;$/;"	f	struct:NDesk.DBus.Header
Equals	lib/csharp/MonoExample/NDesk-dbus/MatchRule.cs	/^		public override bool Equals (object o)$/;"	m	class:NDesk.DBus.MatchRule
Equals	lib/csharp/MonoExample/NDesk-dbus/Protocol.cs	/^		public override bool Equals (object o)$/;"	m	class:NDesk.DBus.ObjectPath
Equals	lib/csharp/MonoExample/NDesk-dbus/Signature.cs	/^		public override bool Equals (object o)$/;"	m	struct:NDesk.DBus.Signature
Equals	lib/csharp/WirelessPanda/AccessPoint.cs	/^        public bool Equals(AccessPoint other)$/;"	m	class:WirelessPanda.AccessPoint
Equals	lib/csharp/WirelessPanda/Station.cs	/^        public bool Equals(Station other)$/;"	m	class:WirelessPanda.Station
Error	lib/csharp/MonoExample/NDesk-dbus/Protocol.cs	/^		Error,$/;"	e	enum:NDesk.DBus.MessageType	file:
Error	lib/csharp/MonoExample/NDesk-dbus/Wrapper.cs	/^		public Error (Message message)$/;"	m	class:NDesk.DBus.Error
Error	lib/csharp/MonoExample/NDesk-dbus/Wrapper.cs	/^		public Error (string error_name, uint reply_serial)$/;"	m	class:NDesk.DBus.Error
Error	lib/csharp/MonoExample/NDesk-dbus/Wrapper.cs	/^	class Error$/;"	c	namespace:NDesk.DBus
ErrorFlag	contrib/commview/commview.c	/^        char ErrorFlag;   \/\/ ErrorFlag & 1 = CRC error$/;"	m	struct:CV_Header2	file:
ErrorName	lib/csharp/MonoExample/NDesk-dbus/Protocol.cs	/^			ErrorName,$/;"	e	enum:NDesk.DBus.FieldCode	file:
ErrorName	lib/csharp/MonoExample/NDesk-dbus/Wrapper.cs	/^		public string ErrorName;$/;"	f	class:NDesk.DBus.Error
Escape	lib/csharp/MonoExample/NDesk-dbus/Address.cs	/^		static string Escape (string str)$/;"	m	class:NDesk.DBus.AddressEntry	file:
Example1	lib/csharp/Example1/Example1/Form1.Designer.cs	/^﻿namespace Example1$/;"	n
Example1	lib/csharp/Example1/Example1/Form1.cs	/^namespace Example1$/;"	n
Example1	lib/csharp/Example1/Example1/Program.cs	/^namespace Example1$/;"	n
Example1.Properties	lib/csharp/Example1/Example1/Properties/Resources.Designer.cs	/^namespace Example1.Properties {$/;"	n
Example1.Properties	lib/csharp/Example1/Example1/Properties/Settings.Designer.cs	/^namespace Example1.Properties {$/;"	n
Exists	lib/csharp/MonoExample/NDesk-dbus/DBus.cs	/^		Exists,$/;"	e	enum:org.freedesktop.DBus.RequestNameReply	file:
ExportObject	lib/csharp/MonoExample/NDesk-dbus/ExportObject.cs	/^		public ExportObject (Connection conn, ObjectPath object_path, object obj) : base (conn, null, object_path)$/;"	m	class:NDesk.DBus.ExportObject
ExportObject	lib/csharp/MonoExample/NDesk-dbus/ExportObject.cs	/^	internal class ExportObject : BusObject \/\/, Peer$/;"	c	namespace:NDesk.DBus
F0	src/sha1-sse2.S	/^#define F0(x,y,z)       \\$/;"	d
F1	src/sha1-sse2.S	/^#define F1(x,y,z)       \\$/;"	d
F2	src/sha1-sse2.S	/^#define F2(x,y,z)       \\$/;"	d
FAIL	scripts/airdrop-ng/airdrop/__init__.py	/^    FAIL = '\\033[91m'    #red$/;"	v	class:bcolors
FAILURE	src/aircrack-ng.h	51;"	d
FAILURE	src/ivstools.c	48;"	d	file:
FILTER_CONSECUTIVE_SN	src/airdecloak-ng.h	85;"	d
FILTER_DUPLICATE_IV	src/airdecloak-ng.h	86;"	d
FILTER_DUPLICATE_SN	src/airdecloak-ng.h	82;"	d
FILTER_DUPLICATE_SN_AP	src/airdecloak-ng.h	83;"	d
FILTER_DUPLICATE_SN_CLIENT	src/airdecloak-ng.h	84;"	d
FILTER_SIGNAL	src/airdecloak-ng.h	81;"	d
FILTER_SIGNAL_DUPLICATE_AND_CONSECUTIVE_SN	src/airdecloak-ng.h	87;"	d
FIND_VICTIM	src/wesside-ng.c	70;"	d	file:
FORMAT_CAP	src/pcap.h	38;"	d
FORMAT_IVS	src/pcap.h	39;"	d
FORMAT_IVS2	src/pcap.h	40;"	d
FOUND_VICTIM	src/wesside-ng.c	71;"	d	file:
FRAG_TIMEOUT	src/airbase-ng.c	97;"	d	file:
FRAG_TIMEOUT	src/airtun-ng.c	75;"	d	file:
FRAME_TYPE_CONTROL	src/airdecloak-ng.h	70;"	d
FRAME_TYPE_DATA	src/airdecloak-ng.h	71;"	d
FRAME_TYPE_MANAGEMENT	src/airdecloak-ng.h	69;"	d
FhssHopset	contrib/airpcap/airpcap.c	/^	u_int8_t	FhssHopset;$/;"	m	struct:_PPI_FIELD_802_11_COMMON	file:
FhssHopset	src/osdep/airpcap.c	/^	u_int8_t	FhssHopset;$/;"	m	struct:_PPI_FIELD_802_11_COMMON	file:
FhssPattern	contrib/airpcap/airpcap.c	/^	u_int8_t	FhssPattern;$/;"	m	struct:_PPI_FIELD_802_11_COMMON	file:
FhssPattern	src/osdep/airpcap.c	/^	u_int8_t	FhssPattern;$/;"	m	struct:_PPI_FIELD_802_11_COMMON	file:
FieldCode	lib/csharp/MonoExample/NDesk-dbus/Protocol.cs	/^	enum FieldCode : byte$/;"	g	namespace:NDesk.DBus
Fields	lib/csharp/MonoExample/NDesk-dbus/Protocol.cs	/^		public IDictionary<FieldCode,object> Fields;$/;"	f	struct:NDesk.DBus.Header
FieldsDictionary	lib/csharp/WirelessPanda/WirelessDevice.cs	/^        internal Hashtable FieldsDictionary$/;"	p	class:WirelessPanda.WirelessDevice
FieldsOrder	lib/csharp/WirelessPanda/WirelessDevice.cs	/^        internal Hashtable FieldsOrder$/;"	p	class:WirelessPanda.WirelessDevice
FileExist	lib/csharp/WirelessPanda/Readers/Reader.cs	/^        public bool FileExist$/;"	p	class:WirelessPanda.Readers.Reader
FileFormat	lib/csharp/WirelessPanda/Readers/csvReader.cs	/^        public CSVFileFormat FileFormat$/;"	p	class:WirelessPanda.Readers.CsvReader
FileRead	src/linecount.cpp	/^unsigned int FileRead(istream &is, vector <char> &buff) {$/;"	f
Filename	lib/csharp/WirelessPanda/Readers/Reader.cs	/^        public string Filename$/;"	p	class:WirelessPanda.Readers.Reader
FirstTimeSeen	lib/csharp/WirelessPanda/WirelessDevice.cs	/^        public DateTime FirstTimeSeen$/;"	p	class:WirelessPanda.WirelessDevice
Flags	contrib/airpcap/airpcap.c	/^	u_int16_t	Flags;$/;"	m	struct:_PPI_FIELD_802_11_COMMON	file:
Flags	lib/csharp/MonoExample/NDesk-dbus/Protocol.cs	/^		public HeaderFlag Flags;$/;"	f	struct:NDesk.DBus.Header
Flags	src/osdep/airpcap.c	/^	u_int16_t	Flags;$/;"	m	struct:_PPI_FIELD_802_11_COMMON	file:
Form1	lib/csharp/Example1/Example1/Form1.Designer.cs	/^    partial class Form1$/;"	c	namespace:Example1
Form1	lib/csharp/Example1/Example1/Form1.cs	/^        public Form1()$/;"	m	class:Example1.Form1
Form1	lib/csharp/Example1/Example1/Form1.cs	/^    public partial class Form1 : Form$/;"	c	namespace:Example1
Form1_SizeChanged	lib/csharp/Example1/Example1/Form1.cs	/^        private void Form1_SizeChanged(object sender, EventArgs e)$/;"	m	class:Example1.Form1	file:
Fragment_list	src/airbase-ng.c	/^struct Fragment_list$/;"	s	file:
Fragment_list	src/airtun-ng.c	/^struct Fragment_list$/;"	s	file:
FromHex	lib/csharp/MonoExample/NDesk-dbus/Authentication.cs	/^		static public byte[] FromHex (string hex)$/;"	m	class:NDesk.DBus.Authentication.SaslClient
FromHexChar	lib/csharp/MonoExample/NDesk-dbus/Authentication.cs	/^		static private byte FromHexChar (char c)$/;"	m	class:NDesk.DBus.Authentication.SaslClient	file:
G	src/airodump-ng.h	/^G;$/;"	v	typeref:struct:globals
G	src/ivstools.c	/^G;$/;"	v	typeref:struct:globals
GATHER	src/pseudo_intrinsics.h	244;"	d
GATHER	src/pseudo_intrinsics.h	402;"	d
GATHER	src/pseudo_intrinsics.h	546;"	d
GATHER	src/sse-intrinsics.c	212;"	d	file:
GATHER64	src/pseudo_intrinsics.h	129;"	d
GATHER64	src/pseudo_intrinsics.h	179;"	d
GATHER64	src/pseudo_intrinsics.h	253;"	d
GATHER64	src/pseudo_intrinsics.h	409;"	d
GATHER64	src/pseudo_intrinsics.h	555;"	d
GATHER64	src/sse-intrinsics.c	220;"	d	file:
GATHER_2x	src/pseudo_intrinsics.h	236;"	d
GATHER_2x	src/pseudo_intrinsics.h	396;"	d
GATHER_2x	src/pseudo_intrinsics.h	539;"	d
GATHER_2x	src/sse-intrinsics.c	205;"	d	file:
GATHER_4x	src/pseudo_intrinsics.h	228;"	d
GATHER_4x	src/pseudo_intrinsics.h	390;"	d
GATHER_4x	src/pseudo_intrinsics.h	532;"	d
GATHER_4x	src/sse-intrinsics.c	198;"	d	file:
GCC_OVER41	common.mak	/^	GCC_OVER41	= $(shell expr 4.1 \\<= `$(CC) -dumpversion | awk -F. '{ print $1$2 }'`)$/;"	m
GCC_OVER41	common.mak	/^GCC_OVER41	= $(shell expr 41 \\<= `$(CC) -dumpversion | awk -F. '{ print $1$2 }'`)$/;"	m
GCC_OVER45	common.mak	/^	GCC_OVER45	= $(shell expr 4.5 \\<= `$(CC) -dumpversion | awk -F. '{ print $1$2 }'`)$/;"	m
GCC_OVER45	common.mak	/^GCC_OVER45	= $(shell expr 45 \\<= `$(CC) -dumpversion | awk -F. '{ print $1$2 }'`)$/;"	m
GCC_OVER49	common.mak	/^	GCC_OVER49	= $(shell expr 4.9 \\<= `$(CC) -dumpversion | awk -F. '{ print $1$2 }'`)$/;"	m
GCC_OVER49	common.mak	/^GCC_OVER49	= $(shell expr 49 \\<= `$(CC) -dumpversion | awk -F. '{ print $1$2 }'`)$/;"	m
GCC_VERSION	src/arch.h	312;"	d
GENPMKMAGIC	src/aircrack-ng.h	76;"	d
GETOUTPOS	src/memory.c	473;"	d	file:
GETPOS	src/memory.c	472;"	d	file:
GETPOS	src/simd-intrinsics.c	453;"	d	file:
GETPOS	src/sse-intrinsics.c	488;"	d	file:
GETPOS	src/wpapsk.c	144;"	d	file:
GETPOS	src/wpapsk.c	146;"	d	file:
GETPOSMPARA	src/memory.c	525;"	d	file:
GET_SUBTYPE	src/crypto.h	73;"	d
GET_UINT32_BE	src/crypto.c	60;"	d	file:
GET_UINT32_LE	src/crypto.c	44;"	d	file:
GOT_ASSOC	src/wesside-ng.c	76;"	d	file:
GOT_AUTH	src/wesside-ng.c	73;"	d	file:
GOT_IV	src/aircrack-ng.c	130;"	d	file:
GenHookupMethod	lib/csharp/MonoExample/NDesk-dbus/TypeImplementer.cs	/^		public static void GenHookupMethod (ILGenerator ilg, MethodInfo declMethod, MethodInfo invokeMethod, string @interface, string member)$/;"	m	class:NDesk.DBus.TypeImplementer
GenMarshalWrite	lib/csharp/MonoExample/NDesk-dbus/TypeImplementer.cs	/^		public static void GenMarshalWrite (ILGenerator ilg, Type type)$/;"	m	class:NDesk.DBus.TypeImplementer
GenWriter	lib/csharp/MonoExample/NDesk-dbus/TypeImplementer.cs	/^		public static void GenWriter (ILGenerator ilg, Type t)$/;"	m	class:NDesk.DBus.TypeImplementer
GenerateSerial	lib/csharp/MonoExample/NDesk-dbus/Connection.cs	/^		uint GenerateSerial ()$/;"	m	class:NDesk.DBus.Connection	file:
Get	lib/csharp/MonoExample/NDesk-dbus/DBus.cs	/^		object Get (string @interface, string propname);$/;"	m	interface:org.freedesktop.DBus.Properties
GetAlignment	lib/csharp/MonoExample/NDesk-dbus/Protocol.cs	/^		public static int GetAlignment (DType dtype)$/;"	m	class:NDesk.DBus.Protocol
GetAll	lib/csharp/MonoExample/NDesk-dbus/DBus.cs	/^		IDictionary<string,object> GetAll(string @interface);$/;"	m	interface:org.freedesktop.DBus.Properties
GetArgumentName	lib/csharp/MonoExample/NDesk-dbus/Mapper.cs	/^		public static string GetArgumentName (ICustomAttributeProvider attrProvider, string defaultName)$/;"	m	class:NDesk.DBus.Mapper
GetArgumentName	lib/csharp/MonoExample/NDesk-dbus/Mapper.cs	/^		public static string GetArgumentName (ParameterInfo pi)$/;"	m	class:NDesk.DBus.Mapper
GetBuffer	lib/csharp/MonoExample/NDesk-dbus/Signature.cs	/^		public byte[] GetBuffer ()$/;"	m	struct:NDesk.DBus.Signature
GetCacheTotalLize	src/cpuid.c	/^unsigned long GetCacheTotalLize(unsigned ebx, unsigned ecx) {$/;"	f
GetCapabilities	lib/csharp/MonoExample/NDesk-dbus/Notifications.cs	/^		string[] GetCapabilities ();$/;"	m	interface:org.freedesktop.Notifications
GetConnectionSELinuxSecurityContext	lib/csharp/MonoExample/NDesk-dbus/DBus.cs	/^		byte[] GetConnectionSELinuxSecurityContext (string connection_name);$/;"	m	interface:org.freedesktop.DBus.IBus
GetConnectionUnixProcessID	lib/csharp/MonoExample/NDesk-dbus/DBus.cs	/^		uint GetConnectionUnixProcessID (string connection_name);$/;"	m	interface:org.freedesktop.DBus.IBus
GetConnectionUnixUser	lib/csharp/MonoExample/NDesk-dbus/DBus.cs	/^		uint GetConnectionUnixUser (string connection_name);$/;"	m	interface:org.freedesktop.DBus.IBus
GetDeclaredPublicMembers	lib/csharp/MonoExample/NDesk-dbus/Mapper.cs	/^		static IEnumerable<MemberInfo> GetDeclaredPublicMembers (Type type)$/;"	m	class:NDesk.DBus.Mapper	file:
GetDefaultReturn	lib/csharp/MonoExample/NDesk-dbus/DProxy.cs	/^		object GetDefaultReturn (MethodBase mi, object[] inArgs)$/;"	m	class:NDesk.DBus.DProxy	file:
GetDynamicValues	lib/csharp/MonoExample/NDesk-dbus/Mapper.cs	/^		public static object[] GetDynamicValues (Message msg, ParameterInfo[] parms)$/;"	m	class:NDesk.DBus.MessageHelper
GetDynamicValues	lib/csharp/MonoExample/NDesk-dbus/Mapper.cs	/^		public static object[] GetDynamicValues (Message msg, Type[] types)$/;"	m	class:NDesk.DBus.MessageHelper
GetElementSignature	lib/csharp/MonoExample/NDesk-dbus/Signature.cs	/^		public Signature GetElementSignature ()$/;"	m	struct:NDesk.DBus.Signature
GetGenericType	lib/csharp/MonoExample/NDesk-dbus/Mapper.cs	/^		internal static Type GetGenericType (Type defType, Type[] parms)$/;"	m	class:NDesk.DBus.Mapper	file:
GetHashCode	lib/csharp/MonoExample/NDesk-dbus/MatchRule.cs	/^		public override int GetHashCode ()$/;"	m	class:NDesk.DBus.MatchRule
GetHashCode	lib/csharp/MonoExample/NDesk-dbus/Protocol.cs	/^		public override int GetHashCode ()$/;"	m	class:NDesk.DBus.ObjectPath
GetHashCode	lib/csharp/MonoExample/NDesk-dbus/Signature.cs	/^		public override int GetHashCode ()$/;"	m	struct:NDesk.DBus.Signature
GetHeaderData	lib/csharp/MonoExample/NDesk-dbus/Message.cs	/^		public byte[] GetHeaderData ()$/;"	m	class:NDesk.DBus.Message
GetHookupDelegate	lib/csharp/MonoExample/NDesk-dbus/BusObject.cs	/^		public Delegate GetHookupDelegate (EventInfo ei)$/;"	m	class:NDesk.DBus.BusObject
GetHookupMethod	lib/csharp/MonoExample/NDesk-dbus/TypeImplementer.cs	/^		public static DynamicMethod GetHookupMethod (EventInfo ei)$/;"	m	class:NDesk.DBus.TypeImplementer
GetHookupMethod	lib/csharp/MonoExample/NDesk-dbus/TypeImplementer.cs	/^		public static DynamicMethod GetHookupMethod (MethodInfo declMethod, MethodInfo invokeMethod, string @interface, string member)$/;"	m	class:NDesk.DBus.TypeImplementer
GetImplementation	lib/csharp/MonoExample/NDesk-dbus/TypeImplementer.cs	/^		public static Type GetImplementation (Type declType)$/;"	m	class:NDesk.DBus.TypeImplementer
GetInterfaceName	lib/csharp/MonoExample/NDesk-dbus/Mapper.cs	/^		public static string GetInterfaceName (MemberInfo mi)$/;"	m	class:NDesk.DBus.Mapper
GetInterfaceName	lib/csharp/MonoExample/NDesk-dbus/Mapper.cs	/^		public static string GetInterfaceName (Type type)$/;"	m	class:NDesk.DBus.Mapper
GetMachineId	lib/csharp/MonoExample/NDesk-dbus/DBus.cs	/^		string GetMachineId ();$/;"	m	interface:org.freedesktop.DBus.Peer
GetMethod	lib/csharp/MonoExample/NDesk-dbus/Mapper.cs	/^		public static MethodInfo GetMethod (Type type, MethodCall method_call)$/;"	m	class:NDesk.DBus.Mapper
GetNameOwner	lib/csharp/MonoExample/NDesk-dbus/DBus.cs	/^		string GetNameOwner (string name);$/;"	m	interface:org.freedesktop.DBus.IBus
GetObject	lib/csharp/MonoExample/NDesk-dbus/BusObject.cs	/^		public static object GetObject (Connection conn, string bus_name, ObjectPath object_path, Type declType)$/;"	m	class:NDesk.DBus.BusObject
GetObject	lib/csharp/MonoExample/NDesk-dbus/Connection.cs	/^		public T GetObject<T> (string bus_name, ObjectPath path)$/;"	m	class:NDesk.DBus.Connection
GetObject	lib/csharp/MonoExample/NDesk-dbus/Connection.cs	/^		public object GetObject (Type type, string bus_name, ObjectPath path)$/;"	m	class:NDesk.DBus.Connection
GetObject	lib/csharp/MonoExample/NDesk-dbus/MessageReader.cs	/^		public object GetObject (Type type)$/;"	m	class:NDesk.DBus.MessageReader
GetProductDescription	lib/csharp/MonoExample/NDesk-dbus/Introspection.cs	/^		static string GetProductDescription ()$/;"	m	class:NDesk.DBus.Introspector	file:
GetPublicMembers	lib/csharp/MonoExample/NDesk-dbus/Mapper.cs	/^		public static IEnumerable<MemberInfo> GetPublicMembers (Type type)$/;"	m	class:NDesk.DBus.Mapper
GetServerInformation	lib/csharp/MonoExample/NDesk-dbus/Notifications.cs	/^		ServerInformation GetServerInformation ();$/;"	m	interface:org.freedesktop.Notifications
GetSig	lib/csharp/MonoExample/NDesk-dbus/Signature.cs	/^		public static Signature GetSig (Type type)$/;"	m	struct:NDesk.DBus.Signature
GetSig	lib/csharp/MonoExample/NDesk-dbus/Signature.cs	/^		public static Signature GetSig (Type[] types)$/;"	m	struct:NDesk.DBus.Signature
GetSig	lib/csharp/MonoExample/NDesk-dbus/Signature.cs	/^		public static Signature GetSig (object[] objs)$/;"	m	struct:NDesk.DBus.Signature
GetTypes	lib/csharp/MonoExample/NDesk-dbus/Mapper.cs	/^		public static Type[] GetTypes (ArgDirection dir, ParameterInfo[] parms)$/;"	m	class:NDesk.DBus.Mapper
GetUnixUser	lib/csharp/MonoExample/NDesk-dbus/Bus.cs	/^		public ulong GetUnixUser (string name)$/;"	m	class:NDesk.DBus.Bus
GetValueToDict	lib/csharp/MonoExample/NDesk-dbus/MessageReader.cs	/^		public void GetValueToDict (Type keyType, Type valType, System.Collections.IDictionary val)$/;"	m	class:NDesk.DBus.MessageReader
GetWriteMethod	lib/csharp/MonoExample/NDesk-dbus/TypeImplementer.cs	/^		public static MethodInfo GetWriteMethod (Type t)$/;"	m	class:NDesk.DBus.TypeImplementer
HAVE_CMSGCRED	lib/csharp/MonoExample/NDesk-dbus/UnixNativeTransport.cs	8;"	d	file:
HAVE_PCAP	src/Makefile	/^	HAVE_PCAP	= $(shell ld -lpcap 2> \/dev\/null && echo yes)$/;"	m
HEADER	scripts/airdrop-ng/airdrop/__init__.py	/^    HEADER = '\\033[95m' #pink   $/;"	v	class:bcolors
HEX_BASE	src/common.c	54;"	d	file:
HI16	src/crypto.c	1098;"	d	file:
HI8	src/crypto.c	1097;"	d	file:
HIGHEST_CHANNEL	src/osdep/common.h	45;"	d
HMAC	src/gcrypt-openssl-wrapper.h	76;"	d
HMAC_CTX	src/gcrypt-openssl-wrapper.h	57;"	d
HMAC_CTX_cleanup	src/gcrypt-openssl-wrapper.h	58;"	d
HMAC_CTX_init	src/gcrypt-openssl-wrapper.h	59;"	d
HMAC_Final	src/gcrypt-openssl-wrapper.h	70;"	d
HMAC_Init	src/gcrypt-openssl-wrapper.h	61;"	d
HMAC_Init_ex	src/gcrypt-openssl-wrapper.h	60;"	d
HMAC_Update	src/gcrypt-openssl-wrapper.h	69;"	d
Handle	lib/csharp/MonoExample/NDesk-dbus/UnixNativeTransport.cs	/^		public int Handle;$/;"	f	class:NDesk.DBus.Transports.UnixSocket
HandleMessage	lib/csharp/MonoExample/NDesk-dbus/Connection.cs	/^		internal void HandleMessage (Message msg)$/;"	m	class:NDesk.DBus.Connection	file:
HandleMethodCall	lib/csharp/MonoExample/NDesk-dbus/Connection.cs	/^		internal void HandleMethodCall (MethodCall method_call)$/;"	m	class:NDesk.DBus.Connection	file:
HandleMethodCall	lib/csharp/MonoExample/NDesk-dbus/ExportObject.cs	/^		public void HandleMethodCall (MethodCall method_call)$/;"	m	class:NDesk.DBus.ExportObject
HandleSignal	lib/csharp/MonoExample/NDesk-dbus/Connection.cs	/^		internal void HandleSignal (Message msg)$/;"	m	class:NDesk.DBus.Connection	file:
Handlers	lib/csharp/MonoExample/NDesk-dbus/Connection.cs	/^		internal Dictionary<MatchRule,Delegate> Handlers = new Dictionary<MatchRule,Delegate> ();$/;"	f	class:NDesk.DBus.Connection	file:
Header	lib/csharp/MonoExample/NDesk-dbus/Message.cs	/^		public Header Header;$/;"	f	class:NDesk.DBus.Message
Header	lib/csharp/MonoExample/NDesk-dbus/Protocol.cs	/^	struct Header$/;"	s	namespace:NDesk.DBus
HeaderFlag	lib/csharp/MonoExample/NDesk-dbus/Protocol.cs	/^	enum HeaderFlag : byte$/;"	g	namespace:NDesk.DBus
Hello	lib/csharp/MonoExample/NDesk-dbus/DBus.cs	/^		string Hello ();$/;"	m	interface:org.freedesktop.DBus.IBus
IBus	lib/csharp/MonoExample/NDesk-dbus/DBus.cs	/^	public interface IBus : Introspectable$/;"	i	namespace:org.freedesktop.DBus
ICCMODE	common.mak	/^	ICCMODE	= Y$/;"	m
ICMP_PACKET	src/packetforge-ng.c	62;"	d	file:
IEEE80211RADIOTAP_H	src/osdep/radiotap/radiotap.h	36;"	d
IEEE80211_ACK_LEN	src/include/ieee80211.h	692;"	d
IEEE80211_ADDR_LEN	src/include/ieee80211.h	42;"	d
IEEE80211_AID	src/include/ieee80211.h	707;"	d
IEEE80211_AID_DEF	src/include/ieee80211.h	705;"	d
IEEE80211_AID_MAX	src/include/ieee80211.h	704;"	d
IEEE80211_AUTH_ALGORITHM	src/include/ieee80211.h	593;"	d
IEEE80211_AUTH_ALG_LEAP	src/include/ieee80211.h	602;"	d
IEEE80211_AUTH_ALG_OPEN	src/include/ieee80211.h	600;"	d
IEEE80211_AUTH_ALG_SHARED	src/include/ieee80211.h	601;"	d
IEEE80211_AUTH_OPEN_REQUEST	src/include/ieee80211.h	/^	IEEE80211_AUTH_OPEN_REQUEST		= 1,$/;"	e	enum:__anon3
IEEE80211_AUTH_OPEN_RESPONSE	src/include/ieee80211.h	/^	IEEE80211_AUTH_OPEN_RESPONSE		= 2$/;"	e	enum:__anon3
IEEE80211_AUTH_SHARED_CHALLENGE	src/include/ieee80211.h	/^	IEEE80211_AUTH_SHARED_CHALLENGE		= 2,$/;"	e	enum:__anon4
IEEE80211_AUTH_SHARED_PASS	src/include/ieee80211.h	/^	IEEE80211_AUTH_SHARED_PASS		= 4$/;"	e	enum:__anon4
IEEE80211_AUTH_SHARED_REQUEST	src/include/ieee80211.h	/^	IEEE80211_AUTH_SHARED_REQUEST		= 1,$/;"	e	enum:__anon4
IEEE80211_AUTH_SHARED_RESPONSE	src/include/ieee80211.h	/^	IEEE80211_AUTH_SHARED_RESPONSE		= 3,$/;"	e	enum:__anon4
IEEE80211_AUTH_STATUS	src/include/ieee80211.h	597;"	d
IEEE80211_AUTH_TRANSACTION	src/include/ieee80211.h	595;"	d
IEEE80211_BEACON_CAPABILITY	src/include/ieee80211.h	425;"	d
IEEE80211_BEACON_INTERVAL	src/include/ieee80211.h	423;"	d
IEEE80211_CAPINFO_CF_POLLABLE	src/include/ieee80211.h	430;"	d
IEEE80211_CAPINFO_CF_POLLREQ	src/include/ieee80211.h	431;"	d
IEEE80211_CAPINFO_CHNL_AGILITY	src/include/ieee80211.h	435;"	d
IEEE80211_CAPINFO_DSSSOFDM	src/include/ieee80211.h	440;"	d
IEEE80211_CAPINFO_ESS	src/include/ieee80211.h	428;"	d
IEEE80211_CAPINFO_IBSS	src/include/ieee80211.h	429;"	d
IEEE80211_CAPINFO_PBCC	src/include/ieee80211.h	434;"	d
IEEE80211_CAPINFO_PRIVACY	src/include/ieee80211.h	432;"	d
IEEE80211_CAPINFO_RSN	src/include/ieee80211.h	438;"	d
IEEE80211_CAPINFO_SHORT_PREAMBLE	src/include/ieee80211.h	433;"	d
IEEE80211_CAPINFO_SHORT_SLOTTIME	src/include/ieee80211.h	437;"	d
IEEE80211_CHALLENGE_LEN	src/include/ieee80211.h	523;"	d
IEEE80211_CHAN_2GHZ	src/osdep/radiotap/radiotap.h	220;"	d
IEEE80211_CHAN_5GHZ	src/osdep/radiotap/radiotap.h	221;"	d
IEEE80211_CHAN_CCK	src/osdep/radiotap/radiotap.h	218;"	d
IEEE80211_CHAN_DYN	src/osdep/radiotap/radiotap.h	223;"	d
IEEE80211_CHAN_GFSK	src/osdep/radiotap/radiotap.h	224;"	d
IEEE80211_CHAN_OFDM	src/osdep/radiotap/radiotap.h	219;"	d
IEEE80211_CHAN_PASSIVE	src/osdep/radiotap/radiotap.h	222;"	d
IEEE80211_CHAN_TURBO	src/osdep/radiotap/radiotap.h	217;"	d
IEEE80211_CRC_LEN	src/include/ieee80211.h	678;"	d
IEEE80211_DUR_DS_DIFS	src/include/ieee80211.h	753;"	d
IEEE80211_DUR_DS_EIFS	src/include/ieee80211.h	755;"	d
IEEE80211_DUR_DS_FAST_ACK	src/include/ieee80211.h	746;"	d
IEEE80211_DUR_DS_FAST_CTS	src/include/ieee80211.h	748;"	d
IEEE80211_DUR_DS_FAST_PLCPHDR	src/include/ieee80211.h	744;"	d
IEEE80211_DUR_DS_LONG_PREAMBLE	src/include/ieee80211.h	740;"	d
IEEE80211_DUR_DS_PIFS	src/include/ieee80211.h	752;"	d
IEEE80211_DUR_DS_SHORT_PREAMBLE	src/include/ieee80211.h	741;"	d
IEEE80211_DUR_DS_SIFS	src/include/ieee80211.h	751;"	d
IEEE80211_DUR_DS_SLOT	src/include/ieee80211.h	750;"	d
IEEE80211_DUR_DS_SLOW_ACK	src/include/ieee80211.h	745;"	d
IEEE80211_DUR_DS_SLOW_CTS	src/include/ieee80211.h	747;"	d
IEEE80211_DUR_DS_SLOW_PLCPHDR	src/include/ieee80211.h	743;"	d
IEEE80211_DUR_TU	src/include/ieee80211.h	737;"	d
IEEE80211_ELEMID_CCKM	src/include/ieee80211.h	/^	IEEE80211_ELEMID_CCKM		= 156,$/;"	e	enum:__anon2
IEEE80211_ELEMID_CFPARMS	src/include/ieee80211.h	/^	IEEE80211_ELEMID_CFPARMS	= 4,$/;"	e	enum:__anon2
IEEE80211_ELEMID_CHALLENGE	src/include/ieee80211.h	/^	IEEE80211_ELEMID_CHALLENGE	= 16,$/;"	e	enum:__anon2
IEEE80211_ELEMID_CHANSWITCHANN	src/include/ieee80211.h	/^	IEEE80211_ELEMID_CHANSWITCHANN	= 37,$/;"	e	enum:__anon2
IEEE80211_ELEMID_COUNTRY	src/include/ieee80211.h	/^	IEEE80211_ELEMID_COUNTRY	= 7,$/;"	e	enum:__anon2
IEEE80211_ELEMID_DSPARMS	src/include/ieee80211.h	/^	IEEE80211_ELEMID_DSPARMS	= 3,$/;"	e	enum:__anon2
IEEE80211_ELEMID_EDCAPARMS	src/include/ieee80211.h	/^	IEEE80211_ELEMID_EDCAPARMS	= 12,$/;"	e	enum:__anon2
IEEE80211_ELEMID_ERP	src/include/ieee80211.h	/^	IEEE80211_ELEMID_ERP		= 42,$/;"	e	enum:__anon2
IEEE80211_ELEMID_FHPARMS	src/include/ieee80211.h	/^	IEEE80211_ELEMID_FHPARMS	= 2,$/;"	e	enum:__anon2
IEEE80211_ELEMID_HTCAP	src/include/ieee80211.h	/^	IEEE80211_ELEMID_HTCAP		= 45,	\/* 11n *\/$/;"	e	enum:__anon2
IEEE80211_ELEMID_HTINFO	src/include/ieee80211.h	/^	IEEE80211_ELEMID_HTINFO		= 61,	\/* 11n *\/$/;"	e	enum:__anon2
IEEE80211_ELEMID_IBSSDFS	src/include/ieee80211.h	/^	IEEE80211_ELEMID_IBSSDFS	= 41,$/;"	e	enum:__anon2
IEEE80211_ELEMID_IBSSPARMS	src/include/ieee80211.h	/^	IEEE80211_ELEMID_IBSSPARMS	= 6,$/;"	e	enum:__anon2
IEEE80211_ELEMID_MEASREP	src/include/ieee80211.h	/^	IEEE80211_ELEMID_MEASREP	= 39,$/;"	e	enum:__anon2
IEEE80211_ELEMID_MEASREQ	src/include/ieee80211.h	/^	IEEE80211_ELEMID_MEASREQ	= 38,$/;"	e	enum:__anon2
IEEE80211_ELEMID_MMIE	src/include/ieee80211.h	/^	IEEE80211_ELEMID_MMIE		= 76,	\/* 11w *\/$/;"	e	enum:__anon2
IEEE80211_ELEMID_PWRCAP	src/include/ieee80211.h	/^	IEEE80211_ELEMID_PWRCAP		= 33,$/;"	e	enum:__anon2
IEEE80211_ELEMID_PWRCNSTR	src/include/ieee80211.h	/^	IEEE80211_ELEMID_PWRCNSTR	= 32,$/;"	e	enum:__anon2
IEEE80211_ELEMID_QOS_CAP	src/include/ieee80211.h	/^	IEEE80211_ELEMID_QOS_CAP	= 46,$/;"	e	enum:__anon2
IEEE80211_ELEMID_QUIET	src/include/ieee80211.h	/^	IEEE80211_ELEMID_QUIET		= 40,$/;"	e	enum:__anon2
IEEE80211_ELEMID_RATES	src/include/ieee80211.h	/^	IEEE80211_ELEMID_RATES		= 1,$/;"	e	enum:__anon2
IEEE80211_ELEMID_RSN	src/include/ieee80211.h	/^	IEEE80211_ELEMID_RSN		= 48,$/;"	e	enum:__anon2
IEEE80211_ELEMID_SSID	src/include/ieee80211.h	/^	IEEE80211_ELEMID_SSID		= 0,$/;"	e	enum:__anon2
IEEE80211_ELEMID_SUPPCHAN	src/include/ieee80211.h	/^	IEEE80211_ELEMID_SUPPCHAN	= 36,$/;"	e	enum:__anon2
IEEE80211_ELEMID_TIE	src/include/ieee80211.h	/^	IEEE80211_ELEMID_TIE		= 56,	\/* 11r *\/$/;"	e	enum:__anon2
IEEE80211_ELEMID_TIM	src/include/ieee80211.h	/^	IEEE80211_ELEMID_TIM		= 5,$/;"	e	enum:__anon2
IEEE80211_ELEMID_TPC	src/include/ieee80211.h	/^	IEEE80211_ELEMID_TPC		= 150,$/;"	e	enum:__anon2
IEEE80211_ELEMID_TPCREP	src/include/ieee80211.h	/^	IEEE80211_ELEMID_TPCREP		= 35,$/;"	e	enum:__anon2
IEEE80211_ELEMID_TPCREQ	src/include/ieee80211.h	/^	IEEE80211_ELEMID_TPCREQ		= 34,$/;"	e	enum:__anon2
IEEE80211_ELEMID_VENDOR	src/include/ieee80211.h	/^	IEEE80211_ELEMID_VENDOR		= 221	\/* vendor private *\/$/;"	e	enum:__anon2
IEEE80211_ELEMID_XRATES	src/include/ieee80211.h	/^	IEEE80211_ELEMID_XRATES		= 50,$/;"	e	enum:__anon2
IEEE80211_ERP_LONG_PREAMBLE	src/include/ieee80211.h	531;"	d
IEEE80211_ERP_NON_ERP_PRESENT	src/include/ieee80211.h	529;"	d
IEEE80211_ERP_USE_PROTECTION	src/include/ieee80211.h	530;"	d
IEEE80211_FC0_SUBTYPE_ACK	src/include/ieee80211.h	137;"	d
IEEE80211_FC0_SUBTYPE_ASSOC_REQ	src/include/ieee80211.h	122;"	d
IEEE80211_FC0_SUBTYPE_ASSOC_RESP	src/include/ieee80211.h	123;"	d
IEEE80211_FC0_SUBTYPE_ATIM	src/include/ieee80211.h	129;"	d
IEEE80211_FC0_SUBTYPE_AUTH	src/include/ieee80211.h	131;"	d
IEEE80211_FC0_SUBTYPE_BEACON	src/include/ieee80211.h	128;"	d
IEEE80211_FC0_SUBTYPE_CFACK	src/include/ieee80211.h	146;"	d
IEEE80211_FC0_SUBTYPE_CFPOLL	src/include/ieee80211.h	147;"	d
IEEE80211_FC0_SUBTYPE_CF_ACK	src/include/ieee80211.h	142;"	d
IEEE80211_FC0_SUBTYPE_CF_ACK_CF_ACK	src/include/ieee80211.h	148;"	d
IEEE80211_FC0_SUBTYPE_CF_ACPL	src/include/ieee80211.h	144;"	d
IEEE80211_FC0_SUBTYPE_CF_END	src/include/ieee80211.h	138;"	d
IEEE80211_FC0_SUBTYPE_CF_END_ACK	src/include/ieee80211.h	139;"	d
IEEE80211_FC0_SUBTYPE_CF_POLL	src/include/ieee80211.h	143;"	d
IEEE80211_FC0_SUBTYPE_CTS	src/include/ieee80211.h	136;"	d
IEEE80211_FC0_SUBTYPE_DATA	src/include/ieee80211.h	141;"	d
IEEE80211_FC0_SUBTYPE_DEAUTH	src/include/ieee80211.h	132;"	d
IEEE80211_FC0_SUBTYPE_DISASSOC	src/include/ieee80211.h	130;"	d
IEEE80211_FC0_SUBTYPE_MASK	src/crypto.h	66;"	d
IEEE80211_FC0_SUBTYPE_MASK	src/include/ieee80211.h	119;"	d
IEEE80211_FC0_SUBTYPE_NODATA	src/include/ieee80211.h	145;"	d
IEEE80211_FC0_SUBTYPE_PROBE_REQ	src/include/ieee80211.h	126;"	d
IEEE80211_FC0_SUBTYPE_PROBE_RESP	src/include/ieee80211.h	127;"	d
IEEE80211_FC0_SUBTYPE_PS_POLL	src/include/ieee80211.h	134;"	d
IEEE80211_FC0_SUBTYPE_QOS	src/crypto.h	70;"	d
IEEE80211_FC0_SUBTYPE_QOS	src/include/ieee80211.h	149;"	d
IEEE80211_FC0_SUBTYPE_QOS_NULL	src/crypto.h	71;"	d
IEEE80211_FC0_SUBTYPE_QOS_NULL	src/include/ieee80211.h	150;"	d
IEEE80211_FC0_SUBTYPE_REASSOC_REQ	src/include/ieee80211.h	124;"	d
IEEE80211_FC0_SUBTYPE_REASSOC_RESP	src/include/ieee80211.h	125;"	d
IEEE80211_FC0_SUBTYPE_RTS	src/include/ieee80211.h	135;"	d
IEEE80211_FC0_SUBTYPE_SHIFT	src/crypto.h	67;"	d
IEEE80211_FC0_SUBTYPE_SHIFT	src/include/ieee80211.h	120;"	d
IEEE80211_FC0_TYPE_CTL	src/include/ieee80211.h	116;"	d
IEEE80211_FC0_TYPE_DATA	src/include/ieee80211.h	117;"	d
IEEE80211_FC0_TYPE_MASK	src/include/ieee80211.h	113;"	d
IEEE80211_FC0_TYPE_MGT	src/include/ieee80211.h	115;"	d
IEEE80211_FC0_TYPE_SHIFT	src/include/ieee80211.h	114;"	d
IEEE80211_FC0_VERSION_0	src/include/ieee80211.h	112;"	d
IEEE80211_FC0_VERSION_MASK	src/include/ieee80211.h	110;"	d
IEEE80211_FC0_VERSION_SHIFT	src/include/ieee80211.h	111;"	d
IEEE80211_FC1_DIR_DSTODS	src/include/ieee80211.h	171;"	d
IEEE80211_FC1_DIR_FROMDS	src/aircrack-ng.h	120;"	d
IEEE80211_FC1_DIR_FROMDS	src/crypto.h	56;"	d
IEEE80211_FC1_DIR_FROMDS	src/include/ieee80211.h	170;"	d
IEEE80211_FC1_DIR_MASK	src/include/ieee80211.h	167;"	d
IEEE80211_FC1_DIR_NODS	src/include/ieee80211.h	168;"	d
IEEE80211_FC1_DIR_TODS	src/include/ieee80211.h	169;"	d
IEEE80211_FC1_MORE_DATA	src/include/ieee80211.h	176;"	d
IEEE80211_FC1_MORE_FRAG	src/include/ieee80211.h	173;"	d
IEEE80211_FC1_ORDER	src/include/ieee80211.h	179;"	d
IEEE80211_FC1_PROTECTED	src/include/ieee80211.h	177;"	d
IEEE80211_FC1_PWR_MGT	src/include/ieee80211.h	175;"	d
IEEE80211_FC1_RETRY	src/include/ieee80211.h	174;"	d
IEEE80211_FC1_WEP	src/include/ieee80211.h	178;"	d
IEEE80211_FRAG_MAX	src/include/ieee80211.h	723;"	d
IEEE80211_FRAG_MIN	src/include/ieee80211.h	722;"	d
IEEE80211_IOC_CHANNEL	src/osdep/netbsd.c	53;"	d	file:
IEEE80211_IOC_CHANNEL	src/osdep/openbsd.c	60;"	d	file:
IEEE80211_IS_MULTICAST	src/include/ieee80211.h	44;"	d
IEEE80211_LLC_SNAP	src/airbase-ng.c	1676;"	d	file:
IEEE80211_LLC_SNAP	src/airtun-ng.c	796;"	d	file:
IEEE80211_MAX_LEN	src/include/ieee80211.h	690;"	d
IEEE80211_MIN_LEN	src/include/ieee80211.h	694;"	d
IEEE80211_MTU_MAX	src/include/ieee80211.h	687;"	d
IEEE80211_MTU_MIN	src/include/ieee80211.h	688;"	d
IEEE80211_NWID_LEN	src/include/ieee80211.h	186;"	d
IEEE80211_PLCP_SERVICE	src/include/ieee80211.h	56;"	d
IEEE80211_PLCP_SFD	src/include/ieee80211.h	55;"	d
IEEE80211_QOS_ACKPOLICY	src/include/ieee80211.h	197;"	d
IEEE80211_QOS_ACKPOLICY_BA	src/include/ieee80211.h	200;"	d
IEEE80211_QOS_ACKPOLICY_MASK	src/include/ieee80211.h	199;"	d
IEEE80211_QOS_ACKPOLICY_NOACK	src/include/ieee80211.h	195;"	d
IEEE80211_QOS_ACKPOLICY_NOEXPLACK	src/include/ieee80211.h	196;"	d
IEEE80211_QOS_ACKPOLICY_NORMAL	src/include/ieee80211.h	194;"	d
IEEE80211_QOS_ACKPOLICY_S	src/include/ieee80211.h	198;"	d
IEEE80211_QOS_AMSDU	src/include/ieee80211.h	193;"	d
IEEE80211_QOS_ESOP	src/include/ieee80211.h	201;"	d
IEEE80211_QOS_ESOP_S	src/include/ieee80211.h	202;"	d
IEEE80211_QOS_TID	src/include/ieee80211.h	203;"	d
IEEE80211_QOS_TXOP	src/include/ieee80211.h	192;"	d
IEEE80211_RADIOTAP_AMPDU_DELIM_CRC_ERR	src/osdep/radiotap/radiotap.h	261;"	d
IEEE80211_RADIOTAP_AMPDU_DELIM_CRC_KNOWN	src/osdep/radiotap/radiotap.h	262;"	d
IEEE80211_RADIOTAP_AMPDU_IS_LAST	src/osdep/radiotap/radiotap.h	260;"	d
IEEE80211_RADIOTAP_AMPDU_IS_ZEROLEN	src/osdep/radiotap/radiotap.h	258;"	d
IEEE80211_RADIOTAP_AMPDU_LAST_KNOWN	src/osdep/radiotap/radiotap.h	259;"	d
IEEE80211_RADIOTAP_AMPDU_REPORT_ZEROLEN	src/osdep/radiotap/radiotap.h	257;"	d
IEEE80211_RADIOTAP_AMPDU_STATUS	src/osdep/radiotap/radiotap.h	/^	IEEE80211_RADIOTAP_AMPDU_STATUS = 20,$/;"	e	enum:ieee80211_radiotap_type
IEEE80211_RADIOTAP_ANTENNA	src/osdep/radiotap/radiotap.h	/^	IEEE80211_RADIOTAP_ANTENNA = 11,$/;"	e	enum:ieee80211_radiotap_type
IEEE80211_RADIOTAP_CHANNEL	src/osdep/radiotap/radiotap.h	/^	IEEE80211_RADIOTAP_CHANNEL = 3,$/;"	e	enum:ieee80211_radiotap_type
IEEE80211_RADIOTAP_DATA_RETRIES	src/osdep/radiotap/radiotap.h	/^	IEEE80211_RADIOTAP_DATA_RETRIES = 17,$/;"	e	enum:ieee80211_radiotap_type
IEEE80211_RADIOTAP_DBM_ANTNOISE	src/osdep/radiotap/radiotap.h	/^	IEEE80211_RADIOTAP_DBM_ANTNOISE = 6,$/;"	e	enum:ieee80211_radiotap_type
IEEE80211_RADIOTAP_DBM_ANTSIGNAL	src/osdep/radiotap/radiotap.h	/^	IEEE80211_RADIOTAP_DBM_ANTSIGNAL = 5,$/;"	e	enum:ieee80211_radiotap_type
IEEE80211_RADIOTAP_DBM_TX_POWER	src/osdep/radiotap/radiotap.h	/^	IEEE80211_RADIOTAP_DBM_TX_POWER = 10,$/;"	e	enum:ieee80211_radiotap_type
IEEE80211_RADIOTAP_DB_ANTNOISE	src/osdep/radiotap/radiotap.h	/^	IEEE80211_RADIOTAP_DB_ANTNOISE = 13,$/;"	e	enum:ieee80211_radiotap_type
IEEE80211_RADIOTAP_DB_ANTSIGNAL	src/osdep/radiotap/radiotap.h	/^	IEEE80211_RADIOTAP_DB_ANTSIGNAL = 12,$/;"	e	enum:ieee80211_radiotap_type
IEEE80211_RADIOTAP_DB_TX_ATTENUATION	src/osdep/radiotap/radiotap.h	/^	IEEE80211_RADIOTAP_DB_TX_ATTENUATION = 9,$/;"	e	enum:ieee80211_radiotap_type
IEEE80211_RADIOTAP_EXT	src/osdep/radiotap/radiotap.h	/^	IEEE80211_RADIOTAP_EXT = 31$/;"	e	enum:ieee80211_radiotap_type
IEEE80211_RADIOTAP_FHSS	src/osdep/radiotap/radiotap.h	/^	IEEE80211_RADIOTAP_FHSS = 4,$/;"	e	enum:ieee80211_radiotap_type
IEEE80211_RADIOTAP_FLAGS	src/osdep/radiotap/radiotap.h	/^	IEEE80211_RADIOTAP_FLAGS = 1,$/;"	e	enum:ieee80211_radiotap_type
IEEE80211_RADIOTAP_F_BADFCS	src/osdep/radiotap/radiotap.h	245;"	d
IEEE80211_RADIOTAP_F_CFP	src/osdep/radiotap/radiotap.h	227;"	d
IEEE80211_RADIOTAP_F_DATAPAD	src/osdep/radiotap/radiotap.h	241;"	d
IEEE80211_RADIOTAP_F_FCS	src/osdep/netbsd.c	49;"	d	file:
IEEE80211_RADIOTAP_F_FCS	src/osdep/openbsd.c	56;"	d	file:
IEEE80211_RADIOTAP_F_FCS	src/osdep/radiotap/radiotap.h	240;"	d
IEEE80211_RADIOTAP_F_FRAG	src/osdep/radiotap/radiotap.h	237;"	d
IEEE80211_RADIOTAP_F_RX_BADPLCP	src/osdep/radiotap/radiotap.h	248;"	d
IEEE80211_RADIOTAP_F_SHORTPRE	src/osdep/radiotap/radiotap.h	230;"	d
IEEE80211_RADIOTAP_F_TX_CTS	src/osdep/radiotap/radiotap.h	253;"	d
IEEE80211_RADIOTAP_F_TX_FAIL	src/osdep/radiotap/radiotap.h	251;"	d
IEEE80211_RADIOTAP_F_TX_RTS	src/osdep/radiotap/radiotap.h	254;"	d
IEEE80211_RADIOTAP_F_WEP	src/osdep/radiotap/radiotap.h	234;"	d
IEEE80211_RADIOTAP_LOCK_QUALITY	src/osdep/radiotap/radiotap.h	/^	IEEE80211_RADIOTAP_LOCK_QUALITY = 7,$/;"	e	enum:ieee80211_radiotap_type
IEEE80211_RADIOTAP_MCS	src/osdep/radiotap/radiotap.h	/^	IEEE80211_RADIOTAP_MCS = 19,$/;"	e	enum:ieee80211_radiotap_type
IEEE80211_RADIOTAP_MCS_BW_20	src/osdep/radiotap/radiotap.h	276;"	d
IEEE80211_RADIOTAP_MCS_BW_20L	src/osdep/radiotap/radiotap.h	278;"	d
IEEE80211_RADIOTAP_MCS_BW_20U	src/osdep/radiotap/radiotap.h	279;"	d
IEEE80211_RADIOTAP_MCS_BW_40	src/osdep/radiotap/radiotap.h	277;"	d
IEEE80211_RADIOTAP_MCS_BW_MASK	src/osdep/radiotap/radiotap.h	275;"	d
IEEE80211_RADIOTAP_MCS_FEC_LDPC	src/osdep/radiotap/radiotap.h	282;"	d
IEEE80211_RADIOTAP_MCS_FMT_GF	src/osdep/radiotap/radiotap.h	281;"	d
IEEE80211_RADIOTAP_MCS_HAVE_BW	src/osdep/radiotap/radiotap.h	265;"	d
IEEE80211_RADIOTAP_MCS_HAVE_FEC	src/osdep/radiotap/radiotap.h	269;"	d
IEEE80211_RADIOTAP_MCS_HAVE_FMT	src/osdep/radiotap/radiotap.h	268;"	d
IEEE80211_RADIOTAP_MCS_HAVE_GI	src/osdep/radiotap/radiotap.h	267;"	d
IEEE80211_RADIOTAP_MCS_HAVE_MCS	src/osdep/radiotap/radiotap.h	266;"	d
IEEE80211_RADIOTAP_MCS_HAVE_NESS	src/osdep/radiotap/radiotap.h	271;"	d
IEEE80211_RADIOTAP_MCS_HAVE_STBC	src/osdep/radiotap/radiotap.h	270;"	d
IEEE80211_RADIOTAP_MCS_NESS_BIT0	src/osdep/radiotap/radiotap.h	288;"	d
IEEE80211_RADIOTAP_MCS_NESS_BIT1	src/osdep/radiotap/radiotap.h	272;"	d
IEEE80211_RADIOTAP_MCS_SGI	src/osdep/radiotap/radiotap.h	280;"	d
IEEE80211_RADIOTAP_MCS_STBC_1	src/osdep/radiotap/radiotap.h	285;"	d
IEEE80211_RADIOTAP_MCS_STBC_2	src/osdep/radiotap/radiotap.h	286;"	d
IEEE80211_RADIOTAP_MCS_STBC_3	src/osdep/radiotap/radiotap.h	287;"	d
IEEE80211_RADIOTAP_MCS_STBC_MASK	src/osdep/radiotap/radiotap.h	283;"	d
IEEE80211_RADIOTAP_MCS_STBC_SHIFT	src/osdep/radiotap/radiotap.h	284;"	d
IEEE80211_RADIOTAP_RADIOTAP_NAMESPACE	src/osdep/radiotap/radiotap.h	/^	IEEE80211_RADIOTAP_RADIOTAP_NAMESPACE = 29,$/;"	e	enum:ieee80211_radiotap_type
IEEE80211_RADIOTAP_RATE	src/osdep/radiotap/radiotap.h	/^	IEEE80211_RADIOTAP_RATE = 2,$/;"	e	enum:ieee80211_radiotap_type
IEEE80211_RADIOTAP_RTS_RETRIES	src/osdep/radiotap/radiotap.h	/^	IEEE80211_RADIOTAP_RTS_RETRIES = 16,$/;"	e	enum:ieee80211_radiotap_type
IEEE80211_RADIOTAP_RX_FLAGS	src/osdep/radiotap/radiotap.h	/^	IEEE80211_RADIOTAP_RX_FLAGS = 14,$/;"	e	enum:ieee80211_radiotap_type
IEEE80211_RADIOTAP_TSFT	src/osdep/radiotap/radiotap.h	/^	IEEE80211_RADIOTAP_TSFT = 0,$/;"	e	enum:ieee80211_radiotap_type
IEEE80211_RADIOTAP_TX_ATTENUATION	src/osdep/radiotap/radiotap.h	/^	IEEE80211_RADIOTAP_TX_ATTENUATION = 8,$/;"	e	enum:ieee80211_radiotap_type
IEEE80211_RADIOTAP_TX_FLAGS	src/osdep/radiotap/radiotap.h	/^	IEEE80211_RADIOTAP_TX_FLAGS = 15,$/;"	e	enum:ieee80211_radiotap_type
IEEE80211_RADIOTAP_VENDOR_NAMESPACE	src/osdep/radiotap/radiotap.h	/^	IEEE80211_RADIOTAP_VENDOR_NAMESPACE = 30,$/;"	e	enum:ieee80211_radiotap_type
IEEE80211_RATE_BASIC	src/include/ieee80211.h	525;"	d
IEEE80211_RATE_VAL	src/include/ieee80211.h	526;"	d
IEEE80211_REASON_ASSOC_EXPIRE	src/include/ieee80211.h	/^	IEEE80211_REASON_ASSOC_EXPIRE		= 4,$/;"	e	enum:__anon5
IEEE80211_REASON_ASSOC_LEAVE	src/include/ieee80211.h	/^	IEEE80211_REASON_ASSOC_LEAVE		= 8,$/;"	e	enum:__anon5
IEEE80211_REASON_ASSOC_NOT_AUTHED	src/include/ieee80211.h	/^	IEEE80211_REASON_ASSOC_NOT_AUTHED	= 9,$/;"	e	enum:__anon5
IEEE80211_REASON_ASSOC_TOOMANY	src/include/ieee80211.h	/^	IEEE80211_REASON_ASSOC_TOOMANY		= 5,$/;"	e	enum:__anon5
IEEE80211_REASON_AUTH_EXPIRE	src/include/ieee80211.h	/^	IEEE80211_REASON_AUTH_EXPIRE		= 2,$/;"	e	enum:__anon5
IEEE80211_REASON_AUTH_LEAVE	src/include/ieee80211.h	/^	IEEE80211_REASON_AUTH_LEAVE		= 3,$/;"	e	enum:__anon5
IEEE80211_REASON_IE_INVALID	src/include/ieee80211.h	/^	IEEE80211_REASON_IE_INVALID		= 13,$/;"	e	enum:__anon5
IEEE80211_REASON_MIC_FAILURE	src/include/ieee80211.h	/^	IEEE80211_REASON_MIC_FAILURE		= 14,$/;"	e	enum:__anon5
IEEE80211_REASON_NOT_ASSOCED	src/include/ieee80211.h	/^	IEEE80211_REASON_NOT_ASSOCED		= 7,$/;"	e	enum:__anon5
IEEE80211_REASON_NOT_AUTHED	src/include/ieee80211.h	/^	IEEE80211_REASON_NOT_AUTHED		= 6,$/;"	e	enum:__anon5
IEEE80211_REASON_RSN_INCONSISTENT	src/include/ieee80211.h	/^	IEEE80211_REASON_RSN_INCONSISTENT	= 12,$/;"	e	enum:__anon5
IEEE80211_REASON_RSN_REQUIRED	src/include/ieee80211.h	/^	IEEE80211_REASON_RSN_REQUIRED		= 11,$/;"	e	enum:__anon5
IEEE80211_REASON_UNSPECIFIED	src/include/ieee80211.h	/^	IEEE80211_REASON_UNSPECIFIED		= 1,$/;"	e	enum:__anon5
IEEE80211_RTS_MAX	src/include/ieee80211.h	716;"	d
IEEE80211_RTS_MIN	src/include/ieee80211.h	715;"	d
IEEE80211_SEQ_FRAG_MASK	src/include/ieee80211.h	181;"	d
IEEE80211_SEQ_FRAG_SHIFT	src/include/ieee80211.h	182;"	d
IEEE80211_SEQ_SEQ_MASK	src/include/ieee80211.h	183;"	d
IEEE80211_SEQ_SEQ_SHIFT	src/include/ieee80211.h	184;"	d
IEEE80211_STATUS_ALG	src/include/ieee80211.h	/^	IEEE80211_STATUS_ALG			= 13,$/;"	e	enum:__anon5
IEEE80211_STATUS_BASIC_RATE	src/include/ieee80211.h	/^	IEEE80211_STATUS_BASIC_RATE		= 18,$/;"	e	enum:__anon5
IEEE80211_STATUS_CAPINFO	src/include/ieee80211.h	/^	IEEE80211_STATUS_CAPINFO		= 10,$/;"	e	enum:__anon5
IEEE80211_STATUS_CA_REQUIRED	src/include/ieee80211.h	/^	IEEE80211_STATUS_CA_REQUIRED		= 21,$/;"	e	enum:__anon5
IEEE80211_STATUS_CHALLENGE	src/include/ieee80211.h	/^	IEEE80211_STATUS_CHALLENGE		= 15,$/;"	e	enum:__anon5
IEEE80211_STATUS_DSSSOFDM_REQUIRED	src/include/ieee80211.h	/^	IEEE80211_STATUS_DSSSOFDM_REQUIRED	= 26$/;"	e	enum:__anon5
IEEE80211_STATUS_NOT_ASSOCED	src/include/ieee80211.h	/^	IEEE80211_STATUS_NOT_ASSOCED		= 11,$/;"	e	enum:__anon5
IEEE80211_STATUS_OTHER	src/include/ieee80211.h	/^	IEEE80211_STATUS_OTHER			= 12,$/;"	e	enum:__anon5
IEEE80211_STATUS_PBCC_REQUIRED	src/include/ieee80211.h	/^	IEEE80211_STATUS_PBCC_REQUIRED		= 20,$/;"	e	enum:__anon5
IEEE80211_STATUS_RATES	src/include/ieee80211.h	/^	IEEE80211_STATUS_RATES			= 23,$/;"	e	enum:__anon5
IEEE80211_STATUS_SEQUENCE	src/include/ieee80211.h	/^	IEEE80211_STATUS_SEQUENCE		= 14,$/;"	e	enum:__anon5
IEEE80211_STATUS_SHORTSLOT_REQUIRED	src/include/ieee80211.h	/^	IEEE80211_STATUS_SHORTSLOT_REQUIRED	= 25,$/;"	e	enum:__anon5
IEEE80211_STATUS_SP_REQUIRED	src/include/ieee80211.h	/^	IEEE80211_STATUS_SP_REQUIRED		= 19,$/;"	e	enum:__anon5
IEEE80211_STATUS_SUCCESS	src/include/ieee80211.h	/^	IEEE80211_STATUS_SUCCESS		= 0,$/;"	e	enum:__anon5
IEEE80211_STATUS_TIMEOUT	src/include/ieee80211.h	/^	IEEE80211_STATUS_TIMEOUT		= 16,$/;"	e	enum:__anon5
IEEE80211_STATUS_TOOMANY	src/include/ieee80211.h	/^	IEEE80211_STATUS_TOOMANY		= 17,$/;"	e	enum:__anon5
IEEE80211_STATUS_TOO_MANY_STATIONS	src/include/ieee80211.h	/^	IEEE80211_STATUS_TOO_MANY_STATIONS	= 22,$/;"	e	enum:__anon5
IEEE80211_STATUS_UNSPECIFIED	src/include/ieee80211.h	/^	IEEE80211_STATUS_UNSPECIFIED		= 1,$/;"	e	enum:__anon5
IEEE80211_WEP_CRCLEN	src/include/ieee80211.h	661;"	d
IEEE80211_WEP_EXTIV	src/include/ieee80211.h	674;"	d
IEEE80211_WEP_EXTIVLEN	src/include/ieee80211.h	675;"	d
IEEE80211_WEP_IVLEN	src/include/ieee80211.h	659;"	d
IEEE80211_WEP_KEYLEN	src/include/ieee80211.h	658;"	d
IEEE80211_WEP_KIDLEN	src/include/ieee80211.h	660;"	d
IEEE80211_WEP_MICLEN	src/include/ieee80211.h	676;"	d
IEEE80211_WEP_NKID	src/include/ieee80211.h	665;"	d
IEEE80211_WEP_TOTLEN	src/include/ieee80211.h	662;"	d
IFP2AC	src/include/if_arp.h	109;"	d
IMPORT_COWPATTY	src/airolib-ng.c	57;"	d	file:
IMPORT_ESSID	src/airolib-ng.c	55;"	d	file:
IMPORT_PASSWD	src/airolib-ng.c	56;"	d	file:
INIT_A	src/simd-intrinsics.c	145;"	d	file:
INIT_A	src/simd-intrinsics.c	157;"	d	file:
INIT_A	src/simd-intrinsics.c	1684;"	d	file:
INIT_A	src/simd-intrinsics.c	1759;"	d	file:
INIT_A	src/simd-intrinsics.c	2265;"	d	file:
INIT_A	src/simd-intrinsics.c	2340;"	d	file:
INIT_A	src/simd-intrinsics.c	789;"	d	file:
INIT_A	src/simd-intrinsics.c	823;"	d	file:
INIT_B	src/simd-intrinsics.c	1685;"	d	file:
INIT_B	src/simd-intrinsics.c	1758;"	d	file:
INIT_B	src/simd-intrinsics.c	2266;"	d	file:
INIT_B	src/simd-intrinsics.c	2339;"	d	file:
INIT_B	src/simd-intrinsics.c	790;"	d	file:
INIT_B	src/simd-intrinsics.c	822;"	d	file:
INIT_C	src/simd-intrinsics.c	1686;"	d	file:
INIT_C	src/simd-intrinsics.c	1757;"	d	file:
INIT_C	src/simd-intrinsics.c	2267;"	d	file:
INIT_C	src/simd-intrinsics.c	2338;"	d	file:
INIT_C	src/simd-intrinsics.c	791;"	d	file:
INIT_C	src/simd-intrinsics.c	821;"	d	file:
INIT_D	src/simd-intrinsics.c	1687;"	d	file:
INIT_D	src/simd-intrinsics.c	1756;"	d	file:
INIT_D	src/simd-intrinsics.c	1761;"	d	file:
INIT_D	src/simd-intrinsics.c	1773;"	d	file:
INIT_D	src/simd-intrinsics.c	2268;"	d	file:
INIT_D	src/simd-intrinsics.c	2337;"	d	file:
INIT_D	src/simd-intrinsics.c	2342;"	d	file:
INIT_D	src/simd-intrinsics.c	2354;"	d	file:
INIT_D	src/simd-intrinsics.c	792;"	d	file:
INIT_D	src/simd-intrinsics.c	820;"	d	file:
INIT_E	src/simd-intrinsics.c	1237;"	d	file:
INIT_E	src/simd-intrinsics.c	1251;"	d	file:
INIT_E	src/simd-intrinsics.c	1688;"	d	file:
INIT_E	src/simd-intrinsics.c	1755;"	d	file:
INIT_E	src/simd-intrinsics.c	2269;"	d	file:
INIT_E	src/simd-intrinsics.c	2336;"	d	file:
INIT_F	src/simd-intrinsics.c	1689;"	d	file:
INIT_F	src/simd-intrinsics.c	1754;"	d	file:
INIT_F	src/simd-intrinsics.c	2270;"	d	file:
INIT_F	src/simd-intrinsics.c	2335;"	d	file:
INIT_G	src/simd-intrinsics.c	1690;"	d	file:
INIT_G	src/simd-intrinsics.c	1753;"	d	file:
INIT_G	src/simd-intrinsics.c	2271;"	d	file:
INIT_G	src/simd-intrinsics.c	2334;"	d	file:
INIT_H	src/simd-intrinsics.c	1691;"	d	file:
INIT_H	src/simd-intrinsics.c	1752;"	d	file:
INIT_H	src/simd-intrinsics.c	2272;"	d	file:
INIT_H	src/simd-intrinsics.c	2333;"	d	file:
INIT_PIC	src/sha1-sse2.S	/^#define INIT_PIC()  pushq %rbx$/;"	d
INIT_PIC	src/sha1-sse2.S	/^#define INIT_PIC() \\$/;"	d
INIT_PIC	src/sha1-sse2.S	/^#define INIT_PIC()$/;"	d
INLINE	src/pseudo_intrinsics.h	599;"	d
INLINE	src/pseudo_intrinsics.h	602;"	d
IOVector	lib/csharp/MonoExample/NDesk-dbus/UnixNativeTransport.cs	/^	struct IOVector$/;"	s	namespace:NDesk.DBus.Transports
IP	lib/csharp/WirelessPanda/AccessPoint.cs	/^        public string IP$/;"	p	class:WirelessPanda.AccessPoint
IPType	lib/csharp/WirelessPanda/AccessPoint.cs	/^        public int IPType$/;"	p	class:WirelessPanda.AccessPoint
IS_X	src/aircrack-ng.c	587;"	d	file:
IS_X	src/aircrack-ng.c	774;"	d	file:
IV	src/MD5_std.h	/^	MD5_word IV[4];$/;"	m	struct:__anon30
IVBYTES	src/aircrack-ptw-lib.c	48;"	d	file:
IVS	src/ivstools.c	49;"	d	file:
IVS2_BSSID	src/pcap.h	59;"	d
IVS2_CLR	src/pcap.h	76;"	d
IVS2_ESSID	src/pcap.h	62;"	d
IVS2_EXTENSION	src/pcap.h	46;"	d
IVS2_MAGIC	src/pcap.h	45;"	d
IVS2_PTW	src/pcap.h	73;"	d
IVS2_VERSION	src/pcap.h	47;"	d
IVS2_WPA	src/pcap.h	65;"	d
IVS2_XOR	src/pcap.h	68;"	d
IVSONLY_MAGIC	src/pcap.h	44;"	d
IV_NOTHERE	src/uniqueiv.h	38;"	d
IV_PRESENT	src/uniqueiv.h	39;"	d
Implement	lib/csharp/MonoExample/NDesk-dbus/TypeImplementer.cs	/^		public static void Implement (TypeBuilder typeB, Type iface)$/;"	m	class:NDesk.DBus.TypeImplementer
In	lib/csharp/MonoExample/NDesk-dbus/Signature.cs	/^		In,$/;"	e	enum:NDesk.DBus.ArgDirection	file:
InQueue	lib/csharp/MonoExample/NDesk-dbus/DBus.cs	/^		InQueue,$/;"	e	enum:org.freedesktop.DBus.RequestNameReply	file:
Inbound	lib/csharp/MonoExample/NDesk-dbus/Connection.cs	/^		Queue<Message> Inbound = new Queue<Message> ();$/;"	f	class:NDesk.DBus.Connection	file:
Info	lib/csharp/WirelessPanda/AccessPoint.cs	/^        public string Info$/;"	p	class:WirelessPanda.AccessPoint
InitHack	lib/csharp/MonoExample/NDesk-dbus/TypeImplementer.cs	/^		static void InitHack ()$/;"	m	class:NDesk.DBus.TypeImplementer	file:
InitializeComponent	lib/csharp/Example1/Example1/Form1.Designer.cs	/^        private void InitializeComponent()$/;"	m	class:Example1.Form1	file:
Int16	lib/csharp/MonoExample/NDesk-dbus/Signature.cs	/^		Int16 = (byte)'n',$/;"	e	enum:NDesk.DBus.DType	file:
Int32	lib/csharp/MonoExample/NDesk-dbus/Signature.cs	/^		Int32 = (byte)'i',$/;"	e	enum:NDesk.DBus.DType	file:
Int64	lib/csharp/MonoExample/NDesk-dbus/Signature.cs	/^		Int64 = (byte)'x',$/;"	e	enum:NDesk.DBus.DType	file:
Interface	lib/csharp/MonoExample/NDesk-dbus/MatchRule.cs	/^		public string Interface;$/;"	f	class:NDesk.DBus.MatchRule
Interface	lib/csharp/MonoExample/NDesk-dbus/Protocol.cs	/^			Interface,$/;"	e	enum:NDesk.DBus.FieldCode	file:
Interface	lib/csharp/MonoExample/NDesk-dbus/Wrapper.cs	/^		public string Interface;$/;"	f	class:NDesk.DBus.MethodCall
Interface	lib/csharp/MonoExample/NDesk-dbus/Wrapper.cs	/^		public string Interface;$/;"	f	class:NDesk.DBus.Signal
InterfaceAttribute	lib/csharp/MonoExample/NDesk-dbus/Mapper.cs	/^		public InterfaceAttribute (string name)$/;"	m	class:NDesk.DBus.InterfaceAttribute
InterfaceAttribute	lib/csharp/MonoExample/NDesk-dbus/Mapper.cs	/^	public class InterfaceAttribute : Attribute$/;"	c	namespace:NDesk.DBus
Introspect	lib/csharp/MonoExample/NDesk-dbus/DBus.cs	/^		string Introspect ();$/;"	m	interface:org.freedesktop.DBus.Introspectable
Introspectable	lib/csharp/MonoExample/NDesk-dbus/DBus.cs	/^	public interface Introspectable$/;"	i	namespace:org.freedesktop.DBus
Introspector	lib/csharp/MonoExample/NDesk-dbus/Introspection.cs	/^		public Introspector ()$/;"	m	class:NDesk.DBus.Introspector
Introspector	lib/csharp/MonoExample/NDesk-dbus/Introspection.cs	/^	class Introspector$/;"	c	namespace:NDesk.DBus
Invalid	lib/csharp/MonoExample/NDesk-dbus/Protocol.cs	/^		Invalid,$/;"	e	enum:NDesk.DBus.FieldCode	file:
Invalid	lib/csharp/MonoExample/NDesk-dbus/Protocol.cs	/^		Invalid,$/;"	e	enum:NDesk.DBus.MessageType	file:
Invalid	lib/csharp/MonoExample/NDesk-dbus/Signature.cs	/^		Invalid = (byte)'\\0',$/;"	e	enum:NDesk.DBus.DType	file:
Invoke	lib/csharp/MonoExample/NDesk-dbus/BusObject.cs	/^		public void Invoke (MethodBase methodBase, string methodName, object[] inArgs, out object[] outArgs, out object retVal, out Exception exception)$/;"	m	class:NDesk.DBus.BusObject
Invoke	lib/csharp/MonoExample/NDesk-dbus/DProxy.cs	/^		public override IMessage Invoke (IMessage message)$/;"	m	class:NDesk.DBus.DProxy
IsArray	lib/csharp/MonoExample/NDesk-dbus/Signature.cs	/^		public bool IsArray$/;"	p	struct:NDesk.DBus.Signature
IsAuthenticated	lib/csharp/MonoExample/NDesk-dbus/Connection.cs	/^		internal bool IsAuthenticated$/;"	p	class:NDesk.DBus.Connection
IsDeprecated	lib/csharp/MonoExample/NDesk-dbus/Mapper.cs	/^		public static bool IsDeprecated (ICustomAttributeProvider attrProvider)$/;"	m	class:NDesk.DBus.Mapper
IsDict	lib/csharp/MonoExample/NDesk-dbus/Signature.cs	/^		public bool IsDict$/;"	p	struct:NDesk.DBus.Signature
IsPublic	lib/csharp/MonoExample/NDesk-dbus/Mapper.cs	/^		public static bool IsPublic (MemberInfo mi)$/;"	m	class:NDesk.DBus.Mapper
IsPublic	lib/csharp/MonoExample/NDesk-dbus/Mapper.cs	/^		public static bool IsPublic (Type type)$/;"	m	class:NDesk.DBus.Mapper
Iterate	lib/csharp/MonoExample/NDesk-dbus/Connection.cs	/^		public void Iterate ()$/;"	m	class:NDesk.DBus.Connection
JOHNSWAP	src/johnswap.h	72;"	d
JOHNSWAP	src/johnswap.h	76;"	d
JOHNSWAP	src/johnswap.h	79;"	d
JOHNSWAP	src/johnswap.h	82;"	d
JOHNSWAP64	src/johnswap.h	73;"	d
JOHNSWAP64	src/johnswap.h	77;"	d
JOHNSWAP64	src/johnswap.h	80;"	d
JOHNSWAP64	src/johnswap.h	83;"	d
JOHN_AVX	src/arch.h	163;"	d
JOHN_XOP	src/arch.h	160;"	d
JTR_ALIGN	src/aligned.h	56;"	d
JTR_ALIGN	src/aligned.h	58;"	d
JTR_ALIGN	src/aligned.h	60;"	d
K01_IV	src/aircrack-ng.c	132;"	d	file:
K02_IV	src/aircrack-ng.c	133;"	d	file:
K03_IV	src/aircrack-ng.c	134;"	d	file:
K04_IV	src/aircrack-ng.c	135;"	d	file:
K05_IV	src/aircrack-ng.c	136;"	d	file:
K06_IV	src/aircrack-ng.c	137;"	d	file:
K07_IV	src/aircrack-ng.c	138;"	d	file:
K08_IV	src/aircrack-ng.c	139;"	d	file:
K09_IV	src/aircrack-ng.c	140;"	d	file:
K10_IV	src/aircrack-ng.c	141;"	d	file:
K11_IV	src/aircrack-ng.c	142;"	d	file:
K12_IV	src/aircrack-ng.c	143;"	d	file:
K13_IV	src/aircrack-ng.c	144;"	d	file:
K14_IV	src/aircrack-ng.c	145;"	d	file:
K15_IV	src/aircrack-ng.c	146;"	d	file:
K16_IV	src/aircrack-ng.c	147;"	d	file:
K17_IV	src/aircrack-ng.c	148;"	d	file:
KEYHSBYTES	src/aircrack-ng.h	70;"	d
KEYHSBYTES	src/wesside-ng.c	166;"	d	file:
KEYLIMIT	src/aircrack-ng.h	121;"	d
KEYLIMIT	src/wesside-ng.c	91;"	d	file:
KEY_ARROW_DOWN	src/airodump-ng.c	204;"	d	file:
KEY_ARROW_LEFT	src/airodump-ng.c	206;"	d	file:
KEY_ARROW_RIGHT	src/airodump-ng.c	205;"	d	file:
KEY_ARROW_UP	src/airodump-ng.c	203;"	d	file:
KEY_FILE	src/wesside-ng.c	89;"	d	file:
KEY_SPACE	src/airodump-ng.c	202;"	d	file:
KEY_TAB	src/airodump-ng.c	201;"	d	file:
KEY_a	src/airodump-ng.c	207;"	d	file:
KEY_c	src/airodump-ng.c	208;"	d	file:
KEY_d	src/airodump-ng.c	209;"	d	file:
KEY_i	src/airodump-ng.c	210;"	d	file:
KEY_m	src/airodump-ng.c	211;"	d	file:
KEY_n	src/airodump-ng.c	212;"	d	file:
KEY_r	src/airodump-ng.c	213;"	d	file:
KEY_s	src/airodump-ng.c	214;"	d	file:
KISMET_CSV_EXT	src/airodump-ng.h	126;"	d
KISMET_HEADER	src/airodump-ng.c	4609;"	d	file:
KISMET_NETXML_EXT	src/airodump-ng.h	127;"	d
KISMET_NETXML_HEADER_BEGIN	src/airodump-ng.c	4089;"	d	file:
KISMET_NETXML_HEADER_END	src/airodump-ng.c	4090;"	d	file:
KISMET_NETXML_TRAILER	src/airodump-ng.c	4092;"	d	file:
KLEN	test/cryptounittest/test-calc-4pmk.c	38;"	d	file:
KLEN	test/cryptounittest/test-calc-pmk.c	33;"	d	file:
KLEN	test/cryptounittest/test-encrypt-wep.c	33;"	d	file:
KSBYTES	src/aircrack-ptw-lib.c	47;"	d	file:
K_COEFF	src/aircrack-ng.c	/^int K_COEFF[N_ATTACKS] =$/;"	v
K_COEFF	src/kstats.c	/^int K_COEFF[N_ATTACKS] =$/;"	v
Key	lib/csharp/WirelessPanda/AccessPoint.cs	/^        public string Key$/;"	p	class:WirelessPanda.AccessPoint
KismetCsvReader	lib/csharp/WirelessPanda/Readers/kismetCsvReader.cs	/^        public KismetCsvReader(string filename) : base(filename) { }$/;"	m	class:WirelessPanda.Readers.KismetCsvReader
KismetCsvReader	lib/csharp/WirelessPanda/Readers/kismetCsvReader.cs	/^    public class KismetCsvReader : Reader$/;"	c	namespace:WirelessPanda.Readers
KoreK_attacks	src/aircrack-ng.h	/^enum KoreK_attacks$/;"	g
KoreK_attacks	src/kstats.c	/^enum KoreK_attacks$/;"	g	file:
LIB	src/osdep/Makefile	/^LIB		= libosdep.a $/;"	m
LIBAIRPCAP	common.mak	/^	LIBAIRPCAP = -DHAVE_AIRPCAP -I$(AC_ROOT)\/..\/developers\/Airpcap_Devpack\/include$/;"	m
LIBAIRPCAP	common.mak	/^LIBAIRPCAP	=$/;"	m
LIBLINECOUNT	src/Makefile	/^LIBLINECOUNT	= liblinecount.a$/;"	m
LIBOSD	src/Makefile	/^LIBOSD		= $(OSD)\/lib$(OSD).a$/;"	m
LIBPCAP	src/Makefile	/^		LIBPCAP		= -lpcap$/;"	m
LIBPCRE	src/Makefile	/^	LIBPCRE = $(shell $(PKG_CONFIG) --libs libpcre)$/;"	m
LIBPCRE	src/Makefile	/^LIBPCRE		=$/;"	m
LIBS	contrib/airpcap/Makefile	/^LIBS = -L $(ROOT)\/..\/developers\/Airpcap_Devpack\/lib -lairpcap$/;"	m
LIBS	contrib/commview/Makefile	/^LIBS	= -liphlpapi -lsetupapi -luuid -lpthread$/;"	m
LIBS	contrib/peek/Makefile	/^LIBS	=$/;"	m
LIBS	src/Makefile	/^LIBS		:= -L$(OSD) -l$(OSD) $(LIBS)$/;"	m
LIBSQL	src/Makefile	/^	LIBSQL		= -L\/usr\/local\/lib -lsqlite3$/;"	m
LIBSQL	src/Makefile	/^	LIBSQL		=$/;"	m
LIBSSL	src/Makefile	/^	LIBSSL		= -lgcrypt $(LDFLAGS)$/;"	m
LIBSSL	src/Makefile	/^	LIBSSL		= -lssl -lcrypto $(LDFLAGS)$/;"	m
LIBSSL	src/Makefile	/^LIBSSL		= -lssl -lcrypto$/;"	m
LIBSSL	test/cryptounittest/Makefile	/^	LIBSSL          =  -lgcrypt $(LDFLAGS)$/;"	m
LIBSSL	test/cryptounittest/Makefile	/^	LIBSSL          = -lssl -lcrypto $(LDFLAGS)$/;"	m
LIBSTDCXX	src/Makefile	/^LIBSTDCXX	= -lstdc++$/;"	m
LIB_FILES	scripts/airgraph-ng/lib/Makefile	/^LIB_FILES	= lib_Airgraphviz.py$/;"	m
LINECOUNT_H	src/linecount.h	34;"	d
LINKTYPE_ETHERNET	src/osdep/osdep.h	51;"	d
LINKTYPE_ETHERNET	src/osdep/osdep.h	52;"	d
LINKTYPE_ETHERNET	src/pcap.h	52;"	d
LINKTYPE_IEEE802_11	src/osdep/osdep.h	47;"	d
LINKTYPE_IEEE802_11	src/osdep/osdep.h	48;"	d
LINKTYPE_IEEE802_11	src/pcap.h	53;"	d
LINKTYPE_IEEE802_11	src/wesside-ng.c	78;"	d	file:
LINKTYPE_PPI_HDR	src/osdep/osdep.h	53;"	d
LINKTYPE_PPI_HDR	src/osdep/osdep.h	54;"	d
LINKTYPE_PPI_HDR	src/pcap.h	56;"	d
LINKTYPE_PRISM_HEADER	src/osdep/osdep.h	49;"	d
LINKTYPE_PRISM_HEADER	src/osdep/osdep.h	50;"	d
LINKTYPE_PRISM_HEADER	src/pcap.h	54;"	d
LINKTYPE_RADIOTAP_HDR	src/osdep/osdep.h	45;"	d
LINKTYPE_RADIOTAP_HDR	src/osdep/osdep.h	46;"	d
LINKTYPE_RADIOTAP_HDR	src/pcap.h	55;"	d
LITTLE_ENDIAN	src/osdep/byteorder.h	211;"	d
LLC	lib/csharp/WirelessPanda/AccessPoint.cs	/^        public ulong LLC$/;"	p	class:WirelessPanda.AccessPoint
LLC_8021D_LSAP	src/include/if_llc.h	151;"	d
LLC_DISC	src/include/if_llc.h	121;"	d
LLC_DISC_P	src/include/if_llc.h	122;"	d
LLC_DM	src/include/if_llc.h	129;"	d
LLC_DM_P	src/include/if_llc.h	130;"	d
LLC_FRMR	src/include/if_llc.h	127;"	d
LLC_FRMRLEN	src/include/if_llc.h	113;"	d
LLC_FRMR_P	src/include/if_llc.h	128;"	d
LLC_INFO	src/include/if_llc.h	146;"	d
LLC_ISFRAMELEN	src/include/if_llc.h	111;"	d
LLC_ISO_LSAP	src/include/if_llc.h	154;"	d
LLC_REJ	src/include/if_llc.h	141;"	d
LLC_RNR	src/include/if_llc.h	140;"	d
LLC_RR	src/include/if_llc.h	139;"	d
LLC_SABME	src/include/if_llc.h	133;"	d
LLC_SABME_P	src/include/if_llc.h	134;"	d
LLC_SNAPFRAMELEN	src/include/if_llc.h	114;"	d
LLC_SNAP_LSAP	src/include/if_llc.h	153;"	d
LLC_TEST	src/include/if_llc.h	125;"	d
LLC_TEST_P	src/include/if_llc.h	126;"	d
LLC_UA	src/include/if_llc.h	123;"	d
LLC_UA_P	src/include/if_llc.h	124;"	d
LLC_UFRAMELEN	src/include/if_llc.h	112;"	d
LLC_UI	src/include/if_llc.h	119;"	d
LLC_UI_P	src/include/if_llc.h	120;"	d
LLC_X25_LSAP	src/include/if_llc.h	152;"	d
LLC_XID	src/include/if_llc.h	131;"	d
LLC_XID_BASIC_MINLEN	src/include/if_llc.h	161;"	d
LLC_XID_CLASS_I	src/include/if_llc.h	163;"	d
LLC_XID_CLASS_II	src/include/if_llc.h	164;"	d
LLC_XID_CLASS_III	src/include/if_llc.h	165;"	d
LLC_XID_CLASS_IV	src/include/if_llc.h	166;"	d
LLC_XID_FORMAT_BASIC	src/include/if_llc.h	160;"	d
LLC_XID_P	src/include/if_llc.h	132;"	d
LLd	src/misc.h	67;"	d
LLd	src/misc.h	73;"	d
LLu	src/misc.h	66;"	d
LLu	src/misc.h	72;"	d
LLx	src/misc.h	68;"	d
LLx	src/misc.h	74;"	d
LO16	src/crypto.c	1096;"	d	file:
LO8	src/crypto.c	1095;"	d	file:
LOWEST_CHANNEL	src/osdep/common.h	46;"	d
LastTimeSeen	lib/csharp/WirelessPanda/WirelessDevice.cs	/^        public DateTime LastTimeSeen$/;"	p	class:WirelessPanda.WirelessDevice
Latitude	lib/csharp/WirelessPanda/Coordinates.cs	/^        public double Latitude$/;"	p	class:WirelessPanda.Coordinates
Length	lib/csharp/MonoExample/NDesk-dbus/Protocol.cs	/^		public uint Length;$/;"	f	struct:NDesk.DBus.Header
Length	lib/csharp/MonoExample/NDesk-dbus/Signature.cs	/^		public int Length$/;"	p	struct:NDesk.DBus.Signature
Length	lib/csharp/MonoExample/NDesk-dbus/UnixNativeTransport.cs	/^		public int Length;$/;"	f	struct:NDesk.DBus.Transports.IOVector
LinkAPClients	lib/csharp/WirelessPanda/Readers/Reader.cs	/^        protected void LinkAPClients()$/;"	m	class:WirelessPanda.Readers.Reader
ListActivatableNames	lib/csharp/MonoExample/NDesk-dbus/DBus.cs	/^		string[] ListActivatableNames ();$/;"	m	interface:org.freedesktop.DBus.IBus
ListNames	lib/csharp/MonoExample/NDesk-dbus/DBus.cs	/^		string[] ListNames ();$/;"	m	interface:org.freedesktop.DBus.IBus
ListQueuedOwners	lib/csharp/MonoExample/NDesk-dbus/DBus.cs	/^		string[] ListQueuedOwners (string name);$/;"	m	interface:org.freedesktop.DBus.IBus
Listen	lib/csharp/MonoExample/NDesk-dbus/UnixNativeTransport.cs	/^		public void Listen (int backlog)$/;"	m	class:NDesk.DBus.Transports.UnixSocket
Little	lib/csharp/MonoExample/NDesk-dbus/Protocol.cs	/^		Little = (byte)'l',$/;"	e	enum:NDesk.DBus.EndianFlag	file:
Location	lib/csharp/WirelessPanda/WirelessDevice.cs	/^        public Coordinates Location$/;"	p	class:WirelessPanda.WirelessDevice
Longitude	lib/csharp/WirelessPanda/Coordinates.cs	/^        public double Longitude$/;"	p	class:WirelessPanda.Coordinates
MAC_list	src/airbase-ng.c	/^struct MAC_list$/;"	s	file:
MAGIC1	contrib/peek/omnipeek.c	22;"	d	file:
MAGIC2	contrib/peek/omnipeek.c	23;"	d	file:
MAGICCHAN	contrib/peek/omnipeek.c	24;"	d	file:
MANGLE	src/sha1-sse2.S	/^#define MANGLE(x)   (%rbx)$/;"	d
MANGLE	src/sha1-sse2.S	/^#define MANGLE(x)   x ## @GOTOFF(%ebx)$/;"	d
MANGLE	src/sha1-sse2.S	/^#define MANGLE(x) x$/;"	d
MANGLE	src/sha1-sse2.S	/^#define MANGLE(x) x(%rip)$/;"	d
MANUF_SIZE	src/airodump-ng.c	4007;"	d	file:
MANUF_SIZE	src/airodump-ng.c	4086;"	d	file:
MAX	src/common.h	64;"	d
MAX_APS	src/aireplay-ng.c	79;"	d	file:
MAX_APS	src/tkiptun-ng.c	78;"	d	file:
MAX_CARDS	src/airodump-ng.h	46;"	d
MAX_CF_XMIT	src/airbase-ng.c	89;"	d	file:
MAX_DICTS	src/aircrack-ng.h	58;"	d
MAX_FRAME_EXTENSION	src/airbase-ng.c	94;"	d	file:
MAX_IE_ELEMENT_SIZE	src/pcap.h	79;"	d
MAX_IFACE_NAME	src/osdep/osdep.h	82;"	d
MAX_KEYS_PER_CRYPT	src/wpapsk.c	121;"	d	file:
MAX_KEYS_PER_CRYPT	src/wpapsk.c	123;"	d	file:
MAX_SIGNAL_VARIATION	src/airdecloak-ng.c	957;"	d	file:
MAX_SIGNAL_VARIATION_POTENTIALLY_CLOAKED	src/airdecloak-ng.c	958;"	d	file:
MAX_SORT	src/airodump-ng.h	87;"	d
MAX_TAP_DEVS	src/osdep/darwin_tap.c	36;"	d	file:
MAX_THREADS	src/aircrack-ng.h	72;"	d
MAYBE_INLINE	src/jcommon.h	75;"	d
MAYBE_INLINE	src/jcommon.h	77;"	d
MAYBE_INLINE	src/jcommon.h	79;"	d
MAYBE_INLINE	src/jcommon.h	82;"	d
MAYBE_INLINE	src/jcommon.h	84;"	d
MCAST_PREF	src/wesside-ng.c	86;"	d	file:
MD4_ALGORITHM_NAME	src/simd-intrinsics.h	130;"	d
MD4_ALGORITHM_NAME	src/simd-intrinsics.h	132;"	d
MD4_ALGORITHM_NAME	src/sse-intrinsics.h	101;"	d
MD4_ALGORITHM_NAME	src/sse-intrinsics.h	98;"	d
MD4_F	src/simd-intrinsics.c	732;"	d	file:
MD4_F	src/sse-intrinsics.c	635;"	d	file:
MD4_G	src/simd-intrinsics.c	736;"	d	file:
MD4_G	src/simd-intrinsics.c	739;"	d	file:
MD4_G	src/simd-intrinsics.c	743;"	d	file:
MD4_G	src/sse-intrinsics.c	638;"	d	file:
MD4_H	src/simd-intrinsics.c	751;"	d	file:
MD4_H	src/simd-intrinsics.c	757;"	d	file:
MD4_H	src/simd-intrinsics.c	764;"	d	file:
MD4_H	src/sse-intrinsics.c	644;"	d	file:
MD4_H2	src/simd-intrinsics.c	754;"	d	file:
MD4_H2	src/simd-intrinsics.c	761;"	d	file:
MD4_H2	src/simd-intrinsics.c	768;"	d	file:
MD4_N_STR	src/arch.h	427;"	d
MD4_N_STR	src/arch.h	429;"	d
MD4_PARA_DO	src/simd-intrinsics.c	730;"	d	file:
MD4_PARA_DO	src/sse-intrinsics.c	633;"	d	file:
MD4_REV_STEP	src/simd-intrinsics.c	782;"	d	file:
MD4_SSE_NUM_KEYS	src/simd-intrinsics.c	729;"	d	file:
MD4_SSE_NUM_KEYS	src/sse-intrinsics.c	632;"	d	file:
MD4_SSE_type	src/sse-intrinsics.h	100;"	d
MD4_SSE_type	src/sse-intrinsics.h	97;"	d
MD4_STEP	src/simd-intrinsics.c	773;"	d	file:
MD4_STEP	src/sse-intrinsics.c	648;"	d	file:
MD5_ALGORITHM_NAME	src/MD5_std.h	112;"	d
MD5_ALGORITHM_NAME	src/MD5_std.h	115;"	d
MD5_ALGORITHM_NAME	src/MD5_std.h	118;"	d
MD5_ALGORITHM_NAME	src/simd-intrinsics.h	120;"	d
MD5_ALGORITHM_NAME	src/simd-intrinsics.h	122;"	d
MD5_ALGORITHM_NAME	src/sse-intrinsics.h	88;"	d
MD5_ALGORITHM_NAME	src/sse-intrinsics.h	91;"	d
MD5_ASM	src/arch.h	307;"	d
MD5_F	src/simd-intrinsics.c	78;"	d	file:
MD5_F	src/sse-intrinsics.c	231;"	d	file:
MD5_G	src/simd-intrinsics.c	81;"	d	file:
MD5_G	src/sse-intrinsics.c	234;"	d	file:
MD5_H	src/simd-intrinsics.c	85;"	d	file:
MD5_H	src/simd-intrinsics.c	91;"	d	file:
MD5_H	src/simd-intrinsics.c	98;"	d	file:
MD5_H	src/sse-intrinsics.c	237;"	d	file:
MD5_H2	src/simd-intrinsics.c	102;"	d	file:
MD5_H2	src/simd-intrinsics.c	88;"	d	file:
MD5_H2	src/simd-intrinsics.c	95;"	d	file:
MD5_I	src/simd-intrinsics.c	108;"	d	file:
MD5_I	src/simd-intrinsics.c	111;"	d	file:
MD5_I	src/simd-intrinsics.c	115;"	d	file:
MD5_I	src/simd-intrinsics.c	119;"	d	file:
MD5_I	src/sse-intrinsics.c	241;"	d	file:
MD5_IMM	src/arch.h	309;"	d
MD5_N	src/MD5_std.h	110;"	d
MD5_N	src/MD5_std.h	114;"	d
MD5_N	src/MD5_std.h	117;"	d
MD5_N_STR	src/arch.h	432;"	d
MD5_N_STR	src/arch.h	434;"	d
MD5_PARA_DO	src/simd-intrinsics.c	76;"	d	file:
MD5_PARA_DO	src/sse-intrinsics.c	229;"	d	file:
MD5_SSE_NUM_KEYS	src/simd-intrinsics.c	75;"	d	file:
MD5_SSE_NUM_KEYS	src/sse-intrinsics.c	228;"	d	file:
MD5_SSE_type	src/sse-intrinsics.h	87;"	d
MD5_SSE_type	src/sse-intrinsics.h	90;"	d
MD5_STEP	src/simd-intrinsics.c	125;"	d	file:
MD5_STEP	src/sse-intrinsics.c	246;"	d	file:
MD5_STEP_r16	src/simd-intrinsics.c	135;"	d	file:
MD5_STEP_r16	src/sse-intrinsics.c	254;"	d	file:
MD5_TYPE_AIX	src/MD5_std.h	183;"	d
MD5_TYPE_APACHE	src/MD5_std.h	181;"	d
MD5_TYPE_STD	src/MD5_std.h	182;"	d
MD5_X2	src/arch.h	308;"	d
MD5_binary	src/MD5_std.h	/^typedef MD5_word MD5_binary[4];$/;"	t
MD5_block	src/MD5_std.h	/^} MD5_block;$/;"	t	typeref:union:__anon24
MD5_data	src/MD5_std.h	/^} MD5_data;$/;"	t	typeref:struct:__anon30
MD5_out	src/MD5_std.h	178;"	d
MD5_pattern	src/MD5_std.h	/^} MD5_pattern;$/;"	t	typeref:struct:__anon25
MD5_pool	src/MD5_std.h	/^} MD5_pool;$/;"	t	typeref:struct:__anon26
MD5_std_all	src/MD5_std.h	148;"	d
MD5_std_all	src/MD5_std.h	160;"	d
MD5_std_all_align	src/MD5_std.h	143;"	d
MD5_std_all_size	src/MD5_std.h	144;"	d
MD5_std_combined	src/MD5_std.h	/^} MD5_std_combined;$/;"	t	typeref:struct:__anon31
MD5_std_cpt	src/MD5_std.h	138;"	d
MD5_std_mt	src/MD5_std.h	137;"	d
MD5_std_mt	src/MD5_std.h	169;"	d
MD5_std_mt_max	src/MD5_std.h	139;"	d
MD5_u32plus	src/md5.h	/^typedef unsigned int MD5_u32plus;$/;"	t
MD5_word	src/MD5_std.h	/^typedef ARCH_WORD_32 MD5_word;$/;"	t
MEMDBG_HANDLE	src/memdbg.h	/^} MEMDBG_HANDLE;$/;"	t	typeref:struct:MEMDBG_HANDLE_t
MEMDBG_HANDLE	src/memdbg.h	223;"	d
MEMDBG_HANDLE_t	src/memdbg.h	/^typedef struct MEMDBG_HANDLE_t {$/;"	s
MEMDBG_PROGRAM_EXIT_CHECKS	src/memdbg.h	161;"	d
MEMDBG_PROGRAM_EXIT_CHECKS	src/memdbg.h	220;"	d
MEMDBG_VALIDATE_DEEP	src/memdbg.h	54;"	d
MEMDBG_VALIDATE_DEEPER	src/memdbg.h	55;"	d
MEMDBG_VALIDATE_DEEPEST	src/memdbg.h	56;"	d
MEMDBG_VALIDATE_MIN	src/memdbg.h	53;"	d
MEMDBG_checkSnapshot	src/memdbg.h	225;"	d
MEMDBG_checkSnapshot_possible_exit_on_error	src/memdbg.h	226;"	d
MEMDBG_getSnapshot	src/memdbg.h	224;"	d
MEMDBG_tag_mem_from_alloc_tiny	src/memdbg.h	221;"	d
MEM_ALIGN_CACHE	src/memory.h	89;"	d
MEM_ALIGN_CACHE	src/memory.h	91;"	d
MEM_ALIGN_NONE	src/memory.h	81;"	d
MEM_ALIGN_PAGE	src/memory.h	93;"	d
MEM_ALIGN_SIMD	src/memory.h	100;"	d
MEM_ALIGN_SIMD	src/memory.h	102;"	d
MEM_ALIGN_SIMD	src/memory.h	105;"	d
MEM_ALIGN_SIMD	src/pseudo_intrinsics.h	598;"	d
MEM_ALIGN_SIMD	src/pseudo_intrinsics.h	601;"	d
MEM_ALIGN_WORD	src/memory.h	82;"	d
MEM_ALLOC_MAX_WASTE	src/memory.h	120;"	d
MEM_ALLOC_SIZE	src/memory.c	174;"	d	file:
MEM_ALLOC_SIZE	src/memory.c	175;"	d	file:
MEM_ALLOC_SIZE	src/memory.h	111;"	d
MEM_FREE	src/memory.h	184;"	d
MEM_FREE	src/memory.h	190;"	d
MEM_FREE	src/memory.h	198;"	d
MEM_FREE	src/memory.h	208;"	d
MIN	src/common.h	68;"	d
MIN_KEYS_PER_CRYPT	src/wpapsk.c	119;"	d	file:
MIN_RAM_SIZE_LOAD_OUI_RAM	src/airodump-ng.h	159;"	d
MK16	src/crypto.c	1099;"	d	file:
MMX_COEF	src/arch.h	458;"	d
MMX_COEF	src/sse-intrinsics.c	224;"	d	file:
MMX_COEF	src/sse-intrinsics.h	54;"	d
MMX_COEF_SHA256	src/arch.h	459;"	d
MMX_COEF_SHA512	src/arch.h	460;"	d
MMX_TYPE	src/arch.h	457;"	d
MNF_SETUP_REQ	src/include/ieee80211.h	312;"	d
MNF_SETUP_RESP	src/include/ieee80211.h	313;"	d
MNF_TEARDOWN	src/include/ieee80211.h	314;"	d
MP_FILES	manpages/Makefile	/^MP_FILES	= aircrack-ng.1 airdecap-ng.1 ivstools.1 kstats.1 makeivs-ng.1 \\$/;"	m
MP_FILES	scripts/airgraph-ng/man/Makefile	/^MP_FILES        = airgraph-ng.1 dump-join.1$/;"	m
MP_FILES	scripts/versuck-ng/Makefile	/^MP_FILES        = versuck-ng.1$/;"	m
MULTIBIN	common.mak	/^MULTIBIN	= false$/;"	m
M_HASFCS	src/include/ethernet.h	43;"	d
Main	lib/csharp/Example1/Example1/Program.cs	/^        static void Main()$/;"	m	class:Example1.Program	file:
Main	lib/csharp/MonoExample/NewStationNotify/Main.cs	/^		public static void Main (string[] args)$/;"	m	class:NewStationNotify.MainClass
MainClass	lib/csharp/MonoExample/NewStationNotify/Main.cs	/^	class MainClass$/;"	c	namespace:NewStationNotify
Maj	src/simd-intrinsics.c	1649;"	d	file:
Maj	src/simd-intrinsics.c	1651;"	d	file:
Maj	src/simd-intrinsics.c	1653;"	d	file:
Maj	src/simd-intrinsics.c	2231;"	d	file:
Maj	src/simd-intrinsics.c	2233;"	d	file:
Maj	src/simd-intrinsics.c	2235;"	d	file:
Maj	src/sse-intrinsics.c	1518;"	d	file:
Maj	src/sse-intrinsics.c	1902;"	d	file:
MajorVersion	lib/csharp/MonoExample/NDesk-dbus/Protocol.cs	/^		public byte MajorVersion;$/;"	f	struct:NDesk.DBus.Header
MakeArraySignature	lib/csharp/MonoExample/NDesk-dbus/Signature.cs	/^		public Signature MakeArraySignature ()$/;"	m	struct:NDesk.DBus.Signature
MakeDict	lib/csharp/MonoExample/NDesk-dbus/Signature.cs	/^		public static Signature MakeDict (Signature keyType, Signature valueType)$/;"	m	struct:NDesk.DBus.Signature
MakeDictEntry	lib/csharp/MonoExample/NDesk-dbus/Signature.cs	/^		public static Signature MakeDictEntry (Signature keyType, Signature valueType)$/;"	m	struct:NDesk.DBus.Signature
MakeStruct	lib/csharp/MonoExample/NDesk-dbus/Signature.cs	/^		public static Signature MakeStruct (params Signature[] elems)$/;"	m	struct:NDesk.DBus.Signature
Mapper	lib/csharp/MonoExample/NDesk-dbus/Mapper.cs	/^	static class Mapper$/;"	c	namespace:NDesk.DBus
MarshalUInt	lib/csharp/MonoExample/NDesk-dbus/MessageReader.cs	/^		unsafe protected void MarshalUInt (byte *dst)$/;"	m	class:NDesk.DBus.MessageReader
MarshalUInt	lib/csharp/MonoExample/NDesk-dbus/MessageWriter.cs	/^		unsafe protected void MarshalUInt (byte *data)$/;"	m	class:NDesk.DBus.MessageWriter
MarshalULong	lib/csharp/MonoExample/NDesk-dbus/MessageReader.cs	/^		unsafe protected void MarshalULong (byte *dst)$/;"	m	class:NDesk.DBus.MessageReader
MarshalULong	lib/csharp/MonoExample/NDesk-dbus/MessageWriter.cs	/^		unsafe protected void MarshalULong (byte *data)$/;"	m	class:NDesk.DBus.MessageWriter
MarshalUShort	lib/csharp/MonoExample/NDesk-dbus/MessageReader.cs	/^		unsafe protected void MarshalUShort (byte *dst)$/;"	m	class:NDesk.DBus.MessageReader
MarshalUShort	lib/csharp/MonoExample/NDesk-dbus/MessageWriter.cs	/^		unsafe protected void MarshalUShort (byte *data)$/;"	m	class:NDesk.DBus.MessageWriter
MatchRule	lib/csharp/MonoExample/NDesk-dbus/MatchRule.cs	/^		public MatchRule ()$/;"	m	class:NDesk.DBus.MatchRule
MatchRule	lib/csharp/MonoExample/NDesk-dbus/MatchRule.cs	/^	class MatchRule$/;"	c	namespace:NDesk.DBus
Matches	lib/csharp/MonoExample/NDesk-dbus/MatchRule.cs	/^		public bool Matches (Message msg)$/;"	m	class:NDesk.DBus.MatchRule
MaxArrayDepth	lib/csharp/MonoExample/NDesk-dbus/Protocol.cs	/^		public const uint MaxArrayDepth = 32;$/;"	f	class:NDesk.DBus.Protocol
MaxArrayLength	lib/csharp/MonoExample/NDesk-dbus/Protocol.cs	/^		public const uint MaxArrayLength = 67108864; \/\/2 to the 26th power$/;"	f	class:NDesk.DBus.Protocol
MaxLocation	lib/csharp/WirelessPanda/AccessPoint.cs	/^        public Coordinates MaxLocation$/;"	p	class:WirelessPanda.AccessPoint
MaxMessageLength	lib/csharp/MonoExample/NDesk-dbus/Protocol.cs	/^		public const uint MaxMessageLength = 134217728; \/\/2 to the 27th power$/;"	f	class:NDesk.DBus.Protocol
MaxNameLength	lib/csharp/MonoExample/NDesk-dbus/Protocol.cs	/^		internal const uint MaxNameLength = 255;$/;"	f	class:NDesk.DBus.Protocol	file:
MaxRate	lib/csharp/WirelessPanda/AccessPoint.cs	/^        public double MaxRate$/;"	p	class:WirelessPanda.AccessPoint
MaxSeenRate	lib/csharp/WirelessPanda/AccessPoint.cs	/^        public double MaxSeenRate$/;"	p	class:WirelessPanda.AccessPoint
MaxSignatureLength	lib/csharp/MonoExample/NDesk-dbus/Protocol.cs	/^		public const uint MaxSignatureLength = 255;$/;"	f	class:NDesk.DBus.Protocol
MaxStructDepth	lib/csharp/MonoExample/NDesk-dbus/Protocol.cs	/^		public const uint MaxStructDepth = 32;$/;"	f	class:NDesk.DBus.Protocol
MaxVersion	lib/csharp/MonoExample/NDesk-dbus/Protocol.cs	/^		public const byte MaxVersion = Version;$/;"	f	class:NDesk.DBus.Protocol
MaybeSendUnknownMethodError	lib/csharp/MonoExample/NDesk-dbus/Connection.cs	/^		internal void MaybeSendUnknownMethodError (MethodCall method_call)$/;"	m	class:NDesk.DBus.Connection	file:
MemDbg_Display	src/memdbg.h	216;"	d
MemDbg_Used	src/memdbg.h	215;"	d
MemDbg_Validate	src/memdbg.h	217;"	d
MemDbg_Validate_msg	src/memdbg.h	218;"	d
MemDbg_Validate_msg2	src/memdbg.h	219;"	d
Member	lib/csharp/MonoExample/NDesk-dbus/MatchRule.cs	/^		public string Member;$/;"	f	class:NDesk.DBus.MatchRule
Member	lib/csharp/MonoExample/NDesk-dbus/Protocol.cs	/^			Member,$/;"	e	enum:NDesk.DBus.FieldCode	file:
Member	lib/csharp/MonoExample/NDesk-dbus/Wrapper.cs	/^		public string Member;$/;"	f	class:NDesk.DBus.MethodCall
Member	lib/csharp/MonoExample/NDesk-dbus/Wrapper.cs	/^		public string Member;$/;"	f	class:NDesk.DBus.Signal
Message	lib/csharp/MonoExample/NDesk-dbus/Message.cs	/^		public Message ()$/;"	m	class:NDesk.DBus.Message
Message	lib/csharp/MonoExample/NDesk-dbus/Message.cs	/^	class Message$/;"	c	namespace:NDesk.DBus
MessageFilter	lib/csharp/MonoExample/NDesk-dbus/MessageFilter.cs	/^	class MessageFilter$/;"	c	namespace:NDesk.DBus
MessageHelper	lib/csharp/MonoExample/NDesk-dbus/Mapper.cs	/^	static class MessageHelper$/;"	c	namespace:NDesk.DBus
MessageReader	lib/csharp/MonoExample/NDesk-dbus/MessageReader.cs	/^		public MessageReader (EndianFlag endianness, byte[] data)$/;"	m	class:NDesk.DBus.MessageReader
MessageReader	lib/csharp/MonoExample/NDesk-dbus/MessageReader.cs	/^		public MessageReader (Message message) : this (message.Header.Endianness, message.Body)$/;"	m	class:NDesk.DBus.MessageReader
MessageReader	lib/csharp/MonoExample/NDesk-dbus/MessageReader.cs	/^	class MessageReader$/;"	c	namespace:NDesk.DBus
MessageType	lib/csharp/MonoExample/NDesk-dbus/MatchRule.cs	/^		public MessageType? MessageType;$/;"	f	class:NDesk.DBus.MatchRule
MessageType	lib/csharp/MonoExample/NDesk-dbus/Protocol.cs	/^		public MessageType MessageType;$/;"	f	struct:NDesk.DBus.Header
MessageType	lib/csharp/MonoExample/NDesk-dbus/Protocol.cs	/^	enum MessageType : byte$/;"	g	namespace:NDesk.DBus
MessageTypeToString	lib/csharp/MonoExample/NDesk-dbus/MessageFilter.cs	/^		public static string MessageTypeToString (MessageType mtype)$/;"	m	class:NDesk.DBus.MessageFilter
MessageWriter	lib/csharp/MonoExample/NDesk-dbus/MessageWriter.cs	/^		public MessageWriter () : this (Connection.NativeEndianness) {}$/;"	m	class:NDesk.DBus.MessageWriter
MessageWriter	lib/csharp/MonoExample/NDesk-dbus/MessageWriter.cs	/^		public MessageWriter (EndianFlag endianness)$/;"	m	class:NDesk.DBus.MessageWriter
MessageWriter	lib/csharp/MonoExample/NDesk-dbus/MessageWriter.cs	/^	class MessageWriter$/;"	c	namespace:NDesk.DBus
Method	lib/csharp/MonoExample/NDesk-dbus/Address.cs	/^		public string Method;$/;"	f	class:NDesk.DBus.AddressEntry
MethodCall	lib/csharp/MonoExample/NDesk-dbus/Protocol.cs	/^		MethodCall,$/;"	e	enum:NDesk.DBus.MessageType	file:
MethodCall	lib/csharp/MonoExample/NDesk-dbus/Wrapper.cs	/^		public MethodCall (Message message)$/;"	m	class:NDesk.DBus.MethodCall
MethodCall	lib/csharp/MonoExample/NDesk-dbus/Wrapper.cs	/^		public MethodCall (ObjectPath path, string @interface, string member, string destination, Signature signature)$/;"	m	class:NDesk.DBus.MethodCall
MethodCall	lib/csharp/MonoExample/NDesk-dbus/Wrapper.cs	/^	class MethodCall$/;"	c	namespace:NDesk.DBus
MethodReturn	lib/csharp/MonoExample/NDesk-dbus/Protocol.cs	/^		MethodReturn,$/;"	e	enum:NDesk.DBus.MessageType	file:
MethodReturn	lib/csharp/MonoExample/NDesk-dbus/Wrapper.cs	/^		public MethodReturn (Message message)$/;"	m	class:NDesk.DBus.MethodReturn
MethodReturn	lib/csharp/MonoExample/NDesk-dbus/Wrapper.cs	/^		public MethodReturn (uint reply_serial)$/;"	m	class:NDesk.DBus.MethodReturn
MethodReturn	lib/csharp/MonoExample/NDesk-dbus/Wrapper.cs	/^	class MethodReturn$/;"	c	namespace:NDesk.DBus
Michael	src/crypto.h	/^struct Michael$/;"	s
Micros	contrib/commview/commview.c	/^        unsigned int Micros;    \/\/ Microsecond counter at time of packet$/;"	m	struct:CV_Header	file:
MinLocation	lib/csharp/WirelessPanda/AccessPoint.cs	/^        public Coordinates MinLocation$/;"	p	class:WirelessPanda.AccessPoint
MinVersion	lib/csharp/MonoExample/NDesk-dbus/Protocol.cs	/^		public const byte MinVersion = 0;$/;"	f	class:NDesk.DBus.Protocol
NAME	contrib/peek/Makefile	/^NAME	= omnipeek$/;"	m
NAMESPACE	lib/csharp/MonoExample/NDesk-dbus/Introspection.cs	/^		const string NAMESPACE = "http:\/\/www.freedesktop.org\/standards\/dbus";$/;"	f	class:NDesk.DBus.Introspector	file:
NA_info	src/airodump-ng.h	/^struct NA_info$/;"	s
NBKEYS	src/wpapsk.c	100;"	d	file:
NBKEYS	src/wpapsk.c	105;"	d	file:
NBKEYS	src/wpapsk.c	88;"	d	file:
NBKEYS	src/wpapsk.c	93;"	d	file:
NB_EXTENSIONS	src/airodump-ng.h	131;"	d
NB_PRB	src/airbase-ng.c	88;"	d	file:
NB_PRB	src/airodump-ng.h	44;"	d
NB_PWR	src/airodump-ng.h	43;"	d
NDesk.DBus	lib/csharp/MonoExample/NDesk-dbus/Address.cs	/^namespace NDesk.DBus$/;"	n
NDesk.DBus	lib/csharp/MonoExample/NDesk-dbus/Bus.cs	/^namespace NDesk.DBus$/;"	n
NDesk.DBus	lib/csharp/MonoExample/NDesk-dbus/BusObject.cs	/^namespace NDesk.DBus$/;"	n
NDesk.DBus	lib/csharp/MonoExample/NDesk-dbus/Connection.cs	/^namespace NDesk.DBus$/;"	n
NDesk.DBus	lib/csharp/MonoExample/NDesk-dbus/DProxy.cs	/^namespace NDesk.DBus$/;"	n
NDesk.DBus	lib/csharp/MonoExample/NDesk-dbus/ExportObject.cs	/^namespace NDesk.DBus$/;"	n
NDesk.DBus	lib/csharp/MonoExample/NDesk-dbus/Introspection.cs	/^namespace NDesk.DBus$/;"	n
NDesk.DBus	lib/csharp/MonoExample/NDesk-dbus/Mapper.cs	/^namespace NDesk.DBus$/;"	n
NDesk.DBus	lib/csharp/MonoExample/NDesk-dbus/MatchRule.cs	/^namespace NDesk.DBus$/;"	n
NDesk.DBus	lib/csharp/MonoExample/NDesk-dbus/Message.cs	/^namespace NDesk.DBus$/;"	n
NDesk.DBus	lib/csharp/MonoExample/NDesk-dbus/MessageFilter.cs	/^namespace NDesk.DBus$/;"	n
NDesk.DBus	lib/csharp/MonoExample/NDesk-dbus/MessageReader.cs	/^namespace NDesk.DBus$/;"	n
NDesk.DBus	lib/csharp/MonoExample/NDesk-dbus/MessageWriter.cs	/^namespace NDesk.DBus$/;"	n
NDesk.DBus	lib/csharp/MonoExample/NDesk-dbus/PendingCall.cs	/^namespace NDesk.DBus$/;"	n
NDesk.DBus	lib/csharp/MonoExample/NDesk-dbus/Protocol.cs	/^namespace NDesk.DBus$/;"	n
NDesk.DBus	lib/csharp/MonoExample/NDesk-dbus/Signature.cs	/^namespace NDesk.DBus$/;"	n
NDesk.DBus	lib/csharp/MonoExample/NDesk-dbus/TypeImplementer.cs	/^namespace NDesk.DBus$/;"	n
NDesk.DBus	lib/csharp/MonoExample/NDesk-dbus/Wrapper.cs	/^namespace NDesk.DBus$/;"	n
NDesk.DBus.Authentication	lib/csharp/MonoExample/NDesk-dbus/Authentication.cs	/^namespace NDesk.DBus.Authentication$/;"	n
NDesk.DBus.Transports	lib/csharp/MonoExample/NDesk-dbus/SocketTransport.cs	/^namespace NDesk.DBus.Transports$/;"	n
NDesk.DBus.Transports	lib/csharp/MonoExample/NDesk-dbus/Transport.cs	/^namespace NDesk.DBus.Transports$/;"	n
NDesk.DBus.Transports	lib/csharp/MonoExample/NDesk-dbus/UnixNativeTransport.cs	/^namespace NDesk.DBus.Transports$/;"	n
NDesk.DBus.Transports	lib/csharp/MonoExample/NDesk-dbus/UnixTransport.cs	/^namespace NDesk.DBus.Transports$/;"	n
NETWORK_CONNECTIONS_KEY	src/osdep/tap-win32/common.h	65;"	d
NETXML_ENCRYPTION_TAG	src/airodump-ng.c	4244;"	d	file:
NET_GET_CHAN	src/osdep/network.h	/^	NET_GET_CHAN,$/;"	e	enum:__anon36
NET_GET_MAC	src/osdep/network.h	/^	NET_GET_MAC,$/;"	e	enum:__anon36
NET_GET_MONITOR	src/osdep/network.h	/^	NET_GET_MONITOR,$/;"	e	enum:__anon36
NET_GET_RATE	src/osdep/network.h	/^	NET_GET_RATE,$/;"	e	enum:__anon36
NET_MAC	src/osdep/network.h	/^	NET_MAC,$/;"	e	enum:__anon36
NET_PACKET	src/osdep/network.h	/^	NET_PACKET,		\/* 5 *\/$/;"	e	enum:__anon36
NET_RC	src/osdep/network.h	/^	NET_RC = 1,$/;"	e	enum:__anon36
NET_SET_CHAN	src/osdep/network.h	/^	NET_SET_CHAN,$/;"	e	enum:__anon36
NET_SET_RATE	src/osdep/network.h	/^	NET_SET_RATE,$/;"	e	enum:__anon36
NET_WRITE	src/osdep/network.h	/^	NET_WRITE,$/;"	e	enum:__anon36
NEWSSE	common.mak	/^NEWSSE		= true$/;"	m
NEW_IV	src/aireplay-ng.c	81;"	d	file:
NEW_IV	src/tkiptun-ng.c	80;"	d	file:
NL1FOUND	common.mak	/^				NL1FOUND := $(shell $(PKG_CONFIG) --atleast-version=1 libnl-1 && echo Y)$/;"	m
NL31FOUND	common.mak	/^			NL31FOUND := $(shell $(PKG_CONFIG) --exact-version=3.1 libnl-3.1 && echo Y)$/;"	m
NL3FOUND	common.mak	/^				NL3FOUND := $(shell $(PKG_CONFIG) --atleast-version=3 libnl-3.0 && echo Y)$/;"	m
NL3xFOUND	common.mak	/^		NL3xFOUND := $(shell $(PKG_CONFIG) --atleast-version=3.2 libnl-3.0 && echo Y)$/;"	m
NLLIBNAME	common.mak	/^			NLLIBNAME = libnl-1$/;"	m
NLLIBNAME	common.mak	/^			NLLIBNAME = libnl-3.0$/;"	m
NLLIBNAME	common.mak	/^			NLLIBNAME = libnl-3.1$/;"	m
NLLIBNAME	common.mak	/^			NLLIBNAME = libnl-tiny$/;"	m
NLLIBNAME	common.mak	/^		NLLIBNAME ?= $(error Cannot find development files for any supported version of libnl. install either libnl1 or libnl3.)$/;"	m
NLTFOUND	common.mak	/^				NLTFOUND := $(shell $(PKG_CONFIG) --atleast-version=1 libnl-tiny && echo Y)$/;"	m
NO_CLOAKING	src/uniqueiv.h	54;"	d
NO_KLEIN	src/aircrack-ptw-lib.h	59;"	d
NO_PTW	src/aircrack-ptw-lib.h	60;"	d
NT_X86_64	src/arch.h	454;"	d
NULL_DATA	src/airbase-ng.c	116;"	d	file:
NULL_DATA	src/aireplay-ng.c	101;"	d	file:
NULL_DATA	src/tkiptun-ng.c	96;"	d	file:
NULL_FRAME	src/airdecloak-ng.h	78;"	d
NULL_MAC	src/crypto.h	61;"	d
NULL_MAC	src/makeivs-ng.c	33;"	d	file:
NULL_MAC	src/osdep/linux.c	150;"	d	file:
NULL_PACKET	src/packetforge-ng.c	68;"	d	file:
N_ATTACKS	src/aircrack-ng.h	123;"	d
N_ATTACKS	src/kstats.c	28;"	d	file:
Name	lib/csharp/MonoExample/NDesk-dbus/Mapper.cs	/^		public string Name;$/;"	f	class:NDesk.DBus.ArgumentAttribute
Name	lib/csharp/MonoExample/NDesk-dbus/Mapper.cs	/^		public string Name;$/;"	f	class:NDesk.DBus.InterfaceAttribute
Name	lib/csharp/MonoExample/NDesk-dbus/Notifications.cs	/^		public string Name;$/;"	f	struct:org.freedesktop.ServerInformation
NameAcquired	lib/csharp/MonoExample/NDesk-dbus/DBus.cs	/^		event NameAcquiredHandler NameAcquired;$/;"	E	interface:org.freedesktop.DBus.IBus
NameAcquiredHandler	lib/csharp/MonoExample/NDesk-dbus/DBus.cs	/^	public delegate void NameAcquiredHandler (string name);$/;"	m	namespace:org.freedesktop.DBus
NameFlag	lib/csharp/MonoExample/NDesk-dbus/DBus.cs	/^	public enum NameFlag : uint$/;"	g	namespace:org.freedesktop.DBus
NameHasOwner	lib/csharp/MonoExample/NDesk-dbus/Bus.cs	/^		public bool NameHasOwner (string name)$/;"	m	class:NDesk.DBus.Bus
NameHasOwner	lib/csharp/MonoExample/NDesk-dbus/DBus.cs	/^		bool NameHasOwner (string name);$/;"	m	interface:org.freedesktop.DBus.IBus
NameLost	lib/csharp/MonoExample/NDesk-dbus/DBus.cs	/^		event NameLostHandler NameLost;$/;"	E	interface:org.freedesktop.DBus.IBus
NameLostHandler	lib/csharp/MonoExample/NDesk-dbus/DBus.cs	/^	public delegate void NameLostHandler (string name);$/;"	m	namespace:org.freedesktop.DBus
NameOwnerChanged	lib/csharp/MonoExample/NDesk-dbus/DBus.cs	/^		event NameOwnerChangedHandler NameOwnerChanged;$/;"	E	interface:org.freedesktop.DBus.IBus
NameOwnerChangedHandler	lib/csharp/MonoExample/NDesk-dbus/DBus.cs	/^	public delegate void NameOwnerChangedHandler (string name, string old_owner, string new_owner);$/;"	m	namespace:org.freedesktop.DBus
NativeEndianness	lib/csharp/MonoExample/NDesk-dbus/Connection.cs	/^		internal static readonly EndianFlag NativeEndianness;$/;"	f	class:NDesk.DBus.Connection	file:
NbPackets	lib/csharp/WirelessPanda/Station.cs	/^        public ulong NbPackets$/;"	p	class:WirelessPanda.Station
NetXMLReader	lib/csharp/WirelessPanda/Readers/NetXMLReader.cs	/^        public NetXMLReader(string filename) : base(filename)$/;"	m	class:WirelessPanda.Readers.NetXMLReader
NetXMLReader	lib/csharp/WirelessPanda/Readers/NetXMLReader.cs	/^    public class NetXMLReader : Reader$/;"	c	namespace:WirelessPanda.Readers
NetworkType	lib/csharp/WirelessPanda/AccessPoint.cs	/^        public string NetworkType$/;"	p	class:WirelessPanda.AccessPoint
NewStationNotify	lib/csharp/MonoExample/NewStationNotify/Main.cs	/^namespace NewStationNotify$/;"	n
NewStationNotify	lib/csharp/MonoExample/NewStationNotify/Notification.cs	/^namespace NewStationNotify$/;"	n
NoAutoStart	lib/csharp/MonoExample/NDesk-dbus/Protocol.cs	/^		NoAutoStart = 0x2,$/;"	e	enum:NDesk.DBus.HeaderFlag	file:
NoReplyExpected	lib/csharp/MonoExample/NDesk-dbus/Protocol.cs	/^		NoReplyExpected = 0x1,$/;"	e	enum:NDesk.DBus.HeaderFlag	file:
NonExistent	lib/csharp/MonoExample/NDesk-dbus/DBus.cs	/^		NonExistent,$/;"	e	enum:org.freedesktop.DBus.ReleaseNameReply	file:
None	lib/csharp/MonoExample/NDesk-dbus/DBus.cs	/^		None = 0,$/;"	e	enum:org.freedesktop.DBus.NameFlag	file:
None	lib/csharp/MonoExample/NDesk-dbus/Protocol.cs	/^		None = 0,$/;"	e	enum:NDesk.DBus.HeaderFlag	file:
NotOwner	lib/csharp/MonoExample/NDesk-dbus/DBus.cs	/^		NotOwner,$/;"	e	enum:org.freedesktop.DBus.ReleaseNameReply	file:
Notification	lib/csharp/MonoExample/NewStationNotify/Notification.cs	/^		public Notification ()$/;"	m	class:NewStationNotify.Notification
Notification	lib/csharp/MonoExample/NewStationNotify/Notification.cs	/^	public class Notification$/;"	c	namespace:NewStationNotify
Notifications	lib/csharp/MonoExample/NDesk-dbus/Notifications.cs	/^	public interface Notifications : Introspectable, Properties$/;"	i	namespace:org.freedesktop
Notify	lib/csharp/MonoExample/NDesk-dbus/Notifications.cs	/^		uint Notify (string app_name, uint id, string icon, string summary, string body, string[] actions, IDictionary<string,object> hints, int timeout);$/;"	m	interface:org.freedesktop.Notifications
Notify	lib/csharp/MonoExample/NewStationNotify/Notification.cs	/^		public static void Notify(String BSSID, String staMac) {$/;"	m	class:NewStationNotify.Notification
OBJS	contrib/airpcap/Makefile	/^OBJS	= airpcap.o$/;"	m
OBJS	contrib/commview/Makefile	/^OBJS	= commview.o$/;"	m
OBJS	contrib/peek/Makefile	/^OBJS	= $(NAME).o$/;"	m
OBJS	src/osdep/Makefile	/^OBJS		= osdep.o $(OBJS_COMMON)$/;"	m
OBJS_AB	src/Makefile	/^OBJS_AB		= airbase-ng.o common.o crypto.o osdep\/radiotap\/radiotap.o$/;"	m
OBJS_AC	src/Makefile	/^OBJS_AC		= aircrack-ng.o cpuid.o crypto.o common.o $(SSEO_INT) uniqueiv.o $(OBJS_PTW) $(LIBLINECOUNT)$/;"	m
OBJS_AC_MULTI	src/Makefile	/^OBJS_AC_MULTI	= crypto.o common.o uniqueiv.o $(OBJS_PTW)$/;"	m
OBJS_AD	src/Makefile	/^OBJS_AD		= airdecap-ng.o crypto.o common.o$/;"	m
OBJS_ADU	src/Makefile	/^OBJS_ADU	= airodump-ng.o common.o crypto.o uniqueiv.o osdep\/radiotap\/radiotap.o$/;"	m
OBJS_AL	src/Makefile	/^OBJS_AL		= airolib-ng.o crypto.o common.o$/;"	m
OBJS_APCAP	src/osdep/Makefile	/^OBJS_APCAP	= airpcap.o$/;"	m
OBJS_AR	src/Makefile	/^OBJS_AR		= aireplay-ng.o common.o crypto.o osdep\/radiotap\/radiotap.o$/;"	m
OBJS_AS	src/Makefile	/^OBJS_AS		= airserv-ng.o common.o osdep\/radiotap\/radiotap.o$/;"	m
OBJS_AT	src/Makefile	/^OBJS_AT		= airtun-ng.o common.o crypto.o osdep\/radiotap\/radiotap.o$/;"	m
OBJS_AU	src/Makefile	/^OBJS_AU		= airdecloak-ng.o common.o osdep\/radiotap\/radiotap.o$/;"	m
OBJS_BC	src/Makefile	/^OBJS_BC		= besside-ng-crawler.o$/;"	m
OBJS_BS	src/Makefile	/^OBJS_BS		= besside-ng.o crypto.o common.o osdep\/radiotap\/radiotap.o $(OBJS_PTW)$/;"	m
OBJS_BUDDY	src/Makefile	/^OBJS_BUDDY	= buddy-ng.o common.o$/;"	m
OBJS_COMMON	src/osdep/Makefile	/^OBJS_COMMON	= network.o file.o$/;"	m
OBJS_CYGWIN	src/osdep/Makefile	/^OBJS_CYGWIN	= $(OBJS) cygwin.o cygwin_tap.o radiotap\/radiotap.o$/;"	m
OBJS_DARWIN	src/osdep/Makefile	/^OBJS_DARWIN = $(OBJS) darwin.o darwin_tap.o radiotap\/radiotap.o$/;"	m
OBJS_DUMMY	src/osdep/Makefile	/^OBJS_DUMMY	= $(OBJS) dummy.o dummy_tap.o$/;"	m
OBJS_ES	src/Makefile	/^OBJS_ES		= easside-ng.o common.o osdep\/radiotap\/radiotap.o$/;"	m
OBJS_FBSD	src/osdep/Makefile	/^OBJS_FBSD	= $(OBJS) freebsd.o freebsd_tap.o$/;"	m
OBJS_IV	src/Makefile	/^OBJS_IV		= ivstools.o common.o crypto.o uniqueiv.o$/;"	m
OBJS_LINUX	src/osdep/Makefile	/^OBJS_LINUX	= $(OBJS) linux.o linux_tap.o radiotap\/radiotap.o common.o$/;"	m
OBJS_MI	src/Makefile	/^OBJS_MI		= makeivs-ng.o common.o uniqueiv.o$/;"	m
OBJS_NBSD	src/osdep/Makefile	/^OBJS_NBSD	= $(OBJS) netbsd.o netbsd_tap.o$/;"	m
OBJS_OBSD	src/osdep/Makefile	/^OBJS_OBSD	= $(OBJS) openbsd.o openbsd_tap.o$/;"	m
OBJS_PF	src/Makefile	/^OBJS_PF		= packetforge-ng.o common.o crypto.o$/;"	m
OBJS_PTW	src/Makefile	/^OBJS_PTW	= aircrack-ptw-lib.o$/;"	m
OBJS_SSE_COMMON	src/Makefile	/^OBJS_SSE_COMMON = memory.o wpapsk.o$/;"	m
OBJS_TEST_4PMK	test/cryptounittest/Makefile	/^OBJS_TEST_4PMK  = test-calc-4pmk.c $(SRC_CRYPTO)$/;"	m
OBJS_TEST_CMIC	test/cryptounittest/Makefile	/^OBJS_TEST_CMIC  = test-calc-mic.c $(SRC_CRYPTO)$/;"	m
OBJS_TEST_CPMK	test/cryptounittest/Makefile	/^OBJS_TEST_CPMK  = test-calc-pmk.c $(SRC_CRYPTO)$/;"	m
OBJS_TEST_CPTK	test/cryptounittest/Makefile	/^OBJS_TEST_CPTK  = test-calc-ptk.c $(SRC_CRYPTO)$/;"	m
OBJS_TEST_DCMP	test/cryptounittest/Makefile	/^OBJS_TEST_DCMP  = test-decrypt-ccmp.c $(SRC_CRYPTO)$/;"	m
OBJS_TEST_ECMP	test/cryptounittest/Makefile	/^OBJS_TEST_ECMP  = test-encrypt-ccmp.c $(SRC_CRYPTO)$/;"	m
OBJS_TEST_EWEP	test/cryptounittest/Makefile	/^OBJS_TEST_EWEP  = test-encrypt-wep.c $(SRC_CRYPTO)$/;"	m
OBJS_TT	src/Makefile	/^OBJS_TT		= tkiptun-ng.o common.o crypto.o osdep\/radiotap\/radiotap.o$/;"	m
OBJS_WC	src/Makefile	/^OBJS_WC		= wpaclean.o osdep\/radiotap\/radiotap.o$/;"	m
OBJS_WS	src/Makefile	/^OBJS_WS		= wesside-ng.o crypto.o common.o osdep\/radiotap\/radiotap.o $(OBJS_PTW)$/;"	m
OBJ_MEMORY	src/Makefile	/^OBJ_MEMORY	= memory.o$/;"	m
OBJ_SIMD_CORE	src/Makefile	/^OBJ_SIMD_CORE	= simd-intrinsics.o$/;"	m
OBJ_SSE_CORE	src/Makefile	/^OBJ_SSE_CORE	= sse-intrinsics.o$/;"	m
OKBLUE	scripts/airdrop-ng/airdrop/__init__.py	/^    OKBLUE = '\\033[94m' #blue   $/;"	v	class:bcolors
OKGREEN	scripts/airdrop-ng/airdrop/__init__.py	/^    OKGREEN = '\\033[92m' #green    $/;"	v	class:bcolors
OPTFILES	src/Makefile	/^OPTFILES	= aircrack-ng-opt-prof_gen aircrack-ng-opt \\$/;"	m
OPTFLAGS	common.mak	/^OPTFLAGS	= -D_FILE_OFFSET_BITS=64$/;"	m
OSD	src/Makefile	/^OSD		= osdep$/;"	m
OSNAME	common.mak	/^OSNAME		:= $(shell uname -s | sed -e 's\/.*CYGWIN.*\/cygwin\/g' -e 's,\/,-,g')$/;"	m
OUI_PATHS	src/airodump-ng.h	/^const char *OUI_PATHS[] = {$/;"	v
OUI_STR_SIZE	src/airodump-ng.c	4006;"	d	file:
OUI_STR_SIZE	src/airodump-ng.c	4085;"	d	file:
OUIupdate	scripts/airdrop-ng/airdrop-ng	/^def OUIupdate():$/;"	f
OUT_LEN	test/test-hex_string_to_array.c	8;"	d	file:
O_BINARY	src/aircrack-ng.h	55;"	d
ObjectPath	lib/csharp/MonoExample/NDesk-dbus/Protocol.cs	/^		public ObjectPath (string value)$/;"	m	class:NDesk.DBus.ObjectPath
ObjectPath	lib/csharp/MonoExample/NDesk-dbus/Protocol.cs	/^	public sealed class ObjectPath \/\/: IComparable, IComparable<ObjectPath>, IEquatable<ObjectPath>$/;"	c	namespace:NDesk.DBus
ObjectPath	lib/csharp/MonoExample/NDesk-dbus/Signature.cs	/^		ObjectPath = (byte)'o',$/;"	e	enum:NDesk.DBus.DType	file:
Open	lib/csharp/MonoExample/NDesk-dbus/Bus.cs	/^		public static new Bus Open (string address)$/;"	m	class:NDesk.DBus.Bus
Open	lib/csharp/MonoExample/NDesk-dbus/Connection.cs	/^		public static Connection Open (string address)$/;"	m	class:NDesk.DBus.Connection
Open	lib/csharp/MonoExample/NDesk-dbus/SocketTransport.cs	/^		public override void Open (AddressEntry entry)$/;"	m	class:NDesk.DBus.Transports.SocketTransport
Open	lib/csharp/MonoExample/NDesk-dbus/SocketTransport.cs	/^		public void Open (Socket socket)$/;"	m	class:NDesk.DBus.Transports.SocketTransport
Open	lib/csharp/MonoExample/NDesk-dbus/SocketTransport.cs	/^		public void Open (string host, int port)$/;"	m	class:NDesk.DBus.Transports.SocketTransport
Open	lib/csharp/MonoExample/NDesk-dbus/Transport.cs	/^		public abstract void Open (AddressEntry entry);$/;"	m	class:NDesk.DBus.Transports.Transport
Open	lib/csharp/MonoExample/NDesk-dbus/UnixNativeTransport.cs	/^		public override void Open (string path, bool @abstract)$/;"	m	class:NDesk.DBus.Transports.UnixNativeTransport
Open	lib/csharp/MonoExample/NDesk-dbus/UnixTransport.cs	/^		public abstract void Open (string path, bool @abstract);$/;"	m	class:NDesk.DBus.Transports.UnixTransport
Open	lib/csharp/MonoExample/NDesk-dbus/UnixTransport.cs	/^		public override void Open (AddressEntry entry)$/;"	m	class:NDesk.DBus.Transports.UnixTransport
OpenAbstractUnix	lib/csharp/MonoExample/NDesk-dbus/UnixNativeTransport.cs	/^		protected UnixSocket OpenAbstractUnix (string path)$/;"	m	class:NDesk.DBus.Transports.UnixNativeTransport
OpenPrivate	lib/csharp/MonoExample/NDesk-dbus/Connection.cs	/^		internal void OpenPrivate (string address)$/;"	m	class:NDesk.DBus.Connection	file:
OpenUnix	lib/csharp/MonoExample/NDesk-dbus/UnixNativeTransport.cs	/^		public UnixSocket OpenUnix (string path)$/;"	m	class:NDesk.DBus.Transports.UnixNativeTransport
Out	lib/csharp/MonoExample/NDesk-dbus/Signature.cs	/^		Out,$/;"	e	enum:NDesk.DBus.ArgDirection	file:
PACKET_CHECKING_LENGTH	src/airdecloak-ng.h	51;"	d
PACKET_HEADER_SIZE	src/airdecloak-ng.h	/^const int PACKET_HEADER_SIZE = sizeof( struct pcap_pkthdr );$/;"	v
PADDED_ARPLEN	src/wesside-ng.c	84;"	d	file:
PARA_TO_MxN	src/arch.h	424;"	d
PARA_TO_N	src/arch.h	423;"	d
PCAP_VERSION_MAJOR	src/pcap.h	49;"	d
PCAP_VERSION_MINOR	src/pcap.h	50;"	d
PCRE	common.mak	/^PCRE            = true$/;"	m
PCT	src/common.h	59;"	d
PIC	common.mak	/^PIC		= -fPIC$/;"	m
PIC	common.mak	/^PIC		=$/;"	m
PKG_CONFIG	common.mak	/^PKG_CONFIG ?= pkg-config$/;"	m
PKTHDR_RADIOTAP_VERSION	src/osdep/radiotap/radiotap.h	41;"	d
PLAINTEXT_LENGTH	src/wpapsk.h	77;"	d
PLEN	test/cryptounittest/test-calc-pmk.c	32;"	d	file:
POTENTIALLY_CLOAKED_FRAME	src/airdecloak-ng.h	62;"	d
PPH_PH_VERSION	contrib/airpcap/airpcap.c	20;"	d	file:
PPH_PH_VERSION	src/osdep/airpcap.c	45;"	d	file:
PPI_FIELD_802_11_COMMON	contrib/airpcap/airpcap.c	/^PPI_FIELD_802_11_COMMON, *PPPI_FIELD_802_11_COMMON;$/;"	t	typeref:struct:_PPI_FIELD_802_11_COMMON	file:
PPI_FIELD_802_11_COMMON	src/osdep/airpcap.c	/^PPI_FIELD_802_11_COMMON, *PPPI_FIELD_802_11_COMMON;$/;"	t	typeref:struct:_PPI_FIELD_802_11_COMMON	file:
PPI_FIELD_HEADER	contrib/airpcap/airpcap.c	/^PPI_FIELD_HEADER, *PPPI_FIELD_HEADER;$/;"	t	typeref:struct:_PPI_FIELD_HEADER	file:
PPI_FIELD_HEADER	src/osdep/airpcap.c	/^PPI_FIELD_HEADER, *PPPI_FIELD_HEADER;$/;"	t	typeref:struct:_PPI_FIELD_HEADER	file:
PPI_FIELD_TYPE_802_11_COMMON	contrib/airpcap/airpcap.c	21;"	d	file:
PPI_FIELD_TYPE_802_11_COMMON	src/osdep/airpcap.c	46;"	d	file:
PPI_PACKET_HEADER	contrib/airpcap/airpcap.c	/^PPI_PACKET_HEADER, *PPPI_PACKET_HEADER;$/;"	t	typeref:struct:_PPI_PACKET_HEADER	file:
PPI_PACKET_HEADER	src/osdep/airpcap.c	/^PPI_PACKET_HEADER, *PPPI_PACKET_HEADER;$/;"	t	typeref:struct:_PPI_PACKET_HEADER	file:
PPPI_FIELD_802_11_COMMON	contrib/airpcap/airpcap.c	/^PPI_FIELD_802_11_COMMON, *PPPI_FIELD_802_11_COMMON;$/;"	t	typeref:struct:_PPI_FIELD_802_11_COMMON	file:
PPPI_FIELD_802_11_COMMON	src/osdep/airpcap.c	/^PPI_FIELD_802_11_COMMON, *PPPI_FIELD_802_11_COMMON;$/;"	t	typeref:struct:_PPI_FIELD_802_11_COMMON	file:
PPPI_FIELD_HEADER	contrib/airpcap/airpcap.c	/^PPI_FIELD_HEADER, *PPPI_FIELD_HEADER;$/;"	t	typeref:struct:_PPI_FIELD_HEADER	file:
PPPI_FIELD_HEADER	src/osdep/airpcap.c	/^PPI_FIELD_HEADER, *PPPI_FIELD_HEADER;$/;"	t	typeref:struct:_PPI_FIELD_HEADER	file:
PPPI_PACKET_HEADER	contrib/airpcap/airpcap.c	/^PPI_PACKET_HEADER, *PPPI_PACKET_HEADER;$/;"	t	typeref:struct:_PPI_PACKET_HEADER	file:
PPPI_PACKET_HEADER	src/osdep/airpcap.c	/^PPI_PACKET_HEADER, *PPPI_PACKET_HEADER;$/;"	t	typeref:struct:_PPI_PACKET_HEADER	file:
PRELOAD	src/sha1-sse2.S	/^#define PRELOAD(x)  $/;"	d
PRELOAD	src/sha1-sse2.S	/^#define PRELOAD(x)  movq x@GOTPCREL(%rip), %rbx;$/;"	d
PRELOAD	src/sha1-sse2.S	/^#define PRELOAD(x)$/;"	d
PRGA_FILE	src/wesside-ng.c	90;"	d	file:
PROBE_REQ	src/airbase-ng.c	129;"	d	file:
PROBE_REQ	src/aireplay-ng.c	111;"	d	file:
PROBE_REQ	src/airodump-ng.h	113;"	d
PROBE_REQ	src/tkiptun-ng.c	106;"	d	file:
PROBE_RESPONSE	src/airdecloak-ng.h	74;"	d
PROBE_RSP	src/airbase-ng.c	133;"	d	file:
PROF_DIR	src/Makefile	/^PROF_DIR	= $(PWD)\/prof$/;"	m
PTW_CONTROLSESSIONS	src/aircrack-ptw-lib.h	44;"	d
PTW_DEFAULTBF	src/aircrack-ng.c	/^int PTW_DEFAULTBF[PTW_KEYHSBYTES] = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };$/;"	v
PTW_DEFAULTBF	src/besside-ng.c	/^int PTW_DEFAULTBF[PTW_KEYHSBYTES] = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,$/;"	v
PTW_DEFAULTBF	src/wesside-ng.c	/^int PTW_DEFAULTBF[PTW_KEYHSBYTES] = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };$/;"	v
PTW_DEFAULTWEIGHT	src/aircrack-ng.c	/^int PTW_DEFAULTWEIGHT[1] = { 256 };$/;"	v
PTW_DEFAULTWEIGHT	src/wesside-ng.c	/^int PTW_DEFAULTWEIGHT[1] = { 256 };$/;"	v
PTW_IVBYTES	src/aircrack-ptw-lib.h	50;"	d
PTW_IVTABLELEN	src/aircrack-ptw-lib.h	39;"	d
PTW_KEYHSBYTES	src/aircrack-ptw-lib.h	47;"	d
PTW_KSBYTES	src/aircrack-ptw-lib.h	53;"	d
PTW_TRY_STEP	src/aircrack-ng.h	68;"	d
PTW_addsession	src/aircrack-ptw-lib.c	/^int PTW_addsession(PTW_attackstate * state, uint8_t * iv, uint8_t * keystream, int * weight, int total) {$/;"	f
PTW_attackstate	src/aircrack-ptw-lib.h	/^} PTW_attackstate;$/;"	t	typeref:struct:__anon41
PTW_computeKey	src/aircrack-ptw-lib.c	/^int PTW_computeKey(PTW_attackstate * state, uint8_t * keybuf, int keylen, int testlimit, int * bf, int validchars[][n], int attacks) {$/;"	f
PTW_freeattackstate	src/aircrack-ptw-lib.c	/^void PTW_freeattackstate(PTW_attackstate * state) {$/;"	f
PTW_n	src/aircrack-ptw-lib.h	56;"	d
PTW_newattackstate	src/aircrack-ptw-lib.c	/^PTW_attackstate * PTW_newattackstate() {$/;"	f
PTW_session	src/aircrack-ptw-lib.h	/^} PTW_session;$/;"	t	typeref:struct:__anon40
PTW_tableentry	src/aircrack-ptw-lib.h	/^} PTW_tableentry;$/;"	t	typeref:struct:__anon39
PUBLIC_IDENTIFIER	lib/csharp/MonoExample/NDesk-dbus/Introspection.cs	/^		const string PUBLIC_IDENTIFIER = "-\/\/freedesktop\/\/DTD D-BUS Object Introspection 1.0\/\/EN";$/;"	f	class:NDesk.DBus.Introspector	file:
PUT_UINT32_BE	src/crypto.c	68;"	d	file:
PUT_UINT32_LE	src/crypto.c	52;"	d	file:
PacketSize	contrib/commview/commview.c	/^        int PacketSize;         \/\/ Full packet size?$/;"	m	struct:CV_Header	file:
PadNeeded	lib/csharp/MonoExample/NDesk-dbus/Protocol.cs	/^		public static int PadNeeded (int pos, int alignment)$/;"	m	class:NDesk.DBus.Protocol
Padded	lib/csharp/MonoExample/NDesk-dbus/Protocol.cs	/^		public static int Padded (int pos, int alignment)$/;"	m	class:NDesk.DBus.Protocol
Parent	lib/csharp/MonoExample/NDesk-dbus/Protocol.cs	/^		internal ObjectPath Parent$/;"	p	class:NDesk.DBus.ObjectPath
Parse	lib/csharp/MonoExample/NDesk-dbus/Address.cs	/^		public static AddressEntry Parse (string s)$/;"	m	class:NDesk.DBus.AddressEntry
Parse	lib/csharp/MonoExample/NDesk-dbus/Address.cs	/^		public static AddressEntry[] Parse (string addresses)$/;"	m	class:NDesk.DBus.Address
Parse	lib/csharp/MonoExample/NDesk-dbus/MatchRule.cs	/^		public static MatchRule Parse (string text)$/;"	m	class:NDesk.DBus.MatchRule
ParseSuccess	lib/csharp/WirelessPanda/Readers/Reader.cs	/^        public bool ParseSuccess$/;"	p	class:WirelessPanda.Readers.Reader
Path	lib/csharp/MonoExample/NDesk-dbus/BusObject.cs	/^		public ObjectPath Path$/;"	p	class:NDesk.DBus.BusObject
Path	lib/csharp/MonoExample/NDesk-dbus/MatchRule.cs	/^		public ObjectPath Path;$/;"	f	class:NDesk.DBus.MatchRule
Path	lib/csharp/MonoExample/NDesk-dbus/Protocol.cs	/^			Path,$/;"	e	enum:NDesk.DBus.FieldCode	file:
Path	lib/csharp/MonoExample/NDesk-dbus/Wrapper.cs	/^		public ObjectPath Path;$/;"	f	class:NDesk.DBus.MethodCall
Path	lib/csharp/MonoExample/NDesk-dbus/Wrapper.cs	/^		public ObjectPath Path;$/;"	f	class:NDesk.DBus.Signal
Peer	lib/csharp/MonoExample/NDesk-dbus/DBus.cs	/^	public interface Peer$/;"	i	namespace:org.freedesktop.DBus
PendingCall	lib/csharp/MonoExample/NDesk-dbus/PendingCall.cs	/^		public PendingCall (Connection conn)$/;"	m	class:NDesk.DBus.PendingCall
PendingCall	lib/csharp/MonoExample/NDesk-dbus/PendingCall.cs	/^	class PendingCall$/;"	c	namespace:NDesk.DBus
PfhLength	contrib/airpcap/airpcap.c	/^	u_int16_t PfhLength;$/;"	m	struct:_PPI_FIELD_HEADER	file:
PfhLength	src/osdep/airpcap.c	/^	u_int16_t PfhLength;$/;"	m	struct:_PPI_FIELD_HEADER	file:
PfhType	contrib/airpcap/airpcap.c	/^	u_int16_t PfhType;$/;"	m	struct:_PPI_FIELD_HEADER	file:
PfhType	src/osdep/airpcap.c	/^	u_int16_t PfhType;$/;"	m	struct:_PPI_FIELD_HEADER	file:
Ping	lib/csharp/MonoExample/NDesk-dbus/DBus.cs	/^		void Ping ();$/;"	m	interface:org.freedesktop.DBus.Peer
Power	contrib/commview/commview.c	/^        char Power;       \/\/ Power$/;"	m	struct:CV_Header2	file:
Power	lib/csharp/WirelessPanda/WirelessDevice.cs	/^        public int Power$/;"	p	class:WirelessPanda.WirelessDevice
PphDlt	contrib/airpcap/airpcap.c	/^	u_int32_t	PphDlt;$/;"	m	struct:_PPI_PACKET_HEADER	file:
PphDlt	src/osdep/airpcap.c	/^	u_int32_t	PphDlt;$/;"	m	struct:_PPI_PACKET_HEADER	file:
PphFlags	contrib/airpcap/airpcap.c	/^	u_int8_t	PphFlags;$/;"	m	struct:_PPI_PACKET_HEADER	file:
PphFlags	src/osdep/airpcap.c	/^	u_int8_t	PphFlags;$/;"	m	struct:_PPI_PACKET_HEADER	file:
PphLength	contrib/airpcap/airpcap.c	/^	u_int16_t	PphLength;$/;"	m	struct:_PPI_PACKET_HEADER	file:
PphLength	src/osdep/airpcap.c	/^	u_int16_t	PphLength;$/;"	m	struct:_PPI_PACKET_HEADER	file:
PphVersion	contrib/airpcap/airpcap.c	/^	u_int8_t	PphVersion;$/;"	m	struct:_PPI_PACKET_HEADER	file:
PphVersion	src/osdep/airpcap.c	/^	u_int8_t	PphVersion;$/;"	m	struct:_PPI_PACKET_HEADER	file:
PrimaryOwner	lib/csharp/MonoExample/NDesk-dbus/DBus.cs	/^		PrimaryOwner = 1,$/;"	e	enum:org.freedesktop.DBus.RequestNameReply	file:
Privacy	lib/csharp/WirelessPanda/AccessPoint.cs	/^        public string Privacy$/;"	p	class:WirelessPanda.AccessPoint
ProbedESSIDs	lib/csharp/WirelessPanda/Station.cs	/^        public string ProbedESSIDs$/;"	p	class:WirelessPanda.Station
ProbedESSIDsList	lib/csharp/WirelessPanda/Station.cs	/^        public string[] ProbedESSIDsList$/;"	p	class:WirelessPanda.Station
Program	lib/csharp/Example1/Example1/Program.cs	/^    static class Program$/;"	c	namespace:Example1
Properties	lib/csharp/MonoExample/NDesk-dbus/Address.cs	/^		public IDictionary<string,string> Properties = new Dictionary<string,string> ();$/;"	f	class:NDesk.DBus.AddressEntry
Properties	lib/csharp/MonoExample/NDesk-dbus/DBus.cs	/^	public interface Properties$/;"	i	namespace:org.freedesktop.DBus
Protocol	lib/csharp/MonoExample/NDesk-dbus/Protocol.cs	/^		static Protocol ()$/;"	m	class:NDesk.DBus.Protocol	file:
Protocol	lib/csharp/MonoExample/NDesk-dbus/Protocol.cs	/^	static class Protocol$/;"	c	namespace:NDesk.DBus
QLT_COUNT	src/airodump-ng.h	73;"	d
QLT_TIME	src/airodump-ng.h	72;"	d
QUEUE_MAX	src/osdep/network.c	36;"	d	file:
R	src/aircrack-ng.c	/^const unsigned char R[256] =$/;"	v
R	src/simd-intrinsics.c	1658;"	d	file:
R	src/simd-intrinsics.c	1659;"	d	file:
R	src/simd-intrinsics.c	2242;"	d	file:
R	src/simd-intrinsics.c	2243;"	d	file:
R	src/sse-intrinsics.c	1522;"	d	file:
R	src/sse-intrinsics.c	1523;"	d	file:
R	src/sse-intrinsics.c	1906;"	d	file:
R	src/sse-intrinsics.c	1907;"	d	file:
RANLIB	common.mak	/^RANLIB		?= $(TOOL_PREFIX)ranlib$/;"	m
RATES	src/airbase-ng.c	123;"	d	file:
RATES	src/aireplay-ng.c	108;"	d	file:
RATES	src/airodump-ng.h	110;"	d
RATES	src/tkiptun-ng.c	103;"	d	file:
RATE_11M	src/aireplay-ng.c	120;"	d	file:
RATE_11M	src/tkiptun-ng.c	115;"	d	file:
RATE_12M	src/aireplay-ng.c	124;"	d	file:
RATE_12M	src/tkiptun-ng.c	119;"	d	file:
RATE_18M	src/aireplay-ng.c	125;"	d	file:
RATE_18M	src/tkiptun-ng.c	120;"	d	file:
RATE_1M	src/aireplay-ng.c	117;"	d	file:
RATE_1M	src/tkiptun-ng.c	112;"	d	file:
RATE_24M	src/aireplay-ng.c	126;"	d	file:
RATE_24M	src/tkiptun-ng.c	121;"	d	file:
RATE_2M	src/aireplay-ng.c	118;"	d	file:
RATE_2M	src/tkiptun-ng.c	113;"	d	file:
RATE_36M	src/aireplay-ng.c	127;"	d	file:
RATE_36M	src/tkiptun-ng.c	122;"	d	file:
RATE_48M	src/aireplay-ng.c	128;"	d	file:
RATE_48M	src/tkiptun-ng.c	123;"	d	file:
RATE_54M	src/aireplay-ng.c	129;"	d	file:
RATE_54M	src/tkiptun-ng.c	124;"	d	file:
RATE_5_5M	src/aireplay-ng.c	119;"	d	file:
RATE_5_5M	src/tkiptun-ng.c	114;"	d	file:
RATE_6M	src/aireplay-ng.c	122;"	d	file:
RATE_6M	src/tkiptun-ng.c	117;"	d	file:
RATE_9M	src/aireplay-ng.c	123;"	d	file:
RATE_9M	src/tkiptun-ng.c	118;"	d	file:
RATE_NUM	src/aireplay-ng.c	115;"	d	file:
RATE_NUM	src/tkiptun-ng.c	110;"	d	file:
RC4	src/gcrypt-openssl-wrapper.h	37;"	d
RC4TEST_LOOP	src/aircrack-ptw-lib.c	238;"	d	file:
RC4TEST_LOOP	src/aircrack-ptw-lib.c	257;"	d	file:
RC4_KEY	src/gcrypt-openssl-wrapper.h	28;"	d
RC4_set_key	src/gcrypt-openssl-wrapper.h	29;"	d
READBUF_BLKSIZE	src/linecount.h	44;"	d
REASSOC_REQ	src/aireplay-ng.c	97;"	d	file:
REFRESH_RATE	src/airodump-ng.h	39;"	d
REQUESTS	src/aireplay-ng.c	78;"	d	file:
REQUESTS	src/tkiptun-ng.c	77;"	d	file:
RESTART	src/aircrack-ng.h	52;"	d
RETRY	src/aireplay-ng.c	82;"	d	file:
RETRY	src/tkiptun-ng.c	81;"	d	file:
REVFLAGS	common.mak	/^REVFLAGS	?= -D_REVISION=$(REVISION)$/;"	m
REVISION	common.mak	/^REVISION	= $(shell $(AC_ROOT)\/evalrev $(AC_ROOT))$/;"	m
ROL32	src/crypto.h	77;"	d
ROOT	contrib/airpcap/Makefile	/^ROOT    = ..\/..$/;"	m
ROOT	contrib/commview/Makefile	/^ROOT    = ..\/..$/;"	m
ROOT	contrib/peek/Makefile	/^ROOT    = ..\/..$/;"	m
ROR32	src/crypto.h	79;"	d
ROTATE_LEFT	src/johnswap.h	84;"	d
ROTATE_LEFT64	src/johnswap.h	85;"	d
ROTR1	src/crypto.c	1094;"	d	file:
RSN_ASE_8021X_PSK	src/include/ieee80211.h	570;"	d
RSN_ASE_8021X_UNSPEC	src/include/ieee80211.h	569;"	d
RSN_ASE_NONE	src/include/ieee80211.h	568;"	d
RSN_CAP_PREAUTH	src/include/ieee80211.h	572;"	d
RSN_CSE_CCMP	src/include/ieee80211.h	565;"	d
RSN_CSE_NULL	src/include/ieee80211.h	561;"	d
RSN_CSE_TKIP	src/include/ieee80211.h	563;"	d
RSN_CSE_WEP104	src/include/ieee80211.h	566;"	d
RSN_CSE_WEP40	src/include/ieee80211.h	562;"	d
RSN_CSE_WRAP	src/include/ieee80211.h	564;"	d
RSN_OUI	src/include/ieee80211.h	558;"	d
RSN_VERSION	src/include/ieee80211.h	559;"	d
RTAP	src/osdep/Makefile	/^RTAP		= radiotap$/;"	m
RTC_RESOLUTION	src/airbase-ng.c	99;"	d	file:
RTC_RESOLUTION	src/aireplay-ng.c	76;"	d	file:
RTC_RESOLUTION	src/tkiptun-ng.c	75;"	d	file:
RTS	src/airbase-ng.c	120;"	d	file:
RTS	src/aireplay-ng.c	105;"	d	file:
RTS	src/tkiptun-ng.c	100;"	d	file:
Rate	contrib/airpcap/airpcap.c	/^	u_int16_t	Rate;$/;"	m	struct:_PPI_FIELD_802_11_COMMON	file:
Rate	src/osdep/airpcap.c	/^	u_int16_t	Rate;$/;"	m	struct:_PPI_FIELD_802_11_COMMON	file:
Read	lib/csharp/WirelessPanda/Readers/Reader.cs	/^        public virtual bool Read() { return this.ParseSuccess; }$/;"	m	class:WirelessPanda.Readers.Reader
Read	lib/csharp/WirelessPanda/Readers/UniversalReader.cs	/^        public override bool Read()$/;"	m	class:WirelessPanda.Readers.UniversalReader
Read	lib/csharp/WirelessPanda/Readers/csvReader.cs	/^        public override bool Read()$/;"	m	class:WirelessPanda.Readers.CsvReader
Read	lib/csharp/WirelessPanda/Readers/kismetCsvReader.cs	/^        public override bool Read()$/;"	m	class:WirelessPanda.Readers.KismetCsvReader
ReadArray	lib/csharp/MonoExample/NDesk-dbus/MessageReader.cs	/^		public Array ReadArray (Type elemType)$/;"	m	class:NDesk.DBus.MessageReader
ReadBoolean	lib/csharp/MonoExample/NDesk-dbus/MessageReader.cs	/^		public bool ReadBoolean ()$/;"	m	class:NDesk.DBus.MessageReader
ReadByte	lib/csharp/MonoExample/NDesk-dbus/MessageReader.cs	/^		public byte ReadByte ()$/;"	m	class:NDesk.DBus.MessageReader
ReadDouble	lib/csharp/MonoExample/NDesk-dbus/MessageReader.cs	/^		unsafe public double ReadDouble ()$/;"	m	class:NDesk.DBus.MessageReader
ReadInt16	lib/csharp/MonoExample/NDesk-dbus/MessageReader.cs	/^		unsafe public short ReadInt16 ()$/;"	m	class:NDesk.DBus.MessageReader
ReadInt32	lib/csharp/MonoExample/NDesk-dbus/MessageReader.cs	/^		unsafe public int ReadInt32 ()$/;"	m	class:NDesk.DBus.MessageReader
ReadInt64	lib/csharp/MonoExample/NDesk-dbus/MessageReader.cs	/^		unsafe public long ReadInt64 ()$/;"	m	class:NDesk.DBus.MessageReader
ReadMessage	lib/csharp/MonoExample/NDesk-dbus/Connection.cs	/^		internal Message ReadMessage ()$/;"	m	class:NDesk.DBus.Connection	file:
ReadNull	lib/csharp/MonoExample/NDesk-dbus/MessageReader.cs	/^		public void ReadNull ()$/;"	m	class:NDesk.DBus.MessageReader
ReadObjectPath	lib/csharp/MonoExample/NDesk-dbus/MessageReader.cs	/^		public ObjectPath ReadObjectPath ()$/;"	m	class:NDesk.DBus.MessageReader
ReadPad	lib/csharp/MonoExample/NDesk-dbus/MessageReader.cs	/^		public void ReadPad (int alignment)$/;"	m	class:NDesk.DBus.MessageReader
ReadSignature	lib/csharp/MonoExample/NDesk-dbus/MessageReader.cs	/^		public Signature ReadSignature ()$/;"	m	class:NDesk.DBus.MessageReader
ReadSingle	lib/csharp/MonoExample/NDesk-dbus/MessageReader.cs	/^		unsafe public float ReadSingle ()$/;"	m	class:NDesk.DBus.MessageReader
ReadString	lib/csharp/MonoExample/NDesk-dbus/MessageReader.cs	/^		public string ReadString ()$/;"	m	class:NDesk.DBus.MessageReader
ReadStruct	lib/csharp/MonoExample/NDesk-dbus/MessageReader.cs	/^		public object ReadStruct (Type type)$/;"	m	class:NDesk.DBus.MessageReader
ReadUInt16	lib/csharp/MonoExample/NDesk-dbus/MessageReader.cs	/^		unsafe public ushort ReadUInt16 ()$/;"	m	class:NDesk.DBus.MessageReader
ReadUInt32	lib/csharp/MonoExample/NDesk-dbus/MessageReader.cs	/^		unsafe public uint ReadUInt32 ()$/;"	m	class:NDesk.DBus.MessageReader
ReadUInt64	lib/csharp/MonoExample/NDesk-dbus/MessageReader.cs	/^		unsafe public ulong ReadUInt64 ()$/;"	m	class:NDesk.DBus.MessageReader
ReadValue	lib/csharp/MonoExample/NDesk-dbus/MessageReader.cs	/^		public object ReadValue (DType dtype)$/;"	m	class:NDesk.DBus.MessageReader
ReadValue	lib/csharp/MonoExample/NDesk-dbus/MessageReader.cs	/^		public object ReadValue (Type type)$/;"	m	class:NDesk.DBus.MessageReader
ReadVariant	lib/csharp/MonoExample/NDesk-dbus/MessageReader.cs	/^		object ReadVariant (Signature sig)$/;"	m	class:NDesk.DBus.MessageReader	file:
ReadVariant	lib/csharp/MonoExample/NDesk-dbus/MessageReader.cs	/^		public object ReadVariant ()$/;"	m	class:NDesk.DBus.MessageReader
Reader	lib/csharp/WirelessPanda/Readers/Reader.cs	/^        public Reader(string filename)$/;"	m	class:WirelessPanda.Readers.Reader
Reader	lib/csharp/WirelessPanda/Readers/Reader.cs	/^    public class Reader$/;"	c	namespace:WirelessPanda.Readers
ReaderType	lib/csharp/WirelessPanda/Readers/NetXMLReader.cs	/^        public override string ReaderType$/;"	p	class:WirelessPanda.Readers.NetXMLReader
ReaderType	lib/csharp/WirelessPanda/Readers/Reader.cs	/^        public virtual string ReaderType$/;"	p	class:WirelessPanda.Readers.Reader
ReaderType	lib/csharp/WirelessPanda/Readers/UniversalReader.cs	/^        public override string ReaderType$/;"	p	class:WirelessPanda.Readers.UniversalReader
ReaderType	lib/csharp/WirelessPanda/Readers/csvReader.cs	/^        public override string ReaderType$/;"	p	class:WirelessPanda.Readers.CsvReader
ReaderType	lib/csharp/WirelessPanda/Readers/kismetCsvReader.cs	/^        public override string ReaderType$/;"	p	class:WirelessPanda.Readers.KismetCsvReader
Register	lib/csharp/MonoExample/NDesk-dbus/Bus.cs	/^		void Register ()$/;"	m	class:NDesk.DBus.Bus	file:
Register	lib/csharp/MonoExample/NDesk-dbus/Connection.cs	/^		public void Register (ObjectPath path, object obj)$/;"	m	class:NDesk.DBus.Connection
Register	lib/csharp/MonoExample/NDesk-dbus/Connection.cs	/^		public void Register (string bus_name, ObjectPath path, object obj)$/;"	m	class:NDesk.DBus.Connection
Registered	lib/csharp/MonoExample/NDesk-dbus/ExportObject.cs	/^		public bool Registered$/;"	p	class:NDesk.DBus.ExportObject
RegisteredObjects	lib/csharp/MonoExample/NDesk-dbus/Connection.cs	/^		Dictionary<ObjectPath,BusObject> RegisteredObjects = new Dictionary<ObjectPath,BusObject> ();$/;"	f	class:NDesk.DBus.Connection	file:
ReleaseName	lib/csharp/MonoExample/NDesk-dbus/Bus.cs	/^		public ReleaseNameReply ReleaseName (string name)$/;"	m	class:NDesk.DBus.Bus
ReleaseName	lib/csharp/MonoExample/NDesk-dbus/DBus.cs	/^		ReleaseNameReply ReleaseName (string name);$/;"	m	interface:org.freedesktop.DBus.IBus
ReleaseNameReply	lib/csharp/MonoExample/NDesk-dbus/DBus.cs	/^	public enum ReleaseNameReply : uint$/;"	g	namespace:org.freedesktop.DBus
Released	lib/csharp/MonoExample/NDesk-dbus/DBus.cs	/^		Released = 1,$/;"	e	enum:org.freedesktop.DBus.ReleaseNameReply	file:
ReloadConfig	lib/csharp/MonoExample/NDesk-dbus/DBus.cs	/^		void ReloadConfig ();$/;"	m	interface:org.freedesktop.DBus.IBus
RemoveMatch	lib/csharp/MonoExample/NDesk-dbus/Bus.cs	/^		internal protected override void RemoveMatch (string rule)$/;"	m	class:NDesk.DBus.Bus
RemoveMatch	lib/csharp/MonoExample/NDesk-dbus/Connection.cs	/^		internal protected virtual void RemoveMatch (string rule)$/;"	m	class:NDesk.DBus.Connection
RemoveMatch	lib/csharp/MonoExample/NDesk-dbus/DBus.cs	/^		void RemoveMatch (string rule);$/;"	m	interface:org.freedesktop.DBus.IBus
ReplaceExisting	lib/csharp/MonoExample/NDesk-dbus/DBus.cs	/^		ReplaceExisting = 0x2,$/;"	e	enum:org.freedesktop.DBus.NameFlag	file:
Reply	lib/csharp/MonoExample/NDesk-dbus/PendingCall.cs	/^		public Message Reply$/;"	p	class:NDesk.DBus.PendingCall
ReplyExpected	lib/csharp/MonoExample/NDesk-dbus/Message.cs	/^		public bool ReplyExpected$/;"	p	class:NDesk.DBus.Message
ReplySerial	lib/csharp/MonoExample/NDesk-dbus/Protocol.cs	/^			ReplySerial,$/;"	e	enum:NDesk.DBus.FieldCode	file:
ReplySerial	lib/csharp/MonoExample/NDesk-dbus/Wrapper.cs	/^		public uint ReplySerial;$/;"	f	class:NDesk.DBus.Error
ReplySerial	lib/csharp/MonoExample/NDesk-dbus/Wrapper.cs	/^		public uint ReplySerial;$/;"	f	class:NDesk.DBus.MethodReturn
ReplySignature	lib/csharp/MonoExample/NDesk-dbus/Protocol.cs	/^			ReplySignature, \/\/note: not supported in dbus$/;"	e	enum:NDesk.DBus.FieldCode	file:
ReplySignature	lib/csharp/MonoExample/NDesk-dbus/Wrapper.cs	/^		public Signature ReplySignature;$/;"	f	class:NDesk.DBus.MethodCall
RequestName	lib/csharp/MonoExample/NDesk-dbus/Bus.cs	/^		public RequestNameReply RequestName (string name)$/;"	m	class:NDesk.DBus.Bus
RequestName	lib/csharp/MonoExample/NDesk-dbus/Bus.cs	/^		public RequestNameReply RequestName (string name, NameFlag flags)$/;"	m	class:NDesk.DBus.Bus
RequestName	lib/csharp/MonoExample/NDesk-dbus/DBus.cs	/^		RequestNameReply RequestName (string name, NameFlag flags);$/;"	m	interface:org.freedesktop.DBus.IBus
RequestNameReply	lib/csharp/MonoExample/NDesk-dbus/DBus.cs	/^	public enum RequestNameReply : uint$/;"	g	namespace:org.freedesktop.DBus
ResourceManager	lib/csharp/Example1/Example1/Properties/Resources.Designer.cs	/^        internal static global::System.Resources.ResourceManager ResourceManager {$/;"	p	class:Example1.Properties.Resources
Resources	lib/csharp/Example1/Example1/Properties/Resources.Designer.cs	/^        internal Resources() {$/;"	m	class:Example1.Properties.Resources	file:
Resources	lib/csharp/Example1/Example1/Properties/Resources.Designer.cs	/^    internal class Resources {$/;"	c	namespace:Example1.Properties
Root	lib/csharp/MonoExample/NDesk-dbus/Protocol.cs	/^		public static readonly ObjectPath Root = new ObjectPath ("\/");$/;"	f	class:NDesk.DBus.ObjectPath
Run	lib/csharp/MonoExample/NDesk-dbus/Authentication.cs	/^		public void Run ()$/;"	m	class:NDesk.DBus.Authentication.SaslClient
S0	src/simd-intrinsics.c	1603;"	d	file:
S0	src/simd-intrinsics.c	2165;"	d	file:
S0	src/simd-intrinsics.c	2166;"	d	file:
S0	src/sse-intrinsics.c	1474;"	d	file:
S0	src/sse-intrinsics.c	1854;"	d	file:
S0	src/sse-intrinsics.c	1855;"	d	file:
S1	src/simd-intrinsics.c	1614;"	d	file:
S1	src/simd-intrinsics.c	2177;"	d	file:
S1	src/simd-intrinsics.c	2178;"	d	file:
S1	src/sse-intrinsics.c	1485;"	d	file:
S1	src/sse-intrinsics.c	1866;"	d	file:
S1	src/sse-intrinsics.c	1867;"	d	file:
SBINFILES	src/Makefile	/^SBINFILES       = aireplay-ng$(EXE) airodump-ng$(EXE) airserv-ng$(EXE) \\$/;"	m
SCRIPTS	scripts/Makefile	/^SCRIPTS         = airodump-ng-oui-update$/;"	m
SCRIPTS	scripts/versuck-ng/Makefile	/^SCRIPTS         = versuck-ng$/;"	m
SCRIPTS_LNX	scripts/Makefile	/^SCRIPTS_LNX	= airmon-ng$/;"	m
SENDING_ASSOC	src/wesside-ng.c	75;"	d	file:
SENDING_AUTH	src/wesside-ng.c	72;"	d	file:
SHA1_ALGORITHM_NAME	src/simd-intrinsics.h	139;"	d
SHA1_ALGORITHM_NAME	src/simd-intrinsics.h	141;"	d
SHA1_ALGORITHM_NAME	src/sse-intrinsics.h	107;"	d
SHA1_ALGORITHM_NAME	src/sse-intrinsics.h	110;"	d
SHA1_EXPAND	src/sse-intrinsics.c	898;"	d	file:
SHA1_EXPAND2	src/simd-intrinsics.c	1160;"	d	file:
SHA1_EXPAND2	src/sse-intrinsics.c	1138;"	d	file:
SHA1_EXPAND2a	src/simd-intrinsics.c	1136;"	d	file:
SHA1_EXPAND2a	src/sse-intrinsics.c	1118;"	d	file:
SHA1_EXPAND2b	src/simd-intrinsics.c	1142;"	d	file:
SHA1_EXPAND2b	src/sse-intrinsics.c	1123;"	d	file:
SHA1_EXPAND2c	src/simd-intrinsics.c	1148;"	d	file:
SHA1_EXPAND2c	src/sse-intrinsics.c	1128;"	d	file:
SHA1_EXPAND2d	src/simd-intrinsics.c	1154;"	d	file:
SHA1_EXPAND2d	src/sse-intrinsics.c	1133;"	d	file:
SHA1_F	src/simd-intrinsics.c	1109;"	d	file:
SHA1_F	src/sse-intrinsics.c	873;"	d	file:
SHA1_Final	src/gcrypt-openssl-wrapper.h	45;"	d
SHA1_G	src/simd-intrinsics.c	1113;"	d	file:
SHA1_G	src/simd-intrinsics.c	1116;"	d	file:
SHA1_G	src/sse-intrinsics.c	876;"	d	file:
SHA1_H	src/simd-intrinsics.c	1122;"	d	file:
SHA1_H	src/simd-intrinsics.c	1125;"	d	file:
SHA1_H	src/simd-intrinsics.c	1129;"	d	file:
SHA1_H	src/sse-intrinsics.c	881;"	d	file:
SHA1_H	src/sse-intrinsics.c	886;"	d	file:
SHA1_I	src/simd-intrinsics.c	1134;"	d	file:
SHA1_I	src/sse-intrinsics.c	893;"	d	file:
SHA1_Init	src/gcrypt-openssl-wrapper.h	43;"	d
SHA1_N_STR	src/arch.h	437;"	d
SHA1_N_STR	src/arch.h	439;"	d
SHA1_PARA_DO	src/simd-intrinsics.c	1107;"	d	file:
SHA1_PARA_DO	src/sse-intrinsics.c	871;"	d	file:
SHA1_ROUND	src/sse-intrinsics.c	904;"	d	file:
SHA1_ROUND2	src/simd-intrinsics.c	1214;"	d	file:
SHA1_ROUND2	src/sse-intrinsics.c	1180;"	d	file:
SHA1_ROUND2a	src/simd-intrinsics.c	1166;"	d	file:
SHA1_ROUND2a	src/sse-intrinsics.c	1144;"	d	file:
SHA1_ROUND2b	src/simd-intrinsics.c	1178;"	d	file:
SHA1_ROUND2b	src/sse-intrinsics.c	1153;"	d	file:
SHA1_ROUND2c	src/simd-intrinsics.c	1190;"	d	file:
SHA1_ROUND2c	src/sse-intrinsics.c	1162;"	d	file:
SHA1_ROUND2d	src/simd-intrinsics.c	1202;"	d	file:
SHA1_ROUND2d	src/sse-intrinsics.c	1171;"	d	file:
SHA1_ROUND2x	src/simd-intrinsics.c	1226;"	d	file:
SHA1_ROUND2x	src/sse-intrinsics.c	1190;"	d	file:
SHA1_SSE_NUM_KEYS	src/simd-intrinsics.c	1106;"	d	file:
SHA1_SSE_NUM_KEYS	src/sse-intrinsics.c	870;"	d	file:
SHA1_SSE_PARA	src/arch.h	401;"	d
SHA1_SSE_PARA	src/arch.h	404;"	d
SHA1_SSE_PARA	src/arch.h	408;"	d
SHA1_SSE_PARA	src/arch.h	411;"	d
SHA1_SSE_PARA	src/arch.h	414;"	d
SHA1_SSE_PARA	src/arch.h	417;"	d
SHA1_SSE_type	src/sse-intrinsics.h	106;"	d
SHA1_SSE_type	src/sse-intrinsics.h	109;"	d
SHA1_Update	src/gcrypt-openssl-wrapper.h	44;"	d
SHA256_ALGORITHM_NAME	src/simd-intrinsics.h	148;"	d
SHA256_ALGORITHM_NAME	src/simd-intrinsics.h	167;"	d
SHA256_ALGORITHM_NAME	src/simd-intrinsics.h	170;"	d
SHA256_ALGORITHM_NAME	src/sse-intrinsics.h	129;"	d
SHA256_BUF_SIZ	src/sse-intrinsics.h	131;"	d
SHA256_N_STR	src/arch.h	442;"	d
SHA256_N_STR	src/arch.h	444;"	d
SHA256_PARA_DO	src/simd-intrinsics.c	1666;"	d	file:
SHA256_SSE_PARA	src/sse-intrinsics.h	132;"	d
SHA256_STEP	src/simd-intrinsics.c	1668;"	d	file:
SHA256_STEP0	src/sse-intrinsics.c	1530;"	d	file:
SHA256_STEP_R	src/sse-intrinsics.c	1540;"	d	file:
SHA512_ALGORITHM_NAME	src/simd-intrinsics.h	157;"	d
SHA512_ALGORITHM_NAME	src/simd-intrinsics.h	168;"	d
SHA512_ALGORITHM_NAME	src/simd-intrinsics.h	171;"	d
SHA512_ALGORITHM_NAME	src/sse-intrinsics.h	136;"	d
SHA512_BUF_SIZ	src/sse-intrinsics.h	139;"	d
SHA512_N_STR	src/arch.h	447;"	d
SHA512_N_STR	src/arch.h	449;"	d
SHA512_PARA_DO	src/simd-intrinsics.c	2240;"	d	file:
SHA512_SSE_PARA	src/sse-intrinsics.h	140;"	d
SHA512_STEP	src/simd-intrinsics.c	2250;"	d	file:
SHA512_STEP	src/sse-intrinsics.c	1914;"	d	file:
SHA64GETOUTPOS	src/memory.c	476;"	d	file:
SHA64GETPOS	src/memory.c	475;"	d	file:
SHA64GETPOSne	src/memory.c	479;"	d	file:
SHAGETOUTPOS	src/memory.c	470;"	d	file:
SHAGETPOS	src/memory.c	469;"	d	file:
SHA_ASM	src/sha1-git.c	54;"	d	file:
SHA_BUF_SIZ	src/arch.h	407;"	d
SHA_BUF_SIZ	src/arch.h	452;"	d
SHA_BUF_SIZ	src/arch.h	61;"	d
SHA_CTX	src/gcrypt-openssl-wrapper.h	42;"	d
SHA_DIGEST_LENGTH	src/sha1-git.h	48;"	d
SHA_MIX	src/sha1-git.c	136;"	d	file:
SHA_ROL	src/sha1-git.c	55;"	d	file:
SHA_ROL	src/sha1-git.c	61;"	d	file:
SHA_ROR	src/sha1-git.c	56;"	d	file:
SHA_ROR	src/sha1-git.c	62;"	d	file:
SHA_ROT	src/sha1-git.c	60;"	d	file:
SHA_ROUND	src/sha1-git.c	138;"	d	file:
SHA_SRC	src/sha1-git.c	135;"	d	file:
SIMDCORE	common.mak	/^	SIMDCORE = false$/;"	m
SIMDCORE	common.mak	/^SIMDCORE	= false$/;"	m
SIMDOUT	src/Makefile	/^SIMDOUT		= wpapsk-simd.o$/;"	m
SIMDSHA1body	src/simd-intrinsics.c	/^void SIMDSHA1body(vtype* _data, ARCH_WORD_32 *out, ARCH_WORD_32 *reload_state,$/;"	f
SIMDSHA1body	src/wpapsk.c	115;"	d	file:
SIMDSHA1body	src/wpapsk.c	116;"	d	file:
SIMDSHA256body	src/simd-intrinsics.c	/^void SIMDSHA256body(vtype *data, ARCH_WORD_32 *out, ARCH_WORD_32 *reload_state, unsigned SSEi_flags)$/;"	f
SIMDSHA512body	src/simd-intrinsics.c	/^void SIMDSHA512body(vtype* data, ARCH_WORD_64 *out, ARCH_WORD_64 *reload_state,$/;"	f
SIMD_COEF_32	src/MD5_std.h	108;"	d
SIMD_COEF_32	src/arch.h	320;"	d
SIMD_COEF_32	src/arch.h	323;"	d
SIMD_COEF_32	src/arch.h	326;"	d
SIMD_COEF_32	src/arch.h	329;"	d
SIMD_COEF_32	src/arch.h	62;"	d
SIMD_COEF_32	src/memory.c	459;"	d	file:
SIMD_COEF_32	src/memory.c	465;"	d	file:
SIMD_COEF_32	src/memory.h	65;"	d
SIMD_COEF_32	src/memory.h	68;"	d
SIMD_COEF_32	src/memory.h	71;"	d
SIMD_COEF_32	src/memory.h	74;"	d
SIMD_COEF_32	src/simd-intrinsics.h	54;"	d
SIMD_COEF_64	src/arch.h	321;"	d
SIMD_COEF_64	src/arch.h	324;"	d
SIMD_COEF_64	src/arch.h	327;"	d
SIMD_COEF_64	src/arch.h	330;"	d
SIMD_COEF_64	src/arch.h	63;"	d
SIMD_COEF_64	src/memory.c	462;"	d	file:
SIMD_COEF_64	src/memory.h	66;"	d
SIMD_COEF_64	src/memory.h	69;"	d
SIMD_COEF_64	src/memory.h	72;"	d
SIMD_COEF_64	src/memory.h	75;"	d
SIMD_PARA_MD4	src/arch.h	65;"	d
SIMD_PARA_MD5	src/arch.h	68;"	d
SIMD_PARA_SHA1	src/arch.h	374;"	d
SIMD_PARA_SHA1	src/arch.h	376;"	d
SIMD_PARA_SHA1	src/arch.h	378;"	d
SIMD_PARA_SHA1	src/arch.h	380;"	d
SIMD_PARA_SHA1	src/arch.h	382;"	d
SIMD_PARA_SHA1	src/arch.h	384;"	d
SIMD_PARA_SHA1	src/arch.h	71;"	d
SIMD_PARA_SHA1	src/wpapsk.c	73;"	d	file:
SIMD_PARA_SHA1	src/wpapsk.c	75;"	d	file:
SIMD_PARA_SHA1	src/wpapsk.c	77;"	d	file:
SIMD_PARA_SHA1	src/wpapsk.c	79;"	d	file:
SIMD_PARA_SHA1	src/wpapsk.c	81;"	d	file:
SIMD_PARA_SHA1	src/wpapsk.c	83;"	d	file:
SIMD_PARA_SHA256	src/arch.h	390;"	d
SIMD_PARA_SHA256	src/arch.h	392;"	d
SIMD_PARA_SHA256	src/arch.h	74;"	d
SIMD_PARA_SHA512	src/arch.h	396;"	d
SIMD_PARA_SHA512	src/arch.h	77;"	d
SIMD_TYPE	src/simd-intrinsics.h	101;"	d
SIMD_TYPE	src/simd-intrinsics.h	102;"	d
SIMD_TYPE	src/simd-intrinsics.h	52;"	d
SIMD_TYPE	src/simd-intrinsics.h	53;"	d
SIMD_TYPE	src/simd-intrinsics.h	71;"	d
SIMD_TYPE	src/simd-intrinsics.h	72;"	d
SIMD_TYPE	src/simd-intrinsics.h	74;"	d
SIMD_TYPE	src/simd-intrinsics.h	75;"	d
SIMD_TYPE	src/simd-intrinsics.h	77;"	d
SIMD_TYPE	src/simd-intrinsics.h	78;"	d
SIMD_TYPE	src/simd-intrinsics.h	80;"	d
SIMD_TYPE	src/simd-intrinsics.h	81;"	d
SIMD_TYPE	src/simd-intrinsics.h	83;"	d
SIMD_TYPE	src/simd-intrinsics.h	84;"	d
SIMD_TYPE	src/simd-intrinsics.h	86;"	d
SIMD_TYPE	src/simd-intrinsics.h	87;"	d
SIMD_TYPE	src/simd-intrinsics.h	89;"	d
SIMD_TYPE	src/simd-intrinsics.h	90;"	d
SIMD_TYPE	src/simd-intrinsics.h	92;"	d
SIMD_TYPE	src/simd-intrinsics.h	93;"	d
SIMD_TYPE	src/simd-intrinsics.h	95;"	d
SIMD_TYPE	src/simd-intrinsics.h	96;"	d
SIMD_TYPE	src/simd-intrinsics.h	98;"	d
SIMD_TYPE	src/simd-intrinsics.h	99;"	d
SIMD_TYPE	src/sse-intrinsics.h	116;"	d
SIMD_TYPE	src/sse-intrinsics.h	118;"	d
SIMD_TYPE	src/sse-intrinsics.h	120;"	d
SIMD_TYPE	src/sse-intrinsics.h	122;"	d
SIMDmd4body	src/simd-intrinsics.c	/^void SIMDmd4body(vtype* _data, unsigned int *out, ARCH_WORD_32 *reload_state,$/;"	f
SIMDmd5body	src/simd-intrinsics.c	/^void SIMDmd5body(vtype* _data, unsigned int *out,$/;"	f
SMP_FILES	manpages/Makefile	/^SMP_FILES	= aireplay-ng.8 airmon-ng.8 airodump-ng.8 besside-ng.8 \\$/;"	m
SOCK_STREAM	lib/csharp/MonoExample/NDesk-dbus/UnixNativeTransport.cs	/^		public const short SOCK_STREAM = 1;$/;"	f	class:NDesk.DBus.Transports.UnixSocket
SORT_BY_AUTH	src/airodump-ng.h	85;"	d
SORT_BY_BEACON	src/airodump-ng.h	78;"	d
SORT_BY_BSSID	src/airodump-ng.h	76;"	d
SORT_BY_CHAN	src/airodump-ng.h	81;"	d
SORT_BY_CIPHER	src/airodump-ng.h	84;"	d
SORT_BY_DATA	src/airodump-ng.h	79;"	d
SORT_BY_ENC	src/airodump-ng.h	83;"	d
SORT_BY_ESSID	src/airodump-ng.h	86;"	d
SORT_BY_MBIT	src/airodump-ng.h	82;"	d
SORT_BY_NOTHING	src/airodump-ng.h	75;"	d
SORT_BY_POWER	src/airodump-ng.h	77;"	d
SORT_BY_PRATE	src/airodump-ng.h	80;"	d
SPANTREE	src/crypto.h	63;"	d
SPOOF_MAC	src/wesside-ng.c	74;"	d	file:
SQLITE	common.mak	/^SQLITE		= false$/;"	m
SQLITE	common.mak	/^SQLITE		= true$/;"	m
SQRT_3	src/simd-intrinsics.c	793;"	d	file:
SQRT_3	src/simd-intrinsics.c	819;"	d	file:
SRC_AC	src/Makefile	/^SRC_AC		= aircrack-ng.c crypto.c common.c $(SSEC_INT) $(SRC_PTW)$/;"	m
SRC_CRYPTO	test/cryptounittest/Makefile	/^SRC_CRYPTO	  = $(AC_ROOT)\/src\/crypto.c $(AC_ROOT)\/src\/sha1-git.c $(SSEO_INT) $(AC_ROOT)\/src\/cpuid.o $(AC_ROOT)\/src\/common.o$/;"	m
SRC_DIR	test/cryptounittest/Makefile	/^SRC_DIR		= $(AC_ROOT)\/src$/;"	m
SRC_LINECOUNT	src/Makefile	/^SRC_LINECOUNT	= linecount.o$/;"	m
SRC_PTW	src/Makefile	/^SRC_PTW		= aircrack-ptw-lib.c$/;"	m
SRC_SIMD_CORE	src/Makefile	/^SRC_SIMD_CORE	= simd-intrinsics.c$/;"	m
SRC_SSE_COMMON	src/Makefile	/^SRC_SSE_COMMON	= memory.c wpapsk.c$/;"	m
SRC_SSE_CORE	src/Makefile	/^SRC_SSE_CORE	= sse-intrinsics.c$/;"	m
SSEC_INT	src/Makefile	/^SSEC_INT	= simd-intrinsics.c $(SRC_SSE_COMMON)$/;"	m
SSEC_INT	src/Makefile	/^SSEC_INT	= sse-intrinsics.c $(SRC_SSE_COMMON)$/;"	m
SSEO_INT	src/Makefile	/^SSEO_INT	= simd-intrinsics.o $(OBJS_SSE_COMMON)$/;"	m
SSEO_INT	src/Makefile	/^SSEO_INT	= sse-intrinsics.o $(OBJS_SSE_COMMON)$/;"	m
SSEO_INT	test/cryptounittest/Makefile	/^	SSEO_INT	= $(AC_ROOT)\/src\/simd-intrinsics.o $(AC_ROOT)\/src\/memory.o $(AC_ROOT)\/src\/wpapsk.o$/;"	m
SSEO_INT	test/cryptounittest/Makefile	/^	SSEO_INT	= $(AC_ROOT)\/src\/sse-intrinsics.o $(AC_ROOT)\/src\/memory.o $(AC_ROOT)\/src\/wpapsk.o$/;"	m
SSESHA1body	src/sse-intrinsics.c	/^void SSESHA1body(__m128i* _data, ARCH_WORD_32 *out, ARCH_WORD_32 *reload_state, unsigned SSEi_flags)$/;"	f
SSESHA1body	src/sse-intrinsics.c	/^void SSESHA1body(__m128i* data, ARCH_WORD_32 *out, ARCH_WORD_32 *reload_state, unsigned int SSEi_flags)$/;"	f
SSESHA256body	src/sse-intrinsics.c	/^void SSESHA256body(__m128i *data, ARCH_WORD_32 *out, ARCH_WORD_32 *reload_state, unsigned SSEi_flags)$/;"	f
SSESHA512body	src/sse-intrinsics.c	/^void SSESHA512body(__m128i* data, ARCH_WORD_64 *out, ARCH_WORD_64 *reload_state, unsigned SSEi_flags)$/;"	f
SSESIMD_BIN	src/Makefile	/^SSESIMD_BIN	= wpapsk-simd.o wpapsk-sse.o aircrack-ng-core.o aircrack-ng-simd$(EXE) aircrack-ng-sse$(EXE)$/;"	m
SSE_type	src/sse-intrinsics.h	52;"	d
SSE_type	src/sse-intrinsics.h	53;"	d
SSE_type	src/sse-intrinsics.h	68;"	d
SSE_type	src/sse-intrinsics.h	69;"	d
SSE_type	src/sse-intrinsics.h	71;"	d
SSE_type	src/sse-intrinsics.h	72;"	d
SSE_type	src/sse-intrinsics.h	74;"	d
SSE_type	src/sse-intrinsics.h	75;"	d
SSE_type	src/sse-intrinsics.h	77;"	d
SSE_type	src/sse-intrinsics.h	78;"	d
SSE_type	src/sse-intrinsics.h	80;"	d
SSE_type	src/sse-intrinsics.h	81;"	d
SSEi_2BUF_INPUT	src/simd-intrinsics-load-flags.h	/^	SSEi_2BUF_INPUT              = 0x80,$/;"	e	enum:__anon37
SSEi_2BUF_INPUT	src/sse-intrinsics-load-flags.h	/^	SSEi_2BUF_INPUT=0x40,        \/\/ input array is 2x in size.$/;"	e	enum:__anon43
SSEi_2BUF_INPUT_FIRST_BLK	src/simd-intrinsics-load-flags.h	/^	SSEi_2BUF_INPUT_FIRST_BLK    = 0x100 | SSEi_2BUF_INPUT,$/;"	e	enum:__anon37
SSEi_2BUF_INPUT_FIRST_BLK	src/sse-intrinsics-load-flags.h	/^	SSEi_2BUF_INPUT_FIRST_BLK=(0x40|0x80),  \/\/ input array 2x in size.  This is the first block, so we MUST rotate element 14\/15 if in flat mode.$/;"	e	enum:__anon43
SSEi_4BUF_INPUT	src/simd-intrinsics-load-flags.h	/^	SSEi_4BUF_INPUT              = 0x200,$/;"	e	enum:__anon37
SSEi_4BUF_INPUT	src/sse-intrinsics-load-flags.h	/^	SSEi_4BUF_INPUT=0x100,        \/\/ input array is 4x in size (This is seen in the dynamic type, for sha256. We have 256 byte input buffers there).$/;"	e	enum:__anon43
SSEi_4BUF_INPUT_FIRST_BLK	src/simd-intrinsics-load-flags.h	/^	SSEi_4BUF_INPUT_FIRST_BLK    = 0x400 | SSEi_4BUF_INPUT,$/;"	e	enum:__anon37
SSEi_4BUF_INPUT_FIRST_BLK	src/sse-intrinsics-load-flags.h	/^	SSEi_4BUF_INPUT_FIRST_BLK=(0x100|0x200),  \/\/ input array 4x in size.  This is the first block, so we MUST rotate element 14\/15 if in flat mode.$/;"	e	enum:__anon43
SSEi_CRYPT_SHA224	src/simd-intrinsics-load-flags.h	/^	SSEi_CRYPT_SHA224            = 0x1000,$/;"	e	enum:__anon37
SSEi_CRYPT_SHA224	src/sse-intrinsics-load-flags.h	/^	SSEi_CRYPT_SHA224=0x1000,     \/\/ use SHA224 IV.$/;"	e	enum:__anon43
SSEi_CRYPT_SHA384	src/simd-intrinsics-load-flags.h	/^	SSEi_CRYPT_SHA384            = 0x1000,$/;"	e	enum:__anon37
SSEi_CRYPT_SHA384	src/sse-intrinsics-load-flags.h	/^	SSEi_CRYPT_SHA384=0x1000      \/\/ use SHA384 IV.$/;"	e	enum:__anon43
SSEi_FLAGS	src/simd-intrinsics-load-flags.h	/^} SSEi_FLAGS;$/;"	t	typeref:enum:__anon37
SSEi_FLAGS	src/sse-intrinsics-load-flags.h	/^} SSEi_FLAGS;$/;"	t	typeref:enum:__anon43
SSEi_FLAT_IN	src/simd-intrinsics-load-flags.h	/^	SSEi_FLAT_IN                 = 0x1,$/;"	e	enum:__anon37
SSEi_FLAT_IN	src/sse-intrinsics-load-flags.h	/^	SSEi_FLAT_IN=0x1,            \/\/ input is an array of 4 64 (2 128 for 64 bit crypts) byte 'flat' values, instead of a properly SSE 'mixed' 64 uint32's.$/;"	e	enum:__anon43
SSEi_FLAT_OUT	src/simd-intrinsics-load-flags.h	/^	SSEi_FLAT_OUT                = 0x4,$/;"	e	enum:__anon37
SSEi_FLAT_RELOAD_SWAPLAST	src/simd-intrinsics-load-flags.h	/^	SSEi_FLAT_RELOAD_SWAPLAST    = 0x800,$/;"	e	enum:__anon37
SSEi_MIXED_IN	src/simd-intrinsics-load-flags.h	/^	SSEi_MIXED_IN                = 0x0,$/;"	e	enum:__anon37
SSEi_MIXED_IN	src/sse-intrinsics-load-flags.h	/^	SSEi_MIXED_IN=0x0,           \/\/ input is an array of 16 __m128i ints that are properly SSE interleaved.  This is for 4 passwords (or 2 for 64 bit crypts). The data will be copied into a on the stack workspace$/;"	e	enum:__anon43
SSEi_OUTPUT_AS_2BUF_INP_FMT	src/simd-intrinsics-load-flags.h	/^	SSEi_OUTPUT_AS_2BUF_INP_FMT  = 0x2000 | SSEi_OUTPUT_AS_INP_FMT$/;"	e	enum:__anon37
SSEi_OUTPUT_AS_INP_FMT	src/simd-intrinsics-load-flags.h	/^	SSEi_OUTPUT_AS_INP_FMT       = 0x20,$/;"	e	enum:__anon37
SSEi_OUTPUT_AS_INP_FMT	src/sse-intrinsics-load-flags.h	/^	SSEi_OUTPUT_AS_INP_FMT=0x8,  \/\/ Write final output, using 'INPUT' format. Will not matter, unless PARA > 1$/;"	e	enum:__anon43
SSEi_RELOAD	src/simd-intrinsics-load-flags.h	/^	SSEi_RELOAD                  = 0x8,$/;"	e	enum:__anon37
SSEi_RELOAD	src/sse-intrinsics-load-flags.h	/^	SSEi_RELOAD=0x2,             \/\/ crypt key will be results of last crypt$/;"	e	enum:__anon43
SSEi_RELOAD_INP_FMT	src/simd-intrinsics-load-flags.h	/^	SSEi_RELOAD_INP_FMT          = 0x10 | SSEi_RELOAD,$/;"	e	enum:__anon37
SSEi_RELOAD_INP_FMT	src/sse-intrinsics-load-flags.h	/^	SSEi_RELOAD_INP_FMT=0x6,     \/\/ (note contains SSEi_RELOAD bit also, it is 2&4) crypt key will be results of last crypt, however, it is in 'INPUT' format. Will not matter, unless PARA > 1$/;"	e	enum:__anon43
SSEi_REVERSE_STEPS	src/simd-intrinsics-load-flags.h	/^	SSEi_REVERSE_STEPS           = 0x40,$/;"	e	enum:__anon37
SSEi_SKIP_FINAL_ADD	src/sse-intrinsics-load-flags.h	/^	SSEi_SKIP_FINAL_ADD=0x20,    \/\/ do NOT do a=a+init. ONLY valid if not doing reload, AND if format did out[0]-=init in binary.$/;"	e	enum:__anon43
SSEi_SWAP_FINAL	src/sse-intrinsics-load-flags.h	/^	SSEi_SWAP_FINAL=0x10,        \/\/ swap results into machine native endianity.  Normally, results are left in crypt endianity$/;"	e	enum:__anon43
SSEmd4body	src/sse-intrinsics.c	/^void SSEmd4body(__m128i* _data, unsigned int * out, ARCH_WORD_32 *reload_state, unsigned SSEi_flags)$/;"	f
SSEmd5body	src/sse-intrinsics.c	/^void SSEmd5body(__m128i* _data, unsigned int * out, ARCH_WORD_32 *reload_state, unsigned SSEi_flags)$/;"	f
STATE_ATTACK	src/besside-ng.c	/^	STATE_ATTACK,$/;"	e	enum:__anon15	file:
STATE_DONE	src/besside-ng.c	/^	STATE_DONE,$/;"	e	enum:__anon15	file:
STATE_SCAN	src/besside-ng.c	/^	STATE_SCAN = 0,$/;"	e	enum:__anon15	file:
STATIONS_DATATABLE	lib/csharp/WirelessPanda/Readers/Reader.cs	/^        public const string STATIONS_DATATABLE = "Stations";$/;"	f	class:WirelessPanda.Readers.Reader
STD_FIELD	src/airodump-ng.h	53;"	d
STD_OPN	src/airodump-ng.h	48;"	d
STD_QOS	src/airodump-ng.h	70;"	d
STD_WEP	src/airodump-ng.h	49;"	d
STD_WPA	src/airodump-ng.h	50;"	d
STD_WPA2	src/airodump-ng.h	51;"	d
STRINGIZE	src/simd-intrinsics.h	68;"	d
STRINGIZE	src/sse-intrinsics.h	65;"	d
STRINGIZE2	src/simd-intrinsics.h	67;"	d
STRINGIZE2	src/sse-intrinsics.h	64;"	d
STR_VALUE	src/arch.h	422;"	d
ST_info	src/airbase-ng.c	/^struct ST_info$/;"	s	file:
ST_info	src/aircrack-ng.h	/^struct ST_info$/;"	s
ST_info	src/airodump-ng.h	/^struct ST_info$/;"	s
ST_info	src/ivstools.c	/^struct ST_info$/;"	s	file:
SUCCESS	src/aircrack-ng.h	50;"	d
SWAP	src/common.h	51;"	d
SWAP32	src/common.h	53;"	d
SWAP_ENDIAN	src/sse-intrinsics.c	179;"	d	file:
SWAP_ENDIAN	src/sse-intrinsics.c	184;"	d	file:
SWAP_ENDIAN64	src/sse-intrinsics.c	181;"	d	file:
SWAP_ENDIAN64	src/sse-intrinsics.c	189;"	d	file:
SYSDEVICEDIR	src/osdep/tap-win32/common.h	72;"	d
SYSTEM_BUS_ADDRESS	lib/csharp/MonoExample/NDesk-dbus/Address.cs	/^		const string SYSTEM_BUS_ADDRESS = "unix:path=\/var\/run\/dbus\/system_bus_socket";$/;"	f	class:NDesk.DBus.Address	file:
SYSTEM_IDENTIFIER	lib/csharp/MonoExample/NDesk-dbus/Introspection.cs	/^		const string SYSTEM_IDENTIFIER = "http:\/\/www.freedesktop.org\/standards\/dbus\/1.0\/introspect.dtd";$/;"	f	class:NDesk.DBus.Introspector	file:
S_ASSOCIATED	src/easside-ng.c	/^	S_ASSOCIATED$/;"	e	enum:__anon32	file:
S_CMD_INET_CHECK	src/easside.h	11;"	d
S_CMD_PACKET	src/easside.h	12;"	d
S_DEFAULT_PORT	src/easside.h	9;"	d
S_DEFAULT_UDP_PORT	src/easside.h	10;"	d
S_HELLO_LEN	src/easside.h	13;"	d
S_LLC_SNAP	src/aircrack-ng.h	117;"	d
S_LLC_SNAP	src/crypto.h	50;"	d
S_LLC_SNAP	src/easside-ng.c	57;"	d	file:
S_LLC_SNAP	src/wesside-ng.c	81;"	d	file:
S_LLC_SNAP_ARP	src/aircrack-ng.h	118;"	d
S_LLC_SNAP_ARP	src/crypto.h	51;"	d
S_LLC_SNAP_ARP	src/easside-ng.c	58;"	d	file:
S_LLC_SNAP_ARP	src/wesside-ng.c	82;"	d	file:
S_LLC_SNAP_CDP	src/crypto.h	55;"	d
S_LLC_SNAP_IP	src/aircrack-ng.h	119;"	d
S_LLC_SNAP_IP	src/crypto.h	53;"	d
S_LLC_SNAP_IP	src/easside-ng.c	59;"	d	file:
S_LLC_SNAP_IP	src/wesside-ng.c	83;"	d	file:
S_LLC_SNAP_SPANTREE	src/crypto.h	54;"	d
S_LLC_SNAP_WLCCP	src/crypto.h	52;"	d
S_MCAST	src/easside-ng.c	56;"	d	file:
S_MIN_RTO	src/easside-ng.c	62;"	d	file:
S_MTU	src/easside-ng.c	55;"	d	file:
S_OWN_LOG	src/easside-ng.c	61;"	d	file:
S_PRGA_LOG	src/easside-ng.c	60;"	d	file:
S_SEARCHING	src/easside-ng.c	/^	S_SEARCHING = 0,$/;"	e	enum:__anon32	file:
S_SENDASSOC	src/easside-ng.c	/^	S_SENDASSOC,$/;"	e	enum:__anon32	file:
S_SENDAUTH	src/easside-ng.c	/^	S_SENDAUTH,$/;"	e	enum:__anon32	file:
SaslClient	lib/csharp/MonoExample/NDesk-dbus/Authentication.cs	/^		protected SaslClient ()$/;"	m	class:NDesk.DBus.Authentication.SaslClient
SaslClient	lib/csharp/MonoExample/NDesk-dbus/Authentication.cs	/^		public SaslClient (Connection conn)$/;"	m	class:NDesk.DBus.Authentication.SaslClient
SaslClient	lib/csharp/MonoExample/NDesk-dbus/Authentication.cs	/^	class SaslClient$/;"	c	namespace:NDesk.DBus.Authentication
Send	lib/csharp/MonoExample/NDesk-dbus/Connection.cs	/^		internal uint Send (Message msg)$/;"	m	class:NDesk.DBus.Connection	file:
SendMethodCall	lib/csharp/MonoExample/NDesk-dbus/BusObject.cs	/^		public object SendMethodCall (string iface, string member, string inSigStr, MessageWriter writer, Type retType, out Exception exception)$/;"	m	class:NDesk.DBus.BusObject
SendSignal	lib/csharp/MonoExample/NDesk-dbus/BusObject.cs	/^		public void SendSignal (string iface, string member, string inSigStr, MessageWriter writer, Type retType, out Exception exception)$/;"	m	class:NDesk.DBus.BusObject
SendWithReply	lib/csharp/MonoExample/NDesk-dbus/Connection.cs	/^		internal PendingCall SendWithReply (Message msg)$/;"	m	class:NDesk.DBus.Connection	file:
SendWithReplyAndBlock	lib/csharp/MonoExample/NDesk-dbus/Connection.cs	/^		internal Message SendWithReplyAndBlock (Message msg)$/;"	m	class:NDesk.DBus.Connection	file:
Sender	lib/csharp/MonoExample/NDesk-dbus/MatchRule.cs	/^		public string Sender;$/;"	f	class:NDesk.DBus.MatchRule
Sender	lib/csharp/MonoExample/NDesk-dbus/Protocol.cs	/^			Sender,$/;"	e	enum:NDesk.DBus.FieldCode	file:
Sender	lib/csharp/MonoExample/NDesk-dbus/Wrapper.cs	/^		public string Sender;$/;"	f	class:NDesk.DBus.MethodCall
Sender	lib/csharp/MonoExample/NDesk-dbus/Wrapper.cs	/^		public string Sender;$/;"	f	class:NDesk.DBus.Signal
Serial	lib/csharp/MonoExample/NDesk-dbus/Protocol.cs	/^		public uint Serial;$/;"	f	struct:NDesk.DBus.Header
ServerHandler	scripts/dcrack.py	/^class ServerHandler(SimpleHTTPRequestHandler):$/;"	c
ServerInformation	lib/csharp/MonoExample/NDesk-dbus/Notifications.cs	/^	public struct ServerInformation$/;"	s	namespace:org.freedesktop
ServerState	lib/csharp/MonoExample/NDesk-dbus/Authentication.cs	/^	enum ServerState$/;"	g	namespace:NDesk.DBus.Authentication
Session	lib/csharp/MonoExample/NDesk-dbus/Address.cs	/^		public static string Session$/;"	p	class:NDesk.DBus.Address
Session	lib/csharp/MonoExample/NDesk-dbus/Bus.cs	/^		public static Bus Session$/;"	p	class:NDesk.DBus.Bus
Set	lib/csharp/MonoExample/NDesk-dbus/DBus.cs	/^		void Set (string @interface, string propname, object value);$/;"	m	interface:org.freedesktop.DBus.Properties
SetHeaderData	lib/csharp/MonoExample/NDesk-dbus/Message.cs	/^		public void SetHeaderData (byte[] data)$/;"	m	class:NDesk.DBus.Message
Settings	lib/csharp/Example1/Example1/Properties/Settings.Designer.cs	/^    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {$/;"	c	namespace:Example1.Properties
Signal	lib/csharp/MonoExample/NDesk-dbus/Protocol.cs	/^		Signal,$/;"	e	enum:NDesk.DBus.MessageType	file:
Signal	lib/csharp/MonoExample/NDesk-dbus/Wrapper.cs	/^		public Signal (Message message)$/;"	m	class:NDesk.DBus.Signal
Signal	lib/csharp/MonoExample/NDesk-dbus/Wrapper.cs	/^		public Signal (ObjectPath path, string @interface, string member)$/;"	m	class:NDesk.DBus.Signal
Signal	lib/csharp/MonoExample/NDesk-dbus/Wrapper.cs	/^	class Signal$/;"	c	namespace:NDesk.DBus
Signature	lib/csharp/MonoExample/NDesk-dbus/Message.cs	/^		public Signature Signature$/;"	p	class:NDesk.DBus.Message
Signature	lib/csharp/MonoExample/NDesk-dbus/Protocol.cs	/^			Signature,$/;"	e	enum:NDesk.DBus.FieldCode	file:
Signature	lib/csharp/MonoExample/NDesk-dbus/Signature.cs	/^		Signature = (byte)'g',$/;"	e	enum:NDesk.DBus.DType	file:
Signature	lib/csharp/MonoExample/NDesk-dbus/Signature.cs	/^		internal Signature (DType value)$/;"	m	struct:NDesk.DBus.Signature
Signature	lib/csharp/MonoExample/NDesk-dbus/Signature.cs	/^		internal Signature (DType[] value)$/;"	m	struct:NDesk.DBus.Signature
Signature	lib/csharp/MonoExample/NDesk-dbus/Signature.cs	/^		public Signature (byte[] value)$/;"	m	struct:NDesk.DBus.Signature
Signature	lib/csharp/MonoExample/NDesk-dbus/Signature.cs	/^		public Signature (string value)$/;"	m	struct:NDesk.DBus.Signature
Signature	lib/csharp/MonoExample/NDesk-dbus/Signature.cs	/^	struct Signature$/;"	s	namespace:NDesk.DBus
Signature	lib/csharp/MonoExample/NDesk-dbus/Wrapper.cs	/^		public Signature Signature;$/;"	f	class:NDesk.DBus.MethodCall
Single	lib/csharp/MonoExample/NDesk-dbus/Signature.cs	/^		Single = (byte)'f', \/\/This is not yet supported!$/;"	e	enum:NDesk.DBus.DType	file:
SliceSize	contrib/commview/commview.c	/^        int SliceSize;          \/\/ Truncated packet size?$/;"	m	struct:CV_Header	file:
SocketHandle	lib/csharp/MonoExample/NDesk-dbus/Transport.cs	/^		public long SocketHandle;$/;"	f	class:NDesk.DBus.Transports.Transport
SocketTransport	lib/csharp/MonoExample/NDesk-dbus/SocketTransport.cs	/^	class SocketTransport : Transport$/;"	c	namespace:NDesk.DBus.Transports
SpecVersion	lib/csharp/MonoExample/NDesk-dbus/Notifications.cs	/^		public string SpecVersion;$/;"	f	struct:org.freedesktop.ServerInformation
Speed	lib/csharp/WirelessPanda/Coordinates.cs	/^        public double Speed$/;"	p	class:WirelessPanda.Coordinates
StartReply	lib/csharp/MonoExample/NDesk-dbus/DBus.cs	/^	public enum StartReply : uint$/;"	g	namespace:org.freedesktop.DBus
StartServiceByName	lib/csharp/MonoExample/NDesk-dbus/Bus.cs	/^		public StartReply StartServiceByName (string name)$/;"	m	class:NDesk.DBus.Bus
StartServiceByName	lib/csharp/MonoExample/NDesk-dbus/Bus.cs	/^		public StartReply StartServiceByName (string name, uint flags)$/;"	m	class:NDesk.DBus.Bus
StartServiceByName	lib/csharp/MonoExample/NDesk-dbus/DBus.cs	/^		StartReply StartServiceByName (string name, uint flags);$/;"	m	interface:org.freedesktop.DBus.IBus
Starter	lib/csharp/MonoExample/NDesk-dbus/Address.cs	/^		public static string Starter$/;"	p	class:NDesk.DBus.Address
Starter	lib/csharp/MonoExample/NDesk-dbus/Bus.cs	/^		public static Bus Starter$/;"	p	class:NDesk.DBus.Bus
StarterBusType	lib/csharp/MonoExample/NDesk-dbus/Address.cs	/^		public static string StarterBusType$/;"	p	class:NDesk.DBus.Address
Station	lib/csharp/WirelessPanda/Station.cs	/^    public class Station : WirelessDevice, IEquatable<Station>$/;"	c	namespace:WirelessPanda
StationMAC	lib/csharp/WirelessPanda/Station.cs	/^        public string StationMAC$/;"	p	class:WirelessPanda.Station
Stations	lib/csharp/WirelessPanda/Readers/Reader.cs	/^        public virtual Station[] Stations$/;"	p	class:WirelessPanda.Readers.Reader
Stations	lib/csharp/WirelessPanda/Readers/UniversalReader.cs	/^        public override Station[] Stations$/;"	p	class:WirelessPanda.Readers.UniversalReader
Stream	lib/csharp/MonoExample/NDesk-dbus/Transport.cs	/^		public Stream Stream;$/;"	f	class:NDesk.DBus.Transports.Transport
String	lib/csharp/MonoExample/NDesk-dbus/Signature.cs	/^		String = (byte)'s',$/;"	e	enum:NDesk.DBus.DType	file:
StringToMessageType	lib/csharp/MonoExample/NDesk-dbus/MessageFilter.cs	/^		public static MessageType StringToMessageType (string text)$/;"	m	class:NDesk.DBus.MessageFilter
Struct	lib/csharp/MonoExample/NDesk-dbus/Signature.cs	/^		Struct = (byte)'r',$/;"	e	enum:NDesk.DBus.DType	file:
StructBegin	lib/csharp/MonoExample/NDesk-dbus/Signature.cs	/^		StructBegin = (byte)'(',$/;"	e	enum:NDesk.DBus.DType	file:
StructEnd	lib/csharp/MonoExample/NDesk-dbus/Signature.cs	/^		StructEnd = (byte)')',$/;"	e	enum:NDesk.DBus.DType	file:
Success	lib/csharp/MonoExample/NDesk-dbus/DBus.cs	/^		Success = 1,$/;"	e	enum:org.freedesktop.DBus.StartReply	file:
System	lib/csharp/MonoExample/NDesk-dbus/Address.cs	/^		public static string System$/;"	p	class:NDesk.DBus.Address
System	lib/csharp/MonoExample/NDesk-dbus/Bus.cs	/^		public static Bus System$/;"	p	class:NDesk.DBus.Bus
T	src/airodump-ng.c	3395;"	d	file:
T	src/airodump-ng.c	3412;"	d	file:
TAPSUFFIX	src/osdep/tap-win32/common.h	74;"	d
TAP_COMPONENT_ID	src/osdep/tap-win32/common.h	82;"	d
TAP_CONTROL_CODE	src/osdep/tap-win32/common.h	39;"	d
TAP_IOCTL_CONFIG_DHCP_MASQ	src/osdep/tap-win32/common.h	50;"	d
TAP_IOCTL_CONFIG_DHCP_SET_OPT	src/osdep/tap-win32/common.h	52;"	d
TAP_IOCTL_CONFIG_POINT_TO_POINT	src/osdep/tap-win32/common.h	48;"	d
TAP_IOCTL_CONFIG_TUN	src/osdep/tap-win32/common.h	57;"	d
TAP_IOCTL_GET_INFO	src/osdep/tap-win32/common.h	47;"	d
TAP_IOCTL_GET_LOG_LINE	src/osdep/tap-win32/common.h	51;"	d
TAP_IOCTL_GET_MAC	src/osdep/tap-win32/common.h	44;"	d
TAP_IOCTL_GET_MTU	src/osdep/tap-win32/common.h	46;"	d
TAP_IOCTL_GET_VERSION	src/osdep/tap-win32/common.h	45;"	d
TAP_IOCTL_SET_MEDIA_STATUS	src/osdep/tap-win32/common.h	49;"	d
TCPDUMP_CIGAM	src/pcap.h	43;"	d
TCPDUMP_MAGIC	src/osdep/osdep.h	55;"	d
TCPDUMP_MAGIC	src/osdep/osdep.h	56;"	d
TCPDUMP_MAGIC	src/pcap.h	42;"	d
TCPDUMP_MAGIC	src/wesside-ng.c	79;"	d	file:
TESTBYTES	src/aircrack-ptw-lib.c	49;"	d	file:
TESTFILES	test/cryptounittest/Makefile	/^TESTFILES        = test-encrypt-wep$(EXE) test-calc-pmk$(EXE) test-calc-mic$(EXE) test-calc-ptk$(EXE) test-encrypt-ccmp$(EXE) test-decrypt-ccmp$(EXE) test-calc-4pmk$(EXE)$/;"	m
TEST_DIR	src/Makefile	/^TEST_DIR	= $(AC_ROOT)\/test$/;"	m
TEST_DIR	test/Makefile	/^TEST_DIR	= $(AC_ROOT)\/test$/;"	m
TEST_MAX_IVS	src/aircrack-ng.h	66;"	d
TEST_MIN_IVS	src/aircrack-ng.h	65;"	d
TEXT_BLACK	src/airodump-ng.h	99;"	d
TEXT_BLINK	src/airodump-ng.h	93;"	d
TEXT_BLUE	src/airodump-ng.h	103;"	d
TEXT_BRIGHT	src/airodump-ng.h	90;"	d
TEXT_CYAN	src/airodump-ng.h	105;"	d
TEXT_DIM	src/airodump-ng.h	91;"	d
TEXT_GREEN	src/airodump-ng.h	101;"	d
TEXT_HIDDEN	src/airodump-ng.h	95;"	d
TEXT_MAGENTA	src/airodump-ng.h	104;"	d
TEXT_MAX_COLOR	src/airodump-ng.h	108;"	d
TEXT_MAX_STYLE	src/airodump-ng.h	97;"	d
TEXT_RED	src/airodump-ng.h	100;"	d
TEXT_RESET	src/airodump-ng.h	89;"	d
TEXT_REVERSE	src/airodump-ng.h	94;"	d
TEXT_UNDERLINE	src/airodump-ng.h	92;"	d
TEXT_WHITE	src/airodump-ng.h	106;"	d
TEXT_YELLOW	src/airodump-ng.h	102;"	d
TID_TO_WME_AC	src/include/ieee80211.h	281;"	d
TIME_STR_LENGTH	src/airodump-ng.c	4094;"	d	file:
TIME_STR_LENGTH	src/airodump-ng.c	4607;"	d	file:
TI_MTU	src/airbase-ng.c	91;"	d	file:
TK16	src/crypto.c	1100;"	d	file:
TOOL_PREFIX	common.mak	/^TOOL_PREFIX	=$/;"	m
TSTP_DAY	src/airodump-ng.c	3012;"	d	file:
TSTP_HOUR	src/airodump-ng.c	3011;"	d	file:
TSTP_MIN	src/airodump-ng.c	3010;"	d	file:
TSTP_SEC	src/airodump-ng.c	3009;"	d	file:
TYPE_ARP	src/crypto.h	58;"	d
TYPE_IP	src/crypto.h	59;"	d
T_0_15	src/sha1-git.c	143;"	d	file:
T_16_19	src/sha1-git.c	144;"	d	file:
T_20_39	src/sha1-git.c	145;"	d	file:
T_40_59	src/sha1-git.c	146;"	d	file:
T_60_79	src/sha1-git.c	147;"	d	file:
TickCount	contrib/commview/commview.c	/^        unsigned int TickCount; \/\/ GetTickCount() \/ 1000 at time of packet$/;"	m	struct:CV_Header	file:
TkipSbox	src/crypto.c	/^const short TkipSbox[2][256]=$/;"	v
ToArray	lib/csharp/MonoExample/NDesk-dbus/MessageWriter.cs	/^		public byte[] ToArray ()$/;"	m	class:NDesk.DBus.MessageWriter
ToHex	lib/csharp/MonoExample/NDesk-dbus/Authentication.cs	/^		static public string ToHex (byte[] input)$/;"	m	class:NDesk.DBus.Authentication.SaslClient
ToString	lib/csharp/MonoExample/NDesk-dbus/Address.cs	/^		public override string ToString ()$/;"	m	class:NDesk.DBus.AddressEntry
ToString	lib/csharp/MonoExample/NDesk-dbus/MatchRule.cs	/^		public override string ToString ()$/;"	m	class:NDesk.DBus.MatchRule
ToString	lib/csharp/MonoExample/NDesk-dbus/Protocol.cs	/^		public override string ToString ()$/;"	m	class:NDesk.DBus.ObjectPath
ToString	lib/csharp/MonoExample/NDesk-dbus/Signature.cs	/^		public override string ToString ()$/;"	m	struct:NDesk.DBus.Signature
ToString	lib/csharp/WirelessPanda/Coordinates.cs	/^        public override string ToString()$/;"	m	class:WirelessPanda.Coordinates
ToType	lib/csharp/MonoExample/NDesk-dbus/Signature.cs	/^		public Type ToType ()$/;"	m	struct:NDesk.DBus.Signature
ToType	lib/csharp/MonoExample/NDesk-dbus/Signature.cs	/^		public Type ToType (ref int pos)$/;"	m	struct:NDesk.DBus.Signature
ToTypes	lib/csharp/MonoExample/NDesk-dbus/Signature.cs	/^		public Type[] ToTypes ()$/;"	m	struct:NDesk.DBus.Signature
ToggleSignal	lib/csharp/MonoExample/NDesk-dbus/BusObject.cs	/^		public void ToggleSignal (string iface, string member, Delegate dlg, bool adding)$/;"	m	class:NDesk.DBus.BusObject
Total	lib/csharp/WirelessPanda/AccessPoint.cs	/^        public ulong Total$/;"	p	class:WirelessPanda.AccessPoint
TotalFrames	lib/csharp/WirelessPanda/WirelessDevice.cs	/^        public ulong TotalFrames$/;"	p	class:WirelessPanda.WirelessDevice
Transport	lib/csharp/MonoExample/NDesk-dbus/Connection.cs	/^		internal Transport Transport {$/;"	p	class:NDesk.DBus.Connection
Transport	lib/csharp/MonoExample/NDesk-dbus/Transport.cs	/^	abstract class Transport$/;"	c	namespace:NDesk.DBus.Transports
TsfTimer	contrib/airpcap/airpcap.c	/^	u_int64_t	TsfTimer;$/;"	m	struct:_PPI_FIELD_802_11_COMMON	file:
TsfTimer	src/osdep/airpcap.c	/^	u_int64_t	TsfTimer;$/;"	m	struct:_PPI_FIELD_802_11_COMMON	file:
TypeCodeToDType	lib/csharp/MonoExample/NDesk-dbus/Signature.cs	/^		internal static DType TypeCodeToDType (TypeCode typeCode)$/;"	m	struct:NDesk.DBus.Signature
TypeImplementer	lib/csharp/MonoExample/NDesk-dbus/TypeImplementer.cs	/^	static class TypeImplementer$/;"	c	namespace:NDesk.DBus
TypeToDType	lib/csharp/MonoExample/NDesk-dbus/Signature.cs	/^		internal static DType TypeToDType (Type type)$/;"	m	struct:NDesk.DBus.Signature
UDP_PACKET	src/packetforge-ng.c	56;"	d	file:
UInt16	lib/csharp/MonoExample/NDesk-dbus/Signature.cs	/^		UInt16 = (byte)'q',$/;"	e	enum:NDesk.DBus.DType	file:
UInt32	lib/csharp/MonoExample/NDesk-dbus/Signature.cs	/^		UInt32 = (byte)'u',$/;"	e	enum:NDesk.DBus.DType	file:
UInt64	lib/csharp/MonoExample/NDesk-dbus/Signature.cs	/^		UInt64 = (byte)'t',$/;"	e	enum:NDesk.DBus.DType	file:
UKNOWN_FRAME_CLOAKING_STATUS	src/airdecloak-ng.h	59;"	d
UNUSED	contrib/peek/omnipeek.c	15;"	d	file:
UNUSED	contrib/peek/omnipeek.c	17;"	d	file:
UNUSED	contrib/peek/omnipeek.c	19;"	d	file:
UNUSED	src/besside-ng.c	69;"	d	file:
UNUSED	src/besside-ng.c	71;"	d	file:
UNUSED	src/besside-ng.c	73;"	d	file:
USERDEVICEDIR	src/osdep/tap-win32/common.h	73;"	d
USERMODEDEVICEDIR	src/osdep/tap-win32/common.h	71;"	d
USE_AMD64_RC4_OPTIMIZED	src/aircrack-ptw-lib.c	124;"	d	file:
USE_IV	src/aircrack-ng.c	131;"	d	file:
Unescape	lib/csharp/MonoExample/NDesk-dbus/Address.cs	/^		static string Unescape (string str)$/;"	m	class:NDesk.DBus.AddressEntry	file:
UniqueName	lib/csharp/MonoExample/NDesk-dbus/Bus.cs	/^		public string UniqueName$/;"	p	class:NDesk.DBus.Bus
UniversalReader	lib/csharp/WirelessPanda/Readers/UniversalReader.cs	/^        public UniversalReader(string filename) : base(filename) { }$/;"	m	class:WirelessPanda.Readers.UniversalReader
UniversalReader	lib/csharp/WirelessPanda/Readers/UniversalReader.cs	/^    public class UniversalReader : Reader$/;"	c	namespace:WirelessPanda.Readers
UnixNativeTransport	lib/csharp/MonoExample/NDesk-dbus/UnixNativeTransport.cs	/^	class UnixNativeTransport : UnixTransport$/;"	c	namespace:NDesk.DBus.Transports
UnixSocket	lib/csharp/MonoExample/NDesk-dbus/UnixNativeTransport.cs	/^		public UnixSocket ()$/;"	m	class:NDesk.DBus.Transports.UnixSocket
UnixSocket	lib/csharp/MonoExample/NDesk-dbus/UnixNativeTransport.cs	/^		public UnixSocket (int handle)$/;"	m	class:NDesk.DBus.Transports.UnixSocket
UnixSocket	lib/csharp/MonoExample/NDesk-dbus/UnixNativeTransport.cs	/^	class UnixSocket$/;"	c	namespace:NDesk.DBus.Transports
UnixToDateTime	lib/csharp/MonoExample/NDesk-dbus/Authentication.cs	/^		public static DateTime UnixToDateTime (long time)$/;"	m	class:NDesk.DBus.Authentication.SaslClient
UnixTransport	lib/csharp/MonoExample/NDesk-dbus/UnixTransport.cs	/^	abstract class UnixTransport : Transport$/;"	c	namespace:NDesk.DBus.Transports
Unknown	contrib/commview/commview.c	/^        int Unknown;            \/\/ Not sure what this is.$/;"	m	struct:CV_Header	file:
Unknown	lib/csharp/WirelessPanda/Readers/csvReader.cs	/^            Unknown$/;"	e	enum:WirelessPanda.Readers.CsvReader.CSVFileFormat	file:
Unknown2	contrib/commview/commview.c	/^        char Unknown2[6]; \/\/ Unknown$/;"	m	struct:CV_Header2	file:
Unknown3	contrib/commview/commview.c	/^        char Unknown3[6]; \/\/ Unknown$/;"	m	struct:CV_Header2	file:
Unregister	lib/csharp/MonoExample/NDesk-dbus/Connection.cs	/^		public object Unregister (ObjectPath path)$/;"	m	class:NDesk.DBus.Connection
Unregister	lib/csharp/MonoExample/NDesk-dbus/Connection.cs	/^		public object Unregister (string bus_name, ObjectPath path)$/;"	m	class:NDesk.DBus.Connection
VALID_CHAR	src/aircrack-ng.c	588;"	d	file:
VALID_CHAR	src/aircrack-ng.c	772;"	d	file:
VALID_FRAME_UNCLOAKED	src/airdecloak-ng.h	60;"	d
VALID_SEP	src/aircrack-ng.c	590;"	d	file:
VALID_SEP	src/aircrack-ng.c	773;"	d	file:
VCMOV_EMULATED	src/pseudo_intrinsics.h	192;"	d
VCMOV_EMULATED	src/pseudo_intrinsics.h	263;"	d
VCMOV_EMULATED	src/pseudo_intrinsics.h	334;"	d
VCMOV_EMULATED	src/pseudo_intrinsics.h	441;"	d
VLOADU_EMULATED	src/pseudo_intrinsics.h	151;"	d
VLOADU_EMULATED	src/pseudo_intrinsics.h	93;"	d
VS32	src/simd-intrinsics.c	71;"	d	file:
VS64	src/simd-intrinsics.c	72;"	d	file:
VSTOREU_EMULATED	src/pseudo_intrinsics.h	112;"	d
VSTOREU_EMULATED	src/pseudo_intrinsics.h	167;"	d
V_NORMAL	src/besside-ng.c	/^	V_NORMAL = 0,$/;"	e	enum:__anon19	file:
V_VERBOSE	src/besside-ng.c	/^	V_VERBOSE,$/;"	e	enum:__anon19	file:
Value	lib/csharp/MonoExample/NDesk-dbus/Protocol.cs	/^		internal readonly string Value;$/;"	f	class:NDesk.DBus.ObjectPath	file:
Value	lib/csharp/MonoExample/NDesk-dbus/Signature.cs	/^		public string Value$/;"	p	struct:NDesk.DBus.Signature
Variant	lib/csharp/MonoExample/NDesk-dbus/Signature.cs	/^		Variant = (byte)'v',$/;"	e	enum:NDesk.DBus.DType	file:
Vendor	lib/csharp/MonoExample/NDesk-dbus/Notifications.cs	/^		public string Vendor;$/;"	f	struct:org.freedesktop.ServerInformation
Verbose	lib/csharp/MonoExample/NDesk-dbus/Protocol.cs	/^		public readonly static bool Verbose;$/;"	f	class:NDesk.DBus.Protocol
Version	lib/csharp/MonoExample/NDesk-dbus/Notifications.cs	/^		public string Version;$/;"	f	struct:org.freedesktop.ServerInformation
Version	lib/csharp/MonoExample/NDesk-dbus/Protocol.cs	/^		public const byte Version = 1;$/;"	f	class:NDesk.DBus.Protocol
W	src/sha1-git.c	129;"	d	file:
W	src/sha1-git.h	/^	unsigned int W[16];$/;"	m	struct:__anon14
WARNING	scripts/airdrop-ng/airdrop/__init__.py	/^    WARNING = '\\033[93m' #yellow$/;"	v	class:bcolors
WEBSITE	src/version.h	38;"	d
WEIRD_FRAME_TYPE	src/airdecloak-ng.h	66;"	d
WEP_FILE	src/wesside-ng.c	88;"	d	file:
WEP_data	src/aircrack-ng.h	/^struct WEP_data$/;"	s
WIF_MTU	src/airbase-ng.c	92;"	d	file:
WITH_ASAN	src/misc.h	200;"	d
WKP_FRAME_LENGTH	src/wkp-frame.h	35;"	d
WME_AC_BE	src/include/ieee80211.h	/^	WME_AC_BE	= 0,		\/* best effort *\/$/;"	e	enum:ieee80211_wme_ac
WME_AC_BK	src/include/ieee80211.h	/^	WME_AC_BK	= 1,		\/* background *\/$/;"	e	enum:ieee80211_wme_ac
WME_AC_TO_TID	src/include/ieee80211.h	275;"	d
WME_AC_VI	src/include/ieee80211.h	/^	WME_AC_VI	= 2,		\/* video *\/$/;"	e	enum:ieee80211_wme_ac
WME_AC_VO	src/include/ieee80211.h	/^	WME_AC_VO	= 3,		\/* voice *\/$/;"	e	enum:ieee80211_wme_ac
WME_INFO_OUI_SUBTYPE	src/include/ieee80211.h	576;"	d
WME_NUM_AC	src/include/ieee80211.h	262;"	d
WME_OUI	src/include/ieee80211.h	574;"	d
WME_OUI_TYPE	src/include/ieee80211.h	575;"	d
WME_PARAM_ACI	src/include/ieee80211.h	264;"	d
WME_PARAM_ACI_S	src/include/ieee80211.h	265;"	d
WME_PARAM_ACM	src/include/ieee80211.h	266;"	d
WME_PARAM_ACM_S	src/include/ieee80211.h	267;"	d
WME_PARAM_AIFSN	src/include/ieee80211.h	268;"	d
WME_PARAM_AIFSN_S	src/include/ieee80211.h	269;"	d
WME_PARAM_LOGCWMAX	src/include/ieee80211.h	272;"	d
WME_PARAM_LOGCWMAX_S	src/include/ieee80211.h	273;"	d
WME_PARAM_LOGCWMIN	src/include/ieee80211.h	270;"	d
WME_PARAM_LOGCWMIN_S	src/include/ieee80211.h	271;"	d
WME_PARAM_OUI_SUBTYPE	src/include/ieee80211.h	577;"	d
WME_QOSINFO_COUNT	src/include/ieee80211.h	298;"	d
WME_VERSION	src/include/ieee80211.h	578;"	d
WPA	src/ivstools.c	50;"	d	file:
WPA1_TAG	src/airbase-ng.c	137;"	d	file:
WPA2_TAG	src/airbase-ng.c	141;"	d	file:
WPA_ASE_8021X_PSK	src/include/ieee80211.h	556;"	d
WPA_ASE_8021X_UNSPEC	src/include/ieee80211.h	555;"	d
WPA_ASE_NONE	src/include/ieee80211.h	554;"	d
WPA_CSE_CCMP	src/include/ieee80211.h	551;"	d
WPA_CSE_NULL	src/include/ieee80211.h	548;"	d
WPA_CSE_TKIP	src/include/ieee80211.h	550;"	d
WPA_CSE_WEP104	src/include/ieee80211.h	552;"	d
WPA_CSE_WEP40	src/include/ieee80211.h	549;"	d
WPA_OUI	src/include/ieee80211.h	544;"	d
WPA_OUI_TYPE	src/include/ieee80211.h	545;"	d
WPA_ST_info	src/crypto.h	/^struct WPA_ST_info$/;"	s
WPA_VERSION	src/include/ieee80211.h	546;"	d
WPA_data	src/aircrack-ng.h	/^struct WPA_data {$/;"	s
WPA_hdsk	src/include/eapol.h	/^struct WPA_hdsk$/;"	s
WPS_info	src/airodump-ng.h	/^struct WPS_info {$/;"	s
WSTATE_ASSOC	src/besside-ng.c	/^	WSTATE_ASSOC,$/;"	e	enum:__anon18	file:
WSTATE_AUTH	src/besside-ng.c	/^	WSTATE_AUTH,$/;"	e	enum:__anon18	file:
WSTATE_NONE	src/besside-ng.c	/^	WSTATE_NONE = 0,$/;"	e	enum:__anon18	file:
WaitingForAuth	lib/csharp/MonoExample/NDesk-dbus/Authentication.cs	/^		WaitingForAuth,$/;"	e	enum:NDesk.DBus.Authentication.ServerState	file:
WaitingForBegin	lib/csharp/MonoExample/NDesk-dbus/Authentication.cs	/^		WaitingForBegin,$/;"	e	enum:NDesk.DBus.Authentication.ServerState	file:
WaitingForData	lib/csharp/MonoExample/NDesk-dbus/Authentication.cs	/^		WaitingForData,$/;"	e	enum:NDesk.DBus.Authentication.ClientState	file:
WaitingForData	lib/csharp/MonoExample/NDesk-dbus/Authentication.cs	/^		WaitingForData,$/;"	e	enum:NDesk.DBus.Authentication.ServerState	file:
WaitingForOK	lib/csharp/MonoExample/NDesk-dbus/Authentication.cs	/^		WaitingForOK,$/;"	e	enum:NDesk.DBus.Authentication.ClientState	file:
WaitingForReject	lib/csharp/MonoExample/NDesk-dbus/Authentication.cs	/^		WaitingForReject,$/;"	e	enum:NDesk.DBus.Authentication.ClientState	file:
Weak	lib/csharp/WirelessPanda/AccessPoint.cs	/^        public ulong Weak$/;"	p	class:WirelessPanda.AccessPoint
WirelessDevice	lib/csharp/WirelessPanda/WirelessDevice.cs	/^    public abstract class WirelessDevice$/;"	c	namespace:WirelessPanda
WirelessPanda	lib/csharp/WirelessPanda/AccessPoint.cs	/^namespace WirelessPanda$/;"	n
WirelessPanda	lib/csharp/WirelessPanda/Coordinates.cs	/^namespace WirelessPanda$/;"	n
WirelessPanda	lib/csharp/WirelessPanda/Station.cs	/^namespace WirelessPanda$/;"	n
WirelessPanda	lib/csharp/WirelessPanda/WirelessDevice.cs	/^namespace WirelessPanda$/;"	n
WirelessPanda.Readers	lib/csharp/WirelessPanda/Readers/NetXMLReader.cs	/^namespace WirelessPanda.Readers$/;"	n
WirelessPanda.Readers	lib/csharp/WirelessPanda/Readers/Reader.cs	/^namespace WirelessPanda.Readers$/;"	n
WirelessPanda.Readers	lib/csharp/WirelessPanda/Readers/UniversalReader.cs	/^namespace WirelessPanda.Readers$/;"	n
WirelessPanda.Readers	lib/csharp/WirelessPanda/Readers/csvReader.cs	/^namespace WirelessPanda.Readers$/;"	n
WirelessPanda.Readers	lib/csharp/WirelessPanda/Readers/kismetCsvReader.cs	/^namespace WirelessPanda.Readers$/;"	n
Write	lib/csharp/MonoExample/NDesk-dbus/MessageWriter.cs	/^		public void Write (DType dtype, object val)$/;"	m	class:NDesk.DBus.MessageWriter
Write	lib/csharp/MonoExample/NDesk-dbus/MessageWriter.cs	/^		public void Write (ObjectPath val)$/;"	m	class:NDesk.DBus.MessageWriter
Write	lib/csharp/MonoExample/NDesk-dbus/MessageWriter.cs	/^		public void Write (Signature val)$/;"	m	class:NDesk.DBus.MessageWriter
Write	lib/csharp/MonoExample/NDesk-dbus/MessageWriter.cs	/^		public void Write (Type type, object val)$/;"	m	class:NDesk.DBus.MessageWriter
Write	lib/csharp/MonoExample/NDesk-dbus/MessageWriter.cs	/^		public void Write (bool val)$/;"	m	class:NDesk.DBus.MessageWriter
Write	lib/csharp/MonoExample/NDesk-dbus/MessageWriter.cs	/^		public void Write (byte val)$/;"	m	class:NDesk.DBus.MessageWriter
Write	lib/csharp/MonoExample/NDesk-dbus/MessageWriter.cs	/^		public void Write (object val)$/;"	m	class:NDesk.DBus.MessageWriter
Write	lib/csharp/MonoExample/NDesk-dbus/MessageWriter.cs	/^		public void Write (string val)$/;"	m	class:NDesk.DBus.MessageWriter
Write	lib/csharp/MonoExample/NDesk-dbus/MessageWriter.cs	/^		unsafe public void Write (double val)$/;"	m	class:NDesk.DBus.MessageWriter
Write	lib/csharp/MonoExample/NDesk-dbus/MessageWriter.cs	/^		unsafe public void Write (float val)$/;"	m	class:NDesk.DBus.MessageWriter
Write	lib/csharp/MonoExample/NDesk-dbus/MessageWriter.cs	/^		unsafe public void Write (int val)$/;"	m	class:NDesk.DBus.MessageWriter
Write	lib/csharp/MonoExample/NDesk-dbus/MessageWriter.cs	/^		unsafe public void Write (long val)$/;"	m	class:NDesk.DBus.MessageWriter
Write	lib/csharp/MonoExample/NDesk-dbus/MessageWriter.cs	/^		unsafe public void Write (short val)$/;"	m	class:NDesk.DBus.MessageWriter
Write	lib/csharp/MonoExample/NDesk-dbus/MessageWriter.cs	/^		unsafe public void Write (uint val)$/;"	m	class:NDesk.DBus.MessageWriter
Write	lib/csharp/MonoExample/NDesk-dbus/MessageWriter.cs	/^		unsafe public void Write (ulong val)$/;"	m	class:NDesk.DBus.MessageWriter
Write	lib/csharp/MonoExample/NDesk-dbus/MessageWriter.cs	/^		unsafe public void Write (ushort val)$/;"	m	class:NDesk.DBus.MessageWriter
WriteAnnotation	lib/csharp/MonoExample/NDesk-dbus/Introspection.cs	/^		public void WriteAnnotation (string name, string value)$/;"	m	class:NDesk.DBus.Introspector
WriteAnnotations	lib/csharp/MonoExample/NDesk-dbus/Introspection.cs	/^		public void WriteAnnotations (ICustomAttributeProvider attrProvider)$/;"	m	class:NDesk.DBus.Introspector
WriteArg	lib/csharp/MonoExample/NDesk-dbus/Introspection.cs	/^		public void WriteArg (ParameterInfo pi)$/;"	m	class:NDesk.DBus.Introspector
WriteArg	lib/csharp/MonoExample/NDesk-dbus/Introspection.cs	/^		public void WriteArg (Type argType, string argName, bool argIsOut, bool reverse)$/;"	m	class:NDesk.DBus.Introspector
WriteArgReverse	lib/csharp/MonoExample/NDesk-dbus/Introspection.cs	/^		public void WriteArgReverse (ParameterInfo pi)$/;"	m	class:NDesk.DBus.Introspector
WriteArray	lib/csharp/MonoExample/NDesk-dbus/MessageWriter.cs	/^		public void WriteArray (object obj, Type elemType)$/;"	m	class:NDesk.DBus.MessageWriter
WriteBsdCred	lib/csharp/MonoExample/NDesk-dbus/UnixNativeTransport.cs	/^		unsafe void WriteBsdCred ()$/;"	m	class:NDesk.DBus.Transports.UnixNativeTransport	file:
WriteComplex	lib/csharp/MonoExample/NDesk-dbus/MessageWriter.cs	/^		public void WriteComplex (object val, Type type)$/;"	m	class:NDesk.DBus.MessageWriter
WriteCred	lib/csharp/MonoExample/NDesk-dbus/SocketTransport.cs	/^		public override void WriteCred ()$/;"	m	class:NDesk.DBus.Transports.SocketTransport
WriteCred	lib/csharp/MonoExample/NDesk-dbus/Transport.cs	/^		public abstract void WriteCred ();$/;"	m	class:NDesk.DBus.Transports.Transport
WriteCred	lib/csharp/MonoExample/NDesk-dbus/UnixNativeTransport.cs	/^		public override void WriteCred ()$/;"	m	class:NDesk.DBus.Transports.UnixNativeTransport
WriteDynamicValues	lib/csharp/MonoExample/NDesk-dbus/Mapper.cs	/^		public static void WriteDynamicValues (MessageWriter mw, ParameterInfo[] parms, object[] vals)$/;"	m	class:NDesk.DBus.MessageHelper
WriteEnd	lib/csharp/MonoExample/NDesk-dbus/Introspection.cs	/^		public void WriteEnd ()$/;"	m	class:NDesk.DBus.Introspector
WriteEnum	lib/csharp/MonoExample/NDesk-dbus/Introspection.cs	/^		public void WriteEnum (Type type)$/;"	m	class:NDesk.DBus.Introspector
WriteFromDict	lib/csharp/MonoExample/NDesk-dbus/MessageWriter.cs	/^		public void WriteFromDict (Type keyType, Type valType, System.Collections.IDictionary val)$/;"	m	class:NDesk.DBus.MessageWriter
WriteInterface	lib/csharp/MonoExample/NDesk-dbus/Introspection.cs	/^		public void WriteInterface (Type type)$/;"	m	class:NDesk.DBus.Introspector
WriteMessage	lib/csharp/MonoExample/NDesk-dbus/Connection.cs	/^		internal void WriteMessage (Message msg)$/;"	m	class:NDesk.DBus.Connection	file:
WriteMethod	lib/csharp/MonoExample/NDesk-dbus/Introspection.cs	/^		public void WriteMethod (MethodInfo mi)$/;"	m	class:NDesk.DBus.Introspector
WriteNode	lib/csharp/MonoExample/NDesk-dbus/Introspection.cs	/^		public void WriteNode (string name)$/;"	m	class:NDesk.DBus.Introspector
WriteNull	lib/csharp/MonoExample/NDesk-dbus/MessageWriter.cs	/^		public void WriteNull ()$/;"	m	class:NDesk.DBus.MessageWriter
WriteObject	lib/csharp/MonoExample/NDesk-dbus/MessageWriter.cs	/^		public void WriteObject (Type type, object val)$/;"	m	class:NDesk.DBus.MessageWriter
WritePad	lib/csharp/MonoExample/NDesk-dbus/MessageWriter.cs	/^		public void WritePad (int alignment)$/;"	m	class:NDesk.DBus.MessageWriter
WriteProperty	lib/csharp/MonoExample/NDesk-dbus/Introspection.cs	/^		public void WriteProperty (PropertyInfo pri)$/;"	m	class:NDesk.DBus.Introspector
WriteSignal	lib/csharp/MonoExample/NDesk-dbus/Introspection.cs	/^		public void WriteSignal (EventInfo ei)$/;"	m	class:NDesk.DBus.Introspector
WriteStart	lib/csharp/MonoExample/NDesk-dbus/Introspection.cs	/^		public void WriteStart ()$/;"	m	class:NDesk.DBus.Introspector
WriteType	lib/csharp/MonoExample/NDesk-dbus/Introspection.cs	/^		public void WriteType (Type target_type)$/;"	m	class:NDesk.DBus.Introspector
WriteValueType	lib/csharp/MonoExample/NDesk-dbus/MessageWriter.cs	/^		public void WriteValueType (object val, Type type)$/;"	m	class:NDesk.DBus.MessageWriter
WriteVariant	lib/csharp/MonoExample/NDesk-dbus/MessageWriter.cs	/^		public void WriteVariant (Type type, object val)$/;"	m	class:NDesk.DBus.MessageWriter
XOR	src/crypto.c	/^static inline void XOR( unsigned char *dst, unsigned char *src, int len )$/;"	f	file:
ZERO	src/aircrack-ng.c	/^static unsigned char ZERO[32] =$/;"	v	file:
ZERO	src/airodump-ng.h	/^static unsigned char ZERO[32] =$/;"	v
ZERO	src/airtun-ng.c	/^unsigned char ZERO[32];$/;"	v
ZERO	src/besside-ng.c	/^static unsigned char ZERO[32] =$/;"	v	file:
ZERO	src/crypto.c	/^static unsigned char ZERO[32] =$/;"	v	file:
ZERO	src/ivstools.c	/^static unsigned char ZERO[32] =$/;"	v	file:
ZERO	src/tkiptun-ng.c	/^static unsigned char ZERO[32] =$/;"	v	file:
ZERO	src/wpaclean.c	/^static unsigned char ZERO[32] =$/;"	v	file:
Zd	src/misc.h	70;"	d
Zd	src/misc.h	76;"	d
Zu	src/misc.h	69;"	d
Zu	src/misc.h	75;"	d
_AIRCRACK_NG_BYTEORDER_H_	src/osdep/byteorder.h	36;"	d
_AIRCRACK_NG_H	src/aircrack-ng.h	36;"	d
_AIRCRACK_NG_PCAP_H_	src/pcap.h	34;"	d
_AIRCRACK_PTW_H_	src/aircrack-ptw-lib.h	34;"	d
_AIRODUMP_NG_H_	src/airodump-ng.h	33;"	d
_AIRUNDEFENSE_H_	src/airdecloak-ng.h	33;"	d
_ALIGNED_H_	src/aligned.h	53;"	d
_ARCH_H	src/arch.h	58;"	d
_BETA	src/version.h	36;"	d
_BSD_SOURCE	src/osdep/radiotap/parse.c	2;"	d	file:
_BSD_SOURCE	src/osdep/radiotap/platform.h	4;"	d
_COMMON_H_	src/common.h	31;"	d
_CRCTABLE_H	src/crctable.h	2;"	d
_CRCTABLE_OSDEP_H	src/osdep/crctable_osdep.h	2;"	d
_CRYPTO_H	src/crypto.h	36;"	d
_GCRYPT_OPENSSL_WRAPPER_H	src/gcrypt-openssl-wrapper.h	2;"	d
_GNU_SOURCE	src/aircrack-ng.c	40;"	d	file:
_GNU_SOURCE	src/cpuid.c	20;"	d	file:
_JCOMMON_H	src/jcommon.h	56;"	d
_KERNEL	src/osdep/openbsd.c	38;"	d	file:
_KERNEL	src/osdep/openbsd.c	40;"	d	file:
_MAJ	src/version.h	33;"	d
_MD5_H	src/md5.h	56;"	d
_MD5_STD_H	src/MD5_std.h	58;"	d
_MEMORY_H	src/memory.h	56;"	d
_MIN	src/version.h	34;"	d
_MISC_H	src/misc.h	58;"	d
_NET80211_IEEE80211_H_	src/include/ieee80211.h	36;"	d
_NET_EAPOL_H_	src/include/eapol.h	2;"	d
_NET_ETHERNET_H_	src/include/ethernet.h	9;"	d
_NET_IF_ARP_H_	src/include/if_arp.h	34;"	d
_NET_IF_LLC_H_	src/include/if_llc.h	35;"	d
_OSDEP_COMMON_H_	src/osdep/common.h	33;"	d
_PPI_FIELD_802_11_COMMON	contrib/airpcap/airpcap.c	/^typedef struct _PPI_FIELD_802_11_COMMON$/;"	s	file:
_PPI_FIELD_802_11_COMMON	src/osdep/airpcap.c	/^typedef struct _PPI_FIELD_802_11_COMMON$/;"	s	file:
_PPI_FIELD_HEADER	contrib/airpcap/airpcap.c	/^typedef struct _PPI_FIELD_HEADER$/;"	s	file:
_PPI_FIELD_HEADER	src/osdep/airpcap.c	/^typedef struct _PPI_FIELD_HEADER$/;"	s	file:
_PPI_PACKET_HEADER	contrib/airpcap/airpcap.c	/^typedef struct _PPI_PACKET_HEADER$/;"	s	file:
_PPI_PACKET_HEADER	src/osdep/airpcap.c	/^typedef struct _PPI_PACKET_HEADER$/;"	s	file:
_RC	src/version.h	37;"	d
_SHA1_GIT	src/sha1-git.c	318;"	d	file:
_SSE_PSEUDO_H	src/pseudo_intrinsics.h	67;"	d
_SUB_MIN	src/version.h	35;"	d
_S_	src/crypto.c	1101;"	d	file:
_UNIQUEIV_H	src/uniqueiv.h	36;"	d
_WITH_DPRINTF	src/airodump-ng.c	52;"	d	file:
_WPAPSK_H	src/wpapsk.h	51;"	d
_X86	src/cpuid.c	28;"	d	file:
__AIRCRACK_NG_OSDEP_NETWORK_H__	src/osdep/network.h	9;"	d
__AIRCRACK_NG_OSDEP_PACKED_H__	src/osdep/packed.h	36;"	d
__AIRCRACK_NG_OSEDEP_H__	src/osdep/osdep.h	35;"	d
__BIG_ENDIAN	src/osdep/byteorder.h	172;"	d
__BIG_ENDIAN	src/osdep/radiotap/platform.h	27;"	d
__BYTE_ORDER	src/osdep/byteorder.h	174;"	d
__BYTE_ORDER	src/osdep/radiotap/platform.h	29;"	d
__EASSIDE_COMMON_H__	src/easside.h	7;"	d
__FAVOR_BSD	src/easside-ng.c	42;"	d	file:
__FAVOR_BSD	src/easside-ng.c	44;"	d	file:
__JOHN_SWAP_H__	src/johnswap.h	44;"	d
__JTR_SSE_INTRINSICS_H__	src/simd-intrinsics.h	49;"	d
__JTR_SSE_INTRINSICS_H__	src/sse-intrinsics.h	49;"	d
__LITTLE_ENDIAN	src/osdep/byteorder.h	171;"	d
__LITTLE_ENDIAN	src/osdep/radiotap/platform.h	28;"	d
__MEM_DBG_H_	src/memdbg.h	50;"	d
__PDP_ENDIAN	src/osdep/byteorder.h	173;"	d
__RADIOTAP_ITER_H	src/osdep/radiotap/radiotap_iter.h	2;"	d
__SSE_INTRINS_LOAD_FLAGS__	src/simd-intrinsics-load-flags.h	51;"	d
__SSE_INTRINS_LOAD_FLAGS__	src/sse-intrinsics-load-flags.h	53;"	d
___my_swab16	src/osdep/byteorder.h	38;"	d
___my_swab32	src/osdep/byteorder.h	42;"	d
___my_swab64	src/osdep/byteorder.h	48;"	d
__aligned	src/osdep/packed.h	43;"	d
__all__	scripts/airgraph-ng/graphviz/__init__.py	/^__all__=['libDumpParse', 'libOuiParse']$/;"	v
__author__	scripts/airdrop-ng/airdrop-ng	/^__author__  = "TheX1le & King_Tuna"$/;"	v
__author__	scripts/airdrop-ng/airdrop/libOuiParse.py	/^__author__ = 'Ben "TheX1le" Smith, Marfi'$/;"	v
__author__	scripts/airdrop-ng/old-installers/install.py	/^__author__  = "Marfi"$/;"	v
__author__	scripts/airdrop-ng/old-installers/uninstall.py	/^__author__  = "Marfi"$/;"	v
__author__	scripts/airgraph-ng/graphviz/libOuiParse.py	/^__author__ = 'Ben "TheX1le" Smith, Marfi'$/;"	v
__author__	scripts/airgraph-ng/graphviz/lib_Airgraphviz.py	/^__author__ = 'Ben "TheX1le" Smith'$/;"	v
__author__	scripts/versuck-ng/versuck-ng	/^__author__ 	= "TheX1le"$/;"	v
__be16_to_cpu	src/osdep/byteorder.h	110;"	d
__be16_to_cpu	src/osdep/byteorder.h	138;"	d
__be16_to_cpu	src/osdep/byteorder.h	158;"	d
__be16_to_cpu	src/osdep/byteorder.h	197;"	d
__be16_to_cpu	src/osdep/byteorder.h	289;"	d
__be16_to_cpu	src/osdep/byteorder.h	346;"	d
__be16_to_cpu	src/osdep/byteorder.h	86;"	d
__be32_to_cpu	src/osdep/byteorder.h	109;"	d
__be32_to_cpu	src/osdep/byteorder.h	137;"	d
__be32_to_cpu	src/osdep/byteorder.h	157;"	d
__be32_to_cpu	src/osdep/byteorder.h	196;"	d
__be32_to_cpu	src/osdep/byteorder.h	288;"	d
__be32_to_cpu	src/osdep/byteorder.h	345;"	d
__be32_to_cpu	src/osdep/byteorder.h	85;"	d
__be64_to_cpu	src/osdep/byteorder.h	108;"	d
__be64_to_cpu	src/osdep/byteorder.h	136;"	d
__be64_to_cpu	src/osdep/byteorder.h	156;"	d
__be64_to_cpu	src/osdep/byteorder.h	195;"	d
__be64_to_cpu	src/osdep/byteorder.h	287;"	d
__be64_to_cpu	src/osdep/byteorder.h	344;"	d
__be64_to_cpu	src/osdep/byteorder.h	84;"	d
__cpu_to_be16	src/osdep/byteorder.h	113;"	d
__cpu_to_be16	src/osdep/byteorder.h	144;"	d
__cpu_to_be16	src/osdep/byteorder.h	164;"	d
__cpu_to_be16	src/osdep/byteorder.h	200;"	d
__cpu_to_be16	src/osdep/byteorder.h	292;"	d
__cpu_to_be16	src/osdep/byteorder.h	349;"	d
__cpu_to_be16	src/osdep/byteorder.h	89;"	d
__cpu_to_be32	src/osdep/byteorder.h	112;"	d
__cpu_to_be32	src/osdep/byteorder.h	143;"	d
__cpu_to_be32	src/osdep/byteorder.h	163;"	d
__cpu_to_be32	src/osdep/byteorder.h	199;"	d
__cpu_to_be32	src/osdep/byteorder.h	221;"	d
__cpu_to_be32	src/osdep/byteorder.h	291;"	d
__cpu_to_be32	src/osdep/byteorder.h	348;"	d
__cpu_to_be32	src/osdep/byteorder.h	88;"	d
__cpu_to_be64	src/osdep/byteorder.h	111;"	d
__cpu_to_be64	src/osdep/byteorder.h	142;"	d
__cpu_to_be64	src/osdep/byteorder.h	162;"	d
__cpu_to_be64	src/osdep/byteorder.h	198;"	d
__cpu_to_be64	src/osdep/byteorder.h	220;"	d
__cpu_to_be64	src/osdep/byteorder.h	290;"	d
__cpu_to_be64	src/osdep/byteorder.h	347;"	d
__cpu_to_be64	src/osdep/byteorder.h	87;"	d
__cpu_to_le16	src/osdep/byteorder.h	119;"	d
__cpu_to_le16	src/osdep/byteorder.h	147;"	d
__cpu_to_le16	src/osdep/byteorder.h	167;"	d
__cpu_to_le16	src/osdep/byteorder.h	206;"	d
__cpu_to_le16	src/osdep/byteorder.h	298;"	d
__cpu_to_le16	src/osdep/byteorder.h	355;"	d
__cpu_to_le16	src/osdep/byteorder.h	95;"	d
__cpu_to_le32	src/osdep/byteorder.h	118;"	d
__cpu_to_le32	src/osdep/byteorder.h	146;"	d
__cpu_to_le32	src/osdep/byteorder.h	166;"	d
__cpu_to_le32	src/osdep/byteorder.h	205;"	d
__cpu_to_le32	src/osdep/byteorder.h	297;"	d
__cpu_to_le32	src/osdep/byteorder.h	354;"	d
__cpu_to_le32	src/osdep/byteorder.h	94;"	d
__cpu_to_le64	src/osdep/byteorder.h	117;"	d
__cpu_to_le64	src/osdep/byteorder.h	145;"	d
__cpu_to_le64	src/osdep/byteorder.h	165;"	d
__cpu_to_le64	src/osdep/byteorder.h	204;"	d
__cpu_to_le64	src/osdep/byteorder.h	296;"	d
__cpu_to_le64	src/osdep/byteorder.h	353;"	d
__cpu_to_le64	src/osdep/byteorder.h	93;"	d
__data__	scripts/airdrop-ng/airdrop/libOuiParse.py	/^__data__ = 'a class for dealing with the oui txt file'$/;"	v
__data__	scripts/airgraph-ng/graphviz/libOuiParse.py	/^__data__ = 'a class for dealing with the oui txt file'$/;"	v
__data__	scripts/airgraph-ng/graphviz/lib_Airgraphviz.py	/^__data__ = 'This library supports airgraph-ng'$/;"	v
__date__	scripts/airdrop-ng/airdrop/libOuiParse.py	/^__date__ = '09\/19\/09'$/;"	v
__date__	scripts/airgraph-ng/graphviz/libOuiParse.py	/^__date__ = '04\/26\/2011'$/;"	v
__date__	scripts/airgraph-ng/graphviz/lib_Airgraphviz.py	/^__date__ = '03\/02\/09'$/;"	v
__email__	scripts/airdrop-ng/airdrop/libOuiParse.py	/^__email__ = 'thex1le@gmail.com'$/;"	v
__email__	scripts/airgraph-ng/graphviz/libOuiParse.py	/^__email__ = 'thex1le@gmail.com'$/;"	v
__email__	scripts/airgraph-ng/graphviz/lib_Airgraphviz.py	/^__email__ = 'thex1le@gmail.com'$/;"	v
__file__	scripts/airdrop-ng/airdrop/libOuiParse.py	/^__file__ = 'ouiParse.py'$/;"	v
__file__	scripts/airgraph-ng/graphviz/libOuiParse.py	/^__file__ = 'ouiParse.py'$/;"	v
__file__	scripts/airgraph-ng/graphviz/lib_Airgraphviz.py	/^__file__ = 'lib_Airgraphviz.py'$/;"	v
__genl_ctrl_alloc_cache	src/osdep/linux.c	/^static inline int __genl_ctrl_alloc_cache(struct nl_handle *h, struct nl_cache **cache)$/;"	f	file:
__has_feature	src/misc.h	191;"	d
__init__	scripts/airdrop-ng/airdrop-ng	/^    def __init__(self,allow_bcast,destination_addr,source_addr,bss_id_addr,channel):$/;"	m	class:packetGenerator
__init__	scripts/airdrop-ng/airdrop-ng	/^    def __init__(self,log, dir="\/var\/log\/"):$/;"	m	class:messages
__init__	scripts/airdrop-ng/airdrop-ng	/^    def __init__(self,rules,data,debug):$/;"	m	class:getTargets
__init__	scripts/airdrop-ng/airdrop-ng	/^    def __init__(self,rulesDB,capr,ClientApDB,debug):$/;"	m	class:ruleMatch
__init__	scripts/airdrop-ng/airdrop/libOuiParse.py	/^    def __init__(self,oui=None,GetFile=False):$/;"	m	class:macOUI_lookup
__init__	scripts/airdrop-ng/old-installers/install.py	/^	def __init__ (self):$/;"	m	class:checkDepend
__init__	scripts/airdrop-ng/old-installers/install.py	/^	def __init__(self):$/;"	m	class:installAirdrop
__init__	scripts/airdrop-ng/old-installers/install.py	/^	def __init__(self):$/;"	m	class:installLorcon
__init__	scripts/airdrop-ng/old-installers/install.py	/^	def __init__(self):$/;"	m	class:installPylorcon
__init__	scripts/airgraph-ng/graphviz/libOuiParse.py	/^    def __init__(self, oui=False):$/;"	m	class:macOUI_lookup
__le16_to_cpu	src/osdep/byteorder.h	116;"	d
__le16_to_cpu	src/osdep/byteorder.h	141;"	d
__le16_to_cpu	src/osdep/byteorder.h	161;"	d
__le16_to_cpu	src/osdep/byteorder.h	203;"	d
__le16_to_cpu	src/osdep/byteorder.h	295;"	d
__le16_to_cpu	src/osdep/byteorder.h	352;"	d
__le16_to_cpu	src/osdep/byteorder.h	92;"	d
__le32_to_cpu	src/osdep/byteorder.h	115;"	d
__le32_to_cpu	src/osdep/byteorder.h	140;"	d
__le32_to_cpu	src/osdep/byteorder.h	160;"	d
__le32_to_cpu	src/osdep/byteorder.h	202;"	d
__le32_to_cpu	src/osdep/byteorder.h	294;"	d
__le32_to_cpu	src/osdep/byteorder.h	351;"	d
__le32_to_cpu	src/osdep/byteorder.h	91;"	d
__le64_to_cpu	src/osdep/byteorder.h	114;"	d
__le64_to_cpu	src/osdep/byteorder.h	139;"	d
__le64_to_cpu	src/osdep/byteorder.h	159;"	d
__le64_to_cpu	src/osdep/byteorder.h	201;"	d
__le64_to_cpu	src/osdep/byteorder.h	293;"	d
__le64_to_cpu	src/osdep/byteorder.h	350;"	d
__le64_to_cpu	src/osdep/byteorder.h	90;"	d
__licence__	scripts/airdrop-ng/airdrop-ng	/^__licence__ = "GPL2"$/;"	v
__m128i	src/simd-intrinsics.h	63;"	d
__m128i	src/sse-intrinsics.h	61;"	d
__packed	src/aireplay-ng.c	/^} __packed;$/;"	v	typeref:struct:net_hdr
__packed	src/include/ethernet.h	/^} __packed;$/;"	v	typeref:struct:ether_addr
__packed	src/include/ethernet.h	/^} __packed;$/;"	v	typeref:struct:ether_header
__packed	src/include/ieee80211.h	/^} __packed;$/;"	v	typeref:struct:ieee80211_band
__packed	src/include/ieee80211.h	/^} __packed;$/;"	v	typeref:struct:ieee80211_country_ie
__packed	src/include/ieee80211.h	/^} __packed;$/;"	v	typeref:struct:ieee80211_frame
__packed	src/include/ieee80211.h	/^} __packed;$/;"	v	typeref:struct:ieee80211_frame_ack
__packed	src/include/ieee80211.h	/^} __packed;$/;"	v	typeref:struct:ieee80211_frame_addr4
__packed	src/include/ieee80211.h	/^} __packed;$/;"	v	typeref:struct:ieee80211_frame_cfend
__packed	src/include/ieee80211.h	/^} __packed;$/;"	v	typeref:struct:ieee80211_frame_cts
__packed	src/include/ieee80211.h	/^} __packed;$/;"	v	typeref:struct:ieee80211_frame_min
__packed	src/include/ieee80211.h	/^} __packed;$/;"	v	typeref:struct:ieee80211_frame_pspoll
__packed	src/include/ieee80211.h	/^} __packed;$/;"	v	typeref:struct:ieee80211_frame_rts
__packed	src/include/ieee80211.h	/^} __packed;$/;"	v	typeref:struct:ieee80211_ie_wpa
__packed	src/include/ieee80211.h	/^} __packed;$/;"	v	typeref:struct:ieee80211_mnf
__packed	src/include/ieee80211.h	/^} __packed;$/;"	v	typeref:struct:ieee80211_plcp_hdr
__packed	src/include/ieee80211.h	/^} __packed;$/;"	v	typeref:struct:ieee80211_qosframe
__packed	src/include/ieee80211.h	/^} __packed;$/;"	v	typeref:struct:ieee80211_qosframe_addr4
__packed	src/include/ieee80211.h	/^} __packed;$/;"	v	typeref:struct:ieee80211_tim_ie
__packed	src/include/ieee80211.h	/^} __packed;$/;"	v	typeref:struct:ieee80211_wme_acparams
__packed	src/include/ieee80211.h	/^} __packed;$/;"	v	typeref:struct:ieee80211_wme_info
__packed	src/include/ieee80211.h	/^} __packed;$/;"	v	typeref:struct:ieee80211_wme_param
__packed	src/include/ieee80211.h	/^} __packed;$/;"	v	typeref:struct:ieee80211_wme_tspec
__packed	src/include/if_llc.h	/^	    } type_snap __packed;$/;"	m	union:llc::__anon6	typeref:struct:llc::__anon6::__anon11
__packed	src/include/if_llc.h	/^} __packed;$/;"	v	typeref:struct:frmrinfo
__packed	src/include/if_llc.h	/^} __packed;$/;"	v	typeref:struct:llc
__packed	src/osdep/network.h	/^} __packed;$/;"	v	typeref:struct:net_hdr
__packed	src/osdep/osdep.h	/^} __packed;$/;"	v	typeref:struct:rx_info
__packed	src/osdep/packed.h	39;"	d
__swab16	src/osdep/byteorder.h	135;"	d
__swab16	src/osdep/byteorder.h	155;"	d
__swab32	src/osdep/byteorder.h	134;"	d
__swab32	src/osdep/byteorder.h	154;"	d
__swab64	src/osdep/byteorder.h	133;"	d
__swab64	src/osdep/byteorder.h	153;"	d
__version__	scripts/airdrop-ng/airdrop-ng	/^__version__ = "2012.2.17.1.54.00"$/;"	v
__version__	scripts/airdrop-ng/airdrop/libOuiParse.py	/^__version__ = '2009.11.23'$/;"	v
__version__	scripts/airdrop-ng/old-installers/install.py	/^__version__ = "1.13.2010.21:00"$/;"	v
__version__	scripts/airdrop-ng/old-installers/uninstall.py	/^__version__ = "?"$/;"	v
__version__	scripts/airgraph-ng/graphviz/libOuiParse.py	/^__version__ = '2011.4.26'$/;"	v
__version__	scripts/airgraph-ng/graphviz/lib_Airgraphviz.py	/^__version__ = ''$/;"	v
__version__	scripts/versuck-ng/versuck-ng	/^__version__ = "10-15-2009.231841"$/;"	v
__website__	scripts/airdrop-ng/airdrop/libOuiParse.py	/^__website__= ''$/;"	v
__website__	scripts/airgraph-ng/graphviz/libOuiParse.py	/^__website__= ''$/;"	v
__website__	scripts/airgraph-ng/graphviz/lib_Airgraphviz.py	/^__website__= 'http:\/\/trac.aircrack-ng.org\/browser\/trunk\/scripts\/airgraph-ng\/'$/;"	v
_accessPoints	lib/csharp/WirelessPanda/Readers/Reader.cs	/^        private List<AccessPoint> _accessPoints = new List<AccessPoint>();$/;"	f	class:WirelessPanda.Readers.Reader	file:
_ap	lib/csharp/WirelessPanda/Station.cs	/^        private AccessPoint _ap = null;$/;"	f	class:WirelessPanda.Station	file:
_arg	src/osdep/radiotap/radiotap_iter.h	/^	unsigned char *_arg, *_next_ns_data;$/;"	m	struct:ieee80211_radiotap_iterator
_arg_index	src/osdep/radiotap/radiotap_iter.h	/^	int _arg_index;$/;"	m	struct:ieee80211_radiotap_iterator
_bitmap_shifter	src/osdep/radiotap/radiotap_iter.h	/^	uint32_t _bitmap_shifter;$/;"	m	struct:ieee80211_radiotap_iterator
_block	src/MD5_std.h	/^	MD5_block _block[MD5_N];$/;"	m	struct:__anon31
_bssid	src/airdecloak-ng.c	/^unsigned char _bssid[6];$/;"	v
_clientList	lib/csharp/WirelessPanda/AccessPoint.cs	/^        private List<Station> _clientList = new List<Station>();$/;"	f	class:WirelessPanda.AccessPoint	file:
_conf	src/besside-ng.c	/^} _conf;$/;"	v	typeref:struct:conf
_cpuinfo	src/aircrack-ng.h	/^struct _cpuinfo {$/;"	s
_cs	contrib/commview/commview.c	/^} _cs;$/;"	v	typeref:struct:cstate
_dataset	lib/csharp/WirelessPanda/Readers/Reader.cs	/^        private DataSet _dataset = new DataSet();$/;"	f	class:WirelessPanda.Readers.Reader	file:
_dictionary	lib/csharp/WirelessPanda/Coordinates.cs	/^        private Hashtable _dictionary = new Hashtable();$/;"	f	class:WirelessPanda.Coordinates	file:
_es	src/easside-ng.c	/^static struct east_state _es;$/;"	v	typeref:struct:east_state	file:
_essid	src/airdecloak-ng.c	/^char * _essid;$/;"	v
_fieldsDictionary	lib/csharp/WirelessPanda/WirelessDevice.cs	/^        protected Hashtable _fieldsDictionary = new Hashtable();$/;"	f	class:WirelessPanda.WirelessDevice
_fieldsOrder	lib/csharp/WirelessPanda/WirelessDevice.cs	/^        protected Hashtable _fieldsOrder = new Hashtable();$/;"	f	class:WirelessPanda.WirelessDevice
_fileFormat	lib/csharp/WirelessPanda/Readers/csvReader.cs	/^        private CSVFileFormat _fileFormat = CSVFileFormat.Unknown;$/;"	f	class:WirelessPanda.Readers.CsvReader	file:
_fileType	lib/csharp/WirelessPanda/Readers/UniversalReader.cs	/^        private string _fileType = string.Empty;$/;"	f	class:WirelessPanda.Readers.UniversalReader	file:
_filename	lib/csharp/WirelessPanda/Readers/Reader.cs	/^        private string _filename = string.Empty;$/;"	f	class:WirelessPanda.Readers.Reader	file:
_filename_output_cloaked	src/airdecloak-ng.c	/^char * _filename_output_cloaked;$/;"	v
_filename_output_filtered	src/airdecloak-ng.c	/^char * _filename_output_filtered;$/;"	v
_filename_output_invalid	src/airdecloak-ng.c	/^char * _filename_output_invalid;$/;"	v
_filters	src/airdecloak-ng.c	/^long _filters;$/;"	v
_input_file	src/airdecloak-ng.c	/^FILE * _input_file;$/;"	v
_is_wep	src/airdecloak-ng.c	/^int _is_wep;$/;"	v
_lastPosition	lib/csharp/WirelessPanda/WirelessDevice.cs	/^        private int _lastPosition = 0;$/;"	f	class:WirelessPanda.WirelessDevice	file:
_max_length	src/osdep/radiotap/radiotap_iter.h	/^	int _max_length;$/;"	m	struct:ieee80211_radiotap_iterator
_mm512_loadu_si512	src/pseudo_intrinsics.h	/^static inline __m512i _mm512_loadu_si512(void const *addr)$/;"	f
_mm512_set1_epi8	src/pseudo_intrinsics.h	303;"	d
_mm512_storeu_si512	src/pseudo_intrinsics.h	/^static inline void _mm512_storeu_si512(void *addr, vtype d)$/;"	f
_mm_cmov_si128	src/sse-intrinsics.c	134;"	d	file:
_mm_roti16_epi32	src/sse-intrinsics.c	126;"	d	file:
_mm_roti16_epi32	src/sse-intrinsics.c	156;"	d	file:
_mm_roti16_epi32	src/sse-intrinsics.c	159;"	d	file:
_mm_roti16_epi32	src/sse-intrinsics.c	170;"	d	file:
_mm_roti_epi32	src/sse-intrinsics.c	139;"	d	file:
_mm_roti_epi64	src/sse-intrinsics.c	146;"	d	file:
_mm_set1_epi64	src/pseudo_intrinsics.h	/^_inline __m128i _mm_set1_epi64(long long a)$/;"	f
_mm_set1_epi64	src/pseudo_intrinsics.h	564;"	d
_mm_set1_epi64x	src/sse-intrinsics.c	/^_inline __m128i _mm_set1_epi64x(long long a)$/;"	f
_mm_set_epi64	src/pseudo_intrinsics.h	/^_inline __m128i _mm_set_epi64(long long a, long long b)$/;"	f
_mm_set_epi64	src/pseudo_intrinsics.h	563;"	d
_mm_set_epi64x	src/sse-intrinsics.c	/^_inline __m128i _mm_set_epi64x (long long a, long long b)$/;"	f
_mm_slli_epi32a	src/sse-intrinsics.c	128;"	d	file:
_networks	src/wpaclean.c	/^} _networks;$/;"	v	typeref:struct:network
_next_bitmap	src/osdep/radiotap/radiotap_iter.h	/^	uint32_t *_next_bitmap;$/;"	m	struct:ieee80211_radiotap_iterator
_next_ns_data	src/osdep/radiotap/radiotap_iter.h	/^	unsigned char *_arg, *_next_ns_data;$/;"	m	struct:ieee80211_radiotap_iterator
_options_assume_null_packets_uncloaked	src/airdecloak-ng.c	/^int _options_assume_null_packets_uncloaked = 0;$/;"	v
_options_disable_base_filter	src/airdecloak-ng.c	/^int _options_disable_base_filter = 0;$/;"	v
_options_disable_retry	src/airdecloak-ng.c	/^int _options_disable_retry = 0;$/;"	v
_options_drop_fragments	src/airdecloak-ng.c	/^int _options_drop_fragments = 0;$/;"	v
_order	src/MD5_std.h	/^	MD5_pattern _order[21][MD5_N];$/;"	m	struct:__anon31
_outfd	src/wpaclean.c	/^static int _outfd;$/;"	v	file:
_output_clean_capture_file	src/airdecloak-ng.c	/^FILE * _output_clean_capture_file;$/;"	v
_output_cloaked_packets_file	src/airdecloak-ng.c	/^FILE * _output_cloaked_packets_file;$/;"	v
_packet_elt_head	src/airdecloak-ng.h	/^} * _packet_elt_head;$/;"	v	typeref:struct:packet_elt_header
_parseSuccess	lib/csharp/WirelessPanda/Readers/Reader.cs	/^        private bool _parseSuccess = false;$/;"	f	class:WirelessPanda.Readers.Reader	file:
_pfh_in	src/airdecloak-ng.c	/^struct pcap_file_header _pfh_in;$/;"	v	typeref:struct:pcap_file_header
_pfh_out	src/airdecloak-ng.c	/^struct pcap_file_header _pfh_out;$/;"	v	typeref:struct:pcap_file_header
_pool	src/MD5_std.h	/^	MD5_pool _pool[MD5_N];$/;"	m	struct:__anon31
_probedESSIDsList	lib/csharp/WirelessPanda/Station.cs	/^        private List<string> _probedESSIDsList = new List<string>();$/;"	f	class:WirelessPanda.Station	file:
_pstate	contrib/peek/omnipeek.c	/^} _pstate;$/;"	v	typeref:struct:pstate
_reader	lib/csharp/WirelessPanda/Readers/UniversalReader.cs	/^        private Reader _reader = null;$/;"	f	class:WirelessPanda.Readers.UniversalReader	file:
_reset_on_ext	src/osdep/radiotap/radiotap_iter.h	/^	int _reset_on_ext;$/;"	m	struct:ieee80211_radiotap_iterator
_rtheader	src/osdep/radiotap/radiotap_iter.h	/^	struct ieee80211_radiotap_header *_rtheader;$/;"	m	struct:ieee80211_radiotap_iterator	typeref:struct:ieee80211_radiotap_iterator::ieee80211_radiotap_header
_shasse2_cpuid	src/sha1-sse2.S	/^_shasse2_cpuid:$/;"	l
_shasse2_data	src/sha1-sse2.S	/^_shasse2_data:$/;"	l
_shasse2_ends	src/sha1-sse2.S	/^_shasse2_ends:$/;"	l
_shasse2_init	src/sha1-sse2.S	/^_shasse2_init:$/;"	l
_speed_test	src/aircrack-ng.c	/^static int _speed_test;$/;"	v	file:
_ss	src/airserv-ng.c	/^} _ss;$/;"	v	typeref:struct:sstate	file:
_state	src/besside-ng.c	/^} _state;$/;"	v	typeref:struct:state
_stations	lib/csharp/WirelessPanda/Readers/Reader.cs	/^        private List<Station> _stations = new List<Station>();$/;"	f	class:WirelessPanda.Readers.Reader	file:
_vns	src/osdep/radiotap/radiotap_iter.h	/^	const struct ieee80211_radiotap_vendor_namespaces *_vns;$/;"	m	struct:ieee80211_radiotap_iterator	typeref:struct:ieee80211_radiotap_iterator::ieee80211_radiotap_vendor_namespaces
_wi_in	src/airbase-ng.c	/^static struct wif *_wi_in, *_wi_out;$/;"	v	typeref:struct:wif	file:
_wi_in	src/aireplay-ng.c	/^static struct wif *_wi_in, *_wi_out;$/;"	v	typeref:struct:wif	file:
_wi_in	src/airtun-ng.c	/^static struct wif *_wi_in, *_wi_out;$/;"	v	typeref:struct:wif	file:
_wi_in	src/tkiptun-ng.c	/^static struct wif *_wi_in, *_wi_out;$/;"	v	typeref:struct:wif	file:
_wi_out	src/airbase-ng.c	/^static struct wif *_wi_in, *_wi_out;$/;"	v	typeref:struct:	file:
_wi_out	src/aireplay-ng.c	/^static struct wif *_wi_in, *_wi_out;$/;"	v	typeref:struct:	file:
_wi_out	src/airtun-ng.c	/^static struct wif *_wi_in, *_wi_out;$/;"	v	typeref:struct:	file:
_wi_out	src/tkiptun-ng.c	/^static struct wif *_wi_in, *_wi_out;$/;"	v	typeref:struct:	file:
_wstate	src/wesside-ng.c	/^} _wstate;$/;"	v	typeref:struct:wstate
a_chans	src/airodump-ng.h	/^int a_chans   [] =$/;"	v
a_count	src/aireplay-ng.c	/^    int a_count;$/;"	m	struct:options	file:
a_count	src/tkiptun-ng.c	/^    int a_count;$/;"	m	struct:options	file:
a_delay	src/aireplay-ng.c	/^    int a_delay;$/;"	m	struct:options	file:
a_delay	src/tkiptun-ng.c	/^    int a_delay;$/;"	m	struct:options	file:
a_mode	src/aireplay-ng.c	/^    int a_mode;$/;"	m	struct:options	file:
a_mode	src/tkiptun-ng.c	/^    int a_mode;$/;"	m	struct:options	file:
abg_chans	src/airodump-ng.h	/^int abg_chans [] =$/;"	v
ac_ifp	src/include/if_arp.h	/^	struct 	ifnet *ac_ifp;		\/* network-visible interface *\/$/;"	m	struct:arpcom	typeref:struct:arpcom::ifnet
ac_netgraph	src/include/if_arp.h	/^	void	*ac_netgraph;		\/* ng_ether(4) netgraph node info *\/$/;"	m	struct:arpcom
accept	lib/csharp/MonoExample/NDesk-dbus/UnixNativeTransport.cs	/^			protected static extern int accept (int sockfd, byte[] addr, ref uint addrlen);$/;"	m	class:NDesk.DBus.Transports.UnixSocket	file:
access	src/airbase-ng.c	/^    struct timeval  access;$/;"	m	struct:Fragment_list	typeref:struct:Fragment_list::timeval	file:
access	src/airtun-ng.c	/^    struct timeval  access;$/;"	m	struct:Fragment_list	typeref:struct:Fragment_list::timeval	file:
ack	src/airodump-ng.h	/^    int ack;                 \/* number of ACK frames      *\/$/;"	m	struct:NA_info
ack_old	src/airodump-ng.h	/^    int ack_old;             \/* old number of ACK frames  *\/$/;"	m	struct:NA_info
ackps	src/airodump-ng.h	/^    int ackps;               \/* number of ACK frames\/s    *\/$/;"	m	struct:NA_info
acp_aci_aifsn	src/include/ieee80211.h	/^	u_int8_t	acp_aci_aifsn;$/;"	m	struct:ieee80211_wme_acparams
acp_logcwminmax	src/include/ieee80211.h	/^	u_int8_t	acp_logcwminmax;$/;"	m	struct:ieee80211_wme_acparams
acp_txop	src/include/ieee80211.h	/^	u_int16_t	acp_txop;$/;"	m	struct:ieee80211_wme_acparams
active_scan_sim	src/airodump-ng.h	/^    int active_scan_sim;    \/* simulates an active scan, sending probe requests *\/$/;"	m	struct:globals
addAccessPoint	lib/csharp/WirelessPanda/Readers/Reader.cs	/^        protected bool addAccessPoint(AccessPoint ap)$/;"	m	class:WirelessPanda.Readers.Reader
addCF	src/airbase-ng.c	/^int addCF(unsigned char* packet, int length)$/;"	f
addClient	lib/csharp/WirelessPanda/AccessPoint.cs	/^        public void addClient(Station sta)$/;"	m	class:WirelessPanda.AccessPoint
addESSID	src/airbase-ng.c	/^int addESSID(char* essid, int len, int expiration)$/;"	f
addESSIDfile	src/airbase-ng.c	/^int addESSIDfile(char* filename)$/;"	f
addFrag	src/airbase-ng.c	/^int addFrag(unsigned char* packet, unsigned char* smac, int len)$/;"	f
addFrag	src/airtun-ng.c	/^int addFrag(unsigned char* packet, unsigned char* smac, int len)$/;"	f
addMAC	src/airbase-ng.c	/^int addMAC(pMAC_t pMAC, unsigned char* mac)$/;"	f
addMACfile	src/airbase-ng.c	/^int addMACfile(pMAC_t pMAC, char* filename)$/;"	f
addStation	lib/csharp/WirelessPanda/Readers/Reader.cs	/^        protected bool addStation(Station s)$/;"	m	class:WirelessPanda.Readers.Reader
add_cracker_fds	src/besside-ng.c	/^static int add_cracker_fds(fd_set *fds, int max)$/;"	f	file:
add_crc32	src/crypto.c	/^int add_crc32(unsigned char* data, int length)$/;"	f
add_crc32_plain	src/crypto.c	/^int add_crc32_plain(unsigned char* data, int length)$/;"	f
add_icv	src/airbase-ng.c	/^void add_icv(unsigned char *input, int len, int offset)$/;"	f
add_icv	src/aireplay-ng.c	/^void add_icv(unsigned char *input, int len, int offset)$/;"	f
add_icv	src/airtun-ng.c	/^void add_icv(unsigned char *input, int len, int offset)$/;"	f
add_icv	src/tkiptun-ng.c	/^void add_icv(unsigned char *input, int len, int offset)$/;"	f
add_keystream	src/wesside-ng.c	/^static void add_keystream(struct wstate *ws, struct ieee80211_frame* wh, int rd)$/;"	f	file:
add_memory_link	src/memory.c	/^static void add_memory_link(void *v) {$/;"	f	file:
add_node_if_not_complete	src/airdecloak-ng.c	/^BOOLEAN add_node_if_not_complete() {$/;"	f
add_to_list	src/besside-ng-crawler.c	/^struct bsslist *add_to_list(struct bsslist *bsl, const u_char *bssid) {$/;"	f
addarp	src/airbase-ng.c	/^int addarp(unsigned char* packet, int length)$/;"	f
addr	src/airtun-ng.c	/^    unsigned char *addr;$/;"	m	struct:net_entry	file:
adhoc	src/airbase-ng.c	/^    int adhoc;$/;"	m	struct:options	file:
ag_lib	scripts/airgraph-ng/lib/Makefile	/^ag_lib		= $(DESTDIR)$(bindir)\/lib$/;"	m
airDumpOpen	scripts/airdrop-ng/airdrop/libDumpParse.py	/^	def airDumpOpen(self,file):$/;"	m	class:airDumpParse
airDumpOpen	scripts/airgraph-ng/graphviz/libDumpParse.py	/^    def airDumpOpen(self,file):$/;"	m	class:airDumpParse
airDumpParse	scripts/airdrop-ng/airdrop/libDumpParse.py	/^	def airDumpParse(self,cleanedDump):$/;"	m	class:airDumpParse
airDumpParse	scripts/airdrop-ng/airdrop/libDumpParse.py	/^class airDumpParse:$/;"	c
airDumpParse	scripts/airgraph-ng/graphviz/libDumpParse.py	/^    def airDumpParse(self,cleanedDump):$/;"	m	class:airDumpParse
airDumpParse	scripts/airgraph-ng/graphviz/libDumpParse.py	/^class airDumpParse:$/;"	c
airodump_start_time	src/airodump-ng.h	/^    char * airodump_start_time;$/;"	m	struct:globals
airpcap_close	src/osdep/airpcap.c	/^void airpcap_close(void)$/;"	f
airpcap_get_mac	src/osdep/airpcap.c	/^int airpcap_get_mac(void *mac)$/;"	f
airpcap_handle	contrib/airpcap/airpcap.c	/^static PAirpcapHandle airpcap_handle;$/;"	v	file:
airpcap_handle	src/osdep/airpcap.c	/^PAirpcapHandle airpcap_handle;$/;"	v
airpcap_init	src/osdep/airpcap.c	/^int airpcap_init(char *param)$/;"	f
airpcap_inject	src/osdep/airpcap.c	/^int airpcap_inject(void *buf, int len, struct tx_info *ti)$/;"	f
airpcap_set_chan	src/osdep/airpcap.c	/^int airpcap_set_chan(int chan)$/;"	f
airpcap_set_mac	src/osdep/airpcap.c	/^int airpcap_set_mac(void *mac)$/;"	f
airpcap_sniff	src/osdep/airpcap.c	/^int airpcap_sniff(void *buf, int len, struct rx_info *ri)$/;"	f
alarmed	src/airbase-ng.c	/^int ctrl_c, alarmed, invalid_channel_displayed;$/;"	v
alarmed	src/aireplay-ng.c	/^int ctrl_c, alarmed;$/;"	v
alarmed	src/airtun-ng.c	/^int ctrl_c, alarmed;$/;"	v
alarmed	src/tkiptun-ng.c	/^int ctrl_c, alarmed;$/;"	v
align	src/osdep/radiotap/radiotap_iter.h	/^	uint8_t align:4, size:4;$/;"	m	struct:radiotap_align_size
align	src/osdep/radiotap/radiotap_iter.h	/^	uint8_t align:4, size:4;$/;"	m	struct:radiotap_override
align_size	src/osdep/radiotap/radiotap_iter.h	/^	const struct radiotap_align_size *align_size;$/;"	m	struct:ieee80211_radiotap_namespace	typeref:struct:ieee80211_radiotap_namespace::radiotap_align_size
align_size_000000_00	src/osdep/radiotap/parse.c	/^static const struct radiotap_align_size align_size_000000_00[] = {$/;"	v	typeref:struct:radiotap_align_size	file:
alloc_cnt	src/memdbg.h	/^	unsigned alloc_cnt;$/;"	m	struct:MEMDBG_HANDLE_t
allsessions	src/aircrack-ptw-lib.h	/^	PTW_session * allsessions;$/;"	m	struct:__anon41
allsessions_size	src/aircrack-ptw-lib.h	/^	int allsessions_size;$/;"	m	struct:__anon41
allwpa	src/airbase-ng.c	/^    int allwpa;$/;"	m	struct:options	file:
alter_endianity	src/memory.c	/^void alter_endianity(void *_x, unsigned int size) {$/;"	f
alter_endianity_to_BE	src/memory.h	331;"	d
alter_endianity_to_BE	src/memory.h	346;"	d
alter_endianity_to_BE	src/memory.h	359;"	d
alter_endianity_to_BE	src/memory.h	364;"	d
alter_endianity_to_BE64	src/memory.h	332;"	d
alter_endianity_to_BE64	src/memory.h	351;"	d
alter_endianity_to_BE64	src/memory.h	361;"	d
alter_endianity_to_BE64	src/memory.h	366;"	d
alter_endianity_to_LE	src/memory.h	333;"	d
alter_endianity_to_LE	src/memory.h	344;"	d
alter_endianity_to_LE	src/memory.h	360;"	d
alter_endianity_to_LE	src/memory.h	365;"	d
alter_endianity_to_LE64	src/memory.h	338;"	d
alter_endianity_to_LE64	src/memory.h	345;"	d
alter_endianity_to_LE64	src/memory.h	362;"	d
alter_endianity_to_LE64	src/memory.h	367;"	d
alter_endianity_w	src/memory.c	/^void alter_endianity_w(void *_x, unsigned int count) {$/;"	f
alter_endianity_w64	src/memory.c	/^void alter_endianity_w64(void *_x, unsigned int count) {$/;"	f
amode	src/aircrack-ng.h	/^	int amode;					 \/* attack mode          *\/$/;"	m	struct:options
anal	src/wesside-ng.c	/^static void anal(struct wstate *ws, unsigned char* buf, int rd) \/\/ yze$/;"	f	file:
anonce	src/crypto.h	/^    unsigned char anonce[32];           \/* authenticator nonce          *\/$/;"	m	struct:WPA_ST_info
anonce	src/include/eapol.h	/^    uint8_t anonce[32];   \/* authenticator nonce      *\/$/;"	m	struct:WPA_hdsk
ap	src/aircrack-ng.h	/^	struct AP_info *ap;			 \/* parent AP                    *\/$/;"	m	struct:ST_info	typeref:struct:ST_info::AP_info
ap	src/aircrack-ng.h	/^	struct AP_info *ap;$/;"	m	struct:options	typeref:struct:options::AP_info
ap	src/aircrack-ng.h	/^	struct AP_info* ap;				\/* AP information *\/$/;"	m	struct:WPA_data	typeref:struct:WPA_data::AP_info
ap	src/aireplay-ng.c	/^struct APt ap[MAX_APS];$/;"	v	typeref:struct:APt
ap	src/tkiptun-ng.c	/^struct APt ap[MAX_APS];$/;"	v	typeref:struct:APt
apColor	scripts/airgraph-ng/graphviz/lib_Airgraphviz.py	/^def apColor(Label,APcolorList): #OLDNAME AP_Label_Color$/;"	f
apTag	scripts/airdrop-ng/airdrop/libDumpParse.py	/^	def apTag(self,devices):$/;"	m	class:airDumpParse
apTag	scripts/airgraph-ng/graphviz/libDumpParse.py	/^    def apTag(self,devices):$/;"	m	class:airDumpParse
ap_1st	src/aircrack-ng.c	/^struct AP_info *ap_1st;			 \/* first item in linked list    *\/$/;"	v	typeref:struct:AP_info
ap_1st	src/airodump-ng.h	/^    struct AP_info *ap_1st, *ap_end;$/;"	m	struct:globals	typeref:struct:globals::AP_info
ap_1st	src/ivstools.c	/^    struct AP_info *ap_1st, *ap_end;$/;"	m	struct:globals	typeref:struct:globals::AP_info	file:
ap_end	src/airodump-ng.h	/^    struct AP_info *ap_1st, *ap_end;$/;"	m	struct:globals	typeref:struct:globals::
ap_end	src/ivstools.c	/^    struct AP_info *ap_1st, *ap_end;$/;"	m	struct:globals	typeref:struct:globals::	file:
ap_setup_locked	src/airodump-ng.h	/^    unsigned char ap_setup_locked; \/* AP setup locked *\/$/;"	m	struct:WPS_info
ar_hln	src/include/if_arp.h	/^	u_char	ar_hln;		\/* length of hardware address *\/$/;"	m	struct:arphdr
ar_hrd	src/include/if_arp.h	/^	u_short	ar_hrd;		\/* format of hardware address *\/$/;"	m	struct:arphdr
ar_op	src/include/if_arp.h	/^	u_short	ar_op;		\/* one of: *\/$/;"	m	struct:arphdr
ar_pln	src/include/if_arp.h	/^	u_char	ar_pln;		\/* length of protocol address *\/$/;"	m	struct:arphdr
ar_pro	src/include/if_arp.h	/^	u_short	ar_pro;		\/* format of protocol address *\/$/;"	m	struct:arphdr
ar_sha	src/include/if_arp.h	/^	u_char	ar_sha[];	\/* sender hardware address *\/$/;"	m	struct:arphdr
ar_sha	src/include/if_arp.h	76;"	d
ar_spa	src/include/if_arp.h	/^	u_char	ar_spa[];	\/* sender protocol address *\/$/;"	m	struct:arphdr
ar_spa	src/include/if_arp.h	77;"	d
ar_tha	src/include/if_arp.h	/^	u_char	ar_tha[];	\/* target hardware address *\/$/;"	m	struct:arphdr
ar_tha	src/include/if_arp.h	78;"	d
ar_tpa	src/include/if_arp.h	/^	u_char	ar_tpa[];	\/* target protocol address *\/$/;"	m	struct:arphdr
ar_tpa	src/include/if_arp.h	79;"	d
argumentNullExceptionConstructor	lib/csharp/MonoExample/NDesk-dbus/TypeImplementer.cs	/^		static ConstructorInfo argumentNullExceptionConstructor = typeof (ArgumentNullException).GetConstructor (new Type[] {typeof (string)});$/;"	f	class:NDesk.DBus.TypeImplementer	file:
arp	src/airbase-ng.c	/^struct ARP_req * arp;$/;"	v	typeref:struct:ARP_req
arp_flags	src/include/if_arp.h	/^	int	arp_flags;			\/* flags *\/$/;"	m	struct:arpreq
arp_ha	src/include/if_arp.h	/^	struct	sockaddr arp_ha;		\/* hardware address *\/$/;"	m	struct:arpreq	typeref:struct:arpreq::sockaddr
arp_pa	src/include/if_arp.h	/^	struct	sockaddr arp_pa;		\/* protocol address *\/$/;"	m	struct:arpreq	typeref:struct:arpreq::sockaddr
arp_spares	src/include/if_arp.h	/^	uint64_t arp_spares[4];	\/* For either the upper or lower half. *\/$/;"	m	struct:arpstat
arpcom	src/include/if_arp.h	/^struct	arpcom {$/;"	s
arphdr	src/include/if_arp.h	/^struct	arphdr {$/;"	s
arphdr_len	src/include/if_arp.h	83;"	d
arphdr_len2	src/include/if_arp.h	81;"	d
arpreq	src/include/if_arp.h	/^struct arpreq {$/;"	s
arpstat	src/include/if_arp.h	/^struct arpstat {$/;"	s
arptype_in	src/airbase-ng.c	/^    int fd_in,  arptype_in;$/;"	m	struct:devices	file:
arptype_in	src/aireplay-ng.c	/^    int fd_in,  arptype_in;$/;"	m	struct:devices	file:
arptype_in	src/airtun-ng.c	/^    int fd_in,  arptype_in;$/;"	m	struct:devices	file:
arptype_in	src/osdep/linux.c	/^    int fd_in,  arptype_in;$/;"	m	struct:priv_linux	file:
arptype_in	src/packetforge-ng.c	/^    int fd_in,  arptype_in;$/;"	m	struct:devices	file:
arptype_in	src/tkiptun-ng.c	/^    int fd_in,  arptype_in;$/;"	m	struct:devices	file:
arptype_out	src/airbase-ng.c	/^    int fd_out, arptype_out;$/;"	m	struct:devices	file:
arptype_out	src/aireplay-ng.c	/^    int fd_out, arptype_out;$/;"	m	struct:devices	file:
arptype_out	src/airtun-ng.c	/^    int fd_out, arptype_out;$/;"	m	struct:devices	file:
arptype_out	src/osdep/linux.c	/^    int fd_out, arptype_out;$/;"	m	struct:priv_linux	file:
arptype_out	src/packetforge-ng.c	/^    int fd_out, arptype_out;$/;"	m	struct:devices	file:
arptype_out	src/tkiptun-ng.c	/^    int fd_out, arptype_out;$/;"	m	struct:devices	file:
array_contains	src/airodump-ng.c	/^int array_contains(int *array, int length, int value)$/;"	f
asmB	lib/csharp/MonoExample/NDesk-dbus/TypeImplementer.cs	/^		static AssemblyBuilder asmB;$/;"	f	class:NDesk.DBus.TypeImplementer	file:
asso_client	src/airodump-ng.h	/^    int asso_client;        \/* only show associated clients *\/$/;"	m	struct:globals
associated	src/easside-ng.c	/^void associated(struct east_state *es, struct timeval *tv)$/;"	f
astate2str	src/besside-ng.c	/^static const char *astate2str(int astate)$/;"	f	file:
atoi64	src/wpapsk.c	/^char atoi64[0x100];$/;"	v
atomic_read	src/aircrack-ng.c	/^int atomic_read( read_buf *rb, int fd, int len, void *buf )$/;"	f
attack	src/besside-ng.c	/^static void attack(struct network *n)$/;"	f	file:
attack_check	src/aireplay-ng.c	/^int attack_check(unsigned char* bssid, char* essid, unsigned char* capa, struct wif *wi)$/;"	f
attack_check	src/tkiptun-ng.c	/^int attack_check(unsigned char* bssid, char* essid, unsigned char* capa, struct wif *wi)$/;"	f
attack_continue	src/besside-ng.c	/^static void attack_continue(struct network *n)$/;"	f	file:
attack_get	src/besside-ng.c	/^static struct network *attack_get(void)$/;"	f	file:
attack_next	src/besside-ng.c	/^static void attack_next(void)$/;"	f	file:
attack_ping	src/besside-ng.c	/^static void attack_ping(void *a)$/;"	f	file:
attack_watchdog	src/besside-ng.c	/^static void attack_watchdog(void *arg)$/;"	f	file:
attack_wep	src/besside-ng.c	/^static void attack_wep(struct network *n)$/;"	f	file:
attack_wpa	src/besside-ng.c	/^static void attack_wpa(struct network *n)$/;"	f	file:
author	scripts/airdrop-ng/setup.py	/^      author='TheX1le',$/;"	v
author	scripts/airgraph-ng/setup.py	/^      author='TheX1le',$/;"	v
average_signal	src/airdecloak-ng.h	/^	int average_signal; \/\/ Calculate the average signal (for later)$/;"	m	struct:packet_elt_header
avg_power	src/airodump-ng.h	/^    int avg_power;            \/* averaged signal power    *\/$/;"	m	struct:AP_info
b	src/MD5_std.h	/^	char b[60];$/;"	m	union:__anon24
b	src/aircrack-ptw-lib.h	/^	uint8_t b;$/;"	m	struct:__anon39
back	src/aircrack-ng.h	/^	int back;						\/* back marker for the circular buffers *\/$/;"	m	struct:WPA_data
band	src/include/ieee80211.h	/^	struct ieee80211_band band[4];		\/* up to 4 sub bands *\/$/;"	m	struct:ieee80211_country_ie	typeref:struct:ieee80211_country_ie::ieee80211_band
banner	scripts/versuck-ng/versuck-ng	/^def banner():$/;"	f
base	src/airbase-ng.c	/^    struct AP_info *base;    \/* AP this client belongs to *\/$/;"	m	struct:ST_info	typeref:struct:ST_info::AP_info	file:
base	src/airodump-ng.h	/^    struct AP_info *base;    \/* AP this client belongs to *\/$/;"	m	struct:ST_info	typeref:struct:ST_info::AP_info
base	src/ivstools.c	/^    struct AP_info *base;    \/* AP this client belongs to *\/$/;"	m	struct:ST_info	typeref:struct:ST_info::AP_info	file:
base_prga	src/easside-ng.c	/^void base_prga(struct east_state *es, struct ieee80211_frame *wh, int len)$/;"	f
batch_process	src/airolib-ng.c	/^void batch_process(sqlite3* db) {$/;"	f
batt	src/airodump-ng.h	/^    char * batt;            \/* Battery string       *\/$/;"	m	struct:globals
bcolors	scripts/airdrop-ng/airdrop/__init__.py	/^class bcolors:$/;"	c
be16_to_cpu	src/osdep/byteorder.h	410;"	d
be16toh	src/osdep/byteorder.h	416;"	d
be16toh	src/osdep/radiotap/platform.h	14;"	d
be32_to_cpu	src/osdep/byteorder.h	408;"	d
be32toh	src/osdep/byteorder.h	422;"	d
be32toh	src/osdep/radiotap/platform.h	19;"	d
be64_to_cpu	src/osdep/byteorder.h	406;"	d
be64toh	src/osdep/radiotap/platform.h	24;"	d
beacon_cache	src/airbase-ng.c	/^    int beacon_cache;$/;"	m	struct:options	file:
beacon_logged	src/airodump-ng.h	/^    int beacon_logged;        \/* We need 1 beacon per AP  *\/$/;"	m	struct:AP_info
beacon_saved	src/besside-ng-crawler.c	/^  u_char beacon_saved;$/;"	m	struct:bsslist	file:
beacon_thread	src/airbase-ng.c	/^void beacon_thread( void *arg )$/;"	f
beaconpid	src/airbase-ng.c	/^pthread_t beaconpid;$/;"	v
berlin	src/airodump-ng.h	/^    int berlin;               \/* number of seconds it takes in berlin to fill the whole screen with APs*\/$/;"	m	struct:globals
best_power	src/airodump-ng.h	/^    int best_power;           \/* best signal power    *\/$/;"	m	struct:AP_info
betoh16	src/osdep/byteorder.h	311;"	d
betoh16	src/osdep/byteorder.h	368;"	d
betoh32	src/osdep/byteorder.h	314;"	d
betoh32	src/osdep/byteorder.h	371;"	d
betoh64	src/osdep/byteorder.h	317;"	d
betoh64	src/osdep/byteorder.h	374;"	d
bf_nkeys	src/aircrack-ng.c	/^int bf_nkeys[256];$/;"	v
bf_pipe	src/aircrack-ng.c	/^int bf_pipe[256][2];			 \/* bruteforcer 'queue' pipe	 *\/$/;"	v
bf_wepkey	src/aircrack-ng.c	/^unsigned char bf_wepkey[64];$/;"	v
bg_chans	src/airodump-ng.h	/^int bg_chans  [] =$/;"	v
bidir	src/airtun-ng.c	/^    int bidir;$/;"	m	struct:options	file:
bind	lib/csharp/MonoExample/NDesk-dbus/UnixNativeTransport.cs	/^			protected static extern int bind (int sockfd, byte[] my_addr, uint addrlen);$/;"	m	class:NDesk.DBus.Transports.UnixSocket	file:
bindir	common.mak	/^bindir          = $(prefix)\/bin$/;"	m
bitrates	src/aireplay-ng.c	/^int bitrates[RATE_NUM]={RATE_1M, RATE_2M, RATE_5_5M, RATE_6M, RATE_9M, RATE_11M, RATE_12M, RATE_18M, RATE_24M, RATE_36M, RATE_48M, RATE_54M};$/;"	v
bitrates	src/tkiptun-ng.c	/^int bitrates[RATE_NUM]={RATE_1M, RATE_2M, RATE_5_5M, RATE_6M, RATE_9M, RATE_11M, RATE_12M, RATE_18M, RATE_24M, RATE_36M, RATE_48M, RATE_54M};$/;"	v
bittest	src/aireplay-ng.c	/^    int bittest;$/;"	m	struct:options	file:
bittest	src/tkiptun-ng.c	/^    int bittest;$/;"	m	struct:options	file:
blk_SHA1_Block	src/sha1-git.c	/^static void blk_SHA1_Block(blk_SHA_CTX *ctx, const unsigned int *data)$/;"	f	file:
blk_SHA1_Final	src/sha1-git.c	/^void blk_SHA1_Final(unsigned char hashout[20], blk_SHA_CTX *ctx)$/;"	f
blk_SHA1_Init	src/sha1-git.c	/^void blk_SHA1_Init(blk_SHA_CTX *ctx)$/;"	f
blk_SHA1_Update	src/sha1-git.c	/^void blk_SHA1_Update(blk_SHA_CTX *ctx, const void *data, unsigned long len)$/;"	f
blk_SHA_CTX	src/sha1-git.h	/^} blk_SHA_CTX;$/;"	t	typeref:struct:__anon14
brutebytes	src/aircrack-ng.h	/^	int brutebytes[64];			\/* bytes to bruteforce *\/$/;"	m	struct:options
bssid	src/airbase-ng.c	/^    unsigned char bssid[6];$/;"	m	struct:AP_conf	file:
bssid	src/aircrack-ng.h	/^	unsigned char bssid [6];     \/* BSSID *\/$/;"	m	struct:mergeBSSID
bssid	src/aircrack-ng.h	/^	unsigned char bssid[6];				 \/* access point MAC address     *\/$/;"	m	struct:AP_info
bssid	src/aircrack-ng.h	/^	unsigned char bssid[6];				 \/* target BSSID         *\/$/;"	m	struct:options
bssid	src/airdecap-ng.c	/^    unsigned char bssid[6];$/;"	m	struct:options	file:
bssid	src/airdecloak-ng.h	/^    unsigned char  bssid[6];$/;"	m	struct:packet_elt
bssid	src/aireplay-ng.c	/^    unsigned char bssid[6];$/;"	m	struct:APt	file:
bssid	src/airodump-ng.h	/^    unsigned char bssid[6];   \/* the access point's MAC   *\/$/;"	m	struct:AP_info
bssid	src/besside-ng-crawler.c	/^  u_char *bssid;$/;"	m	struct:bsslist	file:
bssid	src/crypto.h	/^    unsigned char bssid[6];             \/* authenticator MAC            *\/$/;"	m	struct:WPA_ST_info
bssid	src/ivstools.c	/^    unsigned char bssid[6];   \/* the access point's MAC   *\/$/;"	m	struct:AP_info	file:
bssid	src/packetforge-ng.c	/^    unsigned char bssid[6];$/;"	m	struct:options	file:
bssid	src/tkiptun-ng.c	/^    unsigned char bssid[6];$/;"	m	struct:APt	file:
bssid_list_1st	src/aircrack-ng.h	/^	struct mergeBSSID * bssid_list_1st;$/;"	m	struct:options	typeref:struct:options::mergeBSSID
bssid_set	src/aircrack-ng.h	/^	int bssid_set;				 \/* bssid set flag       *\/$/;"	m	struct:options
bssidmerge	src/aircrack-ng.h	/^	char *bssidmerge;$/;"	m	struct:options
bsslist	src/besside-ng-crawler.c	/^struct bsslist {$/;"	s	file:
buddy_inet_check	src/easside-ng.c	/^void buddy_inet_check(struct east_state *es)$/;"	f
buddy_packet	src/easside-ng.c	/^void buddy_packet(struct east_state *es)$/;"	f
buf	src/airbase-ng.c	/^    unsigned char *buf;$/;"	m	struct:ARP_req	file:
buf	src/aireplay-ng.c	/^    unsigned char *buf;$/;"	m	struct:ARP_req	file:
buf	src/airtun-ng.c	/^    unsigned char *buf;$/;"	m	struct:ARP_req	file:
buf	src/tkiptun-ng.c	/^    unsigned char *buf;$/;"	m	struct:ARP_req	file:
buf1	src/aircrack-ng.c	/^	void *buf1;$/;"	m	struct:__anon1	file:
buf2	src/aircrack-ng.c	/^	void *buf2;$/;"	m	struct:__anon1	file:
buffer	src/aircrack-ng.c	/^unsigned char *buffer = NULL;			\/* from read_thread *\/$/;"	v
buffer	src/airdecap-ng.c	/^unsigned char buffer[65536];$/;"	v
buffer	src/airdecloak-ng.c	/^unsigned char buffer[65536];$/;"	v
buffer2	src/airdecap-ng.c	/^unsigned char buffer2[65536];$/;"	v
buildPacket	scripts/airdrop-ng/airdrop-ng	/^    def buildPacket(self,type,dstAddr,srcAddr,bssid,reasonCode):$/;"	m	class:packetGenerator
build_arp_request	src/tkiptun-ng.c	/^int build_arp_request(unsigned char* packet, int *length, int toDS)$/;"	f
bus	lib/csharp/MonoExample/NDesk-dbus/Bus.cs	/^		IBus bus;$/;"	f	class:NDesk.DBus.Bus	file:
busObject	lib/csharp/MonoExample/NDesk-dbus/DProxy.cs	/^		protected BusObject busObject;$/;"	f	class:NDesk.DBus.DProxy
bus_name	lib/csharp/MonoExample/NDesk-dbus/BusObject.cs	/^		string bus_name;$/;"	f	class:NDesk.DBus.BusObject	file:
buses	lib/csharp/MonoExample/NDesk-dbus/Bus.cs	/^		static Dictionary<string,Bus> buses = new Dictionary<string,Bus> ();$/;"	f	class:NDesk.DBus.Bus	file:
button1	lib/csharp/Example1/Example1/Form1.Designer.cs	/^        private System.Windows.Forms.Button button1;$/;"	f	class:Example1.Form1	file:
button1_Click	lib/csharp/Example1/Example1/Form1.cs	/^        private void button1_Click(object sender, EventArgs e)$/;"	m	class:Example1.Form1	file:
bytes	scripts/dcrack.py	/^	bytes = lambda a, b : a$/;"	v
c_dbm	src/besside-ng.c	/^	int		c_dbm;$/;"	m	struct:client	file:
c_handshake	src/besside-ng.c	/^	struct packet	c_handshake[4];$/;"	m	struct:client	typeref:struct:client::packet	file:
c_handshake	src/wpaclean.c	/^        struct packet   c_handshake[4];$/;"	m	struct:client	typeref:struct:client::packet	file:
c_ip	src/airserv-ng.c	/^	char		c_ip[16];$/;"	m	struct:client	file:
c_mac	src/besside-ng.c	/^	unsigned char	c_mac[6];$/;"	m	struct:client	file:
c_mac	src/wpaclean.c	/^        unsigned char   c_mac[6];$/;"	m	struct:client	file:
c_next	src/airserv-ng.c	/^	struct client	*c_next;$/;"	m	struct:client	typeref:struct:client::client	file:
c_next	src/besside-ng.c	/^	struct channel	*c_next;$/;"	m	struct:channel	typeref:struct:channel::channel	file:
c_next	src/besside-ng.c	/^	struct client	*c_next;$/;"	m	struct:client	typeref:struct:client::client	file:
c_next	src/wpaclean.c	/^        struct client   *c_next;$/;"	m	struct:client	typeref:struct:client::client	file:
c_num	src/besside-ng.c	/^	int		c_num;$/;"	m	struct:channel	file:
c_prev	src/airserv-ng.c	/^	struct client	*c_prev;$/;"	m	struct:client	typeref:struct:client::client	file:
c_s	src/airserv-ng.c	/^	int		c_s;$/;"	m	struct:client	file:
c_wpa	src/besside-ng.c	/^	int		c_wpa;$/;"	m	struct:client	file:
c_wpa	src/wpaclean.c	/^	int		c_wpa;$/;"	m	struct:client	file:
c_wpa_got	src/besside-ng.c	/^	int		c_wpa_got;$/;"	m	struct:client	file:
c_wpa_got	src/wpaclean.c	/^        int             c_wpa_got;$/;"	m	struct:client	file:
caffelatte	src/airbase-ng.c	/^    int caffelatte;$/;"	m	struct:options	file:
caffelatte_thread	src/airbase-ng.c	/^void caffelatte_thread( void )$/;"	f
caffelattepid	src/airbase-ng.c	/^pthread_t caffelattepid;$/;"	v
calc_4pmk	src/sha1-sse2.h	/^void calc_4pmk(char* _key1, char* _key2, char* _key3, char* _key4, char* _essid, unsigned char* _pmk1, unsigned char* _pmk2, unsigned char* _pmk3, unsigned char* _pmk4)$/;"	f
calc_crc	src/crypto.c	/^unsigned long calc_crc( unsigned char * buf, int len)$/;"	f
calc_crc_buf	src/crypto.c	/^int calc_crc_buf( unsigned char *buf, int len )$/;"	f
calc_crc_osdep	src/osdep/linux.c	/^unsigned long calc_crc_osdep( unsigned char * buf, int len)$/;"	f
calc_crc_plain	src/crypto.c	/^unsigned long calc_crc_plain( unsigned char * buf, int len)$/;"	f
calc_mic	src/crypto.c	/^void calc_mic (struct AP_info *ap, unsigned char pmk[32], unsigned char ptk[80], unsigned char mic[20]) {$/;"	f
calc_pmk	src/crypto.c	/^void calc_pmk( char *key, char *essid_pre, unsigned char pmk[40] )$/;"	f
calc_poll	src/aircrack-ng.c	/^int calc_poll( int B )$/;"	f
calc_ptk	src/crypto.c	/^int calc_ptk( struct WPA_ST_info *wpa, unsigned char pmk[32] )$/;"	f
calc_tkip_mic	src/crypto.c	/^int calc_tkip_mic(unsigned char* packet, int length, unsigned char ptk[80], unsigned char value[8])$/;"	f
calc_tkip_mic_key	src/crypto.c	/^int calc_tkip_mic_key(unsigned char* packet, int length, unsigned char key[8])$/;"	f
calc_tkip_ppk	src/crypto.c	/^int calc_tkip_ppk( unsigned char *h80211, int caplen, unsigned char TK1[16], unsigned char key[16] )$/;"	f
calc_votes	src/kstats.c	/^void calc_votes( unsigned char *ivbuf, long nb_ivs,$/;"	f
calctime	src/common.c	/^void calctime(time_t t, float perc) {$/;"	f
callback	contrib/peek/omnipeek.c	/^static int WINAPI callback(unsigned char *data, int len, int UNUSED(caplen),$/;"	f	file:
calloc	src/memdbg.h	152;"	d
calloc	src/memory.c	70;"	d	file:
can_write	src/wesside-ng.c	/^static void can_write(struct wstate *ws)$/;"	f	file:
cap_out	src/packetforge-ng.c	/^    char *cap_out;$/;"	m	struct:options	file:
capa	src/airbase-ng.c	/^    unsigned char capa[2];$/;"	m	struct:AP_conf	file:
caplen	src/pcap.h	/^    uint32_t caplen;$/;"	m	struct:pcap_pkthdr
capture_ask_packet	src/aireplay-ng.c	/^int capture_ask_packet( int *caplen, int just_grab )$/;"	f
capture_ask_packet	src/packetforge-ng.c	/^int capture_ask_packet( int *caplen )$/;"	f
capture_ask_packet	src/tkiptun-ng.c	/^int capture_ask_packet( int *caplen, int just_grab )$/;"	f
capture_packet	src/airbase-ng.c	/^int capture_packet(unsigned char* packet, int length)$/;"	f
card_get_chan	src/airserv-ng.c	/^static int card_get_chan(struct sstate *ss)$/;"	f	file:
card_get_mac	src/airserv-ng.c	/^static int card_get_mac(struct sstate *ss, unsigned char *mac)$/;"	f	file:
card_get_monitor	src/airserv-ng.c	/^static int card_get_monitor(struct sstate *ss)$/;"	f	file:
card_get_rate	src/airserv-ng.c	/^static int card_get_rate(struct sstate *ss)$/;"	f	file:
card_open	src/airserv-ng.c	/^static void card_open(struct sstate *ss, char *dev)$/;"	f	file:
card_read	src/airserv-ng.c	/^static int card_read(struct sstate *ss, void *buf, int len, struct rx_info *ri)$/;"	f	file:
card_set_chan	src/airserv-ng.c	/^static int card_set_chan(struct sstate *ss, int chan)$/;"	f	file:
card_set_rate	src/airserv-ng.c	/^static int card_set_rate(struct sstate *ss, int rate)$/;"	f	file:
card_write	src/airserv-ng.c	/^static int card_write(struct sstate *ss, void *buf, int len, struct tx_info *ti)$/;"	f	file:
cc	src/include/ieee80211.h	/^	u_int8_t	cc[3];			\/* ISO CC+(I)ndoor\/(O)utdoor *\/$/;"	m	struct:ieee80211_country_ie
cd_pipe	src/airodump-ng.h	/^    int cd_pipe[2];	    \/* current card pipe    *\/$/;"	m	struct:globals
cf_attack	src/airbase-ng.c	/^    int cf_attack;$/;"	m	struct:options	file:
cf_attackwait	src/besside-ng.c	/^	int		cf_attackwait;$/;"	m	struct:conf	file:
cf_bssid	src/besside-ng.c	/^	unsigned char	*cf_bssid;$/;"	m	struct:conf	file:
cf_channels	src/besside-ng.c	/^	struct channel	cf_channels;$/;"	m	struct:conf	typeref:struct:conf::channel	file:
cf_count	src/airbase-ng.c	/^    int cf_count;$/;"	m	struct:options	file:
cf_crack_int	src/besside-ng.c	/^	int		cf_crack_int;$/;"	m	struct:conf	file:
cf_deauthfreq	src/besside-ng.c	/^	int		cf_deauthfreq;$/;"	m	struct:conf	file:
cf_do_wep	src/besside-ng.c	/^	int		cf_do_wep;$/;"	m	struct:conf	file:
cf_do_wpa	src/besside-ng.c	/^	int		cf_do_wpa;$/;"	m	struct:conf	file:
cf_essid_regex	src/besside-ng.c	/^    pcre *cf_essid_regex;$/;"	m	struct:conf	file:
cf_floodfreq	src/besside-ng.c	/^	int		cf_floodfreq;$/;"	m	struct:conf	file:
cf_floodwait	src/besside-ng.c	/^	int		cf_floodwait;$/;"	m	struct:conf	file:
cf_hopfreq	src/besside-ng.c	/^	int		cf_hopfreq;$/;"	m	struct:conf	file:
cf_ifname	src/besside-ng.c	/^	char		*cf_ifname;$/;"	m	struct:conf	file:
cf_log	src/besside-ng.c	/^	char		*cf_log;$/;"	m	struct:conf	file:
cf_to	src/besside-ng.c	/^	int		cf_to;$/;"	m	struct:conf	file:
cf_verb	src/besside-ng.c	/^	int		cf_verb;$/;"	m	struct:conf	file:
cf_wep	src/besside-ng.c	/^	char		*cf_wep;$/;"	m	struct:conf	file:
cf_wordlist	src/besside-ng.c	/^	char		*cf_wordlist;$/;"	m	struct:conf	file:
cf_wpa	src/besside-ng.c	/^	char		*cf_wpa;$/;"	m	struct:conf	file:
cf_wpa_server	src/besside-ng.c	/^	char		*cf_wpa_server;$/;"	m	struct:conf	file:
cfrag_fuzz	src/airbase-ng.c	/^int cfrag_fuzz(unsigned char *packet, int frags, int frag_num, int length, unsigned char rnd[2])$/;"	f
cfrag_thread	src/airbase-ng.c	/^void cfrag_thread( void )$/;"	f
cfragpid	src/airbase-ng.c	/^pthread_t cfragpid;$/;"	v
ch_pipe	src/airodump-ng.h	/^    int ch_pipe[2];         \/* current channel pipe *\/$/;"	m	struct:globals
chan	src/aireplay-ng.c	/^    unsigned char chan;$/;"	m	struct:APt	file:
chan	src/osdep/linux.c	/^static int chan;$/;"	v	file:
chan	src/tkiptun-ng.c	/^    unsigned char chan;$/;"	m	struct:APt	file:
chan_hop	src/easside-ng.c	/^void chan_hop(struct east_state *es, struct timeval *tv)$/;"	f
channel	src/airbase-ng.c	/^    int channel;$/;"	m	struct:options	file:
channel	src/airodump-ng.h	/^    int channel;              \/* AP radio channel         *\/$/;"	m	struct:AP_info
channel	src/airodump-ng.h	/^    int channel;             \/* Channel station is seen   *\/$/;"	m	struct:ST_info
channel	src/airodump-ng.h	/^    int channel;             \/* captured on channel       *\/$/;"	m	struct:NA_info
channel	src/airodump-ng.h	/^    int channel[MAX_CARDS];           \/* current channel #    *\/$/;"	m	struct:globals
channel	src/besside-ng.c	/^struct channel {$/;"	s	file:
channel	src/osdep/linux.c	/^    int channel;$/;"	m	struct:priv_linux	file:
channel_add	src/besside-ng.c	/^static void channel_add(int num)$/;"	f	file:
channel_hopper	src/airodump-ng.c	/^void channel_hopper(struct wif *wi[], int if_num, int chan_count, pid_t parent)$/;"	f
channel_set	src/besside-ng.c	/^static void channel_set(int num)$/;"	f	file:
channels	src/airodump-ng.h	/^    int *channels;$/;"	m	struct:globals
chanoption	src/airodump-ng.h	/^    int chanoption;$/;"	m	struct:globals
checkDepend	scripts/airdrop-ng/old-installers/install.py	/^class checkDepend:$/;"	c
check_arp_timeout	src/wesside-ng.c	/^static void check_arp_timeout(struct wstate *ws, struct timeval *now)$/;"	f	file:
check_cap	scripts/dcrack.py	/^def check_cap(fn, bssid):$/;"	f
check_cb	src/besside-ng.c	/^typedef int (*check_cb)(struct network *n);$/;"	t	file:
check_channel	src/airodump-ng.c	/^int check_channel(struct wif *wi[], int cards)$/;"	f
check_cracker_fds	src/besside-ng.c	/^static void check_cracker_fds(fd_set *fds)$/;"	f	file:
check_crc_buf	src/crypto.c	/^int check_crc_buf( unsigned char *buf, int len )$/;"	f
check_crc_buf_osdep	src/osdep/linux.c	/^int check_crc_buf_osdep( unsigned char *buf, int len )$/;"	f
check_decrypt	src/easside-ng.c	/^int check_decrypt(struct east_state *es, struct ieee80211_frame *wh, int len)$/;"	f
check_decrypt_arp	src/easside-ng.c	/^void check_decrypt_arp(struct east_state *es, struct ieee80211_frame *wh,$/;"	f
check_decrypt_ip	src/easside-ng.c	/^void check_decrypt_ip(struct east_state *es, struct ieee80211_frame *wh,$/;"	f
check_expand	src/easside-ng.c	/^void check_expand(struct east_state *es, struct ieee80211_frame *wh, int len)$/;"	f
check_for_cloaking	src/airdecloak-ng.c	/^BOOLEAN check_for_cloaking() {$/;"	f
check_for_db	src/airolib-ng.c	/^int check_for_db(sqlite3 ** db, const char * filename, int can_create, int readonly)$/;"	f
check_frequency	src/airodump-ng.c	/^int check_frequency(struct wif *wi[], int cards)$/;"	f
check_guess	src/tkiptun-ng.c	/^int check_guess(unsigned char *srcbuf, unsigned char *chopped, int caplen, int clearlen, unsigned char *arp, unsigned char *dmac)$/;"	f
check_hop	src/wesside-ng.c	/^static void check_hop(struct wstate *ws, struct timeval *now)$/;"	f	file:
check_inet	src/easside-ng.c	/^void check_inet(struct east_state *es, struct timeval *tv)$/;"	f
check_key	src/wesside-ng.c	/^static void check_key(struct wstate *ws)$/;"	f	file:
check_monitor	src/airodump-ng.c	/^int check_monitor(struct wif *wi[], int *fd_raw, int *fdh, int cards)$/;"	f
check_network	src/wpaclean.c	/^static void check_network(struct network *n)$/;"	f	file:
check_ownable	src/besside-ng.c	/^static int check_ownable(struct network *n)$/;"	f	file:
check_owned	src/besside-ng.c	/^static int check_owned(struct network *n)$/;"	f	file:
check_param	contrib/commview/commview.c	/^static int check_param(struct cstate *cs, char **p)$/;"	f	file:
check_received	src/tkiptun-ng.c	/^int check_received(unsigned char *packet, unsigned length)$/;"	f
check_redirect	src/easside-ng.c	/^void check_redirect(struct east_state *es, struct ieee80211_frame *wh, int len)$/;"	f
check_relay	src/wesside-ng.c	/^static void check_relay(struct wstate *ws, struct ieee80211_frame *wh,$/;"	f	file:
check_relay_timeout	src/wesside-ng.c	/^static void check_relay_timeout(struct wstate *ws, struct timeval *now)$/;"	f	file:
check_replay	src/besside-ng.c	/^static void check_replay(struct network *n, struct ieee80211_frame *wh, int len)$/;"	f	file:
check_rtr_mac	src/easside-ng.c	/^void check_rtr_mac(struct east_state *es, struct ieee80211_frame *wh, int len)$/;"	f
check_shared_key	src/airbase-ng.c	/^int check_shared_key(unsigned char *h80211, int caplen)$/;"	f
check_shared_key	src/airodump-ng.c	/^int check_shared_key(unsigned char *h80211, int caplen)$/;"	f
check_thread	src/aircrack-ng.c	/^void check_thread( void *arg )$/;"	f
check_tx	src/wesside-ng.c	/^static void check_tx(struct wstate *ws, struct timeval *now)$/;"	f	file:
check_unreach	src/besside-ng.c	/^static int check_unreach(struct network *n)$/;"	f	file:
check_wep_key	src/aircrack-ng.c	/^int check_wep_key( unsigned char *wepkey, int B, int keylen )$/;"	f
checkbssids	src/aircrack-ng.c	/^int checkbssids(char *bssidlist)$/;"	f
chksum	test/pingreply.c	/^    unsigned short chksum;$/;"	m	struct:icmp_hdr	file:
chksum	test/pingreply.c	/^    unsigned short chksum;$/;"	m	struct:ip_hdr	file:
chopped_from_plain	src/tkiptun-ng.c	/^    unsigned char *chopped_from_plain;    \/* chopped plaintext packet from the AP *\/$/;"	m	struct:options	file:
chopped_from_plain_len	src/tkiptun-ng.c	/^    int chopped_from_plain_len;$/;"	m	struct:options	file:
chopped_from_prga	src/tkiptun-ng.c	/^    unsigned char *chopped_from_prga;    \/* chopped keystream from the AP *\/$/;"	m	struct:options	file:
chopped_from_prga_len	src/tkiptun-ng.c	/^    int chopped_from_prga_len;$/;"	m	struct:options	file:
chopped_to_plain	src/tkiptun-ng.c	/^    unsigned char *chopped_to_plain;      \/* chopped plaintext packet to the AP *\/$/;"	m	struct:options	file:
chopped_to_plain_len	src/tkiptun-ng.c	/^    int chopped_to_plain_len;$/;"	m	struct:options	file:
chopped_to_prga	src/tkiptun-ng.c	/^    unsigned char *chopped_to_prga;      \/* chopped keystream to the AP *\/$/;"	m	struct:options	file:
chopped_to_prga_len	src/tkiptun-ng.c	/^    int chopped_to_prga_len;$/;"	m	struct:options	file:
chrono	src/aircrack-ng.c	/^float chrono( struct timeval *start, int reset )$/;"	f
chrono	src/wesside-ng.c	/^float chrono( struct timeval *start, int reset )$/;"	f
chswitch	src/airodump-ng.h	/^    int chswitch;	    \/* switching method     *\/$/;"	m	struct:globals
cid	scripts/dcrack.py	/^cid = None$/;"	v
class_u	src/include/if_llc.h	/^		uint8_t class_u;$/;"	m	struct:llc::__anon6::__anon7
classifiers	scripts/airdrop-ng/setup.py	/^      classifiers=[ 'Development Status :: 4 - Beta', ],$/;"	v
classifiers	scripts/airgraph-ng/setup.py	/^      classifiers=[$/;"	v
clean_exit	src/aircrack-ng.c	/^void clean_exit(int ret)$/;"	f
cleanup	src/besside-ng.c	/^static void cleanup(int UNUSED(x))$/;"	f	file:
cleanup	src/wesside-ng.c	/^static void cleanup(int x)$/;"	f	file:
cleanup_tiny_memory	src/memory.c	/^void cleanup_tiny_memory()$/;"	f
clear_timeout	src/easside-ng.c	/^void clear_timeout(struct east_state *es)$/;"	f
client	scripts/dcrack.py	/^def client():$/;"	f
client	src/airserv-ng.c	/^struct client {$/;"	s	file:
client	src/besside-ng.c	/^struct client {$/;"	s	file:
client	src/wpaclean.c	/^struct client {$/;"	s	file:
clientApChannelRelationship	scripts/airdrop-ng/airdrop/libDumpParse.py	/^	def clientApChannelRelationship(self,data):$/;"	m	class:airDumpParse
clientApChannelRelationship	scripts/airgraph-ng/graphviz/libDumpParse.py	/^    def clientApChannelRelationship(self):$/;"	m	class:airDumpParse
clientColor	scripts/airgraph-ng/graphviz/lib_Airgraphviz.py	/^def clientColor(mac,color,label=""): #OLDNAME Client_Label_Color$/;"	f
clientTag	scripts/airdrop-ng/airdrop/libDumpParse.py	/^	def clientTag(self,devices):$/;"	m	class:airDumpParse
clientTag	scripts/airgraph-ng/graphviz/libDumpParse.py	/^    def clientTag(self,devices):$/;"	m	class:airDumpParse
client_add	src/airserv-ng.c	/^static void client_add(struct sstate *ss, int s, struct sockaddr_in *s_in)$/;"	f	file:
client_get	src/besside-ng.c	/^static struct client *client_get(struct network *n, struct ieee80211_frame *wh)$/;"	f	file:
client_kill	src/airserv-ng.c	/^static void client_kill(struct client *c)$/;"	f	file:
client_send_packet	src/airserv-ng.c	/^static void client_send_packet(struct sstate *ss, struct client *c,$/;"	f	file:
client_update	src/besside-ng.c	/^static struct client *client_update(struct network *n,$/;"	f	file:
close_aircrack	src/aircrack-ng.c	/^int close_aircrack = 0;$/;"	v
cm_pipe	src/aircrack-ng.c	/^int cm_pipe[256][2];			 \/* child->master results pipe   *\/$/;"	v
cmcred_euid	lib/csharp/MonoExample/NDesk-dbus/UnixNativeTransport.cs	/^		public uint cmcred_euid; \/\/effective UID of sending process$/;"	f	struct:NDesk.DBus.Transports.cmsgcred
cmcred_gid	lib/csharp/MonoExample/NDesk-dbus/UnixNativeTransport.cs	/^		public uint cmcred_gid; \/\/real GID of sending process$/;"	f	struct:NDesk.DBus.Transports.cmsgcred
cmcred_groups	lib/csharp/MonoExample/NDesk-dbus/UnixNativeTransport.cs	/^		public fixed uint cmcred_groups[16]; \/\/groups, CMGROUP_MAX$/;"	f	struct:NDesk.DBus.Transports.cmsgcred
cmcred_ngroups	lib/csharp/MonoExample/NDesk-dbus/UnixNativeTransport.cs	/^		public short cmcred_ngroups; \/\/number or groups$/;"	f	struct:NDesk.DBus.Transports.cmsgcred
cmcred_pid	lib/csharp/MonoExample/NDesk-dbus/UnixNativeTransport.cs	/^		public int cmcred_pid; \/\/PID of sending process$/;"	f	struct:NDesk.DBus.Transports.cmsgcred
cmcred_uid	lib/csharp/MonoExample/NDesk-dbus/UnixNativeTransport.cs	/^		public uint cmcred_uid; \/\/real UID of sending process$/;"	f	struct:NDesk.DBus.Transports.cmsgcred
cmd_crack	scripts/dcrack.py	/^def cmd_crack():$/;"	f
cmd_remove	scripts/dcrack.py	/^def cmd_remove():$/;"	f
cmd_status	scripts/dcrack.py	/^def cmd_status():$/;"	f
cmp_votes	src/aircrack-ng.c	/^int cmp_votes( const void *bs1, const void *bs2 )$/;"	f
cmp_votes	src/kstats.c	/^int cmp_votes( const void *bs1, const void *bs2 )$/;"	f
cmsg	lib/csharp/MonoExample/NDesk-dbus/UnixNativeTransport.cs	/^	struct cmsg$/;"	s	namespace:NDesk.DBus.Transports
cmsg_len	lib/csharp/MonoExample/NDesk-dbus/UnixNativeTransport.cs	/^		public uint cmsg_len; \/\/data byte count, including header$/;"	f	struct:NDesk.DBus.Transports.cmsghdr
cmsg_level	lib/csharp/MonoExample/NDesk-dbus/UnixNativeTransport.cs	/^		public int cmsg_level; \/\/originating protocol$/;"	f	struct:NDesk.DBus.Transports.cmsghdr
cmsg_type	lib/csharp/MonoExample/NDesk-dbus/UnixNativeTransport.cs	/^		public int cmsg_type; \/\/protocol-specific type$/;"	f	struct:NDesk.DBus.Transports.cmsghdr
cmsgcred	lib/csharp/MonoExample/NDesk-dbus/UnixNativeTransport.cs	/^	unsafe struct cmsgcred$/;"	s	namespace:NDesk.DBus.Transports
cmsghdr	lib/csharp/MonoExample/NDesk-dbus/UnixNativeTransport.cs	/^	struct cmsghdr$/;"	s	namespace:NDesk.DBus.Transports
code	test/pingreply.c	/^    unsigned char code;$/;"	m	struct:icmp_hdr	file:
commandUsage	scripts/airdrop-ng/airdrop-ng	/^def commandUsage():$/;"	f
commentOff	scripts/airdrop-ng/airdrop-ng	/^    def commentOff(self,rules):$/;"	m	class:parseFiles
compKeyChk	scripts/airdrop-ng/airdrop/libOuiParse.py	/^    def compKeyChk(self,name):$/;"	m	class:macOUI_lookup
compKeyChk	scripts/airgraph-ng/graphviz/libOuiParse.py	/^    def compKeyChk(self,name):$/;"	m	class:macOUI_lookup
companyParse	scripts/airdrop-ng/airdrop/libOuiParse.py	/^    def companyParse(self):$/;"	m	class:macOUI_lookup
companyParse	scripts/airgraph-ng/graphviz/libOuiParse.py	/^    def companyParse(self):$/;"	m	class:macOUI_lookup
compare	src/aircrack-ptw-lib.c	/^static int compare(const void * ina, const void * inb) {$/;"	f	file:
compare_SN_to_current_packet	src/airdecloak-ng.c	/^int compare_SN_to_current_packet(struct packet_elt * packet) {$/;"	f
comparedoublesorthelper	src/aircrack-ptw-lib.c	/^static int comparedoublesorthelper(const void * ina, const void * inb) {$/;"	f	file:
comparesorthelper	src/aircrack-ptw-lib.c	/^static int comparesorthelper(const void * ina, const void * inb) {$/;"	f	file:
complete	src/airdecloak-ng.h	/^	int complete; \/\/ 0: no, 1: yes$/;"	m	struct:packet_elt
components	lib/csharp/Example1/Example1/Form1.Designer.cs	/^        private System.ComponentModel.IContainer components = null;$/;"	f	class:Example1.Form1	file:
compress_file	scripts/dcrack.py	/^def compress_file(f):$/;"	f
compute_sha1	test/test-airdecap-ng.sh	/^compute_sha1() {$/;"	f
cond	src/aircrack-ng.h	/^	pthread_cond_t cond;			\/* condition for waiting when buffer is full until keys are tried and new keys can be written *\/$/;"	m	struct:WPA_data
conf	src/besside-ng.c	/^struct conf {$/;"	s	file:
conn	lib/csharp/MonoExample/NDesk-dbus/Authentication.cs	/^		protected Connection conn;$/;"	f	class:NDesk.DBus.Authentication.SaslClient
conn	lib/csharp/MonoExample/NDesk-dbus/BusObject.cs	/^		protected Connection conn;$/;"	f	class:NDesk.DBus.BusObject
conn	lib/csharp/MonoExample/NDesk-dbus/PendingCall.cs	/^		Connection conn;$/;"	f	class:NDesk.DBus.PendingCall	file:
connect	lib/csharp/MonoExample/NDesk-dbus/UnixNativeTransport.cs	/^			protected static extern int connect (int sockfd, byte[] serv_addr, uint addrlen);$/;"	m	class:NDesk.DBus.Transports.UnixSocket	file:
connect_db	scripts/dcrack.py	/^def connect_db():$/;"	f
connected	lib/csharp/MonoExample/NDesk-dbus/UnixNativeTransport.cs	/^		protected bool connected = false;$/;"	f	class:NDesk.DBus.Transports.UnixSocket
connection	lib/csharp/MonoExample/NDesk-dbus/MessageWriter.cs	/^		public Connection connection;$/;"	f	class:NDesk.DBus.MessageWriter
connection	lib/csharp/MonoExample/NDesk-dbus/Transport.cs	/^		protected Connection connection;$/;"	f	class:NDesk.DBus.Transports.Transport
console	scripts/airdrop-ng/setup.py	/^      console = [{"script": "airdrop-ng" }],$/;"	v
console	scripts/airgraph-ng/setup.py	/^      console = [{"script": "airgraph-ng" }],$/;"	v
const_00ff	src/sha1-sse2.S	/^const_00ff:$/;"	l
const_ff00	src/sha1-sse2.S	/^const_ff00:$/;"	l
const_init_a	src/sha1-sse2.S	/^const_init_a:$/;"	l
const_init_b	src/sha1-sse2.S	/^const_init_b:$/;"	l
const_init_c	src/sha1-sse2.S	/^const_init_c:$/;"	l
const_init_d	src/sha1-sse2.S	/^const_init_d:$/;"	l
const_init_e	src/sha1-sse2.S	/^const_init_e:$/;"	l
const_stage0	src/sha1-sse2.S	/^const_stage0:$/;"	l
const_stage1	src/sha1-sse2.S	/^const_stage1:$/;"	l
const_stage2	src/sha1-sse2.S	/^const_stage2:$/;"	l
const_stage3	src/sha1-sse2.S	/^const_stage3:$/;"	l
control	src/include/if_llc.h	/^		uint8_t  control;$/;"	m	struct:llc::__anon6::__anon11
control	src/include/if_llc.h	/^		uint8_t control;$/;"	m	struct:llc::__anon6::__anon12
control	src/include/if_llc.h	/^		uint8_t control;$/;"	m	struct:llc::__anon6::__anon7
control	src/include/if_llc.h	/^		uint8_t control;$/;"	m	struct:llc::__anon6::__anon9
control	src/include/if_llc.h	/^	        uint8_t control;$/;"	m	struct:llc::__anon6::__anon10
control_ext	src/include/if_llc.h	/^		uint8_t control_ext;$/;"	m	struct:llc::__anon6::__anon12
convert	src/aircrack-ng.h	/^	int convert;				 \/* Does this BSSID has to       *\/$/;"	m	struct:mergeBSSID
convertHex	scripts/airdrop-ng/airdrop-ng	/^    def convertHex(self,mac):$/;"	m	class:packetGenerator
coreperid	src/aircrack-ng.h	/^	int coreperid;				\/* Max cores per id     *\/$/;"	m	struct:_cpuinfo
cores	src/aircrack-ng.h	/^	int cores;				\/* Real CPU cores       *\/$/;"	m	struct:_cpuinfo
coretemp	src/aircrack-ng.h	/^	float coretemp;				\/* CPU Temperature	*\/$/;"	m	struct:_cpuinfo
correct	src/aircrack-ptw-lib.c	/^static int correct(PTW_attackstate * state, uint8_t * key, int keylen) {$/;"	f	file:
corrupted_fpath	src/airdecap-ng.c	/^    char corrupted_fpath[65536];$/;"	m	struct:options	file:
count	src/wpapsk.h	/^int count;$/;"	v
countBuffer	src/linecount.cpp	/^unsigned int countBuffer(const vector <char> &buff, int bufsize) {$/;"	f
cpu_to_be16	src/osdep/byteorder.h	409;"	d
cpu_to_be32	src/osdep/byteorder.h	407;"	d
cpu_to_be64	src/osdep/byteorder.h	405;"	d
cpu_to_le16	src/osdep/byteorder.h	403;"	d
cpu_to_le32	src/osdep/byteorder.h	401;"	d
cpu_to_le64	src/osdep/byteorder.h	399;"	d
cpufreq_cur	src/aircrack-ng.h	/^	int cpufreq_cur;			\/* CPUfreq Current	*\/$/;"	m	struct:_cpuinfo
cpufreq_max	src/aircrack-ng.h	/^	int cpufreq_max;			\/* CPUfreq Maximum	*\/$/;"	m	struct:_cpuinfo
cpuid_exit	src/sha1-sse2.S	/^cpuid_exit:$/;"	l
cpuid_featureflags	src/cpuid.c	/^char* cpuid_featureflags() {$/;"	f
cpuid_findcpusensorpath	src/cpuid.c	/^int cpuid_findcpusensorpath(const char *path) {$/;"	f
cpuid_getcoretemp	src/cpuid.c	/^float cpuid_getcoretemp() {$/;"	f
cpuid_getfreq	src/cpuid.c	/^int cpuid_getfreq(int type) {$/;"	f
cpuid_getinfo	src/cpuid.c	/^int cpuid_getinfo() {$/;"	f
cpuid_modelinfo	src/cpuid.c	/^char* cpuid_modelinfo() {$/;"	f
cpuid_readsysfs	src/cpuid.c	/^int cpuid_readsysfs(const char *file) {$/;"	f
cpuid_simdsize	src/cpuid.c	/^int cpuid_simdsize(int viewmax) {$/;"	f
cpuid_vendor	src/cpuid.c	/^char* cpuid_vendor() {$/;"	f
cpuinfo	src/cpuid.c	/^struct _cpuinfo cpuinfo = { 0, NULL, NULL, 0, 0, 0, 0, 0, 0, 0, 0.0, NULL };$/;"	v	typeref:struct:_cpuinfo
cputemppath	src/aircrack-ng.h	/^	char *cputemppath;			\/* Linux CPU Sensor Path*\/$/;"	m	struct:_cpuinfo
cr_pid	src/besside-ng.c	/^	int cr_pid;$/;"	m	struct:cracker	file:
cr_pipe	src/besside-ng.c	/^	int cr_pipe[2];$/;"	m	struct:cracker	file:
crack_wep128	src/besside-ng.c	/^static void crack_wep128(struct cracker *c, struct network *n)$/;"	f	file:
crack_wep64	src/besside-ng.c	/^static void crack_wep64(struct cracker *c, struct network *n)$/;"	f	file:
crack_wep_dict	src/aircrack-ng.c	/^int crack_wep_dict()$/;"	f
crack_wep_ptw	src/aircrack-ng.c	/^static int crack_wep_ptw(struct AP_info *ap_cur)$/;"	f	file:
crack_wep_thread	src/aircrack-ng.c	/^int crack_wep_thread( void *arg )$/;"	f
crack_wpa_thread	src/aircrack-ng.c	/^int crack_wpa_thread( void *arg )$/;"	f
cracker	scripts/dcrack.py	/^cracker = None$/;"	v
cracker	src/besside-ng.c	/^struct cracker {$/;"	s	file:
cracker_cb	src/besside-ng.c	/^typedef void (*cracker_cb)(struct cracker *, struct network *n);$/;"	t	file:
cracker_check	src/besside-ng.c	/^static void cracker_check(struct network *n, struct cracker *c)$/;"	f	file:
cracker_kill	src/besside-ng.c	/^static void cracker_kill(struct cracker *c)$/;"	f	file:
cracker_start	src/besside-ng.c	/^static void cracker_start(struct cracker *c, cracker_cb cb, struct network *n)$/;"	f	file:
crb	src/aircrack-ng.c	/^read_buf rb, crb;$/;"	v
crc_chop_tbl	src/crctable.h	/^const unsigned char crc_chop_tbl[256][4] =$/;"	v
crc_tbl	src/crctable.h	/^const unsigned long int crc_tbl[256] =$/;"	v
crc_tbl_osdep	src/osdep/crctable_osdep.h	/^const unsigned long int crc_tbl_osdep[256] =$/;"	v
createKey	scripts/versuck-ng/versuck-ng	/^def createKey(essid,bssid):$/;"	f
create_db	scripts/dcrack.py	/^def create_db():$/;"	f
create_tap	src/osdep/darwin.c	/^int create_tap(void)$/;"	f
create_tap	src/osdep/dummy.c	/^int create_tap(void)$/;"	f
create_wep_packet	src/airbase-ng.c	/^int create_wep_packet(unsigned char* packet, int *length, int hdrlen)$/;"	f
create_wep_packet	src/airtun-ng.c	/^int create_wep_packet(unsigned char* packet, int *length, int data_begin)$/;"	f
create_wep_packet	src/packetforge-ng.c	/^int create_wep_packet(unsigned char* packet, int *length)$/;"	f
cred	lib/csharp/MonoExample/NDesk-dbus/UnixNativeTransport.cs	/^		public cmsgcred cred;$/;"	f	struct:NDesk.DBus.Transports.cmsg
crypt	src/airbase-ng.c	/^    int weplen, crypt;$/;"	m	struct:options	file:
crypt	src/aircrack-ng.h	/^	int crypt;					 \/* encryption algorithm         *\/$/;"	m	struct:AP_info
crypt	src/airdecap-ng.c	/^    int weplen, crypt;$/;"	m	struct:options	file:
crypt	src/airtun-ng.c	/^    int weplen, crypt;$/;"	m	struct:options	file:
cs_CC	contrib/commview/commview.c	/^	char		(__cdecl *cs_CC)(int Channel);$/;"	m	struct:cstate	file:
cs_F1	contrib/commview/commview.c	/^	char		(__cdecl *cs_F1)(int Code);$/;"	m	struct:cstate	file:
cs_F2	contrib/commview/commview.c	/^	char		(__cdecl *cs_F2)(void);$/;"	m	struct:cstate	file:
cs_GN	contrib/commview/commview.c	/^	int		(__cdecl *cs_GN)(wchar_t *);$/;"	m	struct:cstate	file:
cs_S1	contrib/commview/commview.c	/^	char		(__cdecl *cs_S1)(int Channel);$/;"	m	struct:cstate	file:
cs_S5	contrib/commview/commview.c	/^	int		(__cdecl *cs_S5)(unsigned char *Buffer, int Length);$/;"	m	struct:cstate	file:
cs_SC	contrib/commview/commview.c	/^	int		(*cs_SC)(int band);$/;"	m	struct:cstate	file:
cs_T1	contrib/commview/commview.c	/^	char		(__cdecl *cs_T1)(int Size, unsigned char *Buffer);$/;"	m	struct:cstate	file:
cs_chan	contrib/commview/commview.c	/^	int		cs_chan;$/;"	m	struct:cstate	file:
cs_debug	contrib/commview/commview.c	/^	int		cs_debug;$/;"	m	struct:cstate	file:
cs_guid	contrib/commview/commview.c	/^	char		cs_guid[256];$/;"	m	struct:cstate	file:
cs_ifreq	contrib/commview/commview.c	/^	struct ifreq	cs_ifreq;$/;"	m	struct:cstate	typeref:struct:cstate::ifreq	file:
cs_ioctls	contrib/commview/commview.c	/^	int		cs_ioctls;$/;"	m	struct:cstate	file:
cs_key	contrib/commview/commview.c	/^	HKEY		cs_key;$/;"	m	struct:cstate	file:
cs_lib	contrib/commview/commview.c	/^	void		*cs_lib;$/;"	m	struct:cstate	file:
cs_mtx	contrib/commview/commview.c	/^	pthread_mutex_t	cs_mtx;$/;"	m	struct:cstate	file:
cs_param	contrib/commview/commview.c	/^	char		cs_param[256];$/;"	m	struct:cstate	file:
cs_restarting	contrib/commview/commview.c	/^	volatile int	cs_restarting;$/;"	m	struct:cstate	file:
cstate	contrib/commview/commview.c	/^struct cstate {$/;"	s	file:
ctime	src/airodump-ng.h	/^    struct timeval  ctime;      \/* capture time *\/$/;"	m	struct:pkt_buf	typeref:struct:pkt_buf::timeval
ctrl_c	src/airbase-ng.c	/^int ctrl_c, alarmed, invalid_channel_displayed;$/;"	v
ctrl_c	src/aireplay-ng.c	/^int ctrl_c, alarmed;$/;"	v
ctrl_c	src/airtun-ng.c	/^int ctrl_c, alarmed;$/;"	v
ctrl_c	src/tkiptun-ng.c	/^int ctrl_c, alarmed;$/;"	v
cts	src/airodump-ng.h	/^    int cts;                 \/* number of CTS frames      *\/$/;"	m	struct:NA_info
ctxa	src/sha1-sse2.S	/^#define ctxa %xmm0$/;"	d
ctxb	src/sha1-sse2.S	/^#define ctxb %xmm1$/;"	d
ctxc	src/sha1-sse2.S	/^#define ctxc %xmm2$/;"	d
ctxd	src/sha1-sse2.S	/^#define ctxd %xmm3$/;"	d
ctxe	src/sha1-sse2.S	/^#define ctxe %xmm4$/;"	d
current	src/airdecloak-ng.h	/^	struct packet_elt *current;$/;"	m	struct:packet_elt_header	typeref:struct:packet_elt_header::packet_elt
current_namespace	src/osdep/radiotap/radiotap_iter.h	/^	const struct ieee80211_radiotap_namespace *current_namespace;$/;"	m	struct:ieee80211_radiotap_iterator	typeref:struct:ieee80211_radiotap_iterator::ieee80211_radiotap_namespace
current_packet_pointer_same_fromToDS_and_source	src/airdecloak-ng.c	/^BOOLEAN current_packet_pointer_same_fromToDS_and_source(struct packet_elt * packet) {$/;"	f
cv_eof	src/aircrack-ng.c	/^pthread_cond_t  cv_eof;			 \/* read EOF condition variable  *\/$/;"	v
cygwin_close	contrib/airpcap/airpcap.c	/^void cygwin_close(void)$/;"	f
cygwin_close	contrib/commview/commview.c	/^void cygwin_close(void)$/;"	f
cygwin_close	src/osdep/cygwin.c	/^static void cygwin_close(struct wif *wi)$/;"	f	file:
cygwin_fd	src/osdep/cygwin.c	/^static int cygwin_fd(struct wif *wi)$/;"	f	file:
cygwin_get_channel	src/osdep/cygwin.c	/^static int cygwin_get_channel(struct wif *wi)$/;"	f	file:
cygwin_get_freq	src/osdep/cygwin.c	/^static int cygwin_get_freq(struct wif *wi)$/;"	f	file:
cygwin_get_mac	contrib/airpcap/airpcap.c	/^int cygwin_get_mac(unsigned char *mac)$/;"	f
cygwin_get_mac	contrib/commview/commview.c	/^int cygwin_get_mac(unsigned char *mac)$/;"	f
cygwin_get_mac	src/osdep/cygwin.c	/^static int cygwin_get_mac(struct wif *wi, unsigned char *mac)$/;"	f	file:
cygwin_get_monitor	src/osdep/cygwin.c	/^static int cygwin_get_monitor(struct wif *wi)$/;"	f	file:
cygwin_get_rate	src/osdep/cygwin.c	/^static int cygwin_get_rate(struct wif *wi)$/;"	f	file:
cygwin_init	contrib/airpcap/airpcap.c	/^int cygwin_init(char *param)$/;"	f
cygwin_init	contrib/commview/commview.c	/^int cygwin_init(char *param)$/;"	f
cygwin_inject	contrib/airpcap/airpcap.c	/^int cygwin_inject(void *buf, int len, struct tx_info *ti)$/;"	f
cygwin_inject	contrib/commview/commview.c	/^int cygwin_inject(void *buf, int len, struct tx_info *ti)$/;"	f
cygwin_open	src/osdep/cygwin.c	/^static struct wif *cygwin_open(char *iface)$/;"	f	file:
cygwin_read	src/osdep/cygwin.c	/^static int cygwin_read(struct wif *wi, unsigned char *h80211, int len,$/;"	f	file:
cygwin_read_packet	src/osdep/cygwin.c	/^static int cygwin_read_packet(struct priv_cygwin *priv, void *buf, int len,$/;"	f	file:
cygwin_read_reader	src/osdep/cygwin.c	/^int cygwin_read_reader(int fd, int plen, void *dst, int len)$/;"	f
cygwin_reader	src/osdep/cygwin.c	/^static void *cygwin_reader(void *arg)$/;"	f	file:
cygwin_set_chan	contrib/airpcap/airpcap.c	/^int cygwin_set_chan(int chan)$/;"	f
cygwin_set_chan	contrib/commview/commview.c	/^int cygwin_set_chan(int chan)$/;"	f
cygwin_set_channel	src/osdep/cygwin.c	/^static int cygwin_set_channel(struct wif *wi, int chan)$/;"	f	file:
cygwin_set_freq	src/osdep/cygwin.c	/^static int cygwin_set_freq(struct wif *wi, int freq)$/;"	f	file:
cygwin_set_mac	contrib/airpcap/airpcap.c	/^int cygwin_set_mac(unsigned char *mac)$/;"	f
cygwin_set_mac	contrib/commview/commview.c	/^int cygwin_set_mac(unsigned char *mac)$/;"	f
cygwin_set_mac	src/osdep/cygwin.c	/^static int cygwin_set_mac(struct wif *wi, unsigned char *mac)$/;"	f	file:
cygwin_set_rate	src/osdep/cygwin.c	/^static int cygwin_set_rate(struct wif *wi, int rate)$/;"	f	file:
cygwin_sniff	contrib/airpcap/airpcap.c	/^int cygwin_sniff(void *buf, int len, struct rx_info *ri)$/;"	f
cygwin_sniff	contrib/commview/commview.c	/^int cygwin_sniff(void *buf, int len, struct rx_info *ri)$/;"	f
cygwin_write	src/osdep/cygwin.c	/^static int cygwin_write(struct wif *wi, unsigned char *h80211, int len,$/;"	f	file:
d_data_dur	src/include/ieee80211.h	/^	uint16_t	d_data_dur;$/;"	m	struct:ieee80211_duration
d_plcp_len	src/include/ieee80211.h	/^	uint16_t	d_plcp_len;$/;"	m	struct:ieee80211_duration
d_residue	src/include/ieee80211.h	/^	uint8_t		d_residue;	\/* unused octets in time slot *\/$/;"	m	struct:ieee80211_duration
d_rts_dur	src/include/ieee80211.h	/^	uint16_t	d_rts_dur;$/;"	m	struct:ieee80211_duration
data	lib/csharp/MonoExample/NDesk-dbus/MessageReader.cs	/^		protected byte[] data;$/;"	f	class:NDesk.DBus.MessageReader
data	lib/csharp/MonoExample/NDesk-dbus/Signature.cs	/^		byte[] data;$/;"	f	struct:NDesk.DBus.Signature
data	src/MD5_std.h	/^	MD5_data data;$/;"	m	struct:__anon31
data	test/pingreply.c	/^    unsigned char data[];$/;"	m	struct:icmp_hdr	file:
dataGridView1	lib/csharp/Example1/Example1/Form1.Designer.cs	/^        private System.Windows.Forms.DataGridView dataGridView1;$/;"	f	class:Example1.Form1	file:
dataGridView2	lib/csharp/Example1/Example1/Form1.Designer.cs	/^        private System.Windows.Forms.DataGridView dataGridView2;$/;"	f	class:Example1.Form1	file:
dataParse	scripts/airdrop-ng/airdrop-ng	/^    def dataParse(self):$/;"	m	class:getTargets
data_check	src/uniqueiv.c	/^int data_check(unsigned char *data_root, unsigned char IV[3], unsigned char data[2])$/;"	f
data_init	src/uniqueiv.c	/^unsigned char *data_init( void )$/;"	f
data_root	src/airodump-ng.h	/^    unsigned char *data_root; \/* first 2 bytes of data if *\/$/;"	m	struct:AP_info
data_wipe	src/uniqueiv.c	/^void data_wipe(unsigned char * data)$/;"	f
datadir	common.mak	/^datadir         = $(prefix)\/share$/;"	m
db	src/aircrack-ng.c	/^sqlite3 *db;$/;"	v
deauth	src/besside-ng.c	/^static void deauth(void *arg)$/;"	f	file:
deauth_send	src/besside-ng.c	/^static void deauth_send(struct network *n, unsigned char *mac)$/;"	f	file:
debug	src/aircrack-ng.h	/^	unsigned char debug[64];			 \/* user-defined WEP key *\/$/;"	m	struct:options
debug	src/airserv-ng.c	/^static void debug(struct sstate *ss, struct client *c, int l, char *fmt, ...)$/;"	f	file:
debug_row	src/aircrack-ng.h	/^	int debug_row[64] ;          \/* user-defined Row WEP key *\/$/;"	m	struct:options
decap_stats	src/airdecap-ng.c	/^struct decap_stats$/;"	s	file:
decloak	src/airodump-ng.h	/^    char decloak;$/;"	m	struct:globals
decloak_detect	src/airodump-ng.h	/^    char decloak_detect;      \/* run decloak detection? *\/$/;"	m	struct:AP_info
decloak_stats	src/airdecloak-ng.h	/^struct decloak_stats$/;"	s
decompress	scripts/dcrack.py	/^def decompress(fn):$/;"	f
decrypt	src/wesside-ng.c	/^static void decrypt(struct wstate *ws)$/;"	f	file:
decrypt_arp	src/easside-ng.c	/^void decrypt_arp(struct east_state *es, struct timeval *tv)$/;"	f
decrypt_arpreq	src/wesside-ng.c	/^static void decrypt_arpreq(struct wstate *ws, struct ieee80211_frame* wh,$/;"	f	file:
decrypt_ccmp	src/crypto.c	/^int decrypt_ccmp( unsigned char *h80211, int caplen, unsigned char TK1[16] )$/;"	f
decrypt_ip	src/easside-ng.c	/^void decrypt_ip(struct east_state *es, struct timeval *tv)$/;"	f
decrypt_ip_addr	src/easside-ng.c	/^void decrypt_ip_addr(struct east_state *es, void *dst, int *len,$/;"	f
decrypt_packet	src/easside-ng.c	/^void decrypt_packet(struct east_state *es, struct timeval *tv)$/;"	f
decrypt_tkip	src/crypto.c	/^int decrypt_tkip( unsigned char *h80211, int caplen, unsigned char TK1[16] )$/;"	f
decrypt_wep	src/crypto.c	/^int decrypt_wep( unsigned char *data, int len, unsigned char *key, int keylen )$/;"	f
decrypted_fpath	src/airdecap-ng.c	/^    char decrypted_fpath[65536];$/;"	m	struct:options	file:
defaultInstance	lib/csharp/Example1/Example1/Properties/Settings.Designer.cs	/^        private static Settings defaultInstance = ((Settings)(global::System.Configuration.ApplicationSettingsBase.Synchronized(new Settings())));$/;"	f	class:Example1.Properties.Settings	file:
delESSID	src/airbase-ng.c	/^int delESSID(char* essid, int len)$/;"	f
delFrag	src/airbase-ng.c	/^int delFrag(unsigned char* smac, int sequence)$/;"	f
delFrag	src/airtun-ng.c	/^int delFrag(unsigned char* smac, int sequence)$/;"	f
delMAC	src/airbase-ng.c	/^int delMAC(pMAC_t pMAC, char* mac)$/;"	f
del_next_CF	src/airbase-ng.c	/^int del_next_CF(pCF_t curCF)$/;"	f
delay	src/aireplay-ng.c	/^    int delay;$/;"	m	struct:options	file:
delay	src/tkiptun-ng.c	/^    int delay;$/;"	m	struct:options	file:
depth	src/aircrack-ng.h	/^	int depth[64];				 \/* how deep we are in the fudge *\/$/;"	m	struct:WEP_data
depth	src/aircrack-ptw-lib.c	/^int depth[KEYHSBYTES];$/;"	v
description	scripts/airdrop-ng/setup.py	/^      description='Rule based Deauth Tool',$/;"	v
description	scripts/airgraph-ng/setup.py	/^      description='Aircrack-ng network grapher',$/;"	v
destination	src/airdecloak-ng.h	/^    unsigned char  destination[6];$/;"	m	struct:packet_elt
detect_anomaly	src/airodump-ng.h	/^    int detect_anomaly;     \/* Detect WIPS protecting WEP in action *\/$/;"	m	struct:globals
detect_frequencies	src/airodump-ng.c	/^int detect_frequencies(struct wif *wi)$/;"	f
dev	src/airbase-ng.c	/^dev;$/;"	v	typeref:struct:devices
dev	src/aireplay-ng.c	/^dev;$/;"	v	typeref:struct:devices
dev	src/airtun-ng.c	/^dev;$/;"	v	typeref:struct:devices
dev	src/packetforge-ng.c	/^dev;$/;"	v	typeref:struct:devices
dev	src/tkiptun-ng.c	/^dev;$/;"	v	typeref:struct:devices
devices	src/airbase-ng.c	/^struct devices$/;"	s	file:
devices	src/aireplay-ng.c	/^struct devices$/;"	s	file:
devices	src/airtun-ng.c	/^struct devices$/;"	s	file:
devices	src/packetforge-ng.c	/^struct devices$/;"	s	file:
devices	src/tkiptun-ng.c	/^struct devices$/;"	s	file:
dict	src/aircrack-ng.h	/^	FILE *dict;				 \/* dictionary file      *\/$/;"	m	struct:options
dict_started	src/airodump-ng.h	/^    int dict_started;         \/* 1 if dict attack started *\/$/;"	m	struct:AP_info
dictfiles	src/aircrack-ng.h	/^struct dictfiles {$/;"	s
dictfinish	src/aircrack-ng.h	/^	int dictfinish;				\/* finished processing all dicts*\/$/;"	m	struct:options
dictidx	src/aircrack-ng.h	/^	struct dictfiles dictidx[MAX_DICTS];	\/* Dictionary structure		*\/$/;"	m	struct:options	typeref:struct:options::dictfiles
dictpos	src/aircrack-ng.h	/^	off_t	dictpos;			\/* Current position of dictionary *\/$/;"	m	struct:dictfiles
dicts	src/aircrack-ng.h	/^	char *dicts[MAX_DICTS];			 \/* dictionary files     *\/$/;"	m	struct:options
dicts	src/aircrack-ng.h	/^} dicts;$/;"	v	typeref:struct:dictfiles
dictsize	src/aircrack-ng.h	/^	off_t	dictsize;			\/* Total file size *\/$/;"	m	struct:dictfiles
die	src/easside-ng.c	/^void die(char *m)$/;"	f
difference	src/aircrack-ptw-lib.c	/^	double difference;$/;"	m	struct:__anon22	file:
dip	src/packetforge-ng.c	/^    unsigned char dip[4];$/;"	m	struct:options	file:
disable	scripts/airdrop-ng/airdrop/__init__.py	/^    def disable(self):$/;"	m	class:bcolors
discover_prga	src/wesside-ng.c	/^static void discover_prga(struct wstate *ws)$/;"	f	file:
dispatch	src/simd-intrinsics.c	/^static MAYBE_INLINE void dispatch(unsigned char buffers[8][64*MD5_SSE_NUM_KEYS],$/;"	f	file:
dispatch	src/sse-intrinsics.c	/^static MAYBE_INLINE void dispatch(unsigned char buffers[8][64*MD5_SSE_NUM_KEYS], unsigned int f[4*MD5_SSE_NUM_KEYS], unsigned int length[MD5_SSE_NUM_KEYS], unsigned int saltlen)$/;"	f	file:
display_status_bar	src/wesside-ng.c	/^static void display_status_bar(struct wstate *ws, struct timeval *now,$/;"	f	file:
distance	src/aircrack-ptw-lib.c	/^	int distance;$/;"	m	struct:__anon21	file:
dmac	src/packetforge-ng.c	/^    unsigned char dmac[6];$/;"	m	struct:options	file:
doComputation	src/aircrack-ptw-lib.c	/^static int doComputation(PTW_attackstate * state, uint8_t * key, int keylen, PTW_tableentry table[][n], sorthelper * sh2, int * strongbytes, int keylimit, int * bf, int validchars[][n]) {$/;"	f	file:
doRound	src/aircrack-ptw-lib.c	/^static int doRound(PTW_tableentry sortedtable[][n], int keybyte, int fixat, uint8_t fixvalue, int * searchborders, uint8_t * key, int keylen, PTW_attackstate * state, uint8_t sum, int * strongbytes, int * bf, int validchars[][n]) {$/;"	f	file:
do_GET	scripts/dcrack.py	/^	def do_GET(s):$/;"	m	class:ServerHandler
do_POST	scripts/dcrack.py	/^	def do_POST(s):$/;"	m	class:ServerHandler
do_arp	src/wesside-ng.c	/^static void do_arp(unsigned char* buf, unsigned short op, unsigned char* m1,$/;"	f	file:
do_assoc	src/besside-ng.c	/^static void do_assoc(struct network *n, int stype)$/;"	f	file:
do_attack_arp_resend	src/aireplay-ng.c	/^int do_attack_arp_resend( void )$/;"	f
do_attack_caffe_latte	src/aireplay-ng.c	/^int do_attack_caffe_latte( void )$/;"	f
do_attack_cfrag	src/aireplay-ng.c	/^int do_attack_cfrag( void )$/;"	f
do_attack_chopchop	src/aireplay-ng.c	/^int do_attack_chopchop( void )$/;"	f
do_attack_deauth	src/aireplay-ng.c	/^int do_attack_deauth( void )$/;"	f
do_attack_fake_auth	src/aireplay-ng.c	/^int do_attack_fake_auth( void )$/;"	f
do_attack_fragment	src/aireplay-ng.c	/^int do_attack_fragment()$/;"	f
do_attack_fragment	src/tkiptun-ng.c	/^int do_attack_fragment()$/;"	f
do_attack_interactive	src/aireplay-ng.c	/^int do_attack_interactive( void )$/;"	f
do_attack_migmode	src/aireplay-ng.c	/^int do_attack_migmode( void )$/;"	f
do_attack_test	src/aireplay-ng.c	/^int do_attack_test()$/;"	f
do_attack_tkipchop	src/tkiptun-ng.c	/^int do_attack_tkipchop( unsigned char* src_packet, int src_packet_len )$/;"	f
do_brute	src/aircrack-ng.h	/^	int do_brute;				 \/* bruteforce last 2 KB *\/$/;"	m	struct:options
do_cleanup	contrib/peek/omnipeek.c	/^static void do_cleanup(struct pstate *ps)$/;"	f	file:
do_client	scripts/dcrack.py	/^def do_client():$/;"	f
do_cmd	scripts/dcrack.py	/^def do_cmd():$/;"	f
do_cpuid	src/sha1-sse2.S	/^do_cpuid:$/;"	l
do_crack	scripts/dcrack.py	/^	def do_crack(s, path):$/;"	m	class:ServerHandler
do_crack	src/wesside-ng.c	/^static int do_crack(struct wstate *ws)$/;"	f	file:
do_cygwin_open	src/osdep/cygwin.c	/^static int do_cygwin_open(struct wif *wi, char *iface)$/;"	f	file:
do_dict_set	scripts/dcrack.py	/^	def do_dict_set(s, path):$/;"	m	class:ServerHandler
do_dict_status	scripts/dcrack.py	/^	def do_dict_status(s, path):$/;"	m	class:ServerHandler
do_exit	src/airodump-ng.h	/^    volatile int do_exit;            \/* interrupt flag       *\/$/;"	m	struct:globals
do_fbsd_open	src/osdep/freebsd.c	/^static int do_fbsd_open(struct wif *wi, char *iface)$/;"	f	file:
do_flood	src/besside-ng.c	/^static void do_flood(struct network *n)$/;"	f	file:
do_free	src/osdep/cygwin.c	/^static void do_free(struct wif *wi)$/;"	f	file:
do_free	src/osdep/freebsd.c	/^static void do_free(struct wif *wi)$/;"	f	file:
do_free	src/osdep/linux.c	/^static void do_free(struct wif *wi)$/;"	f	file:
do_free	src/osdep/netbsd.c	/^static void do_free(struct wif *wi)$/;"	f	file:
do_free	src/osdep/openbsd.c	/^static void do_free(struct wif *wi)$/;"	f	file:
do_get_mac_cygwin	contrib/commview/commview.c	/^static int do_get_mac_cygwin(struct cstate *cs, unsigned char *mac)$/;"	f	file:
do_get_mac_win	contrib/commview/commview.c	/^static int do_get_mac_win(struct cstate *cs, unsigned char *mac)$/;"	f	file:
do_getwork	scripts/dcrack.py	/^	def do_getwork(s, path):$/;"	m	class:ServerHandler
do_init_lib	contrib/commview/commview.c	/^static int do_init_lib(struct cstate *cs)$/;"	f	file:
do_input	src/wesside-ng.c	/^static void do_input(struct wstate *ws)$/;"	f	file:
do_linux_open	src/osdep/linux.c	/^static int do_linux_open(struct wif *wi, char *iface)$/;"	f	file:
do_llc	src/wesside-ng.c	/^static void do_llc(unsigned char* buf, unsigned short type)$/;"	f	file:
do_lock	contrib/peek/omnipeek.c	/^static void do_lock(struct pstate *ps)$/;"	f	file:
do_make_hccap	src/aircrack-ng.c	/^int do_make_hccap(struct AP_info *ap_cur)$/;"	f
do_make_wkp	src/aircrack-ng.c	/^int do_make_wkp(struct AP_info *ap_cur)$/;"	f
do_mt_brute	src/aircrack-ng.h	/^	int do_mt_brute;			 \/* bruteforce last 2 KB$/;"	m	struct:options
do_nbsd_open	src/osdep/netbsd.c	/^static int do_nbsd_open(struct wif *wi, char *iface)$/;"	f	file:
do_net_free	src/osdep/network.c	/^static void do_net_free(struct wif *wi)$/;"	f	file:
do_net_open	src/osdep/network.c	/^static int do_net_open(char *iface)$/;"	f	file:
do_network_add	src/besside-ng.c	/^static void do_network_add(struct network *n)$/;"	f	file:
do_obsd_open	src/osdep/openbsd.c	/^static int do_obsd_open(struct wif *wi, char *iface)$/;"	f	file:
do_pause	src/airodump-ng.h	/^    int do_pause;$/;"	m	struct:globals
do_ping	scripts/dcrack.py	/^	def do_ping(s, path):$/;"	m	class:ServerHandler
do_ping	scripts/dcrack.py	/^def do_ping(speed):$/;"	f
do_ptw	src/aircrack-ng.h	/^        int do_ptw;                              \/* PTW WEP attack *\/$/;"	m	struct:options
do_req	scripts/dcrack.py	/^	def do_req(s, path):$/;"	m	class:ServerHandler
do_reset	contrib/commview/commview.c	/^static int do_reset(HDEVINFO *hdi, SP_DEVINFO_DATA *did)$/;"	f	file:
do_result	scripts/dcrack.py	/^	def do_result(s, path):$/;"	m	class:ServerHandler
do_result_pass	scripts/dcrack.py	/^	def do_result_pass(s, net, pw):$/;"	m	class:ServerHandler
do_signal	contrib/peek/omnipeek.c	/^static void do_signal(struct pstate *ps)$/;"	f	file:
do_sort_always	src/airodump-ng.h	/^    int do_sort_always;$/;"	m	struct:globals
do_testy	src/aircrack-ng.h	/^	int do_testy;				 \/* experimental attack  *\/$/;"	m	struct:options
do_upload_cap	scripts/dcrack.py	/^	def do_upload_cap(s):$/;"	m	class:ServerHandler
do_upload_dict	scripts/dcrack.py	/^	def do_upload_dict(s):$/;"	m	class:ServerHandler
do_wait	contrib/peek/omnipeek.c	/^static void do_wait(struct pstate *ps)$/;"	f	file:
do_wait	src/besside-ng.c	/^static void do_wait(int UNUSED(x))$/;"	f	file:
do_wep_crack	src/besside-ng.c	/^static void do_wep_crack(struct cracker *c, struct network *n, int len,$/;"	f	file:
do_wep_crack1	src/aircrack-ng.c	/^int do_wep_crack1( int B )$/;"	f
do_wep_crack2	src/aircrack-ng.c	/^int do_wep_crack2( int B )$/;"	f
do_wpa_crack	src/aircrack-ng.c	/^int do_wpa_crack()$/;"	f
docdir	common.mak	/^docdir          = $(datadir)\/doc\/aircrack-ng$/;"	m
dotClose	scripts/airgraph-ng/graphviz/lib_Airgraphviz.py	/^def dotClose(input,footer): #OLDNAME dot_close$/;"	f
dotWrite	scripts/airgraph-ng/graphviz/lib_Airgraphviz.py	/^def dotWrite(data): #OLDNAME dot_write$/;"	f
doublesorthelper	src/aircrack-ptw-lib.c	/^} doublesorthelper;$/;"	t	typeref:struct:__anon22	file:
dport	src/packetforge-ng.c	/^    unsigned short dport;$/;"	m	struct:options	file:
drivertype	src/osdep/linux.c	/^    DRIVER_TYPE drivertype; \/* inited to DT_UNKNOWN on allocation by wi_alloc *\/$/;"	m	struct:priv_linux	file:
drop_privs	src/buddy-ng.c	/^void drop_privs()$/;"	f
dropped	src/include/if_arp.h	/^	uint64_t dropped;	\/* # of packets dropped waiting for a reply. *\/$/;"	m	struct:arpstat
dst	test/pingreply.c	/^    unsigned char dst[4];$/;"	m	struct:ip_hdr	file:
dst	test/pingreply.c	/^    unsigned char dst[6];$/;"	m	struct:eth_hdr	file:
dummy	src/MD5_std.h	/^	double dummy;$/;"	m	union:__anon24
dump_add_packet	src/airodump-ng.c	/^int dump_add_packet( unsigned char *h80211, int caplen, struct rx_info *ri, int cardnum )$/;"	f
dump_add_packet	src/ivstools.c	/^int dump_add_packet( unsigned char *h80211, unsigned caplen)$/;"	f
dump_initialize	src/airbase-ng.c	/^int dump_initialize( char *prefix )$/;"	f
dump_initialize	src/airodump-ng.c	/^int dump_initialize( char *prefix, int ivs_only )$/;"	f
dump_out_mmx	src/memory.c	/^void dump_out_mmx(void *buf, unsigned int size, unsigned int index) {$/;"	f
dump_out_mmx_msg	src/memory.c	/^void dump_out_mmx_msg(const void *msg, void *buf, unsigned int size, unsigned int index) {$/;"	f
dump_out_mmx_msg_sepline	src/memory.c	/^void dump_out_mmx_msg_sepline(const void *msg, void *buf, unsigned int size, unsigned int index) {$/;"	f
dump_out_mmx_noeol	src/memory.c	/^void dump_out_mmx_noeol(void *buf, unsigned int size, unsigned int index) {$/;"	f
dump_out_shammx	src/memory.c	/^void dump_out_shammx(void *buf, unsigned int size, unsigned int index) {$/;"	f
dump_out_shammx64	src/memory.c	/^void dump_out_shammx64(void *buf, unsigned int size, unsigned int index) {$/;"	f
dump_out_shammx64_msg	src/memory.c	/^void dump_out_shammx64_msg(const void *msg, void *buf, unsigned int size, unsigned int index) {$/;"	f
dump_out_shammx_msg	src/memory.c	/^void dump_out_shammx_msg(const void *msg, void *buf, unsigned int size, unsigned int index) {$/;"	f
dump_packet	src/aireplay-ng.c	/^void dump_packet(unsigned char* packet, int len)$/;"	f
dump_packet	src/tkiptun-ng.c	/^void dump_packet(unsigned char* packet, int len)$/;"	f
dump_prefix	src/airbase-ng.c	/^    char *dump_prefix;$/;"	m	struct:options	file:
dump_prefix	src/airodump-ng.h	/^    char *dump_prefix;$/;"	m	struct:globals
dump_print	src/airodump-ng.c	/^void dump_print( int ws_row, int ws_col, int if_num )$/;"	f
dump_sort	src/airodump-ng.c	/^void dump_sort( void )$/;"	f
dump_stuff	src/memory.c	/^void dump_stuff(void* x, unsigned int size)$/;"	f
dump_stuff_be	src/memory.c	/^void dump_stuff_be(void* x, unsigned int size)$/;"	f
dump_stuff_be_msg	src/memory.c	/^void dump_stuff_be_msg(const void *msg, void *x, unsigned int size) {$/;"	f
dump_stuff_be_msg_sepline	src/memory.c	/^void dump_stuff_be_msg_sepline(const void *msg, void *x, unsigned int size) {$/;"	f
dump_stuff_be_noeol	src/memory.c	/^void dump_stuff_be_noeol(void *x, unsigned int size) {$/;"	f
dump_stuff_mmx	src/memory.c	/^void dump_stuff_mmx(void *buf, unsigned int size, unsigned int index) {$/;"	f
dump_stuff_mmx64	src/memory.c	/^void dump_stuff_mmx64(void *buf, unsigned int size, unsigned int index) {$/;"	f
dump_stuff_mmx64_msg	src/memory.c	/^void dump_stuff_mmx64_msg(const void *msg, void *buf, unsigned int size, unsigned int index) {$/;"	f
dump_stuff_mmx_msg	src/memory.c	/^void dump_stuff_mmx_msg(const void *msg, void *buf, unsigned int size, unsigned int index) {$/;"	f
dump_stuff_mmx_msg_sepline	src/memory.c	/^void dump_stuff_mmx_msg_sepline(const void *msg, void *buf, unsigned int size, unsigned int index) {$/;"	f
dump_stuff_mmx_noeol	src/memory.c	/^void dump_stuff_mmx_noeol(void *buf, unsigned int size, unsigned int index) {$/;"	f
dump_stuff_mpara_mmx	src/memory.c	/^void dump_stuff_mpara_mmx(void *buf, unsigned int size, unsigned int index) {$/;"	f
dump_stuff_mpara_mmx_msg	src/memory.c	/^void dump_stuff_mpara_mmx_msg(const void *msg, void *buf, unsigned int size, unsigned int index) {$/;"	f
dump_stuff_mpara_mmx_msg_sepline	src/memory.c	/^void dump_stuff_mpara_mmx_msg_sepline(const void *msg, void *buf, unsigned int size, unsigned int index) {$/;"	f
dump_stuff_mpara_mmx_noeol	src/memory.c	/^void dump_stuff_mpara_mmx_noeol(void *buf, unsigned int size, unsigned int index) {$/;"	f
dump_stuff_msg	src/memory.c	/^void dump_stuff_msg(const void *msg, void *x, unsigned int size) {$/;"	f
dump_stuff_msg_sepline	src/memory.c	/^void dump_stuff_msg_sepline(const void *msg, void *x, unsigned int size) {$/;"	f
dump_stuff_noeol	src/memory.c	/^void dump_stuff_noeol(void *x, unsigned int size)$/;"	f
dump_stuff_shammx	src/memory.c	/^void dump_stuff_shammx(void *buf, unsigned int size, unsigned int index) {$/;"	f
dump_stuff_shammx64	src/memory.c	/^void dump_stuff_shammx64(void *buf, unsigned int size, unsigned int index) {$/;"	f
dump_stuff_shammx64_msg	src/memory.c	/^void dump_stuff_shammx64_msg(const void *msg, void *buf, unsigned int size, unsigned int index) {$/;"	f
dump_stuff_shammx_msg	src/memory.c	/^void dump_stuff_shammx_msg(const void *msg, void *buf, unsigned int size, unsigned int index) {$/;"	f
dump_text	src/memory.c	/^void dump_text(void *in, int len)$/;"	f
dump_write_csv	src/airodump-ng.c	/^int dump_write_csv( void )$/;"	f
dump_write_kismet_csv	src/airodump-ng.c	/^int dump_write_kismet_csv( void )$/;"	f
dump_write_kismet_netxml	src/airodump-ng.c	/^int dump_write_kismet_netxml( void )$/;"	f
dump_write_kismet_netxml_client_info	src/airodump-ng.c	/^int dump_write_kismet_netxml_client_info(struct ST_info *client, int client_no)$/;"	f
dumper	src/besside-ng-crawler.c	/^pcap_dumper_t *dumper;$/;"	v
dumphandle	src/besside-ng-crawler.c	/^pcap_t *dumphandle;$/;"	v
dupips	src/include/if_arp.h	/^	uint64_t dupips;	\/* # of duplicate IPs detected. *\/$/;"	m	struct:arpstat
dv_ti	src/airbase-ng.c	/^    struct tif *dv_ti;$/;"	m	struct:devices	typeref:struct:devices::tif	file:
dv_ti	src/airtun-ng.c	/^    struct tif *dv_ti;$/;"	m	struct:devices	typeref:struct:devices::tif	file:
dv_ti2	src/airbase-ng.c	/^    struct tif *dv_ti2;$/;"	m	struct:devices	typeref:struct:devices::tif	file:
e	src/MD5_std.h	/^	} e;$/;"	m	struct:__anon26	typeref:struct:__anon26::__anon28
eapol	src/aircrack-ng.h	/^	int eapol;					 \/* set if EAPOL is present      *\/$/;"	m	struct:AP_info
eapol	src/crypto.h	/^    unsigned char eapol[256];           \/* eapol frame contents         *\/$/;"	m	struct:WPA_ST_info
eapol	src/include/eapol.h	/^    uint8_t eapol[256];   \/* eapol frame contents     *\/$/;"	m	struct:WPA_hdsk
eapol_handshake_step	src/besside-ng.c	/^static int eapol_handshake_step(unsigned char *eapol, int len)$/;"	f	file:
eapol_handshake_step	src/wpaclean.c	/^static int eapol_handshake_step(unsigned char *eapol, int len)$/;"	f	file:
eapol_size	src/crypto.h	/^    unsigned eapol_size;            \/* eapol frame size             *\/$/;"	m	struct:WPA_ST_info
eapol_size	src/include/eapol.h	/^    uint32_t eapol_size;  \/* eapol frame size         *\/$/;"	m	struct:WPA_hdsk
east_state	src/easside-ng.c	/^struct east_state {$/;"	s	file:
elapsed_time	src/airodump-ng.h	/^    char * elapsed_time;	\/* capture time			*\/$/;"	m	struct:globals
elapsedd	src/wesside-ng.c	/^static int elapsedd(struct timeval *past, struct timeval *now)$/;"	f	file:
encoding	scripts/airdrop-ng/airdrop/__init__.py	/^encoding = sys.getfilesystemencoding()$/;"	v
encrypt	src/packetforge-ng.c	/^    char encrypt;$/;"	m	struct:options	file:
encrypt_ccmp	src/crypto.c	/^int encrypt_ccmp( unsigned char *h80211, int caplen, unsigned char TK1[16], unsigned char PN[6] )$/;"	f
encrypt_data	src/airbase-ng.c	/^int encrypt_data(unsigned char* data, int length)$/;"	f
encrypt_data	src/airtun-ng.c	/^int encrypt_data(unsigned char *dest, unsigned char* data, int length)$/;"	f
encrypt_data	src/packetforge-ng.c	/^int encrypt_data(unsigned char *dest, unsigned char* data, int length)$/;"	f
encrypt_wep	src/crypto.c	/^int encrypt_wep( unsigned char *data, int len, unsigned char *key, int keylen )$/;"	f
encryptionColor	scripts/airgraph-ng/graphviz/lib_Airgraphviz.py	/^def encryptionColor(enc): #OLDNAME Return_Enc_type$/;"	f
endianness	lib/csharp/MonoExample/NDesk-dbus/MessageReader.cs	/^		protected EndianFlag endianness;$/;"	f	class:NDesk.DBus.MessageReader
endianness	lib/csharp/MonoExample/NDesk-dbus/MessageWriter.cs	/^		protected EndianFlag endianness;$/;"	f	class:NDesk.DBus.MessageWriter
eof_wait	src/aircrack-ng.c	/^void eof_wait( int *eof_notified )$/;"	f
errbuf	test/pingreply.c	/^char errbuf[PCAP_ERRBUF_SIZE];$/;"	v
error	src/misc.h	107;"	d
error_msg	src/misc.h	121;"	d
es_apchan	src/easside-ng.c	/^	int		es_apchan;$/;"	m	struct:east_state	file:
es_apmac	src/easside-ng.c	/^	unsigned char	es_apmac[6];$/;"	m	struct:east_state	file:
es_apssid	src/easside-ng.c	/^	char		es_apssid[256];$/;"	m	struct:east_state	file:
es_astate	src/easside-ng.c	/^	int		es_astate;$/;"	m	struct:east_state	file:
es_buddys	src/easside-ng.c	/^	int		es_buddys;$/;"	m	struct:east_state	file:
es_chanlock	src/easside-ng.c	/^	int		es_chanlock;$/;"	m	struct:east_state	file:
es_clear	src/easside-ng.c	/^	unsigned char	es_clear[S_MTU+4];$/;"	m	struct:east_state	file:
es_clearp	src/easside-ng.c	/^	unsigned char	*es_clearp;$/;"	m	struct:east_state	file:
es_clearpnext	src/easside-ng.c	/^	unsigned char	*es_clearpnext;$/;"	m	struct:east_state	file:
es_expand_factor	src/easside-ng.c	/^	int		es_expand_factor;$/;"	m	struct:east_state	file:
es_expand_len	src/easside-ng.c	/^	int		es_expand_len;$/;"	m	struct:east_state	file:
es_expand_num	src/easside-ng.c	/^	int		es_expand_num;$/;"	m	struct:east_state	file:
es_have_arp	src/easside-ng.c	/^	int		es_have_arp;$/;"	m	struct:east_state	file:
es_have_packet	src/easside-ng.c	/^	int		es_have_packet;$/;"	m	struct:east_state	file:
es_have_src	src/easside-ng.c	/^	int		es_have_src;$/;"	m	struct:east_state	file:
es_hopfreq	src/easside-ng.c	/^	unsigned int	es_hopfreq;$/;"	m	struct:east_state	file:
es_ifname	src/easside-ng.c	/^	char		es_ifname[256];$/;"	m	struct:east_state	file:
es_iponly	src/easside-ng.c	/^	int		es_iponly;$/;"	m	struct:east_state	file:
es_iv	src/easside-ng.c	/^	unsigned char	es_iv[3];$/;"	m	struct:east_state	file:
es_lasthop	src/easside-ng.c	/^	struct timeval	es_lasthop;$/;"	m	struct:east_state	typeref:struct:east_state::timeval	file:
es_myip	src/easside-ng.c	/^	struct in_addr	es_myip;$/;"	m	struct:east_state	typeref:struct:east_state::in_addr	file:
es_mymac	src/easside-ng.c	/^	unsigned char	es_mymac[6];$/;"	m	struct:east_state	file:
es_owned	src/easside-ng.c	/^	struct owned	*es_owned;$/;"	m	struct:east_state	typeref:struct:east_state::owned	file:
es_packet	src/easside-ng.c	/^	unsigned char	es_packet[2048];$/;"	m	struct:east_state	file:
es_packet_arp	src/easside-ng.c	/^	unsigned char	es_packet_arp[2048];$/;"	m	struct:east_state	file:
es_port	src/easside-ng.c	/^	int		es_port;$/;"	m	struct:east_state	file:
es_prga	src/easside-ng.c	/^	unsigned char	es_prga[S_MTU+4];$/;"	m	struct:east_state	file:
es_prga_d	src/easside-ng.c	/^	unsigned char	es_prga_d[S_MTU+4];$/;"	m	struct:east_state	file:
es_prga_div	src/easside-ng.c	/^	unsigned char	es_prga_div[3];$/;"	m	struct:east_state	file:
es_prga_dlen	src/easside-ng.c	/^	int		es_prga_dlen;$/;"	m	struct:east_state	file:
es_prgalen	src/easside-ng.c	/^	int		es_prgalen;$/;"	m	struct:east_state	file:
es_pubip	src/easside-ng.c	/^	struct in_addr	es_pubip;$/;"	m	struct:east_state	typeref:struct:east_state::in_addr	file:
es_rpacket_id	src/easside-ng.c	/^	unsigned short	es_rpacket_id;$/;"	m	struct:east_state	file:
es_rqueue	src/easside-ng.c	/^	struct rpacket	*es_rqueue;$/;"	m	struct:east_state	typeref:struct:east_state::rpacket	file:
es_rtrip	src/easside-ng.c	/^	struct in_addr	es_rtrip;$/;"	m	struct:east_state	typeref:struct:east_state::in_addr	file:
es_rtrmac	src/easside-ng.c	/^	unsigned char	es_rtrmac[6];$/;"	m	struct:east_state	file:
es_rtt	src/easside-ng.c	/^	struct timeval	es_rtt;$/;"	m	struct:east_state	typeref:struct:east_state::timeval	file:
es_rtt_id	src/easside-ng.c	/^	unsigned short	es_rtt_id;$/;"	m	struct:east_state	file:
es_rxseq	src/easside-ng.c	/^	int		es_rxseq;$/;"	m	struct:east_state	file:
es_setmac	src/easside-ng.c	/^	int		es_setmac;$/;"	m	struct:east_state	file:
es_srtt	src/easside-ng.c	/^	int		es_srtt;$/;"	m	struct:east_state	file:
es_srvip	src/easside-ng.c	/^	struct in_addr	es_srvip;$/;"	m	struct:east_state	typeref:struct:east_state::in_addr	file:
es_state	src/easside-ng.c	/^	int		es_state;$/;"	m	struct:east_state	file:
es_tapname	src/easside-ng.c	/^	char		es_tapname[16];$/;"	m	struct:east_state	file:
es_ti	src/easside-ng.c	/^	struct tif	*es_ti;$/;"	m	struct:east_state	typeref:struct:east_state::tif	file:
es_txack	src/easside-ng.c	/^	int		es_txack;$/;"	m	struct:east_state	file:
es_txlast	src/easside-ng.c	/^	struct timeval	es_txlast;$/;"	m	struct:east_state	typeref:struct:east_state::timeval	file:
es_txseq	src/easside-ng.c	/^	int		es_txseq;$/;"	m	struct:east_state	file:
es_txto_checkinet	src/easside-ng.c	/^	int		es_txto_checkinet;$/;"	m	struct:east_state	file:
es_txto_decrypt	src/easside-ng.c	/^	int		es_txto_decrypt;$/;"	m	struct:east_state	file:
es_txto_expand	src/easside-ng.c	/^	int		es_txto_expand;$/;"	m	struct:east_state	file:
es_txto_mgt	src/easside-ng.c	/^	int		es_txto_mgt;$/;"	m	struct:east_state	file:
es_txto_redirect	src/easside-ng.c	/^	int		es_txto_redirect;$/;"	m	struct:east_state	file:
es_txto_whohas	src/easside-ng.c	/^	int		es_txto_whohas;$/;"	m	struct:east_state	file:
es_udp_port	src/easside-ng.c	/^	int		es_udp_port;$/;"	m	struct:east_state	file:
es_wi	src/easside-ng.c	/^	struct wif	*es_wi;$/;"	m	struct:east_state	typeref:struct:east_state::wif	file:
essid	src/airbase-ng.c	/^    char            *essid;$/;"	m	struct:ESSID_list	file:
essid	src/airbase-ng.c	/^    char *essid;$/;"	m	struct:AP_conf	file:
essid	src/airbase-ng.c	/^    char essid[256];         \/* last associated essid     *\/$/;"	m	struct:ST_info	file:
essid	src/aircrack-ng.h	/^	char essid[33];				 \/* access point identifier      *\/$/;"	m	struct:AP_info
essid	src/aircrack-ng.h	/^	char essid[33];				 \/* target ESSID         *\/$/;"	m	struct:options
essid	src/airdecap-ng.c	/^    char essid[36];$/;"	m	struct:options	file:
essid	src/aireplay-ng.c	/^    unsigned char essid[255];$/;"	m	struct:APt	file:
essid	src/airodump-ng.h	/^    unsigned char essid[MAX_IE_ELEMENT_SIZE];$/;"	m	struct:AP_info
essid	src/airtun-ng.c	/^    char essid[36];$/;"	m	struct:options	file:
essid	src/ivstools.c	/^    unsigned char essid[256]; \/* ascii network identifier *\/$/;"	m	struct:AP_info	file:
essid	src/tkiptun-ng.c	/^    unsigned char essid[255];$/;"	m	struct:APt	file:
essid_len	src/airbase-ng.c	/^    int essid_len;$/;"	m	struct:AP_conf	file:
essid_length	src/airbase-ng.c	/^    int essid_length;        \/* essid length of last asso *\/$/;"	m	struct:ST_info	file:
essid_set	src/aircrack-ng.h	/^	int essid_set;				 \/* essid set flag       *\/$/;"	m	struct:options
essid_stored	src/airodump-ng.h	/^    int essid_stored;         \/* essid stored in ivs file? *\/$/;"	m	struct:AP_info
essid_stored	src/ivstools.c	/^    int essid_stored;         \/* essid stored in ivs file? *\/$/;"	m	struct:AP_info	file:
etcdir	common.mak	/^etcdir		= $(prefix)\/etc\/aircrack-ng$/;"	m
eth	test/pingreply.c	/^    struct eth_hdr eth;$/;"	m	struct:eth_ip_icmp_reply	typeref:struct:eth_ip_icmp_reply::eth_hdr	file:
eth_hdr	test/pingreply.c	/^struct eth_hdr {$/;"	s	file:
eth_ip_icmp_reply	test/pingreply.c	/^struct eth_ip_icmp_reply {$/;"	s	file:
ether_addr	src/include/ethernet.h	/^struct ether_addr {$/;"	s
ether_dhost	src/include/ethernet.h	/^	u_char	ether_dhost[ETHER_ADDR_LEN];$/;"	m	struct:ether_header
ether_header	src/include/ethernet.h	/^struct ether_header {$/;"	s
ether_shost	src/include/ethernet.h	/^	u_char	ether_shost[ETHER_ADDR_LEN];$/;"	m	struct:ether_header
ether_type	src/include/ethernet.h	/^	u_short	ether_type;$/;"	m	struct:ether_header
ether_type	src/include/if_llc.h	/^		uint16_t ether_type;$/;"	m	struct:llc::__anon6::__anon11
eval	src/aircrack-ptw-lib.c	/^static const double eval[] = {$/;"	v	file:
even	src/MD5_std.h	/^	MD5_block *even, *odd;$/;"	m	struct:__anon25
expand_prga	src/easside-ng.c	/^void expand_prga(struct east_state *es, struct timeval *tv)$/;"	f
expire	src/airbase-ng.c	/^	time_t          expire;$/;"	m	struct:ESSID_list	file:
export_cowpatty	src/airolib-ng.c	/^void export_cowpatty(sqlite3* db, char* essid, char* filename) {$/;"	f
external	src/airbase-ng.c	/^    int external;$/;"	m	struct:options	file:
f_bssid	src/airbase-ng.c	/^    unsigned char f_bssid[6];$/;"	m	struct:options	file:
f_bssid	src/aireplay-ng.c	/^    unsigned char f_bssid[6];$/;"	m	struct:options	file:
f_bssid	src/airodump-ng.h	/^    unsigned char f_bssid[6];$/;"	m	struct:globals
f_bssid	src/airtun-ng.c	/^    unsigned char f_bssid[6];$/;"	m	struct:options	file:
f_bssid	src/tkiptun-ng.c	/^    unsigned char f_bssid[6];$/;"	m	struct:options	file:
f_cap	src/airbase-ng.c	/^    FILE *f_cap;            \/* output cap file      *\/$/;"	m	struct:options	file:
f_cap	src/airodump-ng.h	/^    FILE *f_cap;            \/* output cap file      *\/$/;"	m	struct:globals
f_cap_in	src/airbase-ng.c	/^    FILE *f_cap_in;$/;"	m	struct:devices	file:
f_cap_in	src/aireplay-ng.c	/^    FILE *f_cap_in;$/;"	m	struct:devices	file:
f_cap_in	src/airodump-ng.h	/^    FILE *f_cap_in;$/;"	m	struct:globals
f_cap_in	src/airtun-ng.c	/^    FILE *f_cap_in;$/;"	m	struct:devices	file:
f_cap_in	src/osdep/linux.c	/^    FILE *f_cap_in;$/;"	m	struct:priv_linux	file:
f_cap_in	src/packetforge-ng.c	/^    FILE *f_cap_in;$/;"	m	struct:devices	file:
f_cap_in	src/tkiptun-ng.c	/^    FILE *f_cap_in;$/;"	m	struct:devices	file:
f_cap_name	src/airbase-ng.c	/^    char *f_cap_name;$/;"	m	struct:options	file:
f_cap_name	src/airodump-ng.h	/^    char *f_cap_name;$/;"	m	struct:globals
f_crc	src/crypto.h	/^    unsigned long f_crc;        \/* last FromDS frame CRC        *\/$/;"	m	struct:WPA_ST_info
f_dmac	src/aireplay-ng.c	/^    unsigned char f_dmac[6];$/;"	m	struct:options	file:
f_dmac	src/tkiptun-ng.c	/^    unsigned char f_dmac[6];$/;"	m	struct:options	file:
f_encrypt	src/airodump-ng.h	/^    int f_encrypt;          \/* encryption filter    *\/$/;"	m	struct:globals
f_essid	src/airbase-ng.c	/^    int f_essid;$/;"	m	struct:options	file:
f_essid	src/airodump-ng.h	/^    char **f_essid;$/;"	m	struct:globals
f_essid_count	src/airodump-ng.h	/^    int f_essid_count;$/;"	m	struct:globals
f_essid_regex	src/airodump-ng.h	/^    pcre *f_essid_regex;$/;"	m	struct:globals
f_ext	src/airodump-ng.h	/^char *f_ext[NB_EXTENSIONS] = { AIRODUMP_NG_CSV_EXT, AIRODUMP_NG_GPS_EXT, AIRODUMP_NG_CAP_EXT, IVS2_EXTENSION, KISMET_CSV_EXT, KISMET_NETXML_EXT };$/;"	v
f_fromds	src/aireplay-ng.c	/^    int f_fromds;$/;"	m	struct:options	file:
f_fromds	src/tkiptun-ng.c	/^    int f_fromds;$/;"	m	struct:options	file:
f_gps	src/airodump-ng.h	/^    FILE *f_gps;            \/* output gps file      *\/$/;"	m	struct:globals
f_index	src/airbase-ng.c	/^    int f_index;            \/* outfiles index       *\/$/;"	m	struct:options	file:
f_index	src/airodump-ng.h	/^    int f_index;            \/* outfiles index       *\/$/;"	m	struct:globals
f_iswep	src/aireplay-ng.c	/^    int f_iswep;$/;"	m	struct:options	file:
f_iswep	src/tkiptun-ng.c	/^    int f_iswep;$/;"	m	struct:options	file:
f_ivs	src/airodump-ng.h	/^    FILE *f_ivs;            \/* output ivs file      *\/$/;"	m	struct:globals
f_ivs	src/ivstools.c	/^    FILE *f_ivs;            \/* output ivs file      *\/$/;"	m	struct:globals	file:
f_ivs	src/tkiptun-ng.c	/^    FILE *f_ivs;            \/* output ivs file      *\/$/;"	m	struct:options	file:
f_kis	src/airodump-ng.h	/^    FILE *f_kis;            \/* output kismet csv file      *\/$/;"	m	struct:globals
f_kis_xml	src/airodump-ng.h	/^    FILE *f_kis_xml;        \/* output kismet netxml file *\/$/;"	m	struct:globals
f_maxlen	src/aireplay-ng.c	/^    int f_maxlen;$/;"	m	struct:options	file:
f_maxlen	src/tkiptun-ng.c	/^    int f_maxlen;$/;"	m	struct:options	file:
f_maxlen_set	src/tkiptun-ng.c	/^    int f_maxlen_set;$/;"	m	struct:options	file:
f_minlen	src/aireplay-ng.c	/^    int f_minlen;$/;"	m	struct:options	file:
f_minlen	src/tkiptun-ng.c	/^    int f_minlen;$/;"	m	struct:options	file:
f_minlen_set	src/tkiptun-ng.c	/^    int f_minlen_set;$/;"	m	struct:options	file:
f_netmask	src/airbase-ng.c	/^    unsigned char f_netmask[6];$/;"	m	struct:options	file:
f_netmask	src/airodump-ng.h	/^    unsigned char f_netmask[6];$/;"	m	struct:globals
f_netmask	src/airtun-ng.c	/^    unsigned char f_netmask[6];$/;"	m	struct:options	file:
f_retry	src/aireplay-ng.c	/^	int f_retry;$/;"	m	struct:options	file:
f_smac	src/aireplay-ng.c	/^    unsigned char f_smac[6];$/;"	m	struct:options	file:
f_smac	src/tkiptun-ng.c	/^    unsigned char f_smac[6];$/;"	m	struct:options	file:
f_subtype	src/aireplay-ng.c	/^    int f_subtype;$/;"	m	struct:options	file:
f_subtype	src/tkiptun-ng.c	/^    int f_subtype;$/;"	m	struct:options	file:
f_tods	src/aireplay-ng.c	/^    int f_tods;$/;"	m	struct:options	file:
f_tods	src/tkiptun-ng.c	/^    int f_tods;$/;"	m	struct:options	file:
f_txt	src/airodump-ng.h	/^    FILE *f_txt;            \/* output csv file      *\/$/;"	m	struct:globals
f_type	src/aireplay-ng.c	/^    int f_type;$/;"	m	struct:options	file:
f_type	src/tkiptun-ng.c	/^    int f_type;$/;"	m	struct:options	file:
f_xor	src/airbase-ng.c	/^    FILE *f_xor;            \/* output prga file     *\/$/;"	m	struct:options	file:
f_xor	src/airodump-ng.h	/^    FILE *f_xor;            \/* output prga file     *\/$/;"	m	struct:globals
false	src/airdecloak-ng.h	/^typedef enum {false, true} BOOLEAN;$/;"	e	enum:__anon38
fast	src/aireplay-ng.c	/^    int fast;$/;"	m	struct:options	file:
fast	src/tkiptun-ng.c	/^    int fast;$/;"	m	struct:options	file:
fbsd_close	src/osdep/freebsd.c	/^static void fbsd_close(struct wif *wi)$/;"	f	file:
fbsd_fd	src/osdep/freebsd.c	/^static int fbsd_fd(struct wif *wi)$/;"	f	file:
fbsd_get_channel	src/osdep/freebsd.c	/^static int fbsd_get_channel(struct wif *wi)$/;"	f	file:
fbsd_get_mac	src/osdep/freebsd.c	/^static int fbsd_get_mac(struct wif *wi, unsigned char *mac)$/;"	f	file:
fbsd_get_monitor	src/osdep/freebsd.c	/^static int fbsd_get_monitor(struct wif *wi)$/;"	f	file:
fbsd_get_mtu	src/osdep/freebsd.c	/^static int fbsd_get_mtu(struct wif *wi)$/;"	f	file:
fbsd_get_rate	src/osdep/freebsd.c	/^static int fbsd_get_rate(struct wif *wi)$/;"	f	file:
fbsd_open	src/osdep/freebsd.c	/^static struct wif *fbsd_open(char *iface)$/;"	f	file:
fbsd_read	src/osdep/freebsd.c	/^static int fbsd_read(struct wif *wi, unsigned char *h80211, int len,$/;"	f	file:
fbsd_set_channel	src/osdep/freebsd.c	/^static int fbsd_set_channel(struct wif *wi, int chan)$/;"	f	file:
fbsd_set_mac	src/osdep/freebsd.c	/^static int fbsd_set_mac(struct wif *wi, unsigned char *mac)$/;"	f	file:
fbsd_set_mtu	src/osdep/freebsd.c	/^static int fbsd_set_mtu(struct wif *wi, int mtu)$/;"	f	file:
fbsd_set_rate	src/osdep/freebsd.c	/^static int fbsd_set_rate(struct wif *wi, int rate)$/;"	f	file:
fbsd_write	src/osdep/freebsd.c	/^static int fbsd_write(struct wif *wi, unsigned char *h80211, int len,$/;"	f	file:
fcapt	src/airodump-ng.h	/^    int    fcapt;             \/* amount of captured frames   *\/$/;"	m	struct:AP_info
fcshdr	src/osdep/radiotap/parse.c	/^static int fcshdr = 0;$/;"	v	file:
fctrl	src/packetforge-ng.c	/^    unsigned char fctrl[2];$/;"	m	struct:options	file:
fd_in	src/airbase-ng.c	/^    int fd_in,  arptype_in;$/;"	m	struct:devices	file:
fd_in	src/aireplay-ng.c	/^    int fd_in,  arptype_in;$/;"	m	struct:devices	file:
fd_in	src/airtun-ng.c	/^    int fd_in,  arptype_in;$/;"	m	struct:devices	file:
fd_in	src/osdep/linux.c	/^    int fd_in,  arptype_in;$/;"	m	struct:priv_linux	file:
fd_in	src/packetforge-ng.c	/^    int fd_in,  arptype_in;$/;"	m	struct:devices	file:
fd_in	src/tkiptun-ng.c	/^    int fd_in,  arptype_in;$/;"	m	struct:devices	file:
fd_main	src/osdep/linux.c	/^    int fd_main;$/;"	m	struct:priv_linux	file:
fd_out	src/airbase-ng.c	/^    int fd_out, arptype_out;$/;"	m	struct:devices	file:
fd_out	src/aireplay-ng.c	/^    int fd_out, arptype_out;$/;"	m	struct:devices	file:
fd_out	src/airtun-ng.c	/^    int fd_out, arptype_out;$/;"	m	struct:devices	file:
fd_out	src/osdep/linux.c	/^    int fd_out, arptype_out;$/;"	m	struct:priv_linux	file:
fd_out	src/packetforge-ng.c	/^    int fd_out, arptype_out;$/;"	m	struct:devices	file:
fd_out	src/tkiptun-ng.c	/^    int fd_out, arptype_out;$/;"	m	struct:devices	file:
fd_rtc	src/airbase-ng.c	/^    int fd_rtc;$/;"	m	struct:devices	file:
fd_rtc	src/aireplay-ng.c	/^    int fd_rtc;$/;"	m	struct:devices	file:
fd_rtc	src/airtun-ng.c	/^    int fd_rtc;$/;"	m	struct:devices	file:
fd_rtc	src/osdep/linux.c	/^    int fd_rtc;$/;"	m	struct:priv_linux	file:
fd_rtc	src/packetforge-ng.c	/^    int fd_rtc;$/;"	m	struct:devices	file:
fd_rtc	src/tkiptun-ng.c	/^    int fd_rtc;$/;"	m	struct:devices	file:
ffact	src/aircrack-ng.h	/^	float ffact;				 \/* bruteforce factor    *\/$/;"	m	struct:options
field	src/osdep/radiotap/radiotap_iter.h	/^	uint8_t field;$/;"	m	struct:radiotap_override
fileOpen	scripts/airdrop-ng/airdrop-ng	/^    def fileOpen(self,name):$/;"	m	class:parseFiles
file_close	src/osdep/file.c	/^static void file_close(struct wif *wi)$/;"	f	file:
file_fd	src/osdep/file.c	/^static int file_fd(struct wif *wi)$/;"	f	file:
file_get_channel	src/osdep/file.c	/^static int file_get_channel(struct wif *wi)$/;"	f	file:
file_get_mac	src/osdep/file.c	/^static int file_get_mac(struct wif *wi, unsigned char *mac)$/;"	f	file:
file_get_monitor	src/osdep/file.c	/^static int file_get_monitor(struct wif *wi)$/;"	f	file:
file_get_rate	src/osdep/file.c	/^static int file_get_rate(struct wif *wi)$/;"	f	file:
file_open	src/osdep/file.c	/^struct wif *file_open(char *iface)$/;"	f
file_read	src/osdep/file.c	/^static int file_read(struct wif *wi, unsigned char *h80211, int len,$/;"	f	file:
file_set_channel	src/osdep/file.c	/^static int file_set_channel(struct wif *wi, int chan)$/;"	f	file:
file_set_rate	src/osdep/file.c	/^static int file_set_rate(struct wif *wi, int rate)$/;"	f	file:
file_write	src/osdep/file.c	/^static int file_write(struct wif *wi, unsigned char *h80211, int len,$/;"	f	file:
file_write_interval	src/airodump-ng.h	/^    int file_write_interval;$/;"	m	struct:globals
fill_basic	src/besside-ng.c	/^static void fill_basic(struct network *n, struct ieee80211_frame *wh)$/;"	f	file:
fill_basic	src/easside-ng.c	/^void fill_basic(struct east_state *es, struct ieee80211_frame *wh)$/;"	f
fill_basic	src/wesside-ng.c	/^static void fill_basic(struct wstate *ws, struct ieee80211_frame* wh)$/;"	f	file:
filter	src/airbase-ng.c	/^    int filter;$/;"	m	struct:options	file:
filter_packet	src/aireplay-ng.c	/^int filter_packet( unsigned char *h80211, int caplen )$/;"	f
filter_packet	src/tkiptun-ng.c	/^int filter_packet( unsigned char *h80211, int caplen )$/;"	f
final	src/airbase-ng.c	/^    unsigned char           final[4096];    \/* final frame derived from orig *\/$/;"	m	struct:CF_packet	file:
finallen	src/airbase-ng.c	/^    int             finallen;       \/* length of frame in final[]    *\/$/;"	m	struct:CF_packet	file:
find_add_client	src/wpaclean.c	/^static struct client *find_add_client(struct network *n, unsigned char *mac)$/;"	f	file:
find_add_net	src/wpaclean.c	/^static struct network *find_add_net(unsigned char *bssid)$/;"	f	file:
find_client	src/wpaclean.c	/^static struct client *find_client(struct network *n, unsigned char *mac)$/;"	f	file:
find_entry	src/airtun-ng.c	/^struct net_entry *find_entry(unsigned char *adress) {$/;"	f
find_ip	src/easside-ng.c	/^void find_ip(struct east_state *es, struct timeval *tv)$/;"	f
find_mac	src/wesside-ng.c	/^static int find_mac(struct wstate *ws)$/;"	f	file:
find_net	src/wpaclean.c	/^static struct network *find_net(unsigned char *b)$/;"	f	file:
find_ns	src/osdep/radiotap/radiotap.c	/^static void find_ns(struct ieee80211_radiotap_iterator *iterator,$/;"	f	file:
find_override	src/osdep/radiotap/radiotap.c	/^static int find_override(struct ieee80211_radiotap_iterator *iterator,$/;"	f	file:
first	src/airdecloak-ng.h	/^	struct packet_elt *first;$/;"	m	struct:packet_elt_header	typeref:struct:packet_elt_header::packet_elt
firstLoad	scripts/airdrop-ng/airdrop-ng	/^def firstLoad():$/;"	f
first_packet	src/packetforge-ng.c	/^    int first_packet;$/;"	m	struct:options	file:
firstbssid	src/aircrack-ng.h	/^	unsigned char *firstbssid;$/;"	m	struct:options
fix_beacon	src/wpaclean.c	/^static void fix_beacon(struct network *n)$/;"	f	file:
fixed_nonce	src/airbase-ng.c	/^    unsigned char fixed_nonce[32];$/;"	m	struct:options	file:
flags	src/aircrack-ng.h	/^	char *flags;				\/* Feature Flags	*\/$/;"	m	struct:_cpuinfo
flags	src/pcap.h	/^    uint16_t  flags;$/;"	m	struct:ivs2_pkthdr
flood	src/wesside-ng.c	/^static int flood(struct wstate *ws)$/;"	f	file:
flushESSID	src/airbase-ng.c	/^void flushESSID(void)$/;"	f
fmiss	src/airodump-ng.h	/^    int    fmiss;             \/* amount of missed frames     *\/$/;"	m	struct:AP_info
fnseq	src/besside-ng.c	/^static unsigned short fnseq(unsigned short fn, unsigned short seq)$/;"	f	file:
fnseq	src/easside-ng.c	/^unsigned short fnseq(unsigned short fn, unsigned short seq) {$/;"	f
fnseq	src/wesside-ng.c	/^static unsigned short fnseq(unsigned short fn, unsigned short seq)$/;"	f	file:
for_each_t	src/MD5_std.h	150;"	d
for_each_t	src/MD5_std.h	162;"	d
for_each_t	src/MD5_std.h	171;"	d
for_me_and_from_ap	src/easside-ng.c	/^int for_me_and_from_ap(struct east_state *es, struct ieee80211_frame *wh)$/;"	f
for_us	src/besside-ng.c	/^static int for_us(struct ieee80211_frame *wh)$/;"	f	file:
forced_amode	src/aircrack-ng.h	/^        int forced_amode;	\/* signals disregarding automatic detection of encryption type *\/$/;"	m	struct:options
forceska	src/airbase-ng.c	/^    int forceska;$/;"	m	struct:options	file:
forge_arp	src/packetforge-ng.c	/^int forge_arp()$/;"	f
forge_custom	src/packetforge-ng.c	/^int forge_custom()$/;"	f
forge_icmp	src/packetforge-ng.c	/^int forge_icmp()$/;"	f
forge_null	src/packetforge-ng.c	/^int forge_null()$/;"	f
forge_udp	src/packetforge-ng.c	/^int forge_udp()$/;"	f
format_id	src/include/if_llc.h	/^		uint8_t format_id;$/;"	m	struct:llc::__anon6::__anon7
format_text_for_csv	src/airodump-ng.c	/^char * format_text_for_csv( const unsigned char * input, int len)$/;"	f
found	src/aireplay-ng.c	/^    unsigned char found;$/;"	m	struct:APt	file:
found	src/tkiptun-ng.c	/^    unsigned char found;$/;"	m	struct:APt	file:
found_mac	src/besside-ng.c	/^static void found_mac(struct network *n)$/;"	f	file:
found_net_addr	src/easside-ng.c	/^void found_net_addr(struct east_state *es, unsigned char *a)$/;"	f
found_new_client	src/besside-ng.c	/^static void found_new_client(struct network *n, struct client *c)$/;"	f	file:
found_new_network	src/besside-ng.c	/^static void found_new_network(struct network *n)$/;"	f	file:
found_ssid	src/besside-ng.c	/^static void found_ssid(struct network *n)$/;"	f	file:
frag_state	src/wesside-ng.c	/^struct frag_state {$/;"	s	file:
fraglen	src/airbase-ng.c	/^    int             fraglen[3];     \/* fragmentation frame lengths   *\/$/;"	m	struct:CF_packet	file:
fragment	src/airbase-ng.c	/^    unsigned char*  fragment[16];$/;"	m	struct:Fragment_list	file:
fragment	src/airtun-ng.c	/^    unsigned char*  fragment[16];$/;"	m	struct:Fragment_list	file:
fragment_number	src/airdecloak-ng.h	/^    int fragment_number;$/;"	m	struct:packet_elt
fragmentlen	src/airbase-ng.c	/^    short           fragmentlen[16];$/;"	m	struct:Fragment_list	file:
fragmentlen	src/airtun-ng.c	/^    short           fragmentlen[16];$/;"	m	struct:Fragment_list	file:
fragnum	src/airbase-ng.c	/^    char            fragnum;$/;"	m	struct:Fragment_list	file:
fragnum	src/airbase-ng.c	/^    unsigned char   fragnum;        \/* number of fragments to send   *\/$/;"	m	struct:CF_packet	file:
fragnum	src/airtun-ng.c	/^    char            fragnum;$/;"	m	struct:Fragment_list	file:
frags	src/airbase-ng.c	/^    unsigned char           frags[3][128];  \/* first fragments to fill a gap *\/$/;"	m	struct:CF_packet	file:
frame_subtype	src/airdecloak-ng.h	/^    int frame_subtype; \/\/ Not yet filled but will do$/;"	m	struct:packet_elt
frame_type	src/airdecloak-ng.h	/^    int frame_type; 			\/* MGMT, CTRL, DATA *\/$/;"	m	struct:packet_elt
free	src/memdbg.h	143;"	d
free	src/memdbg.h	155;"	d
free	src/memory.c	71;"	d	file:
free_bsslist	src/besside-ng-crawler.c	/^void free_bsslist(struct bsslist *bsl) {$/;"	f
free_ssecore	src/wpapsk.c	/^void free_ssecore(int threadid) {$/;"	f
freq	src/osdep/linux.c	/^    int freq;$/;"	m	struct:priv_linux	file:
freqoption	src/airodump-ng.h	/^    int freqoption;$/;"	m	struct:globals
freqstring	src/airodump-ng.h	/^    char *freqstring;$/;"	m	struct:globals
frequencies	src/airodump-ng.h	/^int *frequencies;$/;"	v
frequency	src/airodump-ng.h	/^    int frequency[MAX_CARDS];           \/* current frequency #    *\/$/;"	m	struct:globals
frequency_hopper	src/airodump-ng.c	/^void frequency_hopper(struct wif *wi[], int if_num, int chan_count, pid_t parent)$/;"	f
frmr_cause	src/include/if_llc.h	/^		uint8_t frmr_cause;$/;"	m	struct:llc::__anon6::__anon10
frmr_cause	src/include/if_llc.h	/^	uint8_t frmr_cause;$/;"	m	struct:frmrinfo
frmr_control	src/include/if_llc.h	/^		uint8_t frmr_control;$/;"	m	struct:llc::__anon6::__anon10
frmr_control	src/include/if_llc.h	/^	uint8_t frmr_control;$/;"	m	struct:frmrinfo
frmr_control_ext	src/include/if_llc.h	/^		uint8_t frmr_control_ext;$/;"	m	struct:llc::__anon6::__anon10
frmr_control_ext	src/include/if_llc.h	/^	uint8_t frmr_control_ext;$/;"	m	struct:frmrinfo
frmr_rej_pdu0	src/include/if_llc.h	/^		uint8_t frmr_rej_pdu0;$/;"	m	struct:llc::__anon6::__anon10
frmr_rej_pdu0	src/include/if_llc.h	/^	uint8_t frmr_rej_pdu0;$/;"	m	struct:frmrinfo
frmr_rej_pdu1	src/include/if_llc.h	/^		uint8_t frmr_rej_pdu1;$/;"	m	struct:llc::__anon6::__anon10
frmr_rej_pdu1	src/include/if_llc.h	/^	uint8_t frmr_rej_pdu1;$/;"	m	struct:frmrinfo
frmrinfo	src/include/if_llc.h	/^struct frmrinfo {$/;"	s
fromDS	src/airdecloak-ng.h	/^    int fromDS;$/;"	m	struct:packet_elt
from_me	src/easside-ng.c	/^int from_me(struct east_state *es, struct ieee80211_frame *wh)$/;"	f
fromds	src/packetforge-ng.c	/^    char fromds;$/;"	m	struct:options	file:
front	src/aircrack-ng.h	/^	int front;						\/* front marker for the circular buffers *\/$/;"	m	struct:WPA_data
fs_data	src/wesside-ng.c	/^	unsigned char		*fs_data;$/;"	m	struct:frag_state	file:
fs_last	src/wesside-ng.c	/^	struct timeval		fs_last;$/;"	m	struct:frag_state	typeref:struct:frag_state::timeval	file:
fs_len	src/wesside-ng.c	/^	int			fs_len;$/;"	m	struct:frag_state	file:
fs_ptr	src/wesside-ng.c	/^	unsigned char		*fs_ptr;$/;"	m	struct:frag_state	file:
fs_waiting_relay	src/wesside-ng.c	/^	int			fs_waiting_relay;$/;"	m	struct:frag_state	file:
fs_wh	src/wesside-ng.c	/^	struct ieee80211_frame	fs_wh;$/;"	m	struct:frag_state	typeref:struct:frag_state::ieee80211_frame	file:
fseek	src/common.h	36;"	d
fseek	src/common.h	37;"	d
fseeko64	src/common.c	/^int fseeko64(FILE* fp, int64_t offset, int whence) {$/;"	f
ftello	src/common.h	38;"	d
ftello	src/common.h	39;"	d
ftello64	src/common.c	/^int64_t ftello64(FILE * fp) {$/;"	f
ftimef	src/airodump-ng.h	/^    struct timeval ftimef;    \/* time of first frame         *\/$/;"	m	struct:AP_info	typeref:struct:AP_info::timeval
ftimel	src/airodump-ng.h	/^    struct timeval ftimel;    \/* time of last frame          *\/$/;"	m	struct:AP_info	typeref:struct:AP_info::timeval
ftimer	src/airbase-ng.c	/^    struct timeval ftimer;   \/* time of restart           *\/$/;"	m	struct:ST_info	typeref:struct:ST_info::timeval	file:
ftimer	src/airodump-ng.h	/^    struct timeval ftimer;    \/* time of restart             *\/$/;"	m	struct:AP_info	typeref:struct:AP_info::timeval
ftimer	src/airodump-ng.h	/^    struct timeval ftimer;   \/* time of restart           *\/$/;"	m	struct:ST_info	typeref:struct:ST_info::timeval
fudge	src/aircrack-ng.h	/^	int fudge[64];				 \/* bruteforce level (1 to 256)  *\/$/;"	m	struct:WEP_data
gc_pipe	src/airodump-ng.h	/^    int gc_pipe[2];         \/* gps coordinates pipe *\/$/;"	m	struct:globals
genTypes	lib/csharp/MonoExample/NDesk-dbus/Mapper.cs	/^		static List<Type> genTypes = new List<Type> ();$/;"	f	class:NDesk.DBus.Mapper	file:
genl_ctrl_alloc_cache	src/osdep/linux.c	311;"	d	file:
getBatteryState	src/airodump-ng.c	/^int getBatteryState()$/;"	f
getBatteryString	src/airodump-ng.c	/^char * getBatteryString(void)$/;"	f
getBit	src/airdecloak-ng.h	90;"	d
getBits	src/airdecloak-ng.c	/^int getBits(unsigned char b, int from, int nb_bits)$/;"	f
getChannelFromFrequency	src/osdep/common.c	/^int getChannelFromFrequency(int frequency)$/;"	f
getColumnsFromHashtable	lib/csharp/WirelessPanda/Readers/Reader.cs	/^        private DataColumn[] getColumnsFromHashtable(Hashtable ht, Hashtable order)$/;"	m	class:WirelessPanda.Readers.Reader	file:
getCompleteFrag	src/airbase-ng.c	/^unsigned char* getCompleteFrag(unsigned char* smac, int sequence, int *packetlen)$/;"	f
getCompleteFrag	src/airtun-ng.c	/^unsigned char* getCompleteFrag(unsigned char* smac, int sequence, int *packetlen)$/;"	f
getDictValue	lib/csharp/WirelessPanda/Coordinates.cs	/^        private double getDictValue(string elem)$/;"	m	class:WirelessPanda.Coordinates	file:
getDictValue	lib/csharp/WirelessPanda/WirelessDevice.cs	/^        protected object getDictValue(string key)$/;"	m	class:WirelessPanda.WirelessDevice
getESSID	src/airbase-ng.c	/^int getESSID(char *essid)$/;"	f
getESSIDcount	src/airbase-ng.c	/^int getESSIDcount()$/;"	f
getFileType	lib/csharp/WirelessPanda/Readers/Reader.cs	/^        public static string getFileType(string path)$/;"	m	class:WirelessPanda.Readers.Reader
getFormat	lib/csharp/WirelessPanda/Readers/csvReader.cs	/^        private CSVFileFormat getFormat(string[] content)$/;"	m	class:WirelessPanda.Readers.CsvReader	file:
getFrequencyFromChannel	src/osdep/common.c	/^int getFrequencyFromChannel(int channel)$/;"	f
getHDSK	src/tkiptun-ng.c	/^int getHDSK()$/;"	f
getMAC	src/airbase-ng.c	/^unsigned char* getMAC(pMAC_t pMAC)$/;"	f
getMACcount	src/airbase-ng.c	/^int getMACcount(pMAC_t pMAC)$/;"	f
getNextESSID	src/airbase-ng.c	/^int getNextESSID(char *essid)$/;"	f
getPacketNr	src/airdecloak-ng.c	/^struct packet_elt * getPacketNr(int position) {$/;"	f
getRegister	src/cpuid.c	/^unsigned long getRegister(const unsigned int val, const char from, const char to) {$/;"	f
getStringTimeFromSec	src/airodump-ng.c	/^char * getStringTimeFromSec(double seconds)$/;"	f
getStrippedFileContent	lib/csharp/WirelessPanda/Readers/Reader.cs	/^        protected string[] getStrippedFileContent()$/;"	m	class:WirelessPanda.Readers.Reader
getTargets	scripts/airdrop-ng/airdrop-ng	/^class getTargets():$/;"	c
getTypeFromHandleMethod	lib/csharp/MonoExample/NDesk-dbus/TypeImplementer.cs	/^		static MethodInfo getTypeFromHandleMethod = typeof (Type).GetMethod ("GetTypeFromHandle", new Type[] {typeof (RuntimeTypeHandle)});$/;"	f	class:NDesk.DBus.TypeImplementer	file:
getVersion	src/common.c	/^char * getVersion(char * progname, int maj, int min, int submin, int svnrev, int beta, int rc)$/;"	f
get_80211	src/osdep/freebsd.c	/^static unsigned char *get_80211(struct priv_fbsd *pf, int *plen,$/;"	f	file:
get_80211	src/osdep/netbsd.c	/^static unsigned char *get_80211(struct priv_nbsd *pn, int *plen,$/;"	f	file:
get_80211	src/osdep/openbsd.c	/^static unsigned char *get_80211(struct priv_obsd *po, int *plen,$/;"	f	file:
get_ap_list_count	src/airodump-ng.c	/^int get_ap_list_count() {$/;"	f
get_average_signal_ap	src/airdecloak-ng.c	/^int get_average_signal_ap() {$/;"	f
get_battery_state	src/osdep/cygwin.c	/^int get_battery_state(void)$/;"	f
get_battery_state	src/osdep/darwin.c	/^int get_battery_state(void)$/;"	f
get_battery_state	src/osdep/dummy.c	/^int get_battery_state(void)$/;"	f
get_battery_state	src/osdep/freebsd.c	/^int get_battery_state(void)$/;"	f
get_battery_state	src/osdep/linux.c	/^int get_battery_state(void)$/;"	f
get_battery_state	src/osdep/netbsd.c	/^int get_battery_state(void)$/;"	f
get_battery_state	src/osdep/openbsd.c	/^int get_battery_state(void)$/;"	f
get_be32	src/sha1-git.c	109;"	d	file:
get_be32	src/sha1-git.c	114;"	d	file:
get_bssid	src/besside-ng.c	/^static unsigned char *get_bssid(struct ieee80211_frame *wh)$/;"	f	file:
get_cap	scripts/dcrack.py	/^	def get_cap(s, path):$/;"	m	class:ServerHandler
get_cap	scripts/dcrack.py	/^def get_cap(crack):$/;"	f
get_cid	scripts/dcrack.py	/^def get_cid():$/;"	f
get_client_mac	src/besside-ng.c	/^static unsigned char *get_client_mac(struct ieee80211_frame *wh)$/;"	f	file:
get_con	scripts/dcrack.py	/^def get_con():$/;"	f
get_crc32	src/easside-ng.c	/^unsigned int get_crc32(void *data, int len)$/;"	f
get_cs	contrib/commview/commview.c	/^static struct cstate *get_cs(void)$/;"	f	file:
get_da	src/crypto.c	/^void *get_da(unsigned char *wh)$/;"	f
get_da	src/easside-ng.c	/^void *get_da(struct ieee80211_frame *wh)$/;"	f
get_dict	scripts/dcrack.py	/^	def get_dict(s, path):$/;"	m	class:ServerHandler
get_eapol_bssids	src/besside-ng-crawler.c	/^struct bsslist *get_eapol_bssids(pcap_t *handle) {$/;"	f
get_entry	src/airtun-ng.c	/^int get_entry(unsigned char *adress) {$/;"	f
get_guid	contrib/commview/commview.c	/^static int get_guid(struct cstate *cs, char *param)$/;"	f	file:
get_head	src/easside-ng.c	/^struct rpacket *get_head(struct east_state *es)$/;"	f
get_ip_port	src/aireplay-ng.c	/^static int get_ip_port(char *iface, char *ip, const int ip_size)$/;"	f	file:
get_ip_port	src/osdep/network.c	/^static int get_ip_port(char *iface, char *ip, const int ipsize)$/;"	f	file:
get_ip_port	src/tkiptun-ng.c	/^static int get_ip_port(char *iface, char *ip, const int ip_size)$/;"	f	file:
get_iv	src/airdecloak-ng.h	91;"	d
get_line_from_buffer	src/airodump-ng.c	/^static int get_line_from_buffer(char *buffer, int size, char *line)$/;"	f	file:
get_manufacturer	src/airodump-ng.c	/^char *get_manufacturer(unsigned char mac0, unsigned char mac1, unsigned char mac2) {$/;"	f
get_manufacturer_from_string	src/airodump-ng.c	/^char * get_manufacturer_from_string(char * buffer) {$/;"	f
get_name	contrib/commview/commview.c	/^static int get_name(struct cstate *cs, char *name)$/;"	f	file:
get_nb_cpus	src/common.c	/^int get_nb_cpus()$/;"	f
get_packet	src/easside-ng.c	/^struct rpacket *get_packet(struct east_state *es, int id)$/;"	f
get_ps	contrib/peek/omnipeek.c	/^static struct pstate *get_ps(void)$/;"	f	file:
get_radiotap_info	src/osdep/freebsd.c	/^static void get_radiotap_info(struct priv_fbsd *pf,$/;"	f	file:
get_radiotap_info	src/osdep/netbsd.c	/^static void get_radiotap_info(struct priv_nbsd *pn,$/;"	f	file:
get_radiotap_info	src/osdep/openbsd.c	/^static void get_radiotap_info(struct priv_obsd *po,$/;"	f	file:
get_ram_size	src/common.c	/^int get_ram_size(void) {$/;"	f
get_replayable	src/besside-ng.c	/^static void get_replayable(struct network *n, struct ieee80211_frame *wh,$/;"	f	file:
get_rtap_signal	src/airdecloak-ng.c	/^int get_rtap_signal(int caplen)$/;"	f
get_sa	src/crypto.c	/^void *get_sa(unsigned char *wh)$/;"	f
get_sa	src/easside-ng.c	/^void *get_sa(struct ieee80211_frame *wh)$/;"	f
get_slot	src/easside-ng.c	/^struct rpacket *get_slot(struct east_state *es)$/;"	f
get_speed	scripts/dcrack.py	/^def get_speed():$/;"	f
get_ss	src/airserv-ng.c	/^static struct sstate *get_ss()$/;"	f	file:
get_sta_list_count	src/airodump-ng.c	/^int get_sta_list_count() {$/;"	f
get_status	scripts/dcrack.py	/^	def get_status(s):$/;"	m	class:ServerHandler
get_unaligned	src/osdep/radiotap/platform.h	36;"	d
get_unaligned_le16	src/osdep/radiotap/platform.h	44;"	d
get_unaligned_le32	src/osdep/radiotap/platform.h	45;"	d
get_victim_ssid	src/wesside-ng.c	/^static int get_victim_ssid(struct wstate *ws, struct ieee80211_frame* wh,$/;"	f	file:
get_work	scripts/dcrack.py	/^def get_work():$/;"	f
get_ws	src/wesside-ng.c	/^static struct wstate *get_ws(void)$/;"	f	file:
getbuf_stuff_mpara_mmx	src/memory.c	/^void getbuf_stuff_mpara_mmx(unsigned char *oBuf, void *buf, unsigned int size, unsigned int index) {$/;"	f
getchancount	src/airodump-ng.c	/^int getchancount(int valid)$/;"	f
getchannels	src/airodump-ng.c	/^int getchannels(const char *optarg)$/;"	f
getdrv	src/aircrack-ptw-lib.c	/^static void getdrv(PTW_tableentry orgtable[][n], int keylen, double * normal, double * ausreiser) {$/;"	f	file:
getfreqcount	src/airodump-ng.c	/^int getfreqcount(int valid)$/;"	f
getfrequencies	src/airodump-ng.c	/^int getfrequencies(const char *optarg)$/;"	f
getip	src/packetforge-ng.c	/^int getip( char *s, unsigned char *ip , unsigned short *port)$/;"	f
getmac	src/common.c	/^int getmac(char * macAddress, int strict, unsigned char * mac)$/;"	f
getnet	src/aireplay-ng.c	/^int getnet( unsigned char* capa, int filter, int force)$/;"	f
getnet	src/tkiptun-ng.c	/^int getnet( unsigned char* capa, int filter, int force)$/;"	f
getsockopt	lib/csharp/MonoExample/NDesk-dbus/UnixNativeTransport.cs	/^			protected static extern int getsockopt (int s, int optname, IntPtr optval, ref uint optlen);$/;"	m	class:NDesk.DBus.Transports.UnixSocket	file:
ghost	src/aireplay-ng.c	/^    int ghost;$/;"	m	struct:options	file:
ghost	src/tkiptun-ng.c	/^    int ghost;$/;"	m	struct:options	file:
git_SHA1_Final	src/sha1-git.h	47;"	d
git_SHA1_Init	src/sha1-git.h	45;"	d
git_SHA1_Update	src/sha1-git.h	46;"	d
git_SHA_CTX	src/sha1-git.h	44;"	d
globals	src/airodump-ng.h	/^struct globals$/;"	s
globals	src/ivstools.c	/^struct globals$/;"	s	file:
gotESSID	src/airbase-ng.c	/^int gotESSID(char* essid, int len)$/;"	f
gotMAC	src/airbase-ng.c	/^int gotMAC(pMAC_t pMAC, unsigned char* mac)$/;"	f
got_ip	src/wesside-ng.c	/^static void got_ip(struct wstate *ws)$/;"	f	file:
got_ip_ap	src/tkiptun-ng.c	/^    int got_ip_ap;$/;"	m	struct:options	file:
got_ip_client	src/tkiptun-ng.c	/^    int got_ip_client;$/;"	m	struct:options	file:
got_mic_fromds	src/tkiptun-ng.c	/^    int got_mic_fromds;$/;"	m	struct:options	file:
got_mic_tods	src/tkiptun-ng.c	/^    int got_mic_tods;$/;"	m	struct:options	file:
got_pmk	src/tkiptun-ng.c	/^    int got_pmk;$/;"	m	struct:options	file:
got_psk	src/tkiptun-ng.c	/^    int got_psk;$/;"	m	struct:options	file:
got_ptk	src/tkiptun-ng.c	/^    int got_ptk;$/;"	m	struct:options	file:
got_wep	src/wesside-ng.c	/^static void got_wep(struct wstate *ws, struct ieee80211_frame* wh, int rd)$/;"	f	file:
gps_loc	src/airodump-ng.h	/^    float gps_loc[5];       \/* gps coordinates      *\/$/;"	m	struct:globals
gps_loc_best	src/airodump-ng.h	/^    float gps_loc_best[5];    \/* best gps coordinates     *\/$/;"	m	struct:AP_info
gps_loc_max	src/airodump-ng.h	/^    float gps_loc_max[5];     \/* max gps coordinates      *\/$/;"	m	struct:AP_info
gps_loc_min	src/airodump-ng.h	/^    float gps_loc_min[5];     \/* min gps coordinates      *\/$/;"	m	struct:AP_info
gps_tracker	src/airodump-ng.c	/^void gps_tracker(pid_t parent)$/;"	f
grab_essid	src/aireplay-ng.c	/^int grab_essid(unsigned char* packet, int len)$/;"	f
grab_hidden_ssid	src/besside-ng.c	/^static void grab_hidden_ssid(struct network *n, struct ieee80211_frame *wh,$/;"	f	file:
grab_hidden_ssid	src/wpaclean.c	/^static void grab_hidden_ssid(unsigned char *bssid, struct ieee80211_frame *wh,$/;"	f	file:
graphvizLinker	scripts/airgraph-ng/graphviz/lib_Airgraphviz.py	/^def graphvizLinker(objA,sep,objB): #OLDNAME graphviz_link$/;"	f
guess_packet	src/tkiptun-ng.c	/^int guess_packet(unsigned char *srcbuf, unsigned char *chopped, int caplen, int clearlen)$/;"	f
guesskeybytes	src/aircrack-ptw-lib.c	/^static void guesskeybytes(int ivlen, uint8_t * iv, uint8_t * keystream, uint8_t * result, int kb) {$/;"	f	file:
h0	src/sha1-git.h	/^	unsigned int h0,h1,h2,h3,h4;$/;"	m	struct:__anon14
h1	src/sha1-git.h	/^	unsigned int h0,h1,h2,h3,h4;$/;"	m	struct:__anon14
h2	src/sha1-git.h	/^	unsigned int h0,h1,h2,h3,h4;$/;"	m	struct:__anon14
h3	src/sha1-git.h	/^	unsigned int h0,h1,h2,h3,h4;$/;"	m	struct:__anon14
h4	src/sha1-git.h	/^	unsigned int h0,h1,h2,h3,h4;$/;"	m	struct:__anon14
h80211	src/airbase-ng.c	/^unsigned char h80211[4096];$/;"	v
h80211	src/aireplay-ng.c	/^unsigned char h80211[4096];$/;"	v
h80211	src/airtun-ng.c	/^unsigned char h80211[4096];$/;"	v
h80211	src/packetforge-ng.c	/^unsigned char h80211[2048];$/;"	v
h80211	src/tkiptun-ng.c	/^unsigned char h80211[4096];$/;"	v
handle	src/buddy-ng.c	/^int handle(int s, unsigned char* data, int len, struct sockaddr_in *s_in)$/;"	f
handle_card	src/airserv-ng.c	/^static void handle_card(struct sstate *ss)$/;"	f	file:
handle_client	src/airserv-ng.c	/^static void handle_client(struct sstate *ss, struct client *c)$/;"	f	file:
handle_dude	src/buddy-ng.c	/^void handle_dude(int dude, int udp)$/;"	f
handle_get_chan	src/airserv-ng.c	/^static void handle_get_chan(struct sstate *ss, struct client *c)$/;"	f	file:
handle_get_mac	src/airserv-ng.c	/^static void handle_get_mac(struct sstate *ss, struct client *c)$/;"	f	file:
handle_get_monitor	src/airserv-ng.c	/^static void handle_get_monitor(struct sstate *ss, struct client *c)$/;"	f	file:
handle_get_rate	src/airserv-ng.c	/^static void handle_get_rate(struct sstate *ss, struct client *c)$/;"	f	file:
handle_server	src/airserv-ng.c	/^static void handle_server(struct sstate *ss)$/;"	f	file:
handle_set_chan	src/airserv-ng.c	/^static void handle_set_chan(struct sstate *ss, struct client *c,$/;"	f	file:
handle_set_rate	src/airserv-ng.c	/^static void handle_set_rate(struct sstate *ss, struct client *c,$/;"	f	file:
handle_write	src/airserv-ng.c	/^static void handle_write(struct sstate *ss, struct client *c,$/;"	f	file:
handshake	src/osdep/network.c	/^static int handshake(int s)$/;"	f	file:
has_mac_filter	src/besside-ng.c	/^static void has_mac_filter(struct network *n)$/;"	f	file:
hashdb_head	src/aircrack-ng.h	/^struct hashdb_head {$/;"	s
hashdb_rec	src/aircrack-ng.h	/^struct hashdb_rec {$/;"	s
have_mac	src/besside-ng.c	/^static int have_mac(struct network *n)$/;"	f	file:
hccap	src/aircrack-ng.h	/^	char * hccap;				         \/* Hashcat capture file *\/$/;"	m	struct:options
hdr	lib/csharp/MonoExample/NDesk-dbus/UnixNativeTransport.cs	/^		public cmsghdr hdr;$/;"	f	struct:NDesk.DBus.Transports.cmsg
hdrlen	src/aireplay-ng.c	/^    int hdrlen;$/;"	m	struct:ARP_req	file:
hdrlen	src/tkiptun-ng.c	/^    int hdrlen;$/;"	m	struct:ARP_req	file:
header	src/airbase-ng.c	/^    unsigned char*  header;$/;"	m	struct:Fragment_list	file:
header	src/airdecloak-ng.h	/^    struct pcap_pkthdr header;  \/* packet header *\/$/;"	m	struct:packet_elt	typeref:struct:packet_elt::pcap_pkthdr
header	src/airtun-ng.c	/^    unsigned char*  header;$/;"	m	struct:Fragment_list	file:
headerlen	src/airbase-ng.c	/^    short           headerlen;$/;"	m	struct:Fragment_list	file:
headerlen	src/airtun-ng.c	/^    short           headerlen;$/;"	m	struct:Fragment_list	file:
help	scripts/airdrop-ng/airdrop-ng	/^def help():$/;"	f
hexCharToInt	src/common.c	/^int hexCharToInt(unsigned char c)$/;"	f
hexStringToArray	src/common.c	/^int hexStringToArray(char* in, int in_length, unsigned char* out, int out_length)$/;"	f
hexToInt	src/common.c	/^int hexToInt(char s[], int len)$/;"	f
hex_failing_test	test/test-hex_string_to_array.sh	/^hex_failing_test() {$/;"	f
hex_success_test	test/test-hex_string_to_array.sh	/^hex_success_test() {$/;"	f
hexdict	src/aircrack-ng.h	/^	int hexdict[MAX_DICTS];			 \/* if dict in hex       *\/$/;"	m	struct:options
hexdump	src/easside-ng.c	/^void hexdump(void *x, int len)$/;"	f
hexdump	src/wesside-ng.c	/^static void hexdump(unsigned char *ptr, int len)$/;"	f	file:
hexdump	test/cryptounittest/tests.h	/^void hexdump (unsigned char *buffer, int length)$/;"	f
hidden	src/airbase-ng.c	/^    int hidden;$/;"	m	struct:options	file:
hide_known	src/airodump-ng.h	/^    int hide_known;$/;"	m	struct:globals
hookup_methods	lib/csharp/MonoExample/NDesk-dbus/TypeImplementer.cs	/^		static Dictionary<EventInfo,DynamicMethod> hookup_methods = new Dictionary<EventInfo,DynamicMethod> ();$/;"	f	class:NDesk.DBus.TypeImplementer	file:
hop	src/besside-ng.c	/^static void hop(void *arg)$/;"	f	file:
hopfreq	src/airodump-ng.h	/^    int hopfreq;$/;"	m	struct:globals
htobe16	src/osdep/byteorder.h	302;"	d
htobe16	src/osdep/byteorder.h	359;"	d
htobe16	src/osdep/radiotap/platform.h	12;"	d
htobe32	src/osdep/byteorder.h	305;"	d
htobe32	src/osdep/byteorder.h	362;"	d
htobe32	src/osdep/radiotap/platform.h	17;"	d
htobe64	src/osdep/byteorder.h	308;"	d
htobe64	src/osdep/byteorder.h	365;"	d
htobe64	src/osdep/radiotap/platform.h	22;"	d
htole16	src/osdep/byteorder.h	321;"	d
htole16	src/osdep/byteorder.h	378;"	d
htole16	src/osdep/radiotap/platform.h	13;"	d
htole32	src/osdep/byteorder.h	324;"	d
htole32	src/osdep/byteorder.h	381;"	d
htole32	src/osdep/radiotap/platform.h	18;"	d
htole64	src/osdep/byteorder.h	327;"	d
htole64	src/osdep/byteorder.h	384;"	d
htole64	src/osdep/radiotap/platform.h	23;"	d
htonl	src/osdep/byteorder.h	430;"	d
htons	src/osdep/byteorder.h	427;"	d
htt	src/aircrack-ng.h	/^	int htt;				\/* Hyper-Threading      *\/$/;"	m	struct:_cpuinfo
hv	src/aircrack-ng.h	/^	int hv;					\/* Hypervisor detected  *\/$/;"	m	struct:_cpuinfo
i	src/aircrack-ptw-lib.c	/^	uint8_t i;$/;"	m	struct:__anon20	file:
iCC	src/Makefile	/^iCC		= \/opt\/intel\/bin\/icc$/;"	m
iCFLAGS	src/Makefile	/^iCFLAGS		= -w -xHOST $(COMMON_CFLAGS)$/;"	m
iOPTFLAGS	src/Makefile	/^iOPTFLAGS	= -O3 -ip -ipo -D_FILE_OFFSET_BITS=64$/;"	m
i_addr1	src/include/ieee80211.h	/^	u_int8_t	i_addr1[IEEE80211_ADDR_LEN];$/;"	m	struct:ieee80211_frame
i_addr1	src/include/ieee80211.h	/^	u_int8_t	i_addr1[IEEE80211_ADDR_LEN];$/;"	m	struct:ieee80211_frame_addr4
i_addr1	src/include/ieee80211.h	/^	u_int8_t	i_addr1[IEEE80211_ADDR_LEN];$/;"	m	struct:ieee80211_frame_min
i_addr1	src/include/ieee80211.h	/^	u_int8_t	i_addr1[IEEE80211_ADDR_LEN];$/;"	m	struct:ieee80211_qosframe
i_addr1	src/include/ieee80211.h	/^	u_int8_t	i_addr1[IEEE80211_ADDR_LEN];$/;"	m	struct:ieee80211_qosframe_addr4
i_addr2	src/include/ieee80211.h	/^	u_int8_t	i_addr2[IEEE80211_ADDR_LEN];$/;"	m	struct:ieee80211_frame
i_addr2	src/include/ieee80211.h	/^	u_int8_t	i_addr2[IEEE80211_ADDR_LEN];$/;"	m	struct:ieee80211_frame_addr4
i_addr2	src/include/ieee80211.h	/^	u_int8_t	i_addr2[IEEE80211_ADDR_LEN];$/;"	m	struct:ieee80211_frame_min
i_addr2	src/include/ieee80211.h	/^	u_int8_t	i_addr2[IEEE80211_ADDR_LEN];$/;"	m	struct:ieee80211_qosframe
i_addr2	src/include/ieee80211.h	/^	u_int8_t	i_addr2[IEEE80211_ADDR_LEN];$/;"	m	struct:ieee80211_qosframe_addr4
i_addr3	src/include/ieee80211.h	/^	u_int8_t	i_addr3[IEEE80211_ADDR_LEN];$/;"	m	struct:ieee80211_frame
i_addr3	src/include/ieee80211.h	/^	u_int8_t	i_addr3[IEEE80211_ADDR_LEN];$/;"	m	struct:ieee80211_frame_addr4
i_addr3	src/include/ieee80211.h	/^	u_int8_t	i_addr3[IEEE80211_ADDR_LEN];$/;"	m	struct:ieee80211_qosframe
i_addr3	src/include/ieee80211.h	/^	u_int8_t	i_addr3[IEEE80211_ADDR_LEN];$/;"	m	struct:ieee80211_qosframe_addr4
i_addr4	src/include/ieee80211.h	/^	u_int8_t	i_addr4[IEEE80211_ADDR_LEN];$/;"	m	struct:ieee80211_frame_addr4
i_addr4	src/include/ieee80211.h	/^	u_int8_t	i_addr4[IEEE80211_ADDR_LEN];$/;"	m	struct:ieee80211_qosframe_addr4
i_aid	src/include/ieee80211.h	/^	u_int8_t	i_aid[2];$/;"	m	struct:ieee80211_frame_pspoll
i_bssid	src/include/ieee80211.h	/^	u_int8_t	i_bssid[IEEE80211_ADDR_LEN];$/;"	m	struct:ieee80211_frame_cfend
i_bssid	src/include/ieee80211.h	/^	u_int8_t	i_bssid[IEEE80211_ADDR_LEN];$/;"	m	struct:ieee80211_frame_pspoll
i_crc	src/include/ieee80211.h	/^	u_int16_t	i_crc;$/;"	m	struct:ieee80211_plcp_hdr
i_dur	src/include/ieee80211.h	/^	u_int8_t	i_dur[2];	\/* should be zero *\/$/;"	m	struct:ieee80211_frame_cfend
i_dur	src/include/ieee80211.h	/^	u_int8_t	i_dur[2];$/;"	m	struct:ieee80211_frame
i_dur	src/include/ieee80211.h	/^	u_int8_t	i_dur[2];$/;"	m	struct:ieee80211_frame_ack
i_dur	src/include/ieee80211.h	/^	u_int8_t	i_dur[2];$/;"	m	struct:ieee80211_frame_addr4
i_dur	src/include/ieee80211.h	/^	u_int8_t	i_dur[2];$/;"	m	struct:ieee80211_frame_cts
i_dur	src/include/ieee80211.h	/^	u_int8_t	i_dur[2];$/;"	m	struct:ieee80211_frame_min
i_dur	src/include/ieee80211.h	/^	u_int8_t	i_dur[2];$/;"	m	struct:ieee80211_frame_rts
i_dur	src/include/ieee80211.h	/^	u_int8_t	i_dur[2];$/;"	m	struct:ieee80211_qosframe
i_dur	src/include/ieee80211.h	/^	u_int8_t	i_dur[2];$/;"	m	struct:ieee80211_qosframe_addr4
i_fc	src/include/ieee80211.h	/^	u_int8_t	i_fc[2];$/;"	m	struct:ieee80211_frame
i_fc	src/include/ieee80211.h	/^	u_int8_t	i_fc[2];$/;"	m	struct:ieee80211_frame_ack
i_fc	src/include/ieee80211.h	/^	u_int8_t	i_fc[2];$/;"	m	struct:ieee80211_frame_addr4
i_fc	src/include/ieee80211.h	/^	u_int8_t	i_fc[2];$/;"	m	struct:ieee80211_frame_cfend
i_fc	src/include/ieee80211.h	/^	u_int8_t	i_fc[2];$/;"	m	struct:ieee80211_frame_cts
i_fc	src/include/ieee80211.h	/^	u_int8_t	i_fc[2];$/;"	m	struct:ieee80211_frame_min
i_fc	src/include/ieee80211.h	/^	u_int8_t	i_fc[2];$/;"	m	struct:ieee80211_frame_pspoll
i_fc	src/include/ieee80211.h	/^	u_int8_t	i_fc[2];$/;"	m	struct:ieee80211_frame_rts
i_fc	src/include/ieee80211.h	/^	u_int8_t	i_fc[2];$/;"	m	struct:ieee80211_qosframe
i_fc	src/include/ieee80211.h	/^	u_int8_t	i_fc[2];$/;"	m	struct:ieee80211_qosframe_addr4
i_length	src/include/ieee80211.h	/^	u_int16_t	i_length;$/;"	m	struct:ieee80211_plcp_hdr
i_qos	src/include/ieee80211.h	/^	u_int8_t	i_qos[2];$/;"	m	struct:ieee80211_qoscntl
i_qos	src/include/ieee80211.h	/^	u_int8_t	i_qos[2];$/;"	m	struct:ieee80211_qosframe
i_qos	src/include/ieee80211.h	/^	u_int8_t	i_qos[2];$/;"	m	struct:ieee80211_qosframe_addr4
i_ra	src/include/ieee80211.h	/^	u_int8_t	i_ra[IEEE80211_ADDR_LEN];$/;"	m	struct:ieee80211_frame_ack
i_ra	src/include/ieee80211.h	/^	u_int8_t	i_ra[IEEE80211_ADDR_LEN];$/;"	m	struct:ieee80211_frame_cfend
i_ra	src/include/ieee80211.h	/^	u_int8_t	i_ra[IEEE80211_ADDR_LEN];$/;"	m	struct:ieee80211_frame_cts
i_ra	src/include/ieee80211.h	/^	u_int8_t	i_ra[IEEE80211_ADDR_LEN];$/;"	m	struct:ieee80211_frame_rts
i_seq	src/include/ieee80211.h	/^	u_int8_t	i_seq[2];$/;"	m	struct:ieee80211_frame
i_seq	src/include/ieee80211.h	/^	u_int8_t	i_seq[2];$/;"	m	struct:ieee80211_frame_addr4
i_seq	src/include/ieee80211.h	/^	u_int8_t	i_seq[2];$/;"	m	struct:ieee80211_qosframe
i_seq	src/include/ieee80211.h	/^	u_int8_t	i_seq[2];$/;"	m	struct:ieee80211_qosframe_addr4
i_service	src/include/ieee80211.h	/^	u_int8_t	i_service;$/;"	m	struct:ieee80211_plcp_hdr
i_sfd	src/include/ieee80211.h	/^	u_int16_t	i_sfd;$/;"	m	struct:ieee80211_plcp_hdr
i_signal	src/include/ieee80211.h	/^	u_int8_t	i_signal;$/;"	m	struct:ieee80211_plcp_hdr
i_ta	src/include/ieee80211.h	/^	u_int8_t	i_ta[IEEE80211_ADDR_LEN];$/;"	m	struct:ieee80211_frame_pspoll
i_ta	src/include/ieee80211.h	/^	u_int8_t	i_ta[IEEE80211_ADDR_LEN];$/;"	m	struct:ieee80211_frame_rts
icmp	test/pingreply.c	/^    struct icmp_hdr icmp;$/;"	m	struct:eth_ip_icmp_reply	typeref:struct:eth_ip_icmp_reply::icmp_hdr	file:
icmp_hdr	test/pingreply.c	/^struct icmp_hdr {$/;"	s	file:
icv	src/airdecloak-ng.h	/^    unsigned char icv[4];$/;"	m	struct:packet_elt
icv2string	src/airdecloak-ng.c	/^char * icv2string(unsigned char * icv) {$/;"	f
id	src/aircrack-ng.c	/^int id=0;$/;"	v
id	src/airodump-ng.h	/^	char id[9]; \/* TODO: Don't use ASCII chars to compare, use unsigned char[3] (later) with the value (hex ascii will have to be converted) *\/$/;"	m	struct:oui
id	src/memdbg.h	/^	unsigned id;$/;"	m	struct:MEMDBG_HANDLE_t
id	test/pingreply.c	/^    unsigned short id;$/;"	m	struct:icmp_hdr	file:
id	test/pingreply.c	/^    unsigned short id;$/;"	m	struct:ip_hdr	file:
identDeviceDict	scripts/airgraph-ng/graphviz/libOuiParse.py	/^    def identDeviceDict(self,fname):$/;"	m	class:macOUI_lookup
identDeviceDictWhacMac	scripts/airgraph-ng/graphviz/libOuiParse.py	/^    def identDeviceDictWhacMac(self,fname):$/;"	m	class:macOUI_lookup
ids	src/buddy-ng.c	/^unsigned char ids[8192];$/;"	v
idx	src/aircrack-ng.h	/^typedef struct { int idx, val; }$/;"	m	struct:__anon42
idx	src/kstats.c	/^typedef struct { int idx, val; } vote;$/;"	m	struct:__anon13	file:
ie	src/include/ieee80211.h	/^	u_int8_t	ie;			\/* IEEE80211_ELEMID_COUNTRY *\/$/;"	m	struct:ieee80211_country_ie
ieee80211_band	src/include/ieee80211.h	/^struct ieee80211_band {$/;"	s
ieee80211_channel_to_frequency	src/osdep/linux.c	/^static int ieee80211_channel_to_frequency(int chan)$/;"	f	file:
ieee80211_country_ie	src/include/ieee80211.h	/^struct ieee80211_country_ie {$/;"	s
ieee80211_duration	src/include/ieee80211.h	/^struct ieee80211_duration {$/;"	s
ieee80211_frame	src/include/ieee80211.h	/^struct ieee80211_frame {$/;"	s
ieee80211_frame_ack	src/include/ieee80211.h	/^struct ieee80211_frame_ack {$/;"	s
ieee80211_frame_addr4	src/include/ieee80211.h	/^struct ieee80211_frame_addr4 {$/;"	s
ieee80211_frame_cfend	src/include/ieee80211.h	/^struct ieee80211_frame_cfend {		\/* NB: also CF-End+CF-Ack *\/$/;"	s
ieee80211_frame_cts	src/include/ieee80211.h	/^struct ieee80211_frame_cts {$/;"	s
ieee80211_frame_min	src/include/ieee80211.h	/^struct ieee80211_frame_min {$/;"	s
ieee80211_frame_pspoll	src/include/ieee80211.h	/^struct ieee80211_frame_pspoll {$/;"	s
ieee80211_frame_rts	src/include/ieee80211.h	/^struct ieee80211_frame_rts {$/;"	s
ieee80211_get_qos	src/include/ieee80211.h	/^ieee80211_get_qos(const struct ieee80211_frame *wh)$/;"	f
ieee80211_has_addr4	src/include/ieee80211.h	/^ieee80211_has_addr4(const struct ieee80211_frame *wh)$/;"	f
ieee80211_has_htc	src/include/ieee80211.h	/^ieee80211_has_htc(const struct ieee80211_frame *wh)$/;"	f
ieee80211_has_qos	src/include/ieee80211.h	/^ieee80211_has_qos(const struct ieee80211_frame *wh)$/;"	f
ieee80211_has_seq	src/include/ieee80211.h	/^ieee80211_has_seq(const struct ieee80211_frame *wh)$/;"	f
ieee80211_ie_wpa	src/include/ieee80211.h	/^struct ieee80211_ie_wpa {$/;"	s
ieee80211_mgt_auth_t	src/include/ieee80211.h	/^typedef u_int8_t *ieee80211_mgt_auth_t;$/;"	t
ieee80211_mgt_beacon_t	src/include/ieee80211.h	/^typedef u_int8_t *ieee80211_mgt_beacon_t;$/;"	t
ieee80211_mhz2ieee	src/osdep/freebsd.c	/^ieee80211_mhz2ieee(u_int freq, u_int flags)$/;"	f	file:
ieee80211_mnf	src/include/ieee80211.h	/^struct ieee80211_mnf {$/;"	s
ieee80211_plcp_hdr	src/include/ieee80211.h	/^struct ieee80211_plcp_hdr {$/;"	s
ieee80211_qoscntl	src/include/ieee80211.h	/^struct ieee80211_qoscntl {$/;"	s
ieee80211_qosframe	src/include/ieee80211.h	/^struct ieee80211_qosframe {$/;"	s
ieee80211_qosframe_addr4	src/include/ieee80211.h	/^struct ieee80211_qosframe_addr4 {$/;"	s
ieee80211_radiotap_header	src/osdep/radiotap/radiotap.h	/^struct ieee80211_radiotap_header {$/;"	s
ieee80211_radiotap_iterator	src/osdep/radiotap/radiotap_iter.h	/^struct ieee80211_radiotap_iterator {$/;"	s
ieee80211_radiotap_iterator_init	src/osdep/radiotap/radiotap.c	/^int ieee80211_radiotap_iterator_init($/;"	f
ieee80211_radiotap_iterator_next	src/osdep/radiotap/radiotap.c	/^int ieee80211_radiotap_iterator_next($/;"	f
ieee80211_radiotap_namespace	src/osdep/radiotap/radiotap_iter.h	/^struct ieee80211_radiotap_namespace {$/;"	s
ieee80211_radiotap_type	src/osdep/radiotap/radiotap.h	/^enum ieee80211_radiotap_type {$/;"	g
ieee80211_radiotap_vendor_namespaces	src/osdep/radiotap/radiotap_iter.h	/^struct ieee80211_radiotap_vendor_namespaces {$/;"	s
ieee80211_tim_ie	src/include/ieee80211.h	/^struct ieee80211_tim_ie {$/;"	s
ieee80211_wme_ac	src/include/ieee80211.h	/^enum ieee80211_wme_ac {$/;"	g
ieee80211_wme_acparams	src/include/ieee80211.h	/^struct ieee80211_wme_acparams {$/;"	s
ieee80211_wme_info	src/include/ieee80211.h	/^struct ieee80211_wme_info {$/;"	s
ieee80211_wme_param	src/include/ieee80211.h	/^struct ieee80211_wme_param {$/;"	s
ieee80211_wme_tspec	src/include/ieee80211.h	/^struct ieee80211_wme_tspec {$/;"	s
iface_out	src/aireplay-ng.c	/^    char *iface_out;$/;"	m	struct:options	file:
iface_out	src/tkiptun-ng.c	/^    char *iface_out;$/;"	m	struct:options	file:
ifconfig	src/osdep/linux.c	/^    char *ifconfig;$/;"	m	struct:priv_linux	file:
ignore_negative_one	src/aireplay-ng.c	/^    int ignore_negative_one;$/;"	m	struct:options	file:
ignore_negative_one	src/airodump-ng.h	/^    int ignore_negative_one;$/;"	m	struct:globals
import_ascii	src/airolib-ng.c	/^int import_ascii(sqlite3* db, const char* mode, const char* filename) {$/;"	f
import_cowpatty	src/airolib-ng.c	/^int import_cowpatty(sqlite3* db, char* filename) {$/;"	f
in_cksum	src/easside-ng.c	/^unsigned short in_cksum (unsigned short *ptr, int nbytes) {$/;"	f
index	src/aircrack-ng.h	/^	int index;					 \/* WEP key index        *\/$/;"	m	struct:options
initDataBase	src/airolib-ng.c	/^int initDataBase(const char * filename, sqlite3 ** db)$/;"	f
init_atoi	src/wpapsk.c	/^void init_atoi() {$/;"	f
init_card	contrib/peek/omnipeek.c	/^static int init_card(struct pstate *ps, char *dev)$/;"	f	file:
init_cards	src/airodump-ng.c	/^int init_cards(const char* cardstr, char *iface[], struct wif **wi)$/;"	f
init_conf	src/besside-ng.c	/^static void init_conf(void)$/;"	f	file:
init_db	scripts/dcrack.py	/^def init_db():$/;"	f
init_defaults	src/easside-ng.c	/^void init_defaults(struct east_state *es)$/;"	f
init_defaults	src/wesside-ng.c	/^static void init_defaults(struct wstate *ws)$/;"	f	file:
init_lib	contrib/commview/commview.c	/^static int init_lib(struct cstate *cs)$/;"	f	file:
init_lib	contrib/peek/omnipeek.c	/^static int init_lib(struct pstate *ps)$/;"	f	file:
init_michael	src/crypto.c	/^int init_michael(struct Michael *mic, unsigned char key[8])$/;"	f
init_new_pcap	src/airdecloak-ng.c	/^FILE * init_new_pcap(const char * filename)$/;"	f
init_ssecore	src/wpapsk.c	/^void init_ssecore(int threadid) {$/;"	f
init_t	src/MD5_std.h	152;"	d
init_t	src/MD5_std.h	164;"	d
init_t	src/MD5_std.h	172;"	d
init_wpapsk	src/wpapsk.c	/^int init_wpapsk(char (*key)[128], char *essid, int threadid) {$/;"	f
initialize_linked_list	src/airdecloak-ng.c	/^BOOLEAN initialize_linked_list() {$/;"	f
inject	src/wesside-ng.c	/^static void inject(struct wif *wi, void *buf, int len)$/;"	f	file:
inject_wlanng	src/osdep/linux.c	/^    int inject_wlanng;$/;"	m	struct:priv_linux	file:
inner_bruteforcer_thread	src/aircrack-ng.c	/^int inner_bruteforcer_thread(void *arg)$/;"	f
input_thread	src/airodump-ng.c	/^void input_thread( void *arg) {$/;"	f
input_tid	src/airodump-ng.h	/^    pthread_t input_tid;$/;"	m	struct:globals
install	scripts/airdrop-ng/old-installers/install.py	/^	def install(self):$/;"	m	class:installAirdrop
installAirdrop	scripts/airdrop-ng/old-installers/install.py	/^class installAirdrop:$/;"	c
installLorcon	scripts/airdrop-ng/old-installers/install.py	/^class installLorcon:$/;"	c
installPylorcon	scripts/airdrop-ng/old-installers/install.py	/^class installPylorcon:$/;"	c
install_dir	scripts/airdrop-ng/airdrop/__init__.py	/^    install_dir = os.path.abspath(os.path.dirname(unicode(sys.executable, encoding)))$/;"	v
install_dir	scripts/airdrop-ng/airdrop/__init__.py	/^install_dir = os.path.abspath(os.path.dirname(unicode(__file__, encoding)))$/;"	v
intercept	src/airbase-ng.c	/^int intercept(unsigned char* packet, int length)$/;"	f
interface	test/replay.py	/^interface=sys.argv[1]$/;"	v
interface	test/verify_inject.py	/^interface = "at0"$/;"	v
internet_chksum	test/pingreply.c	/^short internet_chksum( unsigned char *hdr, int len )$/;"	f
interval	src/airbase-ng.c	/^    int interval;$/;"	m	struct:options	file:
interval	src/airbase-ng.c	/^    unsigned short interval;$/;"	m	struct:AP_conf	file:
intr_read	src/aircrack-ng.c	/^int intr_read = 0;$/;"	v
invalid_channel	src/airodump-ng.c	/^int invalid_channel(int chan)$/;"	f
invalid_channel_displayed	src/airbase-ng.c	/^int ctrl_c, alarmed, invalid_channel_displayed;$/;"	v
invalid_frequency	src/airodump-ng.c	/^int invalid_frequency(int freq)$/;"	f
ip	test/pingreply.c	/^    struct ip_hdr ip;$/;"	m	struct:eth_ip_icmp_reply	typeref:struct:eth_ip_icmp_reply::ip_hdr	file:
ip_ap	src/tkiptun-ng.c	/^    unsigned char ip_ap[4];$/;"	m	struct:options	file:
ip_chksum	src/packetforge-ng.c	/^unsigned short ip_chksum(unsigned short* addr, int count)$/;"	f
ip_cli	src/tkiptun-ng.c	/^    unsigned char ip_cli[4];$/;"	m	struct:options	file:
ip_hdr	test/pingreply.c	/^struct ip_hdr {$/;"	s	file:
ip_in	src/aireplay-ng.c	/^    char ip_in[16];$/;"	m	struct:options	file:
ip_in	src/tkiptun-ng.c	/^    char ip_in[16];$/;"	m	struct:options	file:
ip_out	src/aireplay-ng.c	/^    char ip_out[16];    \/\/16 for 15 chars + \\x00$/;"	m	struct:options	file:
ip_out	src/tkiptun-ng.c	/^    char ip_out[16];    \/\/16 for 15 chars + \\x00$/;"	m	struct:options	file:
isAirpcap	src/osdep/cygwin.c	/^	int		isAirpcap;$/;"	m	struct:priv_cygwin	file:
isAirpcapDevice	src/osdep/airpcap.c	/^int isAirpcapDevice(const char * iface)$/;"	f
isAuthenticated	lib/csharp/MonoExample/NDesk-dbus/Connection.cs	/^		bool isAuthenticated = false;$/;"	f	class:NDesk.DBus.Connection	file:
isHex	src/common.c	53;"	d	file:
is_aligned	src/jcommon.h	71;"	d
is_alnum	src/aircrack-ng.h	/^	int is_alnum;				 \/* alphanum keyspace    *\/$/;"	m	struct:options
is_arp	src/crypto.c	/^int is_arp(void *wh, int len)$/;"	f
is_arp	src/easside-ng.c	/^int is_arp(struct ieee80211_frame *wh, int len)$/;"	f
is_bcdonly	src/aircrack-ng.h	/^	int is_bcdonly;				 \/* binary coded decimal *\/$/;"	m	struct:options
is_bcm43xx	src/airbase-ng.c	/^    int is_bcm43xx;$/;"	m	struct:devices	file:
is_bcm43xx	src/aireplay-ng.c	/^    int is_bcm43xx;$/;"	m	struct:devices	file:
is_bcm43xx	src/airtun-ng.c	/^    int is_bcm43xx;$/;"	m	struct:devices	file:
is_bcm43xx	src/tkiptun-ng.c	/^    int is_bcm43xx;$/;"	m	struct:devices	file:
is_berlin	src/airodump-ng.h	/^    char is_berlin;           \/* is the switch --berlin set? *\/$/;"	m	struct:globals
is_cdp_vtp	src/crypto.c	/^int is_cdp_vtp(void *wh)$/;"	f
is_cloaked	src/airdecloak-ng.h	/^    int is_cloaked;$/;"	m	struct:packet_elt
is_decloak	src/airodump-ng.h	/^    char is_decloak;          \/* detected decloak *\/$/;"	m	struct:AP_info
is_dhcp_discover	src/crypto.c	/^int is_dhcp_discover(void *wh, int len)$/;"	f
is_dir	src/cpuid.c	/^int is_dir(const char *dir) {$/;"	f
is_dropped	src/airdecloak-ng.h	/^    int is_dropped; \/\/ Do we have to drop this frame?$/;"	m	struct:packet_elt
is_dup	src/buddy-ng.c	/^int is_dup(unsigned short id)$/;"	f
is_dup	src/easside-ng.c	/^int is_dup(struct east_state *es, struct ieee80211_frame *wh)$/;"	f
is_filtered_essid	src/airodump-ng.c	/^int is_filtered_essid(unsigned char *essid)$/;"	f
is_filtered_essid	src/besside-ng.c	/^int is_filtered_essid(char *essid)$/;"	f
is_filtered_netmask	src/airbase-ng.c	/^int is_filtered_netmask(unsigned char *bssid)$/;"	f
is_filtered_netmask	src/airodump-ng.c	/^int is_filtered_netmask(unsigned char *bssid)$/;"	f
is_filtered_netmask	src/airtun-ng.c	/^int is_filtered_netmask(unsigned char *bssid)$/;"	f
is_fritz	src/aircrack-ng.h	/^	int is_fritz;				 \/* use numeric keyspace *\/$/;"	m	struct:options
is_hostap	src/airbase-ng.c	/^    int is_hostap;$/;"	m	struct:devices	file:
is_hostap	src/aireplay-ng.c	/^    int is_hostap;$/;"	m	struct:devices	file:
is_hostap	src/airtun-ng.c	/^    int is_hostap;$/;"	m	struct:devices	file:
is_hostap	src/tkiptun-ng.c	/^    int is_hostap;$/;"	m	struct:devices	file:
is_in_list	src/besside-ng-crawler.c	/^struct bsslist *is_in_list(struct bsslist *bsl, const u_char *bssid) {$/;"	f
is_ipv6	src/crypto.c	/^int is_ipv6(void *wh)$/;"	f
is_madwifi	src/airbase-ng.c	/^    int is_madwifi;$/;"	m	struct:devices	file:
is_madwifi	src/aireplay-ng.c	/^    int is_madwifi;$/;"	m	struct:devices	file:
is_madwifi	src/airtun-ng.c	/^    int is_madwifi;$/;"	m	struct:devices	file:
is_madwifi	src/tkiptun-ng.c	/^    int is_madwifi;$/;"	m	struct:devices	file:
is_madwifing	src/airbase-ng.c	/^    int is_madwifing;$/;"	m	struct:devices	file:
is_madwifing	src/aireplay-ng.c	/^    int is_madwifing;$/;"	m	struct:devices	file:
is_madwifing	src/airodump-ng.h	/^    int is_madwifing[MAX_CARDS];       \/* set if madwifi-ng    *\/$/;"	m	struct:globals
is_madwifing	src/airtun-ng.c	/^    int is_madwifing;$/;"	m	struct:devices	file:
is_madwifing	src/tkiptun-ng.c	/^    int is_madwifing;$/;"	m	struct:devices	file:
is_ndiswrapper	src/osdep/linux.c	/^static int is_ndiswrapper(const char * iface, const char * path)$/;"	f	file:
is_orinoco	src/airodump-ng.h	/^    int is_orinoco[MAX_CARDS];         \/* set if orinoco       *\/$/;"	m	struct:globals
is_qos_arp_tkip	src/crypto.c	/^int is_qos_arp_tkip(void *wh, int len)$/;"	f
is_quiet	src/aircrack-ng.h	/^	int is_quiet;				 \/* quiet mode flag      *\/$/;"	m	struct:options
is_radiotap_ns	src/osdep/radiotap/radiotap_iter.h	/^	int is_radiotap_ns;$/;"	m	struct:ieee80211_radiotap_iterator
is_replayable	src/besside-ng.c	/^static int is_replayable(struct ieee80211_frame *wh, int len)$/;"	f	file:
is_spantree	src/crypto.c	/^int is_spantree(void *wh)$/;"	f
is_string_number	src/common.c	/^int is_string_number(const char * str)$/;"	f
is_us2	contrib/commview/commview.c	/^static int is_us2(struct cstate *cs, HDEVINFO *hdi, SP_DEVINFO_DATA *did)$/;"	f	file:
is_wlanng	src/airbase-ng.c	/^    int is_wlanng;$/;"	m	struct:devices	file:
is_wlanng	src/aireplay-ng.c	/^    int is_wlanng;$/;"	m	struct:devices	file:
is_wlanng	src/airodump-ng.h	/^    int is_wlanng[MAX_CARDS];          \/* set if wlan-ng       *\/$/;"	m	struct:globals
is_wlanng	src/airtun-ng.c	/^    int is_wlanng;$/;"	m	struct:devices	file:
is_wlanng	src/tkiptun-ng.c	/^    int is_wlanng;$/;"	m	struct:devices	file:
is_wlccp	src/crypto.c	/^int is_wlccp(void *wh, int len)$/;"	f
is_zd1211rw	src/airodump-ng.h	/^    int is_zd1211rw[MAX_CARDS];       \/* set if zd1211rw    *\/$/;"	m	struct:globals
it_len	src/osdep/radiotap/radiotap.h	/^	uint16_t it_len;	\/* length of the whole$/;"	m	struct:ieee80211_radiotap_header
it_pad	src/osdep/radiotap/radiotap.h	/^	uint8_t it_pad;$/;"	m	struct:ieee80211_radiotap_header
it_present	src/osdep/radiotap/radiotap.h	/^	uint32_t it_present;	\/* A bitmap telling which$/;"	m	struct:ieee80211_radiotap_header
it_version	src/osdep/radiotap/radiotap.h	/^	uint8_t it_version;	\/* Version 0. Only increases$/;"	m	struct:ieee80211_radiotap_header
itoa64	src/wpapsk.c	/^char itoa64[64] = ".\/0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz";$/;"	v
iv	src/aircrack-ptw-lib.h	/^        uint8_t iv[PTW_IVBYTES];$/;"	m	struct:__anon40
iv	src/airdecloak-ng.h	/^    unsigned char iv[3];$/;"	m	struct:packet_elt
iv2string	src/airdecloak-ng.c	/^char * iv2string(unsigned char * iv) {$/;"	f
ivbuf	src/aircrack-ng.h	/^	unsigned char *ivbuf;				 \/* buffer holding all the IVs   *\/$/;"	m	struct:WEP_data
ivbuf	src/aircrack-ng.h	/^	unsigned char *ivbuf;				 \/* table holding WEP IV data    *\/$/;"	m	struct:AP_info
ivbuf_size	src/aircrack-ng.h	/^	long ivbuf_size;			 \/* IV buffer allocated size     *\/$/;"	m	struct:AP_info
ivs2	src/packetforge-ng.c	/^    FILE* ivs2;$/;"	m	struct:options	file:
ivs2_filehdr	src/pcap.h	/^struct ivs2_filehdr$/;"	s
ivs2_pkthdr	src/pcap.h	/^struct ivs2_pkthdr$/;"	s
iwconfig	src/airodump-ng.h	/^    char * iwconfig;$/;"	m	struct:globals
iwconfig	src/osdep/linux.c	/^    char *iwconfig;$/;"	m	struct:priv_linux	file:
iwpriv	src/airbase-ng.c	/^char * iwpriv;$/;"	v
iwpriv	src/aireplay-ng.c	/^char * iwpriv;$/;"	v
iwpriv	src/airodump-ng.h	/^    char * iwpriv;$/;"	m	struct:globals
iwpriv	src/airtun-ng.c	/^char * iwpriv;$/;"	v
iwpriv	src/osdep/linux.c	/^    char *iwpriv;$/;"	m	struct:priv_linux	file:
iwpriv	src/tkiptun-ng.c	/^char * iwpriv;$/;"	v
j	src/aircrack-ptw-lib.c	/^	uint8_t j;$/;"	m	struct:__anon20	file:
john_bswap_32	src/johnswap.h	/^	static inline ARCH_WORD_32 __attribute__((const)) john_bswap_32(ARCH_WORD_32 val) {$/;"	f
john_bswap_32	src/johnswap.h	/^	static inline ARCH_WORD_32 john_bswap_32(ARCH_WORD_32 x)$/;"	f
john_bswap_64	src/johnswap.h	/^	static inline unsigned long long john_bswap_64(unsigned long long x)$/;"	f
json_get_value_for_name	src/airodump-ng.c	/^static int json_get_value_for_name( const char *buffer, const char *name, char *value )$/;"	f	file:
key	src/aircrack-ng.h	/^	char key[128];					\/* cracked key (0 while not found) *\/$/;"	m	struct:WPA_data
key	src/aircrack-ng.h	/^	unsigned char key[64];				 \/* the current chosen WEP key   *\/$/;"	m	struct:WEP_data
key	src/airodump-ng.h	/^    char *key;		      \/* if wep-key found by dict *\/$/;"	m	struct:AP_info
key0	src/crypto.h	/^    unsigned long key0;$/;"	m	struct:Michael
key1	src/crypto.h	/^    unsigned long key1;$/;"	m	struct:Michael
key_buffer	src/aircrack-ng.h	/^	char *key_buffer;				\/* queue as a circular buffer for feeding and consuming keys *\/$/;"	m	struct:WPA_data
key_found	src/aircrack-ng.c	/^static void key_found(unsigned char *wepkey, int keylen, int B)$/;"	f	file:
key_index	src/airdecloak-ng.h	/^    unsigned char key_index;$/;"	m	struct:packet_elt
keybuf	src/aircrack-ptw-lib.c	158;"	d	file:
keybuf	src/aircrack-ptw-lib.c	272;"	d	file:
keybyte	src/aircrack-ptw-lib.c	/^	int keybyte;$/;"	m	struct:__anon21	file:
keybyte	src/aircrack-ptw-lib.c	/^	int keybyte;$/;"	m	struct:__anon22	file:
keylen	src/aircrack-ng.h	/^	int keylen;					 \/* WEP key length       *\/$/;"	m	struct:options
keymic	src/crypto.h	/^    unsigned char keymic[20];           \/* eapol frame MIC              *\/$/;"	m	struct:WPA_ST_info
keymic	src/include/eapol.h	/^    uint8_t keymic[16];   \/* eapol frame MIC          *\/$/;"	m	struct:WPA_hdsk
keyout	src/airbase-ng.c	/^    char *keyout;$/;"	m	struct:options	file:
keyout	src/airodump-ng.h	/^    char *keyout;$/;"	m	struct:globals
keystream	src/aircrack-ptw-lib.h	/^        uint8_t keystream[PTW_KSBYTES];$/;"	m	struct:__anon40
keystream_	src/aircrack-ptw-lib.c	159;"	d	file:
keystream_	src/aircrack-ptw-lib.c	273;"	d	file:
keytable	src/aircrack-ptw-lib.c	/^PTW_tableentry keytable[KEYHSBYTES][n];$/;"	v
keyver	src/crypto.h	/^    int keyver, valid_ptk;$/;"	m	struct:WPA_ST_info
keyver	src/include/eapol.h	/^    uint8_t keyver;       \/* key version (TKIP \/ AES) *\/$/;"	m	struct:WPA_hdsk
kill_crack	src/wesside-ng.c	/^static void kill_crack(struct wstate *ws)$/;"	f	file:
known_clear	src/crypto.c	/^int known_clear(void *clear, int *clen, int *weight, unsigned char *wh, int len)$/;"	f
known_clear	src/easside-ng.c	/^int known_clear(void *clear, struct ieee80211_frame *wh, int len)$/;"	f
korek	src/aircrack-ng.h	/^	int korek;					 \/* attack strategy      *\/$/;"	m	struct:options
l	src/MD5_std.h	/^	} l;$/;"	m	struct:__anon26	typeref:struct:__anon26::__anon27
l33t	src/aircrack-ng.h	/^	int l33t;					 \/* no comment           *\/$/;"	m	struct:options
label1	lib/csharp/Example1/Example1/Form1.Designer.cs	/^        private System.Windows.Forms.Label label1;$/;"	f	class:Example1.Form1	file:
label2	lib/csharp/Example1/Example1/Form1.Designer.cs	/^        private System.Windows.Forms.Label label2;$/;"	f	class:Example1.Form1	file:
label3	lib/csharp/Example1/Example1/Form1.Designer.cs	/^        private System.Windows.Forms.Label label3;$/;"	f	class:Example1.Form1	file:
label4	lib/csharp/Example1/Example1/Form1.Designer.cs	/^        private System.Windows.Forms.Label label4;$/;"	f	class:Example1.Form1	file:
label5	lib/csharp/Example1/Example1/Form1.Designer.cs	/^        private System.Windows.Forms.Label label5;$/;"	f	class:Example1.Form1	file:
lanip	src/aircrack-ng.h	/^	unsigned char lanip[4];				 \/* IP address if unencrypted    *\/$/;"	m	struct:AP_info
lanip	src/airodump-ng.h	/^    unsigned char lanip[4];   \/* last detected ip address *\/$/;"	m	struct:AP_info
last	src/airdecloak-ng.h	/^	struct packet_elt *last;$/;"	m	struct:packet_elt_header	typeref:struct:packet_elt_header::packet_elt
last_id	src/buddy-ng.c	/^unsigned short last_id;$/;"	v
last_mic_failure	src/tkiptun-ng.c	/^    struct timeval last_mic_failure;    \/* timestamp of last mic failure *\/$/;"	m	struct:options	typeref:struct:options::timeval	file:
last_seq	src/airodump-ng.h	/^    unsigned int    last_seq; \/* last sequence number        *\/$/;"	m	struct:AP_info
lastseq	src/airbase-ng.c	/^    unsigned int lastseq;    \/* last seen sequnce number  *\/$/;"	m	struct:ST_info	file:
lastseq	src/airodump-ng.h	/^    unsigned int lastseq;    \/* last seen sequence number *\/$/;"	m	struct:ST_info
lblFilename	lib/csharp/Example1/Example1/Form1.Designer.cs	/^        private System.Windows.Forms.Label lblFilename;$/;"	f	class:Example1.Form1	file:
lblFiletype	lib/csharp/Example1/Example1/Form1.Designer.cs	/^        private System.Windows.Forms.Label lblFiletype;$/;"	f	class:Example1.Form1	file:
lblParsed	lib/csharp/Example1/Example1/Form1.Designer.cs	/^        private System.Windows.Forms.Label lblParsed;$/;"	f	class:Example1.Form1	file:
le16_to_cpu	src/osdep/byteorder.h	404;"	d
le16_to_cpu	src/osdep/radiotap/platform.h	34;"	d
le16toh	src/osdep/byteorder.h	413;"	d
le16toh	src/osdep/radiotap/platform.h	15;"	d
le32_to_cpu	src/osdep/byteorder.h	402;"	d
le32_to_cpu	src/osdep/radiotap/platform.h	35;"	d
le32toh	src/osdep/byteorder.h	419;"	d
le32toh	src/osdep/netbsd.c	57;"	d	file:
le32toh	src/osdep/openbsd.c	64;"	d	file:
le32toh	src/osdep/radiotap/platform.h	20;"	d
le64_to_cpu	src/osdep/byteorder.h	400;"	d
le64toh	src/osdep/radiotap/platform.h	25;"	d
left	src/crypto.h	/^    unsigned long left;$/;"	m	struct:Michael
len	src/airbase-ng.c	/^    int len;$/;"	m	struct:ARP_req	file:
len	src/airbase-ng.c	/^    unsigned char   len;$/;"	m	struct:ESSID_list	file:
len	src/aireplay-ng.c	/^    int len;$/;"	m	struct:ARP_req	file:
len	src/aireplay-ng.c	/^    unsigned char len;$/;"	m	struct:APt	file:
len	src/airtun-ng.c	/^    int len;$/;"	m	struct:ARP_req	file:
len	src/include/ieee80211.h	/^	u_int8_t	len;$/;"	m	struct:ieee80211_country_ie
len	src/pcap.h	/^    uint16_t  len;$/;"	m	struct:ivs2_pkthdr
len	src/pcap.h	/^    uint32_t len;$/;"	m	struct:pcap_pkthdr
len	src/tkiptun-ng.c	/^    int len;$/;"	m	struct:ARP_req	file:
len	src/tkiptun-ng.c	/^    unsigned char len;$/;"	m	struct:APt	file:
length	src/MD5_std.h	/^	int length;$/;"	m	struct:__anon25
length	src/airdecloak-ng.h	/^    unsigned short  length;     \/* packet length, just to know how much to write to the file *\/$/;"	m	struct:packet_elt
length	src/airodump-ng.h	/^    unsigned short  length;     \/* packet length *\/$/;"	m	struct:pkt_buf
length	src/wpapsk.h	/^	uint32_t length;$/;"	m	struct:__anon34
length	src/wpapsk.h	/^	uint32_t length;$/;"	m	struct:wpapsk_password
length	test/pingreply.c	/^    unsigned short length;$/;"	m	struct:ip_hdr	file:
letoh16	src/osdep/byteorder.h	330;"	d
letoh16	src/osdep/byteorder.h	387;"	d
letoh32	src/osdep/byteorder.h	333;"	d
letoh32	src/osdep/byteorder.h	390;"	d
letoh64	src/osdep/byteorder.h	336;"	d
letoh64	src/osdep/byteorder.h	393;"	d
libc_calloc	src/memdbg.h	146;"	d
libc_calloc	src/memdbg.h	150;"	d
libc_calloc	src/memdbg.h	204;"	d
libc_calloc	src/memdbg.h	208;"	d
libc_free	src/memdbg.h	145;"	d
libc_free	src/memdbg.h	148;"	d
libc_free	src/memdbg.h	203;"	d
libc_free	src/memdbg.h	206;"	d
libc_malloc	src/memdbg.h	147;"	d
libc_malloc	src/memdbg.h	149;"	d
libc_malloc	src/memdbg.h	205;"	d
libc_malloc	src/memdbg.h	207;"	d
libdir	common.mak	/^libdir		= $(prefix)\/lib$/;"	m
license	scripts/airdrop-ng/setup.py	/^      license='GPL2',$/;"	v
license	scripts/airgraph-ng/setup.py	/^      license='GPL2',$/;"	v
linecount	src/linecount.cpp	/^unsigned int linecount(const char *file, off_t offset, size_t offsetmax) {$/;"	f
linktype	src/pcap.h	/^    uint32_t linktype;$/;"	m	struct:pcap_file_header
linux_close	src/osdep/linux.c	/^static void linux_close(struct wif *wi)$/;"	f	file:
linux_close_nl80211	src/osdep/linux.c	/^static void linux_close_nl80211(struct wif *wi)$/;"	f	file:
linux_fd	src/osdep/linux.c	/^static int linux_fd(struct wif *wi)$/;"	f	file:
linux_get_channel	src/osdep/linux.c	/^static int linux_get_channel(struct wif *wi)$/;"	f	file:
linux_get_freq	src/osdep/linux.c	/^static int linux_get_freq(struct wif *wi)$/;"	f	file:
linux_get_mac	src/osdep/linux.c	/^static int linux_get_mac(struct wif *wi, unsigned char *mac)$/;"	f	file:
linux_get_monitor	src/osdep/linux.c	/^int linux_get_monitor(struct wif *wi)$/;"	f
linux_get_mtu	src/osdep/linux.c	/^static int linux_get_mtu(struct wif *wi)$/;"	f	file:
linux_get_rate	src/osdep/linux.c	/^static int linux_get_rate(struct wif *wi)$/;"	f	file:
linux_nl80211_init	src/osdep/linux.c	/^static int linux_nl80211_init(struct nl80211_state *state)$/;"	f	file:
linux_open	src/osdep/linux.c	/^static struct wif *linux_open(char *iface)$/;"	f	file:
linux_read	src/osdep/linux.c	/^static int linux_read(struct wif *wi, unsigned char *buf, int count,$/;"	f	file:
linux_set_channel	src/osdep/linux.c	/^static int linux_set_channel(struct wif *wi, int channel)$/;"	f	file:
linux_set_channel_nl80211	src/osdep/linux.c	/^static int linux_set_channel_nl80211(struct wif *wi, int channel)$/;"	f	file:
linux_set_freq	src/osdep/linux.c	/^static int linux_set_freq(struct wif *wi, int freq)$/;"	f	file:
linux_set_mac	src/osdep/linux.c	/^static int linux_set_mac(struct wif *wi, unsigned char *mac)$/;"	f	file:
linux_set_mtu	src/osdep/linux.c	/^static int linux_set_mtu(struct wif *wi, int mtu)$/;"	f	file:
linux_set_rate	src/osdep/linux.c	/^static int linux_set_rate(struct wif *wi, int rate)$/;"	f	file:
linux_write	src/osdep/linux.c	/^static int linux_write(struct wif *wi, unsigned char *buf, int count,$/;"	f	file:
list_add_packet	src/airodump-ng.c	/^int list_add_packet(struct pkt_buf **list, int length, unsigned char* packet)$/;"	f
list_check_decloak	src/airodump-ng.c	/^int list_check_decloak(struct pkt_buf **list, int length, unsigned char* packet)$/;"	f
list_tail_free	src/airodump-ng.c	/^int list_tail_free(struct pkt_buf **list)$/;"	f
listen	lib/csharp/MonoExample/NDesk-dbus/UnixNativeTransport.cs	/^			protected static extern int listen (int sockfd, int backlog);$/;"	m	class:NDesk.DBus.Transports.UnixSocket	file:
llc	src/include/if_llc.h	/^struct llc {$/;"	s
llc_class	src/include/if_llc.h	98;"	d
llc_control	src/include/if_llc.h	95;"	d
llc_control_ext	src/include/if_llc.h	96;"	d
llc_dsap	src/include/if_llc.h	/^	uint8_t llc_dsap;$/;"	m	struct:llc
llc_fid	src/include/if_llc.h	97;"	d
llc_frmr_cause	src/include/if_llc.h	105;"	d
llc_frmr_control	src/include/if_llc.h	103;"	d
llc_frmr_control_ext	src/include/if_llc.h	104;"	d
llc_frmr_pdu0	src/include/if_llc.h	101;"	d
llc_frmr_pdu1	src/include/if_llc.h	102;"	d
llc_frmrinfo	src/include/if_llc.h	100;"	d
llc_snap	src/include/if_llc.h	106;"	d
llc_ssap	src/include/if_llc.h	/^	uint8_t llc_ssap;$/;"	m	struct:llc
llc_un	src/include/if_llc.h	/^	} llc_un \/* XXX __packed ??? *\/;$/;"	m	struct:llc	typeref:union:llc::__anon6
llc_window	src/include/if_llc.h	99;"	d
llcnull	src/airodump-ng.h	/^const unsigned char llcnull[4] = {0, 0, 0, 0};$/;"	v
load_oui_file	src/airodump-ng.c	/^struct oui * load_oui_file(void) {$/;"	f
load_prga	src/easside-ng.c	/^void load_prga(struct east_state *es)$/;"	f
load_prga	src/wesside-ng.c	/^static void load_prga(struct wstate *ws)$/;"	f	file:
loaded	src/aircrack-ng.h	/^	int	loaded;				\/* Have finished processing? *\/$/;"	m	struct:dictfiles
locate_key	scripts/airdrop-ng/airdrop-ng	/^    def locate_key(self):$/;"	m	class:ruleMatch
lockObj	lib/csharp/MonoExample/NDesk-dbus/PendingCall.cs	/^		object lockObj = new object ();$/;"	f	class:NDesk.DBus.PendingCall	file:
log	scripts/airdrop-ng/airdrop-ng	/^    def log(self,data,TYPE):$/;"	m	class:messages
logKeyToFile	src/aircrack-ng.h	/^	char * logKeyToFile;$/;"	m	struct:options
log_wep	src/wesside-ng.c	/^static void log_wep(struct wstate *ws, struct ieee80211_frame* wh, int len)$/;"	f	file:
lookup_OUI	scripts/airdrop-ng/airdrop/libOuiParse.py	/^    def lookup_OUI(self,mac):$/;"	m	class:macOUI_lookup
lookup_OUI	scripts/airgraph-ng/graphviz/libOuiParse.py	/^    def lookup_OUI(self,mac):$/;"	m	class:macOUI_lookup
lookup_company	scripts/airdrop-ng/airdrop/libOuiParse.py	/^    def lookup_company(self,companyLst):$/;"	m	class:macOUI_lookup
lookup_company	scripts/airgraph-ng/graphviz/libOuiParse.py	/^    def lookup_company(self,companyLst):$/;"	m	class:macOUI_lookup
lorconTX	scripts/airdrop-ng/airdrop-ng	/^def lorconTX(pktNum=5,packet=None, channel=1 ,slept=0):$/;"	f
m	src/crypto.h	/^    int x, y, m[256];$/;"	m	struct:rc4_state
mac	src/airbase-ng.c	/^    unsigned char   mac[6];$/;"	m	struct:MAC_list	file:
mac2str	src/besside-ng.c	/^static char *mac2str(unsigned char *mac)$/;"	f	file:
mac2str	src/easside-ng.c	/^void mac2str(char *str, unsigned char* m, int macsize)$/;"	f
mac2str	src/wesside-ng.c	/^static char* mac2str(unsigned char* mac)$/;"	f	file:
mac2string	src/common.c	/^char * mac2string(unsigned char *mac_address )$/;"	f
macOUI_lookup	scripts/airdrop-ng/airdrop/libOuiParse.py	/^class macOUI_lookup:$/;"	c
macOUI_lookup	scripts/airgraph-ng/graphviz/libOuiParse.py	/^class macOUI_lookup:$/;"	c
mac_in	src/aireplay-ng.c	/^    unsigned char mac_in[6];$/;"	m	struct:devices	file:
mac_in	src/tkiptun-ng.c	/^    unsigned char mac_in[6];$/;"	m	struct:devices	file:
mac_out	src/aireplay-ng.c	/^    unsigned char mac_out[6];$/;"	m	struct:devices	file:
mac_out	src/tkiptun-ng.c	/^    unsigned char mac_out[6];$/;"	m	struct:devices	file:
maccmp	src/common.c	/^int maccmp(unsigned char *mac1, unsigned char *mac2)$/;"	f
maddr	src/aircrack-ng.h	/^	unsigned char maddr[6];				 \/* MAC address filter   *\/$/;"	m	struct:options
magic	src/aircrack-ng.h	/^	uint32_t magic;$/;"	m	struct:hashdb_head
magic	src/pcap.h	/^    uint32_t magic;$/;"	m	struct:pcap_file_header
main	scripts/dcrack.py	/^def main():$/;"	f
main	src/airbase-ng.c	/^int main( int argc, char *argv[] )$/;"	f
main	src/aircrack-ng.c	/^int main( int argc, char *argv[] )$/;"	f
main	src/airdecap-ng.c	/^int main( int argc, char *argv[] )$/;"	f
main	src/airdecloak-ng.c	/^int main( int argc, char *argv[] )$/;"	f
main	src/aireplay-ng.c	/^int main( int argc, char *argv[] )$/;"	f
main	src/airodump-ng.c	/^int main( int argc, char *argv[] )$/;"	f
main	src/airolib-ng.c	/^int main(int argc, char **argv) {$/;"	f
main	src/airserv-ng.c	/^int main(int argc, char *argv[])$/;"	f
main	src/airtun-ng.c	/^int main( int argc, char *argv[] )$/;"	f
main	src/besside-ng-crawler.c	/^int main(int argc, char *argv[]) {$/;"	f
main	src/besside-ng.c	/^int main(int argc, char *argv[])$/;"	f
main	src/buddy-ng.c	/^int main(int argc, char *argv[])$/;"	f
main	src/easside-ng.c	/^int main(int argc, char *argv[])$/;"	f
main	src/ivstools.c	/^int main( int argc, char *argv[] )$/;"	f
main	src/kstats.c	/^int main( int argc, char *argv[] )$/;"	f
main	src/makeivs-ng.c	/^int main( int argc, char *argv[] )$/;"	f
main	src/osdep/radiotap/parse.c	/^int main(int argc, char *argv[])$/;"	f
main	src/packetforge-ng.c	/^int main(int argc, char* argv[])$/;"	f
main	src/tkiptun-ng.c	/^int main( int argc, char *argv[] )$/;"	f
main	src/wesside-ng.c	/^int main(int argc, char *argv[])$/;"	f
main	src/wpaclean.c	/^int main(int argc, char *argv[])$/;"	f
main	test/cryptounittest/test-calc-4pmk.c	/^int main(int argc, char **argv)$/;"	f
main	test/cryptounittest/test-calc-mic.c	/^int main(int argc, char **argv)$/;"	f
main	test/cryptounittest/test-calc-pmk.c	/^int main(int argc, char **argv)$/;"	f
main	test/cryptounittest/test-calc-ptk.c	/^int main(int argc, char **argv)$/;"	f
main	test/cryptounittest/test-decrypt-ccmp.c	/^int main(int argc, char **argv)$/;"	f
main	test/cryptounittest/test-encrypt-ccmp.c	/^int main(int argc, char **argv)$/;"	f
main	test/cryptounittest/test-encrypt-wep.c	/^int main(int argc, char **argv)$/;"	f
main	test/pingreply.c	/^int main( int argc, char *argv[] )$/;"	f
main	test/test-hex_string_to_array.c	/^int main(int nbarg, char *argv[])$/;"	f
mainThread	lib/csharp/MonoExample/NDesk-dbus/Connection.cs	/^		internal Thread mainThread = Thread.CurrentThread;$/;"	f	class:NDesk.DBus.Connection	file:
main_if	src/osdep/linux.c	/^    char *main_if;$/;"	m	struct:priv_linux	file:
makeMagic	scripts/airdrop-ng/airdrop-ng	/^def makeMagic(targets,slept = 0):$/;"	f
make_arp_request	src/aireplay-ng.c	/^int make_arp_request(unsigned char *h80211, unsigned char *bssid, unsigned char *src_mac, unsigned char *dst_mac, unsigned char *src_ip, unsigned char *dst_ip, int size)$/;"	f
make_arp_request	src/tkiptun-ng.c	/^int make_arp_request(unsigned char *h80211, unsigned char *bssid, unsigned char *src_mac, unsigned char *dst_mac, unsigned char *src_ip, unsigned char *dst_ip, int size)$/;"	f
make_progress	src/besside-ng.c	/^static void make_progress(void)$/;"	f	file:
malloc	src/memdbg.h	141;"	d
malloc	src/memdbg.h	151;"	d
malloc	src/memory.c	68;"	d	file:
mandir	common.mak	/^mandir          = $(prefix)\/share\/man\/man1$/;"	m
manuf	src/airodump-ng.h	/^	char manuf[128]; \/* TODO: Switch to a char * later to improve memory usage *\/$/;"	m	struct:oui
manuf	src/airodump-ng.h	/^    char *manuf;              \/* the access point's manufacturer *\/$/;"	m	struct:AP_info
manuf	src/airodump-ng.h	/^    char *manuf;             \/* the client's manufacturer *\/$/;"	m	struct:ST_info
manufList	src/airodump-ng.h	/^    struct oui *manufList;$/;"	m	struct:globals	typeref:struct:globals::oui
map	lib/csharp/MonoExample/NDesk-dbus/TypeImplementer.cs	/^		static Dictionary<Type,Type> map = new Dictionary<Type,Type> ();$/;"	f	class:NDesk.DBus.TypeImplementer	file:
mapgsm	src/osdep/freebsd.c	/^mapgsm(u_int freq, u_int flags)$/;"	f	file:
mappsb	src/osdep/freebsd.c	/^mappsb(u_int freq)$/;"	f	file:
mark_cur_ap	src/airodump-ng.h	/^    int mark_cur_ap;$/;"	m	struct:globals
marked	src/airodump-ng.h	/^    int marked;$/;"	m	struct:AP_info
marked_color	src/airodump-ng.h	/^    int marked_color;$/;"	m	struct:AP_info
masks	src/MD5_std.h	/^	MD5_word masks[2];$/;"	m	struct:__anon30
match	scripts/airdrop-ng/airdrop-ng	/^    def match(self):$/;"	m	class:ruleMatch
max_bytes	test/replay.py	/^max_bytes = 2048$/;"	v
max_ivs	src/aircrack-ng.h	/^	int max_ivs;$/;"	m	struct:options
max_speed	src/airodump-ng.h	/^    int max_speed;            \/* AP maximum speed in Mb\/s *\/$/;"	m	struct:AP_info
max_tries	src/aircrack-ptw-lib.c	/^int tried, max_tries;$/;"	v
maxaps	src/airodump-ng.h	/^    int maxaps;               \/* number of all APs found *\/$/;"	m	struct:globals
maxlogic	src/aircrack-ng.h	/^	int maxlogic;				\/* Max addressible lCPU *\/$/;"	m	struct:_cpuinfo
maxnumaps	src/airodump-ng.h	/^    int maxnumaps;            \/* maximum nubers of APs on the list *\/$/;"	m	struct:globals
maxsize_essid_seen	src/airodump-ng.h	/^    u_int maxsize_essid_seen;$/;"	m	struct:globals
maxsize_wps_seen	src/airodump-ng.h	/^    u_int maxsize_wps_seen;$/;"	m	struct:globals
maxtxpwr	src/include/ieee80211.h	/^	u_int8_t maxtxpwr;		\/* tx power cap *\/$/;"	m	struct:ieee80211_band
mc_pipe	src/aircrack-ng.c	/^int mc_pipe[256][2];			 \/* master->child control pipe   *\/$/;"	v
md4_reverse	src/simd-intrinsics.c	/^void md4_reverse(uint32_t *hash)$/;"	f
md4_unreverse	src/simd-intrinsics.c	/^void md4_unreverse(uint32_t *hash)$/;"	f
md5_reverse	src/simd-intrinsics.c	/^void md5_reverse(uint32_t *hash)$/;"	f
md5_unreverse	src/simd-intrinsics.c	/^void md5_unreverse(uint32_t *hash)$/;"	f
md5cryptsse	src/simd-intrinsics.c	/^void md5cryptsse(unsigned char pwd[MD5_SSE_NUM_KEYS][16], unsigned char *salt,$/;"	f
mem	src/memory.c	/^	void *mem;$/;"	m	struct:rm_list	file:
mem_align	src/memory.h	312;"	d
mem_alloc	src/memory.h	148;"	d
mem_alloc	src/memory.h	157;"	d
mem_alloc_align	src/memory.h	154;"	d
mem_alloc_align	src/memory.h	163;"	d
mem_alloc_align_func	src/memory.c	/^void *mem_alloc_align_func(size_t size, size_t align$/;"	f
mem_alloc_copy	src/memory.h	152;"	d
mem_alloc_copy	src/memory.h	161;"	d
mem_alloc_copy_func	src/memory.c	/^void *mem_alloc_copy_func(void *src, size_t size, size_t align$/;"	f
mem_alloc_func	src/memory.c	/^void *mem_alloc_func(size_t size$/;"	f
mem_alloc_tiny	src/memory.h	150;"	d
mem_alloc_tiny	src/memory.h	159;"	d
mem_alloc_tiny_func	src/memory.c	/^void *mem_alloc_tiny_func(size_t size, size_t align$/;"	f
mem_alloc_tiny_memory	src/memory.c	/^static struct rm_list *mem_alloc_tiny_memory;$/;"	v	typeref:struct:rm_list	file:
mem_calloc	src/memory.h	149;"	d
mem_calloc	src/memory.h	158;"	d
mem_calloc_align	src/memory.h	155;"	d
mem_calloc_align	src/memory.h	164;"	d
mem_calloc_align_func	src/memory.c	/^void *mem_calloc_align_func(size_t count, size_t size, size_t align$/;"	f
mem_calloc_func	src/memory.c	/^void *mem_calloc_func(size_t count, size_t size$/;"	f
mem_calloc_tiny	src/memory.h	151;"	d
mem_calloc_tiny	src/memory.h	160;"	d
mem_calloc_tiny_func	src/memory.c	/^void *mem_calloc_tiny_func(size_t size, size_t align$/;"	f
mem_saving_level	src/memory.c	/^unsigned int mem_saving_level = 0;$/;"	v
mem_size	src/memdbg.h	/^	size_t mem_size;$/;"	m	struct:MEMDBG_HANDLE_t
merge	src/ivstools.c	/^int merge( int argc, char *argv[] )$/;"	f
mergeBSSID	src/aircrack-ng.h	/^struct mergeBSSID$/;"	s
mergebssids	src/aircrack-ng.c	/^int mergebssids(char * bssidlist, unsigned char * bssid)$/;"	f
message	lib/csharp/MonoExample/NDesk-dbus/MessageReader.cs	/^		protected Message message;$/;"	f	class:NDesk.DBus.MessageReader
message	lib/csharp/MonoExample/NDesk-dbus/Wrapper.cs	/^		public Message message = new Message ();$/;"	f	class:NDesk.DBus.Error
message	lib/csharp/MonoExample/NDesk-dbus/Wrapper.cs	/^		public Message message = new Message ();$/;"	f	class:NDesk.DBus.MethodCall
message	lib/csharp/MonoExample/NDesk-dbus/Wrapper.cs	/^		public Message message = new Message ();$/;"	f	class:NDesk.DBus.MethodReturn
message	lib/csharp/MonoExample/NDesk-dbus/Wrapper.cs	/^		public Message message = new Message ();$/;"	f	class:NDesk.DBus.Signal
message	src/airodump-ng.h	/^    char message[512];$/;"	m	struct:globals
message	src/crypto.h	/^    unsigned long message;$/;"	m	struct:Michael
messageWriterConstructor	lib/csharp/MonoExample/NDesk-dbus/TypeImplementer.cs	/^		static ConstructorInfo messageWriterConstructor = typeof (MessageWriter).GetConstructor (Type.EmptyTypes);$/;"	f	class:NDesk.DBus.TypeImplementer	file:
messageWriterWriteMethod	lib/csharp/MonoExample/NDesk-dbus/TypeImplementer.cs	/^		static MethodInfo messageWriterWriteMethod = typeof (MessageWriter).GetMethod ("WriteComplex", new Type[] {typeof (object), typeof (Type)});$/;"	f	class:NDesk.DBus.TypeImplementer	file:
messageWriterWritePad	lib/csharp/MonoExample/NDesk-dbus/TypeImplementer.cs	/^		static MethodInfo messageWriterWritePad = typeof (MessageWriter).GetMethod ("WritePad", new Type[] {typeof (int)});$/;"	f	class:NDesk.DBus.TypeImplementer	file:
messages	scripts/airdrop-ng/airdrop-ng	/^class messages:$/;"	c
meth	src/airodump-ng.h	/^    unsigned int meth;        \/* WPS Config Methods *\/$/;"	m	struct:WPS_info
mi_Equals	lib/csharp/MonoExample/NDesk-dbus/DProxy.cs	/^		static MethodInfo mi_Equals = typeof (object).GetMethod ("Equals", BindingFlags.Instance);$/;"	f	class:NDesk.DBus.DProxy	file:
mi_GetHashCode	lib/csharp/MonoExample/NDesk-dbus/DProxy.cs	/^		static MethodInfo mi_GetHashCode = typeof (object).GetMethod ("GetHashCode");$/;"	f	class:NDesk.DBus.DProxy	file:
mi_GetLifetimeService	lib/csharp/MonoExample/NDesk-dbus/DProxy.cs	/^		static MethodInfo mi_GetLifetimeService = typeof (MarshalByRefObject).GetMethod ("GetLifetimeService");$/;"	f	class:NDesk.DBus.DProxy	file:
mi_ToString	lib/csharp/MonoExample/NDesk-dbus/DProxy.cs	/^		static MethodInfo mi_ToString = typeof (object).GetMethod ("ToString");$/;"	f	class:NDesk.DBus.DProxy	file:
mic	src/crypto.h	/^    unsigned char mic[8];$/;"	m	struct:Michael
mic_failure_interval	src/tkiptun-ng.c	/^    int mic_failure_interval;           \/* time between allowed mic failures *\/$/;"	m	struct:options	file:
michael_append	src/crypto.c	/^int michael_append(struct Michael *mic, unsigned char *bytes, int length)$/;"	f
michael_append_byte	src/crypto.c	/^int michael_append_byte(struct Michael *mic, unsigned char byte)$/;"	f
michael_finalize	src/crypto.c	/^int michael_finalize(struct Michael *mic)$/;"	f
michael_finalize_zero	src/crypto.c	/^int michael_finalize_zero(struct Michael *mic)$/;"	f
michael_remove	src/crypto.c	/^int michael_remove(struct Michael *mic, unsigned char *bytes, int length)$/;"	f
michael_remove_byte	src/crypto.c	/^int michael_remove_byte(struct Michael *mic, unsigned char bytes[4])$/;"	f
michael_test	src/crypto.c	/^int michael_test(unsigned char key[8], unsigned char *message, int length, unsigned char out[8])$/;"	f
missed	src/airbase-ng.c	/^    int missed;              \/* number of missed packets  *\/$/;"	m	struct:ST_info	file:
missed	src/airodump-ng.h	/^    int missed;              \/* number of missed packets  *\/$/;"	m	struct:ST_info
mitm	src/airbase-ng.c	/^    int mitm;$/;"	m	struct:options	file:
mmx_only	src/sha1-sse2.S	/^mmx_only:$/;"	l
mmxput	src/simd-intrinsics.c	/^static MAYBE_INLINE void mmxput(void *buf, unsigned int index, unsigned int bid,$/;"	f	file:
mmxput	src/sse-intrinsics.c	/^static MAYBE_INLINE void mmxput(void * buf, unsigned int index, unsigned int bid, unsigned int offset, unsigned char * src, unsigned int len)$/;"	f	file:
mmxput2	src/simd-intrinsics.c	/^static MAYBE_INLINE void mmxput2(void *buf, unsigned int bid, void *src)$/;"	f	file:
mmxput2	src/sse-intrinsics.c	/^static MAYBE_INLINE void mmxput2(void * buf, unsigned int bid, void * src)$/;"	f	file:
mmxput3	src/simd-intrinsics.c	/^static MAYBE_INLINE void mmxput3(void *buf, unsigned int bid,$/;"	f	file:
mmxput3	src/sse-intrinsics.c	/^static MAYBE_INLINE void mmxput3(void * buf, unsigned int bid, unsigned int * offset, int mult, int saltlen, void * src)$/;"	f	file:
mnf_action	src/include/ieee80211.h	/^	u_int8_t	mnf_action;$/;"	m	struct:ieee80211_mnf
mnf_category	src/include/ieee80211.h	/^	u_int8_t	mnf_category;$/;"	m	struct:ieee80211_mnf
mnf_dialog	src/include/ieee80211.h	/^	u_int8_t	mnf_dialog;$/;"	m	struct:ieee80211_mnf
mnf_status	src/include/ieee80211.h	/^	u_int8_t	mnf_status;$/;"	m	struct:ieee80211_mnf
modB	lib/csharp/MonoExample/NDesk-dbus/TypeImplementer.cs	/^		static ModuleBuilder modB;$/;"	f	class:NDesk.DBus.TypeImplementer	file:
mode	src/packetforge-ng.c	/^    int mode;$/;"	m	struct:options	file:
model	src/aircrack-ng.h	/^	char *model;				\/* CPU Model		*\/$/;"	m	struct:_cpuinfo
more_fragments_bit	src/airdecloak-ng.h	/^    int more_fragments_bit;$/;"	m	struct:packet_elt
msec_diff	src/easside-ng.c	/^unsigned int msec_diff(struct timeval *after, struct timeval *before)$/;"	f
msec_to_tv	src/easside-ng.c	/^void msec_to_tv(int msec, struct timeval *tv)$/;"	f
msg_control	lib/csharp/MonoExample/NDesk-dbus/UnixNativeTransport.cs	/^		public IntPtr msg_control; \/\/ancillary data, see below$/;"	f	struct:NDesk.DBus.Transports.msghdr
msg_controllen	lib/csharp/MonoExample/NDesk-dbus/UnixNativeTransport.cs	/^		public uint msg_controllen; \/\/ancillary data buffer len$/;"	f	struct:NDesk.DBus.Transports.msghdr
msg_flags	lib/csharp/MonoExample/NDesk-dbus/UnixNativeTransport.cs	/^		public int msg_flags; \/\/flags on received message$/;"	f	struct:NDesk.DBus.Transports.msghdr
msg_iov	lib/csharp/MonoExample/NDesk-dbus/UnixNativeTransport.cs	/^		public IOVector *msg_iov; \/\/scatter\/gather array$/;"	f	struct:NDesk.DBus.Transports.msghdr
msg_iovlen	lib/csharp/MonoExample/NDesk-dbus/UnixNativeTransport.cs	/^		public int msg_iovlen; \/\/# elements in msg_iov$/;"	f	struct:NDesk.DBus.Transports.msghdr
msg_name	lib/csharp/MonoExample/NDesk-dbus/UnixNativeTransport.cs	/^		public IntPtr msg_name; \/\/optional address$/;"	f	struct:NDesk.DBus.Transports.msghdr
msg_namelen	lib/csharp/MonoExample/NDesk-dbus/UnixNativeTransport.cs	/^		public uint msg_namelen; \/\/size of address$/;"	f	struct:NDesk.DBus.Transports.msghdr
msghdr	lib/csharp/MonoExample/NDesk-dbus/UnixNativeTransport.cs	/^	unsafe struct msghdr$/;"	s	namespace:NDesk.DBus.Transports
msleep	src/airbase-ng.c	/^int msleep( int msec )$/;"	f
msleep	src/airtun-ng.c	/^int msleep( int msec )$/;"	f
mutex	src/aircrack-ng.h	/^	pthread_mutex_t mutex;$/;"	m	struct:WPA_data
mx_apl	src/aircrack-ng.c	/^pthread_mutex_t mx_apl;			 \/* lock write access to ap LL   *\/$/;"	v
mx_cap	src/airbase-ng.c	/^pthread_mutex_t mx_cap;              \/* lock write access to rCF *\/$/;"	v
mx_cf	src/airbase-ng.c	/^pthread_mutex_t mx_cf;              \/* lock write access to rCF *\/$/;"	v
mx_dic	src/aircrack-ng.c	/^pthread_mutex_t mx_dic;			 \/* lock access to opt.dict      *\/$/;"	v
mx_eof	src/aircrack-ng.c	/^pthread_mutex_t mx_eof;			 \/* lock write access to nb_eof  *\/$/;"	v
mx_ivb	src/aircrack-ng.c	/^pthread_mutex_t mx_ivb;			 \/* lock access to ivbuf array   *\/$/;"	v
mx_nb	src/aircrack-ng.c	/^static pthread_mutex_t mx_nb = PTHREAD_MUTEX_INITIALIZER;$/;"	v	file:
mx_print	src/airodump-ng.h	/^    pthread_mutex_t mx_print;			 \/* lock write access to ap LL   *\/$/;"	m	struct:globals
mx_sort	src/airodump-ng.h	/^    pthread_mutex_t mx_sort;			 \/* lock write access to ap LL   *\/$/;"	m	struct:globals
mx_wpastats	src/aircrack-ng.c	/^static pthread_mutex_t mx_wpastats = PTHREAD_MUTEX_INITIALIZER;$/;"	v	file:
mygetch	src/airodump-ng.c	/^int mygetch( ) {$/;"	f
n	src/aircrack-ptw-lib.c	45;"	d	file:
nBytesInM	src/crypto.h	/^    unsigned long nBytesInM;$/;"	m	struct:Michael
n_astate	src/besside-ng.c	/^	int		n_astate;$/;"	m	struct:network	file:
n_attempts	src/besside-ng.c	/^	int		n_attempts;$/;"	m	struct:network	file:
n_beacon	src/besside-ng.c	/^	struct packet	n_beacon;$/;"	m	struct:network	typeref:struct:network::packet	file:
n_beacon	src/wpaclean.c	/^	unsigned char	n_beacon[2048];$/;"	m	struct:network	file:
n_beacon_wrote	src/besside-ng.c	/^	int		n_beacon_wrote;$/;"	m	struct:network	file:
n_beaconlen	src/wpaclean.c	/^	int		n_beaconlen;$/;"	m	struct:network	file:
n_bits	src/osdep/radiotap/radiotap_iter.h	/^	int n_bits;$/;"	m	struct:ieee80211_radiotap_namespace
n_bssid	src/besside-ng.c	/^	unsigned char	n_bssid[6];$/;"	m	struct:network	file:
n_bssid	src/wpaclean.c	/^	unsigned char	n_bssid[6];$/;"	m	struct:network	file:
n_chan	src/besside-ng.c	/^	int		n_chan;$/;"	m	struct:network	file:
n_client_handshake	src/besside-ng.c	/^	struct client	*n_client_handshake;$/;"	m	struct:network	typeref:struct:network::client	file:
n_client_mac	src/besside-ng.c	/^	struct client	*n_client_mac;$/;"	m	struct:network	typeref:struct:network::client	file:
n_clients	src/besside-ng.c	/^	struct client	n_clients;$/;"	m	struct:network	typeref:struct:network::client	file:
n_clients	src/wpaclean.c	/^	struct client	n_clients;$/;"	m	struct:network	typeref:struct:network::client	file:
n_crack_next	src/besside-ng.c	/^	int		n_crack_next;$/;"	m	struct:network	file:
n_cracker_wep	src/besside-ng.c	/^	struct cracker	n_cracker_wep[2];$/;"	m	struct:network	typeref:struct:network::cracker	file:
n_crypto	src/besside-ng.c	/^	int		n_crypto;$/;"	m	struct:network	file:
n_data_count	src/besside-ng.c	/^	int		n_data_count;$/;"	m	struct:network	file:
n_dbm	src/besside-ng.c	/^	int		n_dbm;$/;"	m	struct:network	file:
n_flood_in	src/besside-ng.c	/^	struct speed	n_flood_in;$/;"	m	struct:network	typeref:struct:network::speed	file:
n_flood_out	src/besside-ng.c	/^	struct speed	n_flood_out;$/;"	m	struct:network	typeref:struct:network::speed	file:
n_got_mac	src/besside-ng.c	/^	int		n_got_mac;$/;"	m	struct:network	file:
n_handshake	src/wpaclean.c	/^	struct client	*n_handshake;$/;"	m	struct:network	typeref:struct:network::client	file:
n_have_beacon	src/besside-ng.c	/^	int		n_have_beacon;$/;"	m	struct:network	file:
n_key	src/besside-ng.c	/^	unsigned char	n_key[64];$/;"	m	struct:network	file:
n_key_len	src/besside-ng.c	/^	int		n_key_len;$/;"	m	struct:network	file:
n_mac_filter	src/besside-ng.c	/^	int		n_mac_filter;$/;"	m	struct:network	file:
n_next	src/besside-ng.c	/^	struct network	*n_next;$/;"	m	struct:network	typeref:struct:network::network	file:
n_next	src/wpaclean.c	/^	struct network	*n_next;$/;"	m	struct:network	typeref:struct:network::network	file:
n_ns	src/osdep/radiotap/radiotap_iter.h	/^	int n_ns;$/;"	m	struct:ieee80211_radiotap_vendor_namespaces
n_overrides	src/osdep/radiotap/radiotap_iter.h	/^	int n_overrides;$/;"	m	struct:ieee80211_radiotap_iterator
n_ping_got	src/besside-ng.c	/^	int		n_ping_got;$/;"	m	struct:network	file:
n_ping_sent	src/besside-ng.c	/^	int		n_ping_sent;$/;"	m	struct:network	file:
n_prga	src/besside-ng.c	/^	unsigned char	n_prga[2048];$/;"	m	struct:network	file:
n_prga_len	src/besside-ng.c	/^	int		n_prga_len;$/;"	m	struct:network	file:
n_ptw	src/besside-ng.c	/^	PTW_attackstate	*n_ptw;$/;"	m	struct:network	file:
n_replay	src/besside-ng.c	/^	unsigned char	n_replay[2048];$/;"	m	struct:network	file:
n_replay_got	src/besside-ng.c	/^	int		n_replay_got;$/;"	m	struct:network	file:
n_replay_last	src/besside-ng.c	/^	struct timeval	n_replay_last;$/;"	m	struct:network	typeref:struct:network::timeval	file:
n_replay_len	src/besside-ng.c	/^	int		n_replay_len;$/;"	m	struct:network	file:
n_seq	src/besside-ng.c	/^	unsigned short	n_seq;$/;"	m	struct:network	file:
n_ssid	src/besside-ng.c	/^	char		n_ssid[256];$/;"	m	struct:network	file:
n_ssid	src/wpaclean.c	/^	char		n_ssid[256];$/;"	m	struct:network	file:
n_start	src/besside-ng.c	/^	struct timeval	n_start;$/;"	m	struct:network	typeref:struct:network::timeval	file:
n_wstate	src/besside-ng.c	/^	int		n_wstate;$/;"	m	struct:network	file:
na_1st	src/airodump-ng.h	/^    struct NA_info *na_1st, *na_end;$/;"	m	struct:globals	typeref:struct:globals::NA_info
na_end	src/airodump-ng.h	/^    struct NA_info *na_1st, *na_end;$/;"	m	struct:globals	typeref:struct:globals::
namac	src/airodump-ng.h	/^    unsigned char namac[6];  \/* the stations MAC address  *\/$/;"	m	struct:NA_info
nb_aps	src/aircrack-ng.h	/^	int nb_aps;					 \/* number of targeted APs       *\/$/;"	m	struct:WEP_data
nb_arp	src/airbase-ng.c	/^    int nb_arp;$/;"	m	struct:options	file:
nb_bad	src/airdecap-ng.c	/^    unsigned long nb_bad;       \/* # of bad data packets   *\/$/;"	m	struct:decap_stats	file:
nb_bad	src/airdecloak-ng.h	/^    unsigned long nb_bad;       \/* # of bad data packets   *\/$/;"	m	struct:decloak_stats
nb_bcn	src/airodump-ng.h	/^    unsigned long nb_bcn;     \/* total number of beacons  *\/$/;"	m	struct:AP_info
nb_cloak_wep	src/airdecloak-ng.h	/^    unsigned long nb_cloak_wep; \/* # of cloaked WEP pkt  *\/$/;"	m	struct:decloak_stats
nb_data	src/airodump-ng.h	/^    unsigned long nb_data;    \/* number of  data packets  *\/$/;"	m	struct:AP_info
nb_data_old	src/airodump-ng.h	/^    unsigned long nb_data_old;\/* number of data packets\/sec*\/$/;"	m	struct:AP_info
nb_dataps	src/airodump-ng.h	/^    int nb_dataps;  \/* number of data packets\/sec*\/$/;"	m	struct:AP_info
nb_eof	src/aircrack-ng.c	/^int  nb_eof = 0;				 \/* # of threads who reached eof *\/$/;"	v
nb_filt_wep	src/airdecloak-ng.h	/^    unsigned long nb_filt_wep;  \/* # of filtered WEP pkt  *\/$/;"	m	struct:decloak_stats
nb_ivs	src/aircrack-ng.h	/^	long nb_ivs;				 \/* # of unique IVs in buffer    *\/$/;"	m	struct:WEP_data
nb_ivs	src/aircrack-ng.h	/^	long nb_ivs;				 \/* total number of unique IVs   *\/$/;"	m	struct:AP_info
nb_ivs_clean	src/aircrack-ng.h	/^	long nb_ivs_clean;			 \/* total number of unique IVs   *\/$/;"	m	struct:AP_info
nb_ivs_now	src/aircrack-ng.h	/^	long nb_ivs_now;			 \/* # of unique IVs available    *\/$/;"	m	struct:WEP_data
nb_ivs_vague	src/aircrack-ng.h	/^	long nb_ivs_vague;				 \/* total number of unique IVs   *\/$/;"	m	struct:AP_info
nb_kprev	src/aircrack-ng.c	/^long long int nb_kprev;			 \/* last  # of keys tried        *\/$/;"	v
nb_packets	src/airdecloak-ng.h	/^	int nb_packets;$/;"	m	struct:packet_elt_header
nb_pkt	src/airbase-ng.c	/^    unsigned long nb_pkt;    \/* total number of packets   *\/$/;"	m	struct:ST_info	file:
nb_pkt	src/aircrack-ng.c	/^long nb_pkt = 0;				 \/* # of packets read so far     *\/$/;"	v
nb_pkt	src/airodump-ng.h	/^    unsigned long nb_pkt;     \/* total number of packets  *\/$/;"	m	struct:AP_info
nb_pkt	src/airodump-ng.h	/^    unsigned long nb_pkt;    \/* total number of packets   *\/$/;"	m	struct:ST_info
nb_pkt_sent	src/airbase-ng.c	/^unsigned long nb_pkt_sent;$/;"	v
nb_pkt_sent	src/aireplay-ng.c	/^unsigned long nb_pkt_sent;$/;"	v
nb_pkt_sent	src/airtun-ng.c	/^unsigned long nb_pkt_sent;$/;"	v
nb_pkt_sent	src/tkiptun-ng.c	/^unsigned long nb_pkt_sent;$/;"	v
nb_plain	src/airdecap-ng.c	/^    unsigned long nb_plain;     \/* # of plaintext packets  *\/$/;"	m	struct:decap_stats	file:
nb_plain	src/airdecloak-ng.h	/^    unsigned long nb_plain;     \/* # of plaintext packets  *\/$/;"	m	struct:decloak_stats
nb_read	src/airdecap-ng.c	/^    unsigned long nb_read;      \/* # of packets read       *\/$/;"	m	struct:decap_stats	file:
nb_read	src/airdecloak-ng.h	/^    unsigned long nb_read;      \/* # of packets read       *\/$/;"	m	struct:decloak_stats
nb_tried	src/aircrack-ng.c	/^long long int nb_tried;			 \/* total # of keys tried        *\/$/;"	v
nb_unwep	src/airdecap-ng.c	/^    unsigned long nb_unwep;     \/* # of decrypted WEP pkt  *\/$/;"	m	struct:decap_stats	file:
nb_unwpa	src/airdecap-ng.c	/^    unsigned long nb_unwpa;     \/* # of decrypted WPA pkt  *\/$/;"	m	struct:decap_stats	file:
nb_wep	src/airdecap-ng.c	/^    unsigned long nb_wep;       \/* # of WEP data packets   *\/$/;"	m	struct:decap_stats	file:
nb_wep	src/airdecloak-ng.h	/^    unsigned long nb_wep;       \/* # of WEP data packets   *\/$/;"	m	struct:decloak_stats
nb_wpa	src/airdecap-ng.c	/^    unsigned long nb_wpa;       \/* # of WPA data packets   *\/$/;"	m	struct:decap_stats	file:
nb_wpa	src/airdecloak-ng.h	/^    unsigned long nb_wpa;       \/* # of WPA data packets   *\/$/;"	m	struct:decloak_stats
nbcpu	src/aircrack-ng.h	/^	int nbcpu;					 \/* # of cracker threads$/;"	m	struct:options
nbdict	src/aircrack-ng.h	/^	int nbdict;				 \/* current dict number  *\/$/;"	m	struct:options
nbsd_close	src/osdep/netbsd.c	/^static void nbsd_close(struct wif *wi)$/;"	f	file:
nbsd_fd	src/osdep/netbsd.c	/^static int nbsd_fd(struct wif *wi)$/;"	f	file:
nbsd_get_channel	src/osdep/netbsd.c	/^static int nbsd_get_channel(struct wif *wi)$/;"	f	file:
nbsd_get_mac	src/osdep/netbsd.c	/^static int nbsd_get_mac(struct wif *wi, unsigned char *mac)$/;"	f	file:
nbsd_get_monitor	src/osdep/netbsd.c	/^static int nbsd_get_monitor(struct wif *wi)$/;"	f	file:
nbsd_get_rate	src/osdep/netbsd.c	/^static int nbsd_get_rate(struct wif *wi)$/;"	f	file:
nbsd_open	src/osdep/netbsd.c	/^static struct wif *nbsd_open(char *iface)$/;"	f	file:
nbsd_read	src/osdep/netbsd.c	/^static int nbsd_read(struct wif *wi, unsigned char *h80211, int len,$/;"	f	file:
nbsd_set_channel	src/osdep/netbsd.c	/^static int nbsd_set_channel(struct wif *wi, int chan)$/;"	f	file:
nbsd_set_mac	src/osdep/netbsd.c	/^static int nbsd_set_mac(struct wif *wi, unsigned char *mac)$/;"	f	file:
nbsd_set_rate	src/osdep/netbsd.c	/^static int nbsd_set_rate(struct wif *wi, int rate)$/;"	f	file:
nbsd_write	src/osdep/netbsd.c	/^static int nbsd_write(struct wif *wi, unsigned char *h80211, int len,$/;"	f	file:
nchan	src/include/ieee80211.h	/^	u_int8_t nchan;			\/* number channels *\/$/;"	m	struct:ieee80211_band
need	Makefile	/^need := 3.81$/;"	m
need_connect	src/besside-ng.c	/^static int need_connect(struct network *n)$/;"	f	file:
net	src/airtun-ng.c	/^    unsigned char net;$/;"	m	struct:net_entry	file:
net_add	src/wpaclean.c	/^static struct network *net_add(unsigned char *bssid)$/;"	f	file:
net_close	src/osdep/network.c	/^static void net_close(struct wif *wi)$/;"	f	file:
net_cmd	scripts/dcrack.py	/^def net_cmd(op):$/;"	f
net_cmd	src/osdep/network.c	/^static int net_cmd(struct priv_net *pn, int command, void *arg, int alen)$/;"	f	file:
net_done	scripts/dcrack.py	/^	def net_done(s, net):$/;"	m	class:ServerHandler
net_enque	src/osdep/network.c	/^static void net_enque(struct priv_net *pn, void *buf, int len)$/;"	f	file:
net_entry	src/airtun-ng.c	/^struct net_entry$/;"	s	file:
net_fd	src/osdep/network.c	/^static int net_fd(struct wif *wi)$/;"	f	file:
net_get	src/osdep/network.c	/^int net_get(int s, void *arg, int *len)$/;"	f
net_get_channel	src/osdep/network.c	/^static int net_get_channel(struct wif *wi)$/;"	f	file:
net_get_mac	src/osdep/network.c	/^static int net_get_mac(struct wif *wi, unsigned char *mac)$/;"	f	file:
net_get_monitor	src/osdep/network.c	/^static int net_get_monitor(struct wif *wi)$/;"	f	file:
net_get_nopacket	src/osdep/network.c	/^static int net_get_nopacket(struct priv_net *pn, void *arg, int *len)$/;"	f	file:
net_get_rate	src/osdep/network.c	/^static int net_get_rate(struct wif *wi)$/;"	f	file:
net_hdr	src/aireplay-ng.c	/^struct net_hdr {$/;"	s	file:
net_hdr	src/osdep/network.h	/^struct net_hdr {$/;"	s
net_open	src/osdep/network.c	/^struct wif *net_open(char *iface)$/;"	f
net_read	src/osdep/network.c	/^static int net_read(struct wif *wi, unsigned char *h80211, int len,$/;"	f	file:
net_read_exact	src/osdep/network.c	/^int net_read_exact(int s, void *arg, int len)$/;"	f
net_send	src/osdep/network.c	/^int net_send(int s, int command, void *arg, int len)$/;"	f
net_send_kill	src/airserv-ng.c	/^static void net_send_kill(struct client *c,$/;"	f	file:
net_set_channel	src/osdep/network.c	/^static int net_set_channel(struct wif *wi, int chan)$/;"	f	file:
net_set_rate	src/osdep/network.c	/^static int net_set_rate(struct wif *wi, int rate)$/;"	f	file:
net_write	src/osdep/network.c	/^static int net_write(struct wif *wi, unsigned char *h80211, int len,$/;"	f	file:
netqueue	src/osdep/network.c	/^struct netqueue {$/;"	s	file:
nets	scripts/dcrack.py	/^nets = {}$/;"	v
nets	src/airtun-ng.c	/^struct net_entry *nets = NULL;$/;"	v	typeref:struct:net_entry
network	src/besside-ng.c	/^struct network {$/;"	s	file:
network	src/wpaclean.c	/^struct network {$/;"	s	file:
network_add	src/besside-ng.c	/^static struct network *network_add(struct ieee80211_frame *wh)$/;"	f	file:
network_assoc	src/besside-ng.c	/^static void network_assoc(void *a)$/;"	f	file:
network_auth	src/besside-ng.c	/^static void network_auth(void *a)$/;"	f	file:
network_connect	src/besside-ng.c	/^static int network_connect(struct network *n)$/;"	f	file:
network_get	src/besside-ng.c	/^static struct network *network_get(struct ieee80211_frame *wh)$/;"	f	file:
network_new	src/besside-ng.c	/^static struct network *network_new(void)$/;"	f	file:
network_print	src/besside-ng.c	/^static void network_print(struct network *n)$/;"	f	file:
network_update	src/besside-ng.c	/^static struct network *network_update(struct ieee80211_frame* wh)$/;"	f	file:
next	src/airbase-ng.c	/^    pCF_t           next;           \/* next set of fragments to send *\/$/;"	m	struct:CF_packet	file:
next	src/airbase-ng.c	/^    pESSID_t        next;$/;"	m	struct:ESSID_list	file:
next	src/airbase-ng.c	/^    pFrag_t         next;$/;"	m	struct:Fragment_list	file:
next	src/airbase-ng.c	/^    pMAC_t          next;$/;"	m	struct:MAC_list	file:
next	src/airbase-ng.c	/^    struct ST_info *next;    \/* the next client in list   *\/$/;"	m	struct:ST_info	typeref:struct:ST_info::ST_info	file:
next	src/aircrack-ng.h	/^	struct AP_info *next;		 \/* next AP in linked list       *\/$/;"	m	struct:AP_info	typeref:struct:AP_info::AP_info
next	src/aircrack-ng.h	/^	struct ST_info *next;		 \/* next supplicant              *\/$/;"	m	struct:ST_info	typeref:struct:ST_info::ST_info
next	src/aircrack-ng.h	/^	struct mergeBSSID * next;$/;"	m	struct:mergeBSSID	typeref:struct:mergeBSSID::mergeBSSID
next	src/airdecloak-ng.h	/^    struct packet_elt * next;$/;"	m	struct:packet_elt	typeref:struct:packet_elt::packet_elt
next	src/airodump-ng.h	/^	struct oui *next;$/;"	m	struct:oui	typeref:struct:oui::oui
next	src/airodump-ng.h	/^    struct AP_info *next;     \/* next  AP in list         *\/$/;"	m	struct:AP_info	typeref:struct:AP_info::AP_info
next	src/airodump-ng.h	/^    struct NA_info *next;    \/* the next client in list   *\/$/;"	m	struct:NA_info	typeref:struct:NA_info::NA_info
next	src/airodump-ng.h	/^    struct ST_info *next;    \/* the next client in list   *\/$/;"	m	struct:ST_info	typeref:struct:ST_info::ST_info
next	src/airodump-ng.h	/^    struct pkt_buf  *next;      \/* next packet in list *\/$/;"	m	struct:pkt_buf	typeref:struct:pkt_buf::pkt_buf
next	src/airtun-ng.c	/^    pFrag_t         next;$/;"	m	struct:Fragment_list	file:
next	src/airtun-ng.c	/^    struct net_entry *next;$/;"	m	struct:net_entry	typeref:struct:net_entry::net_entry	file:
next	src/besside-ng-crawler.c	/^  struct bsslist *next;$/;"	m	struct:bsslist	typeref:struct:bsslist::bsslist	file:
next	src/crypto.h	/^    struct WPA_ST_info *next;       \/* next supplicant              *\/$/;"	m	struct:WPA_ST_info	typeref:struct:WPA_ST_info::WPA_ST_info
next	src/ivstools.c	/^    struct AP_info *next;     \/* next  AP in list         *\/$/;"	m	struct:AP_info	typeref:struct:AP_info::AP_info	file:
next	src/ivstools.c	/^    struct ST_info *next;    \/* the next client in list   *\/$/;"	m	struct:ST_info	typeref:struct:ST_info::ST_info	file:
next	src/memory.c	/^	struct rm_list *next;$/;"	m	struct:rm_list	typeref:struct:rm_list::rm_list	file:
next_dict	src/aircrack-ng.c	/^int next_dict(int nb)$/;"	f
next_key	src/aircrack-ng.c	/^int next_key( char **key, int keysize )$/;"	f
next_keystream	src/packetforge-ng.c	/^int next_keystream(unsigned char *dest, int size, unsigned char *bssid, int minlen)$/;"	f
next_packet_pointer	src/airdecloak-ng.c	/^BOOLEAN next_packet_pointer() {$/;"	f
next_packet_pointer_from_ap	src/airdecloak-ng.c	/^BOOLEAN next_packet_pointer_from_ap() {$/;"	f
next_packet_pointer_from_client	src/airdecloak-ng.c	/^BOOLEAN next_packet_pointer_from_client() {$/;"	f
next_packet_pointer_same_fromToDS_and_source	src/airdecloak-ng.c	/^BOOLEAN next_packet_pointer_same_fromToDS_and_source(struct packet_elt * packet) {$/;"	f
next_packet_pointer_same_fromToDS_and_source_as_current	src/airdecloak-ng.c	/^BOOLEAN next_packet_pointer_same_fromToDS_and_source_as_current() {$/;"	f
next_ptw_try	src/aircrack-ng.h	/^        int next_ptw_try;$/;"	m	struct:options
nh_data	src/aireplay-ng.c	/^	uint8_t		nh_data[0];$/;"	m	struct:net_hdr	file:
nh_data	src/osdep/network.h	/^	uint8_t		nh_data[0];$/;"	m	struct:net_hdr
nh_len	src/aireplay-ng.c	/^	uint32_t	nh_len;$/;"	m	struct:net_hdr	file:
nh_len	src/osdep/network.h	/^	uint32_t	nh_len;$/;"	m	struct:net_hdr
nh_type	src/aireplay-ng.c	/^	uint8_t		nh_type;$/;"	m	struct:net_hdr	file:
nh_type	src/osdep/network.h	/^	uint8_t		nh_type;$/;"	m	struct:net_hdr
nkeys	src/aircrack-ng.h	/^	int nkeys;						\/* buffer capacity *\/$/;"	m	struct:WPA_data
nl80211	src/osdep/linux.c	/^    struct genl_family *nl80211;$/;"	m	struct:nl80211_state	typeref:struct:nl80211_state::genl_family	file:
nl80211_cleanup	src/osdep/linux.c	/^static void nl80211_cleanup(struct nl80211_state *state)$/;"	f	file:
nl80211_state	src/osdep/linux.c	/^struct nl80211_state {$/;"	s	file:
nl_cache	src/osdep/linux.c	/^    struct nl_cache *nl_cache;$/;"	m	struct:nl80211_state	typeref:struct:nl80211_state::nl_cache	file:
nl_sock	src/osdep/linux.c	/^    struct nl_handle *nl_sock;$/;"	m	struct:nl80211_state	typeref:struct:nl80211_state::nl_handle	file:
nl_socket_alloc	src/osdep/linux.c	/^static inline struct nl_handle *nl_socket_alloc(void)$/;"	f	file:
nl_socket_free	src/osdep/linux.c	/^static inline void nl_socket_free(struct nl_handle *h)$/;"	f	file:
no_convert	src/airdecap-ng.c	/^    int no_convert;$/;"	m	struct:options	file:
no_mmx	src/sha1-sse2.S	/^no_mmx:$/;"	l
no_stdin	src/aircrack-ng.h	/^	int no_stdin;				 \/* if dict == stdin     *\/$/;"	m	struct:options
nobroadprobe	src/airbase-ng.c	/^    int nobroadprobe;$/;"	m	struct:options	file:
nodetect	src/aireplay-ng.c	/^    int nodetect;$/;"	m	struct:options	file:
nodetect	src/tkiptun-ng.c	/^    int nodetect;$/;"	m	struct:options	file:
npackets	src/aireplay-ng.c	/^    int npackets;$/;"	m	struct:options	file:
npackets	src/tkiptun-ng.c	/^    int npackets;$/;"	m	struct:options	file:
ns	lib/csharp/MonoExample/NDesk-dbus/Connection.cs	/^		Stream ns = null;$/;"	f	class:NDesk.DBus.Connection	file:
ns	src/osdep/radiotap/radiotap_iter.h	/^	const struct ieee80211_radiotap_namespace *ns;$/;"	m	struct:ieee80211_radiotap_vendor_namespaces	typeref:struct:ieee80211_radiotap_vendor_namespaces::ieee80211_radiotap_namespace
ntest	test/cryptounittest/tests.h	/^int ntest=1;$/;"	v
ntohl	src/osdep/byteorder.h	436;"	d
ntohs	src/osdep/byteorder.h	433;"	d
num_cards	src/airodump-ng.h	/^    int num_cards;$/;"	m	struct:globals
num_packets	src/packetforge-ng.c	/^    int num_packets;$/;"	m	struct:options	file:
num_rcv_x2	src/include/if_llc.h	/^		uint8_t num_rcv_x2;$/;"	m	struct:llc::__anon6::__anon8
num_rcv_x2	src/include/if_llc.h	/^		uint8_t num_rcv_x2;$/;"	m	struct:llc::__anon6::__anon9
num_snd_x2	src/include/if_llc.h	/^		uint8_t num_snd_x2;$/;"	m	struct:llc::__anon6::__anon8
numaps	src/airodump-ng.h	/^    int numaps;               \/* number of APs on the current list *\/$/;"	m	struct:globals
o	src/MD5_std.h	/^	} o;$/;"	m	struct:__anon26	typeref:struct:__anon26::__anon29
obj	lib/csharp/MonoExample/NDesk-dbus/ExportObject.cs	/^		public readonly object obj;$/;"	f	class:NDesk.DBus.ExportObject
object_path	lib/csharp/MonoExample/NDesk-dbus/BusObject.cs	/^		ObjectPath object_path;$/;"	f	class:NDesk.DBus.BusObject	file:
obsd_close	src/osdep/openbsd.c	/^static void obsd_close(struct wif *wi)$/;"	f	file:
obsd_fd	src/osdep/openbsd.c	/^static int obsd_fd(struct wif *wi)$/;"	f	file:
obsd_get_channel	src/osdep/openbsd.c	/^static int obsd_get_channel(struct wif *wi)$/;"	f	file:
obsd_get_mac	src/osdep/openbsd.c	/^static int obsd_get_mac(struct wif *wi, unsigned char *mac)$/;"	f	file:
obsd_get_monitor	src/osdep/openbsd.c	/^static int obsd_get_monitor(struct wif *wi)$/;"	f	file:
obsd_get_rate	src/osdep/openbsd.c	/^static int obsd_get_rate(struct wif *wi)$/;"	f	file:
obsd_open	src/osdep/openbsd.c	/^static struct wif *obsd_open(char *iface)$/;"	f	file:
obsd_read	src/osdep/openbsd.c	/^static int obsd_read(struct wif *wi, unsigned char *h80211, int len,$/;"	f	file:
obsd_set_channel	src/osdep/openbsd.c	/^static int obsd_set_channel(struct wif *wi, int chan)$/;"	f	file:
obsd_set_mac	src/osdep/openbsd.c	/^static int obsd_set_mac(struct wif *wi, unsigned char *mac)$/;"	f	file:
obsd_set_rate	src/osdep/openbsd.c	/^static int obsd_set_rate(struct wif *wi, int rate)$/;"	f	file:
obsd_write	src/osdep/openbsd.c	/^static int obsd_write(struct wif *wi, unsigned char *h80211, int len,$/;"	f	file:
octet	src/include/ethernet.h	/^	u_char octet[ETHER_ADDR_LEN];$/;"	m	struct:ether_addr
odd	src/MD5_std.h	/^	MD5_block *even, *odd;$/;"	m	struct:__anon25
off	test/pingreply.c	/^    unsigned short off;$/;"	m	struct:ip_hdr	file:
off1	src/aircrack-ng.c	/^	int off1;$/;"	m	struct:__anon1	file:
off2	src/aircrack-ng.c	/^	int off2;$/;"	m	struct:__anon1	file:
ok	Makefile	/^ok := $(filter $(need),$(firstword $(sort $(MAKE_VERSION) \\$/;"	m
oldkeystream	src/tkiptun-ng.c	/^    unsigned char oldkeystream[2048];   \/* user-defined old keystream *\/$/;"	m	struct:options	file:
oldkeystreamlen	src/tkiptun-ng.c	/^    int oldkeystreamlen;    \/* user-defined old keystream length *\/$/;"	m	struct:options	file:
one_beacon	src/airodump-ng.h	/^    int one_beacon;         \/* Record only 1 beacon?*\/$/;"	m	struct:globals
oneshot	src/aircrack-ng.h	/^	int oneshot;				 \/* Do PTW once *\/$/;"	m	struct:options
open_card_and_sock	src/airserv-ng.c	/^static void open_card_and_sock(struct sstate *ss, char *dev, int port, int chan)$/;"	f	file:
open_conf	contrib/commview/commview.c	/^static int open_conf(struct cstate *cs)$/;"	f	file:
open_existing_pcap	src/airdecloak-ng.c	/^FILE * open_existing_pcap(const char * filename) {$/;"	f
open_key	contrib/commview/commview.c	/^static int open_key(struct cstate *cs, char *name)$/;"	f	file:
open_oui_file	src/airodump-ng.c	/^FILE *open_oui_file(void) {$/;"	f
open_pcap	src/besside-ng.c	/^static int open_pcap(char *fname)$/;"	f	file:
open_pcap	src/wpaclean.c	/^static int open_pcap(char *fname)$/;"	f	file:
open_sock	src/airserv-ng.c	/^static void open_sock(struct sstate *ss, int port)$/;"	f	file:
open_tap	src/easside-ng.c	/^void open_tap(struct east_state *es) {$/;"	f
open_wepfile	src/wesside-ng.c	/^static void open_wepfile(struct wstate *ws)$/;"	f	file:
open_wifi	src/easside-ng.c	/^void open_wifi(struct east_state *es)$/;"	f
openfile	src/airdecloak-ng.c	/^FILE * openfile(const char * filename, const char * mode, int fatal)$/;"	f
openraw	src/osdep/linux.c	/^static int openraw(struct priv_linux *dev, char *iface, int fd, int *arptype,$/;"	f	file:
opensysfs	src/osdep/linux.c	/^static int opensysfs(struct priv_linux *dev, char *iface, int fd) {$/;"	f	file:
operator !=	lib/csharp/MonoExample/NDesk-dbus/Signature.cs	/^		public static bool operator != (Signature a, Signature b)$/;"	m	struct:NDesk.DBus.Signature
operator +	lib/csharp/MonoExample/NDesk-dbus/Signature.cs	/^		public static Signature operator + (Signature s1, Signature s2)$/;"	m	struct:NDesk.DBus.Signature
operator ==	lib/csharp/MonoExample/NDesk-dbus/Signature.cs	/^		public static bool operator == (Signature a, Signature b)$/;"	m	struct:NDesk.DBus.Signature
opt	src/airbase-ng.c	/^opt;$/;"	v	typeref:struct:options
opt	src/aircrack-ng.h	/^opt;$/;"	v	typeref:struct:options
opt	src/airdecap-ng.c	/^opt;$/;"	v	typeref:struct:options
opt	src/aireplay-ng.c	/^opt;$/;"	v	typeref:struct:options
opt	src/airtun-ng.c	/^opt;$/;"	v	typeref:struct:options
opt	src/packetforge-ng.c	/^} opt;$/;"	v	typeref:struct:options
opt	src/tkiptun-ng.c	/^opt;$/;"	v	typeref:struct:options
options	src/airbase-ng.c	/^struct options$/;"	s	file:
options	src/aircrack-ng.h	/^struct options$/;"	s
options	src/airdecap-ng.c	/^struct options$/;"	s	file:
options	src/aireplay-ng.c	/^struct options$/;"	s	file:
options	src/airtun-ng.c	/^struct options$/;"	s	file:
options	src/packetforge-ng.c	/^struct options$/;"	s	file:
options	src/tkiptun-ng.c	/^struct options$/;"	s	file:
org.freedesktop	lib/csharp/MonoExample/NDesk-dbus/Notifications.cs	/^namespace org.freedesktop$/;"	n
org.freedesktop.DBus	lib/csharp/MonoExample/NDesk-dbus/DBus.cs	/^namespace org.freedesktop.DBus$/;"	n
org_code	src/include/if_llc.h	/^		uint8_t  org_code[3];$/;"	m	struct:llc::__anon6::__anon11
other	src/airodump-ng.h	/^    int other;               \/* number of other frames    *\/$/;"	m	struct:NA_info
oui	src/airodump-ng.h	/^struct oui {$/;"	s
oui	src/osdep/radiotap/radiotap_iter.h	/^	uint32_t oui;$/;"	m	struct:ieee80211_radiotap_namespace
ouiKeyChk	scripts/airdrop-ng/airdrop/libOuiParse.py	/^    def ouiKeyChk(self,name):$/;"	m	class:macOUI_lookup
ouiKeyChk	scripts/airgraph-ng/graphviz/libOuiParse.py	/^    def ouiKeyChk(self,name):$/;"	m	class:macOUI_lookup
ouiOpen	scripts/airdrop-ng/airdrop/libOuiParse.py	/^    def ouiOpen(self):$/;"	m	class:macOUI_lookup
ouiOpen	scripts/airgraph-ng/graphviz/libOuiParse.py	/^    def ouiOpen(self,fname,flag='R'):$/;"	m	class:macOUI_lookup
ouiParse	scripts/airdrop-ng/airdrop/libOuiParse.py	/^    def ouiParse(self): $/;"	m	class:macOUI_lookup
ouiParse	scripts/airgraph-ng/graphviz/libOuiParse.py	/^    def ouiParse(self): $/;"	m	class:macOUI_lookup
ouiUpdate	scripts/airgraph-ng/graphviz/libOuiParse.py	/^    def ouiUpdate(self):$/;"	m	class:macOUI_lookup
our_network	src/easside-ng.c	/^int our_network(struct east_state *es, struct ieee80211_frame *wh)$/;"	f
out	src/MD5_std.h	/^	MD5_binary out[MD5_N];$/;"	m	struct:__anon31
output_format_csv	src/airodump-ng.h	/^    int output_format_csv;$/;"	m	struct:globals
output_format_kismet_csv	src/airodump-ng.h	/^    int output_format_kismet_csv;$/;"	m	struct:globals
output_format_kismet_netxml	src/airodump-ng.h	/^    int output_format_kismet_netxml;$/;"	m	struct:globals
output_format_pcap	src/airodump-ng.h	/^    int output_format_pcap;$/;"	m	struct:globals
overrides	src/osdep/radiotap/parse.c	/^static const struct radiotap_override overrides[] = {$/;"	v	typeref:struct:radiotap_override	file:
overrides	src/osdep/radiotap/radiotap_iter.h	/^	const struct radiotap_override *overrides;$/;"	m	struct:ieee80211_radiotap_iterator	typeref:struct:ieee80211_radiotap_iterator::radiotap_override
ow_mac	src/easside-ng.c	/^	unsigned char	ow_mac[6];$/;"	m	struct:owned	file:
ow_next	src/easside-ng.c	/^	struct owned	*ow_next;$/;"	m	struct:owned	typeref:struct:owned::owned	file:
own	src/easside-ng.c	/^void own(struct east_state *es)$/;"	f
own	src/wesside-ng.c	/^static void own(struct wstate *ws)$/;"	f	file:
own_channels	src/airodump-ng.h	/^    int * own_channels;	    \/* custom channel list  *\/$/;"	m	struct:globals
own_frequencies	src/airodump-ng.h	/^    int * own_frequencies;	    \/* custom frequency list  *\/$/;"	m	struct:globals
owned	src/easside-ng.c	/^struct owned {$/;"	s	file:
p	src/MD5_std.h	/^		MD5_block p, ps, pp, psp;$/;"	m	struct:__anon26::__anon29
p	src/MD5_std.h	/^		MD5_block p, sp, pp, spp;$/;"	m	struct:__anon26::__anon28
p	src/MD5_std.h	/^		int p, s, ps, pp, psp;$/;"	m	struct:__anon26::__anon27
p	test/pingreply.c	/^pcap_t *p;$/;"	v
pCF_t	src/airbase-ng.c	/^typedef struct CF_packet *pCF_t;$/;"	t	typeref:struct:CF_packet	file:
pESSID_t	src/airbase-ng.c	/^typedef struct ESSID_list* pESSID_t;$/;"	t	typeref:struct:ESSID_list	file:
pFrag_t	src/airbase-ng.c	/^typedef struct Fragment_list* pFrag_t;$/;"	t	typeref:struct:Fragment_list	file:
pFrag_t	src/airtun-ng.c	/^typedef struct Fragment_list* pFrag_t;$/;"	t	typeref:struct:Fragment_list	file:
pMAC_t	src/airbase-ng.c	/^typedef struct MAC_list* pMAC_t;$/;"	t	typeref:struct:MAC_list	file:
p_data	src/besside-ng.c	/^	unsigned char	p_data[2048];$/;"	m	struct:packet	file:
p_data	src/wpaclean.c	/^        unsigned char   p_data[2048];$/;"	m	struct:packet	file:
p_len	src/besside-ng.c	/^	int		p_len;$/;"	m	struct:packet	file:
p_len	src/wpaclean.c	/^        int             p_len;$/;"	m	struct:packet	file:
packages	scripts/airdrop-ng/setup.py	/^      packages=['airdrop'],$/;"	v
packages	scripts/airgraph-ng/setup.py	/^      packages=['graphviz'],$/;"	v
packet	src/airdecloak-ng.h	/^    unsigned char   *packet;    \/* packet *\/$/;"	m	struct:packet_elt
packet	src/airodump-ng.h	/^    unsigned char   *packet;    \/* packet *\/$/;"	m	struct:pkt_buf
packet	src/besside-ng.c	/^struct packet {$/;"	s	file:
packet	src/wpaclean.c	/^struct packet {$/;"	s	file:
packetEngine	scripts/airdrop-ng/airdrop-ng	/^    def packetEngine(self):$/;"	m	class:packetGenerator
packetGenerator	scripts/airdrop-ng/airdrop-ng	/^class packetGenerator:$/;"	c
packet_copy	src/besside-ng.c	/^static void packet_copy(struct packet *p, void *d, int len)$/;"	f	file:
packet_copy	src/wpaclean.c	/^static void packet_copy(struct packet *p, void *d, int len)$/;"	f	file:
packet_dump	src/packetforge-ng.c	/^int packet_dump(unsigned char* packet, int length)$/;"	f
packet_elt	src/airdecloak-ng.h	/^struct packet_elt$/;"	s
packet_elt_header	src/airdecloak-ng.h	/^struct packet_elt_header {$/;"	s
packet_limit	test/replay.py	/^packet_limit = -1 # infinite$/;"	v
packet_recv	src/airbase-ng.c	/^int packet_recv(unsigned char* packet, int length, struct AP_conf *apc, int external)$/;"	f
packet_recv	src/airtun-ng.c	/^int packet_recv(unsigned char* packet, int length)$/;"	f
packet_write_pcap	src/besside-ng.c	/^static void packet_write_pcap(int fd, struct packet *p)$/;"	f	file:
packet_write_pcap	src/wpaclean.c	/^static void packet_write_pcap(int fd, struct packet *p)$/;"	f	file:
packet_xmit	src/airbase-ng.c	/^int packet_xmit(unsigned char* packet, int length)$/;"	f
packet_xmit	src/airtun-ng.c	/^int packet_xmit(unsigned char* packet, int length)$/;"	f
packet_xmit_external	src/airbase-ng.c	/^int packet_xmit_external(unsigned char* packet, int length, struct AP_conf *apc)$/;"	f
packets	src/airodump-ng.h	/^    struct pkt_buf *packets;  \/* list of captured packets (last few seconds) *\/$/;"	m	struct:AP_info	typeref:struct:AP_info::pkt_buf
packets_collected	src/aircrack-ptw-lib.h	/^        int packets_collected;$/;"	m	struct:__anon41
param_id	src/include/ieee80211.h	/^	u_int8_t	param_id;$/;"	m	struct:ieee80211_wme_param
param_len	src/include/ieee80211.h	/^	u_int8_t	param_len;$/;"	m	struct:ieee80211_wme_param
param_oui	src/include/ieee80211.h	/^	u_int8_t	param_oui[3];$/;"	m	struct:ieee80211_wme_param
param_oui_sybtype	src/include/ieee80211.h	/^	u_int8_t	param_oui_sybtype;$/;"	m	struct:ieee80211_wme_param
param_oui_type	src/include/ieee80211.h	/^	u_int8_t	param_oui_type;$/;"	m	struct:ieee80211_wme_param
param_qosInfo	src/include/ieee80211.h	/^	u_int8_t	param_qosInfo;$/;"	m	struct:ieee80211_wme_param
param_reserved	src/include/ieee80211.h	/^	u_int8_t	param_reserved;$/;"	m	struct:ieee80211_wme_param
param_version	src/include/ieee80211.h	/^	u_int8_t	param_version;$/;"	m	struct:ieee80211_wme_param
params_acParams	src/include/ieee80211.h	/^	struct ieee80211_wme_acparams	params_acParams[WME_NUM_AC];$/;"	m	struct:ieee80211_wme_param	typeref:struct:ieee80211_wme_param::ieee80211_wme_acparams
parseDateTime	lib/csharp/WirelessPanda/Readers/Reader.cs	/^        protected DateTime parseDateTime(string s)$/;"	m	class:WirelessPanda.Readers.Reader
parseFiles	scripts/airdrop-ng/airdrop-ng	/^class parseFiles:$/;"	c
parse_elem_vendor	src/besside-ng.c	/^static int parse_elem_vendor(struct network *n, unsigned char *e, int l)$/;"	f	file:
parse_elem_vendor	src/wpaclean.c	/^static int parse_elem_vendor(unsigned char *e, int l)$/;"	f	file:
parse_hex	src/besside-ng.c	/^static int parse_hex(unsigned char *out, char *in, int l)$/;"	f	file:
parse_rsn	src/besside-ng.c	/^static int parse_rsn(struct network *n, unsigned char *p, int l, int rsn)$/;"	f	file:
parse_rsn	src/wpaclean.c	/^static int parse_rsn(unsigned char *p, int l, int rsn)$/;"	f	file:
parse_tags	src/airbase-ng.c	/^unsigned char* parse_tags(unsigned char *flags, unsigned char type, int length, int *taglen)$/;"	f
parse_timestamp	src/airodump-ng.c	/^static char *parse_timestamp(unsigned long long timestamp) {$/;"	f	file:
parser	scripts/airdrop-ng/airdrop/libDumpParse.py	/^	def parser(self,file):$/;"	m	class:airDumpParse
parser	scripts/airgraph-ng/graphviz/libDumpParse.py	/^    def parser(self,file):$/;"	m	class:airDumpParse
passphrase	src/airdecap-ng.c	/^    char passphrase[65];$/;"	m	struct:options	file:
passphrase	src/airtun-ng.c	/^    char passphrase[65];$/;"	m	struct:options	file:
path	scripts/airgraph-ng/graphviz/libOuiParse.py	/^    path='.\/support\/'$/;"	v
path	scripts/airgraph-ng/graphviz/libOuiParse.py	/^    path='\/usr\/local\/share\/airgraph-ng\/'$/;"	v
path	scripts/airgraph-ng/graphviz/libOuiParse.py	/^    path='\/usr\/share\/airgraph-ng\/'$/;"	v
pc	test/replay.py	/^pc = pcapy.open_live(interface, max_bytes, promiscuous, read_timeout)$/;"	v
pc_channel	src/osdep/cygwin.c	/^	int		pc_channel;$/;"	m	struct:priv_cygwin	file:
pc_close	src/osdep/cygwin.c	/^	void		(*pc_close)(void);$/;"	m	struct:priv_cygwin	file:
pc_did_init	src/osdep/cygwin.c	/^	int		pc_did_init;$/;"	m	struct:priv_cygwin	file:
pc_frequency	src/osdep/cygwin.c	/^	int		pc_frequency;$/;"	m	struct:priv_cygwin	file:
pc_get_mac	src/osdep/cygwin.c	/^	int		(*pc_get_mac)(void *mac);$/;"	m	struct:priv_cygwin	file:
pc_init	src/osdep/cygwin.c	/^	int		(*pc_init)(char *param);$/;"	m	struct:priv_cygwin	file:
pc_inject	src/osdep/cygwin.c	/^	int		(*pc_inject)(void *buf, int len, struct tx_info *ti);$/;"	m	struct:priv_cygwin	file:
pc_pipe	src/osdep/cygwin.c	/^	int		pc_pipe[2]; \/* reader -> parent *\/$/;"	m	struct:priv_cygwin	file:
pc_reader	src/osdep/cygwin.c	/^	pthread_t	pc_reader;$/;"	m	struct:priv_cygwin	file:
pc_running	src/osdep/cygwin.c	/^	volatile int	pc_running;$/;"	m	struct:priv_cygwin	file:
pc_set_chan	src/osdep/cygwin.c	/^	int		(*pc_set_chan)(int chan);$/;"	m	struct:priv_cygwin	file:
pc_set_freq	src/osdep/cygwin.c	/^	int		(*pc_set_freq)(int freq);$/;"	m	struct:priv_cygwin	file:
pc_set_mac	src/osdep/cygwin.c	/^	int		(*pc_set_mac)(void *mac);$/;"	m	struct:priv_cygwin	file:
pc_sniff	src/osdep/cygwin.c	/^	int		(*pc_sniff)(void *buf, int len, struct rx_info *ri);$/;"	m	struct:priv_cygwin	file:
pc_wi	src/osdep/cygwin.c	/^	struct wif	*pc_wi;$/;"	m	struct:priv_cygwin	typeref:struct:priv_cygwin::wif	file:
pcap_file_header	src/pcap.h	/^struct pcap_file_header$/;"	s
pcap_pkthdr	src/pcap.h	/^struct pcap_pkthdr$/;"	s
pendingCalls	lib/csharp/MonoExample/NDesk-dbus/Connection.cs	/^		Dictionary<uint,PendingCall> pendingCalls = new Dictionary<uint,PendingCall> ();$/;"	f	class:NDesk.DBus.Connection	file:
pexit	src/misc.h	134;"	d
pf_buf	src/osdep/freebsd.c	/^	unsigned char			pf_buf[4096];$/;"	m	struct:priv_fbsd	file:
pf_chan	src/osdep/file.c	/^	int		pf_chan;$/;"	m	struct:priv_file	file:
pf_chan	src/osdep/freebsd.c	/^        int                             pf_chan;$/;"	m	struct:priv_fbsd	file:
pf_dtl	src/osdep/file.c	/^	int		pf_dtl;$/;"	m	struct:priv_file	file:
pf_fd	src/osdep/file.c	/^	int		pf_fd;$/;"	m	struct:priv_file	file:
pf_fd	src/osdep/freebsd.c	/^	int				pf_fd;$/;"	m	struct:priv_fbsd	file:
pf_ifr	src/osdep/freebsd.c	/^	struct ifreq			pf_ifr;$/;"	m	struct:priv_fbsd	typeref:struct:priv_fbsd::ifreq	file:
pf_ireq	src/osdep/freebsd.c	/^	struct ieee80211req		pf_ireq;$/;"	m	struct:priv_fbsd	typeref:struct:priv_fbsd::ieee80211req	file:
pf_mac	src/osdep/file.c	/^	unsigned char	pf_mac[6];$/;"	m	struct:priv_file	file:
pf_next	src/osdep/freebsd.c	/^	unsigned char			*pf_next;$/;"	m	struct:priv_fbsd	file:
pf_nocrc	src/osdep/freebsd.c	/^	int				pf_nocrc;$/;"	m	struct:priv_fbsd	file:
pf_rate	src/osdep/file.c	/^	int		pf_rate;$/;"	m	struct:priv_file	file:
pf_s	src/osdep/freebsd.c	/^	int				pf_s;$/;"	m	struct:priv_fbsd	file:
pf_totlen	src/osdep/freebsd.c	/^	int				pf_totlen;$/;"	m	struct:priv_fbsd	file:
pf_txparams	src/osdep/freebsd.c	/^        struct ieee80211_bpf_params	pf_txparams;$/;"	m	struct:priv_fbsd	typeref:struct:priv_fbsd::ieee80211_bpf_params	file:
pfh_in	src/airbase-ng.c	/^    struct pcap_file_header pfh_in;$/;"	m	struct:devices	typeref:struct:devices::pcap_file_header	file:
pfh_in	src/aireplay-ng.c	/^    struct pcap_file_header pfh_in;$/;"	m	struct:devices	typeref:struct:devices::pcap_file_header	file:
pfh_in	src/airodump-ng.h	/^    struct pcap_file_header pfh_in;$/;"	m	struct:globals	typeref:struct:globals::pcap_file_header
pfh_in	src/airtun-ng.c	/^    struct pcap_file_header pfh_in;$/;"	m	struct:devices	typeref:struct:devices::pcap_file_header	file:
pfh_in	src/osdep/linux.c	/^    struct pcap_file_header pfh_in;$/;"	m	struct:priv_linux	typeref:struct:priv_linux::pcap_file_header	file:
pfh_in	src/packetforge-ng.c	/^    struct pcap_file_header pfh_in;$/;"	m	struct:devices	typeref:struct:devices::pcap_file_header	file:
pfh_in	src/tkiptun-ng.c	/^    struct pcap_file_header pfh_in;$/;"	m	struct:devices	typeref:struct:devices::pcap_file_header	file:
pi_iv	src/wesside-ng.c	/^	unsigned char	pi_iv[3];$/;"	m	struct:prga_info	file:
pi_len	src/wesside-ng.c	/^	int		pi_len;$/;"	m	struct:prga_info	file:
pi_prga	src/wesside-ng.c	/^	unsigned char	*pi_prga;$/;"	m	struct:prga_info	file:
ping	src/aireplay-ng.c	/^    unsigned int  ping[REQUESTS];$/;"	m	struct:APt	file:
ping	src/tkiptun-ng.c	/^    unsigned int  ping[REQUESTS];$/;"	m	struct:APt	file:
ping_reply	src/besside-ng.c	/^static void ping_reply(struct network *n, struct ieee80211_frame *wh)$/;"	f	file:
ping_send	src/besside-ng.c	/^static void ping_send(struct network *n)$/;"	f	file:
pinger	scripts/dcrack.py	/^def pinger(speed):$/;"	f
pkt_buf	src/airodump-ng.h	/^struct pkt_buf$/;"	s
pktlen	src/packetforge-ng.c	/^    int pktlen;$/;"	m	struct:options	file:
pl_mac	src/osdep/linux.c	/^    unsigned char pl_mac[6];$/;"	m	struct:priv_linux	file:
pmk	src/aircrack-ng.h	/^	uint8_t pmk[32];$/;"	m	struct:hashdb_rec
pmk	src/airdecap-ng.c	/^    unsigned char pmk[40];$/;"	m	struct:options	file:
pmk	src/airtun-ng.c	/^    unsigned char pmk[40];$/;"	m	struct:options	file:
pmk	src/tkiptun-ng.c	/^    unsigned char pmk[128];         \/* pmk derived from the essid and psk *\/$/;"	m	struct:options	file:
pn	src/crypto.h	/^    unsigned char pn[6];                \/* Packet Number (WPA-CCMP) *\/$/;"	m	struct:WPA_ST_info
pn_buf	src/osdep/netbsd.c	/^	unsigned char			pn_buf[4096];$/;"	m	struct:priv_nbsd	file:
pn_chan	src/osdep/netbsd.c	/^        int                             pn_chan;$/;"	m	struct:priv_nbsd	file:
pn_fd	src/osdep/netbsd.c	/^	int				pn_fd;$/;"	m	struct:priv_nbsd	file:
pn_ifr	src/osdep/netbsd.c	/^	struct ifreq			pn_ifr;$/;"	m	struct:priv_nbsd	typeref:struct:priv_nbsd::ifreq	file:
pn_ireq	src/osdep/netbsd.c	/^	struct ieee80211chanreq		pn_ireq;$/;"	m	struct:priv_nbsd	typeref:struct:priv_nbsd::ieee80211chanreq	file:
pn_next	src/osdep/netbsd.c	/^	unsigned char			*pn_next;$/;"	m	struct:priv_nbsd	file:
pn_nocrc	src/osdep/netbsd.c	/^	int				pn_nocrc;$/;"	m	struct:priv_nbsd	file:
pn_queue	src/osdep/network.c	/^	struct netqueue	pn_queue;$/;"	m	struct:priv_net	typeref:struct:priv_net::netqueue	file:
pn_queue_free	src/osdep/network.c	/^	struct netqueue	pn_queue_free;$/;"	m	struct:priv_net	typeref:struct:priv_net::netqueue	file:
pn_queue_len	src/osdep/network.c	/^	int		pn_queue_len;$/;"	m	struct:priv_net	file:
pn_s	src/osdep/netbsd.c	/^	int				pn_s;$/;"	m	struct:priv_nbsd	file:
pn_s	src/osdep/network.c	/^	int		pn_s;$/;"	m	struct:priv_net	file:
pn_totlen	src/osdep/netbsd.c	/^	int				pn_totlen;$/;"	m	struct:priv_nbsd	file:
po_buf	src/osdep/openbsd.c	/^	unsigned char			po_buf[4096];$/;"	m	struct:priv_obsd	file:
po_chan	src/osdep/openbsd.c	/^        int                             po_chan;$/;"	m	struct:priv_obsd	file:
po_fd	src/osdep/openbsd.c	/^	int				po_fd;$/;"	m	struct:priv_obsd	file:
po_ifr	src/osdep/openbsd.c	/^	struct ifreq			po_ifr;$/;"	m	struct:priv_obsd	typeref:struct:priv_obsd::ifreq	file:
po_ireq	src/osdep/openbsd.c	/^	struct ieee80211chanreq		po_ireq;$/;"	m	struct:priv_obsd	typeref:struct:priv_obsd::ieee80211chanreq	file:
po_next	src/osdep/openbsd.c	/^	unsigned char			*po_next;$/;"	m	struct:priv_obsd	file:
po_nocrc	src/osdep/openbsd.c	/^	int				po_nocrc;$/;"	m	struct:priv_obsd	file:
po_s	src/osdep/openbsd.c	/^	int				po_s;$/;"	m	struct:priv_obsd	file:
po_totlen	src/osdep/openbsd.c	/^	int				po_totlen;$/;"	m	struct:priv_obsd	file:
poll	src/aircrack-ng.h	/^	vote poll[64][256];			 \/* KoreK cryptanalysis results  *\/$/;"	m	struct:WEP_data
port	scripts/dcrack.py	/^port = 1337$/;"	v
port_in	src/aireplay-ng.c	/^    int port_in;$/;"	m	struct:options	file:
port_in	src/tkiptun-ng.c	/^    int port_in;$/;"	m	struct:options	file:
port_out	src/aireplay-ng.c	/^    int port_out;$/;"	m	struct:options	file:
port_out	src/tkiptun-ng.c	/^    int port_out;$/;"	m	struct:options	file:
pos	lib/csharp/MonoExample/NDesk-dbus/MessageReader.cs	/^		protected int pos = 0;$/;"	f	class:NDesk.DBus.MessageReader
post_input	src/wesside-ng.c	/^static void post_input(struct wstate *ws, struct timeval *now)$/;"	f	file:
power	src/airbase-ng.c	/^    int power;               \/* last signal power         *\/$/;"	m	struct:ST_info	file:
power	src/airodump-ng.h	/^    int power;               \/* last signal power         *\/$/;"	m	struct:NA_info
power	src/airodump-ng.h	/^    int power;               \/* last signal power         *\/$/;"	m	struct:ST_info
power_index	src/airodump-ng.h	/^    int power_index;          \/* index in power ring buf. *\/$/;"	m	struct:AP_info
power_lvl	src/airodump-ng.h	/^    int power_lvl[NB_PWR];    \/* signal power ring buffer *\/$/;"	m	struct:AP_info
pp	src/MD5_std.h	/^		MD5_block p, ps, pp, psp;$/;"	m	struct:__anon26::__anon29
pp	src/MD5_std.h	/^		MD5_block p, sp, pp, spp;$/;"	m	struct:__anon26::__anon28
pp	src/MD5_std.h	/^		int p, s, ps, pp, psp;$/;"	m	struct:__anon26::__anon27
ppi_decode	contrib/airpcap/airpcap.c	/^static int ppi_decode(const u_char *p, int caplen, int *hdrlen, int *power)$/;"	f	file:
ppi_decode	src/osdep/airpcap.c	/^int ppi_decode(const u_char *p, int caplen, int *hdrlen, int *power)$/;"	f
preamble	src/airodump-ng.h	/^    int preamble;             \/* 0 = long, 1 = short      *\/$/;"	m	struct:AP_info
prefix	common.mak	/^prefix          = \/usr\/local$/;"	m
prefix	src/MD5_std.h	/^	char *prefix;$/;"	m	struct:__anon31
prefix	src/airbase-ng.c	/^    char *prefix;$/;"	m	struct:options	file:
prefix	src/airodump-ng.h	/^    char *prefix;$/;"	m	struct:globals
prelen	src/MD5_std.h	/^	int prelen;$/;"	m	struct:__anon31
prepare_fragstate	src/wesside-ng.c	/^static void prepare_fragstate(struct wstate *ws, struct frag_state* fs, int pad)$/;"	f	file:
prev	src/airbase-ng.c	/^    struct ST_info *prev;    \/* the prev client in list   *\/$/;"	m	struct:ST_info	typeref:struct:ST_info::ST_info	file:
prev	src/airdecloak-ng.h	/^    struct packet_elt * prev;$/;"	m	struct:packet_elt	typeref:struct:packet_elt::packet_elt
prev	src/airodump-ng.h	/^    struct AP_info *prev;     \/* prev. AP in list         *\/$/;"	m	struct:AP_info	typeref:struct:AP_info::AP_info
prev	src/airodump-ng.h	/^    struct NA_info *prev;    \/* the prev client in list   *\/$/;"	m	struct:NA_info	typeref:struct:NA_info::NA_info
prev	src/airodump-ng.h	/^    struct ST_info *prev;    \/* the prev client in list   *\/$/;"	m	struct:ST_info	typeref:struct:ST_info::ST_info
prev	src/ivstools.c	/^    struct AP_info *prev;     \/* prev. AP in list         *\/$/;"	m	struct:AP_info	typeref:struct:AP_info::AP_info	file:
prev	src/ivstools.c	/^    struct ST_info *prev;    \/* the prev client in list   *\/$/;"	m	struct:ST_info	typeref:struct:ST_info::ST_info	file:
prev_bssid	src/airodump-ng.h	/^    unsigned char prev_bssid[6];$/;"	m	struct:globals
prev_bssid	src/ivstools.c	/^    unsigned char prev_bssid[6];$/;"	m	struct:globals	file:
prev_bssid	src/packetforge-ng.c	/^    unsigned char prev_bssid[6];$/;"	m	struct:options	file:
prev_packet_pointer	src/airdecloak-ng.c	/^BOOLEAN prev_packet_pointer() {$/;"	f
prev_packet_pointer_same_fromToDS_and_source	src/airdecloak-ng.c	/^BOOLEAN prev_packet_pointer_same_fromToDS_and_source(struct packet_elt * packet) {$/;"	f
prev_packet_pointer_same_fromToDS_and_source_as_current	src/airdecloak-ng.c	/^BOOLEAN prev_packet_pointer_same_fromToDS_and_source_as_current() {$/;"	f
prga	src/airbase-ng.c	/^    unsigned char *prga;$/;"	m	struct:options	file:
prga	src/aireplay-ng.c	/^    unsigned char *prga;$/;"	m	struct:options	file:
prga	src/airtun-ng.c	/^    unsigned char *prga;$/;"	m	struct:options	file:
prga	src/packetforge-ng.c	/^    unsigned char *prga;$/;"	m	struct:options	file:
prga	src/tkiptun-ng.c	/^    unsigned char *prga;$/;"	m	struct:options	file:
prga_get	src/besside-ng.c	/^static void prga_get(struct network *n)$/;"	f	file:
prga_info	src/wesside-ng.c	/^struct prga_info {$/;"	s	file:
prgalen	src/airbase-ng.c	/^    int prgalen;$/;"	m	struct:options	file:
prgalen	src/aireplay-ng.c	/^    int prgalen;$/;"	m	struct:options	file:
prgalen	src/airtun-ng.c	/^    int prgalen;$/;"	m	struct:options	file:
prgalen	src/packetforge-ng.c	/^    int prgalen;$/;"	m	struct:options	file:
prgalen	src/tkiptun-ng.c	/^    int prgalen;$/;"	m	struct:options	file:
printError	scripts/airdrop-ng/airdrop-ng	/^    def printError(self,error):$/;"	m	class:messages
printErrorCloseAndReturn	contrib/airpcap/airpcap.c	/^static int printErrorCloseAndReturn(const char * err, int retValue)$/;"	f	file:
printErrorCloseAndReturn	src/osdep/airpcap.c	/^int printErrorCloseAndReturn(const char * err, int retValue)$/;"	f
printMessage	scripts/airdrop-ng/airdrop-ng	/^    def printMessage(self,message):$/;"	m	class:messages
print_debug	contrib/commview/commview.c	/^static void print_debug(char *fmt, ...)$/;"	f	file:
print_error	contrib/commview/commview.c	/^static int print_error(char *fmt, ...)$/;"	f	file:
print_help	src/airolib-ng.c	/^void print_help(const char * msg) {$/;"	f
print_hex	src/besside-ng.c	/^static inline void print_hex(void *p, int len)$/;"	f	file:
print_list	src/besside-ng.c	/^static void print_list(char *label, check_cb cb)$/;"	f	file:
print_network	src/wpaclean.c	/^static void print_network(struct network *n)$/;"	f	file:
print_packet	src/airbase-ng.c	/^void print_packet ( unsigned char h80211[], int caplen )$/;"	f
print_packet	src/airdecloak-ng.c	/^void print_packet(struct packet_elt * packet) {$/;"	f
print_packet	src/airtun-ng.c	/^void print_packet ( unsigned char h80211[], int caplen )$/;"	f
print_radiotap_namespace	src/osdep/radiotap/parse.c	/^static void print_radiotap_namespace(struct ieee80211_radiotap_iterator *iter)$/;"	f	file:
print_state	src/besside-ng.c	/^static void print_state(int UNUSED(x))$/;"	f	file:
print_state_network	src/besside-ng.c	/^static void print_state_network(struct network *n)$/;"	f	file:
print_statistics	src/airdecloak-ng.c	/^BOOLEAN print_statistics() {$/;"	f
print_status	src/besside-ng.c	/^static void print_status(int advance)$/;"	f	file:
print_test_namespace	src/osdep/radiotap/parse.c	/^static void print_test_namespace(struct ieee80211_radiotap_iterator *iter)$/;"	f	file:
print_usage	src/packetforge-ng.c	/^void print_usage(void)$/;"	f
print_work	src/besside-ng.c	/^static void print_work(void)$/;"	f	file:
printf_time	src/easside-ng.c	/^void printf_time(char *fmt, ...)$/;"	f
priv_cygwin	src/osdep/cygwin.c	/^struct priv_cygwin {$/;"	s	file:
priv_fbsd	src/osdep/freebsd.c	/^struct priv_fbsd {$/;"	s	file:
priv_file	src/osdep/file.c	/^struct priv_file {$/;"	s	file:
priv_linux	src/osdep/linux.c	/^struct priv_linux {$/;"	s	file:
priv_nbsd	src/osdep/netbsd.c	/^struct priv_nbsd {$/;"	s	file:
priv_net	src/osdep/network.c	/^struct priv_net {$/;"	s	file:
priv_obsd	src/osdep/openbsd.c	/^struct priv_obsd {$/;"	s	file:
probability	src/aircrack-ng.h	/^	int probability;			\/* %of correct answers *\/$/;"	m	struct:options
probe_index	src/airbase-ng.c	/^    int probe_index;         \/* probed ESSIDs ring index  *\/$/;"	m	struct:ST_info	file:
probe_index	src/airodump-ng.h	/^    int probe_index;         \/* probed ESSIDs ring index  *\/$/;"	m	struct:ST_info
probes	src/airbase-ng.c	/^    char probes[NB_PRB][256];\/* probed ESSIDs ring buffer *\/$/;"	m	struct:ST_info	file:
probes	src/airodump-ng.h	/^    char probes[NB_PRB][MAX_IE_ELEMENT_SIZE];$/;"	m	struct:ST_info
proc_ctl	src/wesside-ng.c	/^static void proc_ctl(struct wstate *ws, int stype)$/;"	f	file:
proc_data	src/wesside-ng.c	/^static void proc_data(struct wstate *ws, struct ieee80211_frame *wh, int len)$/;"	f	file:
proc_mgt	src/wesside-ng.c	/^static void proc_mgt(struct wstate *ws, int stype, unsigned char *body)$/;"	f	file:
process_beacon	src/wpaclean.c	/^static void process_beacon(struct ieee80211_frame *wh, int totlen)$/;"	f	file:
process_cap	scripts/dcrack.py	/^def process_cap(fn):$/;"	f
process_data	src/wpaclean.c	/^static void process_data(struct ieee80211_frame *wh, int len)$/;"	f	file:
process_directory	src/besside-ng-crawler.c	/^void process_directory(const char *dir, time_t begin) {$/;"	f
process_eapol	src/besside-ng.c	/^static void process_eapol(struct network *n, struct client *c, unsigned char *p,$/;"	f	file:
process_eapol	src/wpaclean.c	/^static void process_eapol(struct network *n, struct client *c, unsigned char *p,$/;"	f	file:
process_eapol_networks	src/besside-ng-crawler.c	/^void process_eapol_networks(pcap_t *handle, struct bsslist *bsl) {$/;"	f
process_file	src/besside-ng-crawler.c	/^void process_file(const char *file) {$/;"	f
process_packet	src/wpaclean.c	/^static void process_packet(void *packet, int len)$/;"	f	file:
progname	src/aircrack-ng.c	/^char * progname = NULL;$/;"	v
promiscuous	src/airbase-ng.c	/^    int promiscuous;$/;"	m	struct:options	file:
promiscuous	test/replay.py	/^promiscuous = False$/;"	v
proto	test/pingreply.c	/^    unsigned char proto;$/;"	m	struct:ip_hdr	file:
ps	src/MD5_std.h	/^		MD5_block p, ps, pp, psp;$/;"	m	struct:__anon26::__anon29
ps	src/MD5_std.h	/^		int p, s, ps, pp, psp;$/;"	m	struct:__anon26::__anon27
ps_adapter	contrib/peek/omnipeek.c	/^	HANDLE		ps_adapter;$/;"	m	struct:pstate	file:
ps_ctx	contrib/peek/omnipeek.c	/^	HANDLE		ps_ctx;$/;"	m	struct:pstate	file:
ps_data	contrib/peek/omnipeek.c	/^	unsigned char	ps_data[4096];$/;"	m	struct:pstate	file:
ps_len	contrib/peek/omnipeek.c	/^	int		ps_len;$/;"	m	struct:pstate	file:
ps_lib	contrib/peek/omnipeek.c	/^	void		*ps_lib;$/;"	m	struct:pstate	file:
ps_mtx	contrib/peek/omnipeek.c	/^	pthread_mutex_t	ps_mtx;$/;"	m	struct:pstate	file:
ps_peek_close_adapter	contrib/peek/omnipeek.c	/^	int    (*ps_peek_close_adapter)(HANDLE);$/;"	m	struct:pstate	file:
ps_peek_create_capture_context	contrib/peek/omnipeek.c	/^	HANDLE (*ps_peek_create_capture_context)(HANDLE, void*, int,$/;"	m	struct:pstate	file:
ps_peek_initialize_library	contrib/peek/omnipeek.c	/^	int    (*ps_peek_initialize_library)(void);$/;"	m	struct:pstate	file:
ps_peek_open_adapter	contrib/peek/omnipeek.c	/^	HANDLE (*ps_peek_open_adapter)(LPSTR);$/;"	m	struct:pstate	file:
ps_peek_packet_send	contrib/peek/omnipeek.c	/^	int    (*ps_peek_packet_send)(HANDLE, void*, int, int*, LPOVERLAPPED,$/;"	m	struct:pstate	file:
ps_peek_request	contrib/peek/omnipeek.c	/^	int    (*ps_peek_request)(HANDLE, void*, void*);$/;"	m	struct:pstate	file:
ps_peek_start_capture	contrib/peek/omnipeek.c	/^	int    (*ps_peek_start_capture)(HANDLE);$/;"	m	struct:pstate	file:
ps_peek_stop_capture	contrib/peek/omnipeek.c	/^	int    (*ps_peek_stop_capture)(HANDLE);$/;"	m	struct:pstate	file:
ps_sem	contrib/peek/omnipeek.c	/^	pthread_cond_t	ps_sem;$/;"	m	struct:pstate	file:
psk	src/tkiptun-ng.c	/^    char  psk[128];         \/* shared passphrase among the clients *\/$/;"	m	struct:options	file:
psp	src/MD5_std.h	/^		MD5_block p, ps, pp, psp;$/;"	m	struct:__anon26::__anon29
psp	src/MD5_std.h	/^		int p, s, ps, pp, psp;$/;"	m	struct:__anon26::__anon27
pstate	contrib/peek/omnipeek.c	/^struct pstate$/;"	s	file:
ptk	src/crypto.h	/^    unsigned char ptk[80];              \/* pairwise transcient key      *\/$/;"	m	struct:WPA_ST_info
ptk	src/tkiptun-ng.c	/^    unsigned char ptk[80];          \/* ptk calculated from all pieces captured in the handshake *\/$/;"	m	struct:options	file:
ptw_add	src/besside-ng.c	/^static int ptw_add(struct network *n, struct ieee80211_frame *wh,$/;"	f	file:
ptw_attack	src/aircrack-ng.h	/^	int ptw_attack;$/;"	m	struct:options
ptw_clean	src/aircrack-ng.h	/^        PTW_attackstate *ptw_clean;$/;"	m	struct:AP_info
ptw_free	src/besside-ng.c	/^static void ptw_free(struct network *n)$/;"	f	file:
ptw_vague	src/aircrack-ng.h	/^        PTW_attackstate *ptw_vague;$/;"	m	struct:AP_info
put_be32	src/sha1-git.c	110;"	d	file:
put_be32	src/sha1-git.c	119;"	d	file:
put_crc32	src/easside-ng.c	/^void put_crc32(void *data, int len)$/;"	f
pwn	src/besside-ng.c	/^static void pwn(void)$/;"	f	file:
pwn	src/wpaclean.c	/^static void pwn(char *fname)$/;"	f	file:
pwned	src/besside-ng.c	/^static void pwned(struct network *n)$/;"	f	file:
pwr	src/aireplay-ng.c	/^    int  pwr[REQUESTS];$/;"	m	struct:APt	file:
pwr	src/tkiptun-ng.c	/^    int  pwr[REQUESTS];$/;"	m	struct:APt	file:
q_buf	src/osdep/network.c	/^	unsigned char	q_buf[2048];$/;"	m	struct:netqueue	file:
q_len	src/osdep/network.c	/^	int		q_len;$/;"	m	struct:netqueue	file:
q_next	src/osdep/network.c	/^	struct netqueue	*q_next;$/;"	m	struct:netqueue	typeref:struct:netqueue::netqueue	file:
q_prev	src/osdep/network.c	/^	struct netqueue	*q_prev;$/;"	m	struct:netqueue	typeref:struct:netqueue::netqueue	file:
qos_fr_ds	src/airodump-ng.h	/^    int qos_fr_ds;           \/* does it receive 802.11e   *\/$/;"	m	struct:ST_info
qos_to_ds	src/airodump-ng.h	/^    int qos_to_ds;           \/* does it use 802.11e to ds *\/$/;"	m	struct:ST_info
query_int	src/airolib-ng.c	/^int query_int(sqlite3* db, const char* sql) {$/;"	f
queue_add	src/osdep/network.c	/^static void queue_add(struct netqueue *head, struct netqueue *q)$/;"	f	file:
queue_del	src/osdep/network.c	/^static void queue_del(struct netqueue *q)$/;"	f	file:
queue_get	src/osdep/network.c	/^static int queue_get(struct priv_net *pn, void *buf, int len)$/;"	f	file:
queue_get_slot	src/osdep/network.c	/^static struct netqueue *queue_get_slot(struct priv_net *pn)$/;"	f	file:
queue_len	src/easside-ng.c	/^int queue_len(struct east_state *es)$/;"	f
quiet	src/airbase-ng.c	/^    int quiet;$/;"	m	struct:options	file:
rBSSID	src/airbase-ng.c	/^pMAC_t      rBSSID;$/;"	v
rCF	src/airbase-ng.c	/^pCF_t       rCF;$/;"	v
rClient	src/airbase-ng.c	/^pMAC_t      rClient;$/;"	v
rESSID	src/airbase-ng.c	/^pESSID_t    rESSID;$/;"	v
rESSIDmutex	src/airbase-ng.c	/^pthread_mutex_t	rESSIDmutex;$/;"	v
rFragment	src/airbase-ng.c	/^pFrag_t     rFragment;$/;"	v
rFragment	src/airtun-ng.c	/^pFrag_t     rFragment;$/;"	v
r_apmac	src/tkiptun-ng.c	/^    unsigned char r_apmac[6];$/;"	m	struct:options	file:
r_bssid	src/airbase-ng.c	/^    unsigned char r_bssid[6];$/;"	m	struct:options	file:
r_bssid	src/aireplay-ng.c	/^    unsigned char r_bssid[6];$/;"	m	struct:options	file:
r_bssid	src/airtun-ng.c	/^    unsigned char r_bssid[6];$/;"	m	struct:options	file:
r_bssid	src/tkiptun-ng.c	/^    unsigned char r_bssid[6];$/;"	m	struct:options	file:
r_dip	src/aireplay-ng.c	/^    unsigned char r_dip[4];$/;"	m	struct:options	file:
r_dip	src/tkiptun-ng.c	/^    unsigned char r_dip[4];$/;"	m	struct:options	file:
r_dmac	src/airbase-ng.c	/^    unsigned char r_dmac[6];$/;"	m	struct:options	file:
r_dmac	src/aireplay-ng.c	/^    unsigned char r_dmac[6];$/;"	m	struct:options	file:
r_dmac	src/airtun-ng.c	/^    unsigned char r_dmac[6];$/;"	m	struct:options	file:
r_dmac	src/tkiptun-ng.c	/^    unsigned char r_dmac[6];$/;"	m	struct:options	file:
r_essid	src/aireplay-ng.c	/^    char r_essid[33];$/;"	m	struct:options	file:
r_essid	src/tkiptun-ng.c	/^    char r_essid[33];$/;"	m	struct:options	file:
r_fctrl	src/aireplay-ng.c	/^    int r_fctrl;$/;"	m	struct:options	file:
r_fctrl	src/tkiptun-ng.c	/^    int r_fctrl;$/;"	m	struct:options	file:
r_fromdsinj	src/aireplay-ng.c	/^    int r_fromdsinj;$/;"	m	struct:options	file:
r_fromdsinj	src/tkiptun-ng.c	/^    int r_fromdsinj;$/;"	m	struct:options	file:
r_nbpps	src/airbase-ng.c	/^    int r_nbpps;$/;"	m	struct:options	file:
r_nbpps	src/aireplay-ng.c	/^    int r_nbpps;$/;"	m	struct:options	file:
r_nbpps	src/airtun-ng.c	/^    int r_nbpps;$/;"	m	struct:options	file:
r_nbpps	src/tkiptun-ng.c	/^    int r_nbpps;$/;"	m	struct:options	file:
r_sip	src/aireplay-ng.c	/^    unsigned char r_sip[4];$/;"	m	struct:options	file:
r_sip	src/tkiptun-ng.c	/^    unsigned char r_sip[4];$/;"	m	struct:options	file:
r_smac	src/airbase-ng.c	/^    unsigned char r_smac[6];$/;"	m	struct:options	file:
r_smac	src/aireplay-ng.c	/^    unsigned char r_smac[6];$/;"	m	struct:options	file:
r_smac	src/airtun-ng.c	/^    unsigned char r_smac[6];$/;"	m	struct:options	file:
r_smac	src/tkiptun-ng.c	/^    unsigned char r_smac[6];$/;"	m	struct:options	file:
r_smac_set	src/aireplay-ng.c	/^    char r_smac_set;$/;"	m	struct:options	file:
r_smac_set	src/tkiptun-ng.c	/^    char r_smac_set;$/;"	m	struct:options	file:
r_trans	src/airtun-ng.c	/^    unsigned char r_trans[6];$/;"	m	struct:options	file:
radiotap_align_size	src/osdep/radiotap/radiotap_iter.h	/^struct radiotap_align_size {$/;"	s
radiotap_ns	src/osdep/radiotap/radiotap.c	/^static const struct ieee80211_radiotap_namespace radiotap_ns = {$/;"	v	typeref:struct:ieee80211_radiotap_namespace	file:
radiotap_override	src/osdep/radiotap/radiotap_iter.h	/^struct radiotap_override {$/;"	s
rand	src/common.h	43;"	d
rand	src/common.h	44;"	d
randReason	scripts/airdrop-ng/airdrop-ng	/^    def randReason(self):$/;"	m	class:packetGenerator
rate	src/osdep/linux.c	/^    int rate;$/;"	m	struct:priv_linux	file:
rate_from	src/airbase-ng.c	/^    int rate_from;           \/* last bitrate from station *\/$/;"	m	struct:ST_info	file:
rate_from	src/airodump-ng.h	/^    int rate_from;           \/* last bitrate from station *\/$/;"	m	struct:ST_info
rate_to	src/airbase-ng.c	/^    int rate_to;             \/* last bitrate to station   *\/$/;"	m	struct:ST_info	file:
rate_to	src/airodump-ng.h	/^    int rate_to;             \/* last bitrate to station   *\/$/;"	m	struct:ST_info
raw_file	src/packetforge-ng.c	/^    char *raw_file;$/;"	m	struct:options	file:
rb	src/aircrack-ng.c	/^read_buf rb, crb;$/;"	v
rc4_crypt	src/crypto.c	/^void rc4_crypt( struct rc4_state *s, unsigned char *data, int length )$/;"	f
rc4_setup	src/crypto.c	/^void rc4_setup( struct rc4_state *s, unsigned char *key,  int length )$/;"	f
rc4_state	src/crypto.h	/^struct rc4_state$/;"	s
rc4init	src/aircrack-ptw-lib.c	/^static void rc4init ( uint8_t * key, int keylen, rc4state * state) {$/;"	f	file:
rc4initial	src/aircrack-ptw-lib.c	/^static const uint32_t rc4initial[] =$/;"	v	file:
rc4state	src/aircrack-ptw-lib.c	/^} rc4state;$/;"	t	typeref:struct:__anon20	file:
rc4test	src/aircrack-ptw-lib.c	/^static int rc4test(uint8_t *key, int keylen, uint8_t *iv, uint8_t *keystream)$/;"	f	file:
rc4test	src/aircrack-ptw-lib.h	/^	rc4test_func rc4test;$/;"	m	struct:__anon41
rc4test_amd64_sse2	src/aircrack-ptw-lib.c	/^static int rc4test_amd64_sse2(uint8_t *key, int keylen, uint8_t *iv, uint8_t *keystream)$/;"	f	file:
rc4test_func	src/aircrack-ptw-lib.h	/^typedef int (*rc4test_func)(uint8_t *key, int keylen, uint8_t *iv, uint8_t *keystream);$/;"	t
rc4update	src/aircrack-ptw-lib.c	/^static uint8_t rc4update(rc4state * state) {$/;"	f	file:
readLine	src/common.c	/^int readLine(char line[], int maxlength)$/;"	f
read_ack	src/easside-ng.c	/^void read_ack(struct east_state *es, struct ieee80211_frame *wh, int len)$/;"	f
read_assoc_resp	src/easside-ng.c	/^void read_assoc_resp(struct east_state *es, struct ieee80211_frame *wh, int len)$/;"	f
read_auth	src/easside-ng.c	/^void read_auth(struct east_state *es, struct ieee80211_frame *wh, int len)$/;"	f
read_beacon	src/easside-ng.c	/^void read_beacon(struct east_state *es, struct ieee80211_frame *wh, int len)$/;"	f
read_buddy	src/easside-ng.c	/^void read_buddy(struct east_state *es)$/;"	f
read_buf	src/aircrack-ng.c	/^read_buf;$/;"	t	typeref:struct:__anon1	file:
read_ctl	src/easside-ng.c	/^void read_ctl(struct east_state *es, struct ieee80211_frame *wh, int len)$/;"	f
read_data	src/easside-ng.c	/^void read_data(struct east_state *es, struct ieee80211_frame *wh, int len)$/;"	f
read_deauth	src/easside-ng.c	/^void read_deauth(struct east_state *es, struct ieee80211_frame *wh, int len)$/;"	f
read_disassoc	src/easside-ng.c	/^void read_disassoc(struct east_state *es, struct ieee80211_frame *wh, int len)$/;"	f
read_line	src/airodump-ng.c	/^static int read_line(int sock, char *buffer, int pos, int size)$/;"	f	file:
read_mgt	src/easside-ng.c	/^void read_mgt(struct east_state *es, struct ieee80211_frame *wh, int len)$/;"	f
read_packet	src/airbase-ng.c	/^int read_packet(void *buf, size_t count)$/;"	f
read_packet	src/aireplay-ng.c	/^int read_packet(void *buf, size_t count, struct rx_info *ri)$/;"	f
read_packet	src/airtun-ng.c	/^int read_packet(void *buf, size_t count)$/;"	f
read_packet	src/tkiptun-ng.c	/^int read_packet(void *buf, size_t count, struct rx_info *ri)$/;"	f
read_packet	src/wesside-ng.c	/^static int read_packet(struct wstate *ws, unsigned char *dst, int len)$/;"	f	file:
read_packets	src/airdecloak-ng.c	/^BOOLEAN read_packets(void)$/;"	f
read_pkts	src/airodump-ng.h	/^int read_pkts=0;$/;"	v
read_prga	src/airbase-ng.c	/^int read_prga(unsigned char **dest, char *file)$/;"	f
read_prga	src/aireplay-ng.c	/^int read_prga(unsigned char **dest, char *file)$/;"	f
read_prga	src/airtun-ng.c	/^int read_prga(unsigned char **dest, char *file)$/;"	f
read_prga	src/packetforge-ng.c	/^int read_prga(unsigned char **dest, char *file)$/;"	f
read_prga	src/tkiptun-ng.c	/^int read_prga(unsigned char **dest, char *file)$/;"	f
read_raw_packet	src/packetforge-ng.c	/^int read_raw_packet(unsigned char* dest, char* srcfile, int length)$/;"	f
read_single_packet	contrib/commview/commview.c	/^static int read_single_packet(struct cstate *cs, unsigned char *buf, int len,$/;"	f	file:
read_sleep	src/aireplay-ng.c	/^void read_sleep( unsigned long usec )$/;"	f
read_sleep	src/tkiptun-ng.c	/^void read_sleep( unsigned long usec )$/;"	f
read_tap	src/easside-ng.c	/^void read_tap(struct east_state *es)$/;"	f
read_thread	src/aircrack-ng.c	/^void read_thread( void *arg )$/;"	f
read_timeout	test/replay.py	/^read_timeout = 100 # in milliseconds$/;"	v
read_wifi	src/easside-ng.c	/^void read_wifi(struct east_state *es)$/;"	f
realloc	src/memdbg.h	142;"	d
realloc	src/memdbg.h	153;"	d
realloc	src/memory.c	69;"	d	file:
rearrange_frequencies	src/airodump-ng.c	/^int rearrange_frequencies()$/;"	f
reassoc	src/aireplay-ng.c	/^    int reassoc;$/;"	m	struct:options	file:
rec_size	src/aircrack-ng.h	/^	uint8_t rec_size;$/;"	m	struct:hashdb_rec
receive_packet	test/pingreply.c	/^void receive_packet($/;"	f
received	src/include/if_arp.h	/^	uint64_t received;	\/* # of ARP packets received by this host. *\/$/;"	m	struct:arpstat
record_data	src/airbase-ng.c	/^    int record_data;$/;"	m	struct:options	file:
record_data	src/airodump-ng.h	/^    int record_data;		\/* do we record data?   *\/$/;"	m	struct:globals
recv_pkts	test/replay.py	/^def recv_pkts(hdr, data):$/;"	f
recvmsg	lib/csharp/MonoExample/NDesk-dbus/UnixNativeTransport.cs	/^			public static extern int recvmsg (int s, IntPtr msg, int flags);$/;"	m	class:NDesk.DBus.Transports.UnixSocket	file:
redirect	src/easside-ng.c	/^void redirect(struct east_state *es, struct timeval *tv)$/;"	f
redirect_enque	src/easside-ng.c	/^void redirect_enque(struct east_state *es, struct ieee80211_frame *wh, int len)$/;"	f
redirect_sendfrag	src/easside-ng.c	/^void redirect_sendfrag(struct east_state *es, struct rpacket *rp)$/;"	f
redirect_sendip	src/easside-ng.c	/^void redirect_sendip(struct east_state *es, struct rpacket *rp)$/;"	f
relevantBindingFlags	lib/csharp/MonoExample/NDesk-dbus/Introspection.cs	/^		const BindingFlags relevantBindingFlags = BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly;$/;"	f	class:NDesk.DBus.Introspector	file:
remove	scripts/dcrack.py	/^	def remove(s, path):$/;"	m	class:ServerHandler
remove_last_uncomplete_node	src/airdecloak-ng.c	/^void remove_last_uncomplete_node() {$/;"	f
remove_namac	src/airodump-ng.c	/^int remove_namac(unsigned char* mac)$/;"	f
remove_packet	src/easside-ng.c	/^void remove_packet(struct east_state *es, int id)$/;"	f
remove_tag	src/airbase-ng.c	/^int remove_tag(unsigned char *flags, unsigned char type, int *length)$/;"	f
remove_votes	src/aircrack-ng.c	/^int remove_votes(int keybyte, unsigned char value)$/;"	f
repeat	src/airtun-ng.c	/^    int repeat;$/;"	m	struct:options	file:
replay_check	src/besside-ng.c	/^static void replay_check(void *a)$/;"	f	file:
reply	lib/csharp/MonoExample/NDesk-dbus/PendingCall.cs	/^		Message reply = null;$/;"	f	class:NDesk.DBus.PendingCall	file:
reply_icmp_echo	test/pingreply.c	/^void reply_icmp_echo($/;"	f
reserved1	src/aircrack-ng.h	/^	uint8_t reserved1[3];$/;"	m	struct:hashdb_head
reset	contrib/commview/commview.c	/^static int reset(struct cstate *cs)$/;"	f	file:
reset	src/easside-ng.c	/^void reset(struct east_state *es)$/;"	f
resetSelection	src/airodump-ng.c	/^void resetSelection()$/;"	f
reset_current_packet_pointer	src/airdecloak-ng.c	/^void reset_current_packet_pointer() {$/;"	f
reset_current_packet_pointer_to_ap_packet	src/airdecloak-ng.c	/^BOOLEAN reset_current_packet_pointer_to_ap_packet() {$/;"	f
reset_current_packet_pointer_to_client_packet	src/airdecloak-ng.c	/^BOOLEAN reset_current_packet_pointer_to_client_packet() {$/;"	f
reset_ifaces	src/aireplay-ng.c	/^int reset_ifaces()$/;"	f
reset_ifaces	src/tkiptun-ng.c	/^int reset_ifaces()$/;"	f
reset_state	contrib/commview/commview.c	/^static int reset_state(HDEVINFO *hdi, SP_DEVINFO_DATA *did, DWORD state)$/;"	f	file:
reset_term	src/airodump-ng.c	/^void reset_term() {$/;"	f
resourceCulture	lib/csharp/Example1/Example1/Properties/Resources.Designer.cs	/^        private static global::System.Globalization.CultureInfo resourceCulture;$/;"	f	class:Example1.Properties.Resources	file:
resourceMan	lib/csharp/Example1/Example1/Properties/Resources.Designer.cs	/^        private static global::System.Resources.ResourceManager resourceMan;$/;"	f	class:Example1.Properties.Resources	file:
restart	contrib/commview/commview.c	/^static int restart(struct cstate *cs)$/;"	f	file:
resume	src/besside-ng.c	/^static void resume(void)$/;"	f	file:
resume_network	src/besside-ng.c	/^static void resume_network(char *buf)$/;"	f	file:
retry_bit	src/airdecloak-ng.h	/^    int retry_bit;$/;"	m	struct:packet_elt
ri_antenna	src/osdep/osdep.h	/^        uint32_t ri_antenna;$/;"	m	struct:rx_info
ri_channel	src/osdep/osdep.h	/^        uint32_t ri_channel;$/;"	m	struct:rx_info
ri_freq	src/osdep/osdep.h	/^        uint32_t ri_freq;$/;"	m	struct:rx_info
ri_mactime	src/osdep/osdep.h	/^        uint64_t ri_mactime;$/;"	m	struct:rx_info
ri_noise	src/osdep/osdep.h	/^        int32_t ri_noise;$/;"	m	struct:rx_info
ri_power	src/osdep/osdep.h	/^        int32_t ri_power;$/;"	m	struct:rx_info
ri_rate	src/osdep/osdep.h	/^        uint32_t ri_rate;$/;"	m	struct:rx_info
right	src/crypto.h	/^    unsigned long right;$/;"	m	struct:Michael
ringbuffer	src/airbase-ng.c	/^    int ringbuffer;$/;"	m	struct:options	file:
ringbuffer	src/aireplay-ng.c	/^    int ringbuffer;$/;"	m	struct:options	file:
ringbuffer	src/tkiptun-ng.c	/^    int ringbuffer;$/;"	m	struct:options	file:
rm_dupe	scripts/airdrop-ng/airdrop-ng	/^    def rm_dupe(self,List):$/;"	m	class:ruleMatch
rm_list	src/memory.c	/^struct rm_list$/;"	s	file:
roject	Makefile	/^	curl --form project=Aircrack-ng --form token=$(COVERITY_TOKEN) --form email=$(COVERITY_EMAIL) --form file=@$(COVERITY_TAR_GZ) --form version=r$(REVISION) --form description="Aircrack-ng svn r$(REVISION)" http:\/\/scan5.coverity.com\/cgi-bin\/upload.py$/;"	m
root_path	lib/csharp/MonoExample/NDesk-dbus/Introspection.cs	/^		public ObjectPath root_path = ObjectPath.Root;$/;"	f	class:NDesk.DBus.Introspector
ror	src/simd-intrinsics.c	1693;"	d	file:
ror	src/simd-intrinsics.c	1750;"	d	file:
ror	src/simd-intrinsics.c	2274;"	d	file:
ror	src/simd-intrinsics.c	2331;"	d	file:
rot16_mask	src/sse-intrinsics.c	153;"	d	file:
rot16_mask	src/sse-intrinsics.c	167;"	d	file:
round0	src/sha1-sse2.S	/^round0:$/;"	l
round1	src/sha1-sse2.S	/^round1:$/;"	l
round2	src/sha1-sse2.S	/^round2:$/;"	l
round3	src/sha1-sse2.S	/^round3:$/;"	l
rp_id	src/easside-ng.c	/^	int		rp_id;$/;"	m	struct:rpacket	file:
rp_len	src/easside-ng.c	/^	int		rp_len;$/;"	m	struct:rpacket	file:
rp_next	src/easside-ng.c	/^	struct rpacket	*rp_next;$/;"	m	struct:rpacket	typeref:struct:rpacket::rpacket	file:
rp_packet	src/easside-ng.c	/^	unsigned char	rp_packet[2048];$/;"	m	struct:rpacket	file:
rpacket	src/easside-ng.c	/^struct rpacket {$/;"	s	file:
rpkt	test/verify_inject.py	/^       DNS(rd=1,qd=DNSQR(qname="www.aircrack-ng.org"))$/;"	v
rtap_namespace_sizes	src/osdep/radiotap/radiotap.c	/^static const struct radiotap_align_size rtap_namespace_sizes[] = {$/;"	v	typeref:struct:radiotap_align_size	file:
rtc	src/aireplay-ng.c	/^    int rtc;$/;"	m	struct:options	file:
rts_r	src/airodump-ng.h	/^    int rts_r;               \/* number of RTS frames (rx) *\/$/;"	m	struct:NA_info
rts_t	src/airodump-ng.h	/^    int rts_t;               \/* number of RTS frames (tx) *\/$/;"	m	struct:NA_info
ruleMatch	scripts/airdrop-ng/airdrop-ng	/^class ruleMatch:$/;"	c
ruleParse	scripts/airdrop-ng/airdrop-ng	/^    def ruleParse(self,ruleRaw):$/;"	m	class:parseFiles
ruleQue	scripts/airdrop-ng/airdrop-ng	/^    def ruleQue(self):$/;"	m	class:ruleMatch
run	scripts/airdrop-ng/airdrop-ng	/^    def run(self):$/;"	m	class:getTargets
run	scripts/airdrop-ng/airdrop-ng	/^    def run(self,fileName,AiroDBs):$/;"	m	class:parseFiles
rx_info	src/osdep/osdep.h	/^struct rx_info {$/;"	s
rx_quality	src/airodump-ng.h	/^    int    rx_quality;        \/* percent of captured beacons *\/$/;"	m	struct:AP_info
rxreplies	src/include/if_arp.h	/^	uint64_t rxreplies;	\/* # of ARP replies received by this host. *\/$/;"	m	struct:arpstat
rxrequests	src/include/if_arp.h	/^	uint64_t rxrequests;	\/* # of ARP requests received by this host. *\/$/;"	m	struct:arpstat
s	src/MD5_std.h	/^		int p, s, ps, pp, psp;$/;"	m	struct:__anon26::__anon27
s	src/MD5_std.h	/^	char s[8];$/;"	m	struct:__anon26
s	src/aircrack-ptw-lib.c	/^	uint32_t s[n];$/;"	m	struct:__anon20	file:
s0	src/simd-intrinsics.c	1626;"	d	file:
s0	src/simd-intrinsics.c	2196;"	d	file:
s0	src/simd-intrinsics.c	2197;"	d	file:
s0	src/simd-intrinsics.c	2205;"	d	file:
s0	src/simd-intrinsics.c	2206;"	d	file:
s0	src/sse-intrinsics.c	1496;"	d	file:
s0	src/sse-intrinsics.c	1878;"	d	file:
s0	src/sse-intrinsics.c	1879;"	d	file:
s1	src/simd-intrinsics.c	1637;"	d	file:
s1	src/simd-intrinsics.c	2200;"	d	file:
s1	src/simd-intrinsics.c	2201;"	d	file:
s1	src/simd-intrinsics.c	2217;"	d	file:
s1	src/simd-intrinsics.c	2218;"	d	file:
s1	src/sse-intrinsics.c	1507;"	d	file:
s1	src/sse-intrinsics.c	1890;"	d	file:
s1	src/sse-intrinsics.c	1891;"	d	file:
s32	src/pseudo_intrinsics.h	/^	uint32_t s32[SIMD_COEF_32];$/;"	m	union:__anon23
s64	src/pseudo_intrinsics.h	/^	uint64_t s64[SIMD_COEF_64];$/;"	m	union:__anon23
s_chan	src/besside-ng.c	/^	int		s_chan;$/;"	m	struct:state	file:
s_curnet	src/besside-ng.c	/^	struct network	*s_curnet;$/;"	m	struct:state	typeref:struct:state::network	file:
s_face	src/airbase-ng.c	/^    char *s_face;$/;"	m	struct:options	file:
s_face	src/aireplay-ng.c	/^    char *s_face;$/;"	m	struct:options	file:
s_face	src/airtun-ng.c	/^    char *s_face;$/;"	m	struct:options	file:
s_face	src/tkiptun-ng.c	/^    char *s_face;$/;"	m	struct:options	file:
s_file	src/airbase-ng.c	/^    char *s_file;$/;"	m	struct:options	file:
s_file	src/aireplay-ng.c	/^    char *s_file;$/;"	m	struct:options	file:
s_file	src/airodump-ng.h	/^    char*   s_file;         \/* source file to read packets *\/$/;"	m	struct:globals
s_file	src/airtun-ng.c	/^    char *s_file;$/;"	m	struct:options	file:
s_file	src/tkiptun-ng.c	/^    char *s_file;$/;"	m	struct:options	file:
s_hopchan	src/besside-ng.c	/^	struct channel	*s_hopchan;$/;"	m	struct:state	typeref:struct:state::channel	file:
s_hopcycles	src/besside-ng.c	/^	unsigned int	s_hopcycles;$/;"	m	struct:state	file:
s_iface	src/airodump-ng.h	/^    char*   s_iface;        \/* source interface to read from *\/$/;"	m	struct:globals
s_mac	src/besside-ng.c	/^	unsigned char	s_mac[6];$/;"	m	struct:state	file:
s_networks	src/besside-ng.c	/^	struct network	s_networks;$/;"	m	struct:state	typeref:struct:state::network	file:
s_now	src/besside-ng.c	/^	struct timeval	s_now;$/;"	m	struct:state	typeref:struct:state::timeval	file:
s_num	src/besside-ng.c	/^	unsigned int	s_num;$/;"	m	struct:speed	file:
s_ri	src/besside-ng.c	/^	struct rx_info	*s_ri;$/;"	m	struct:state	typeref:struct:state::rx_info	file:
s_speed	src/besside-ng.c	/^	unsigned int	s_speed;$/;"	m	struct:speed	file:
s_start	src/besside-ng.c	/^	struct timeval	s_start;$/;"	m	struct:speed	typeref:struct:speed::timeval	file:
s_start	src/besside-ng.c	/^	struct timeval	s_start;$/;"	m	struct:state	typeref:struct:state::timeval	file:
s_state	src/besside-ng.c	/^	int		s_state;$/;"	m	struct:state	file:
s_timers	src/besside-ng.c	/^	struct timer	s_timers;$/;"	m	struct:state	typeref:struct:state::timer	file:
s_wepfd	src/besside-ng.c	/^	int		s_wepfd;$/;"	m	struct:state	file:
s_wi	src/besside-ng.c	/^	struct wif	*s_wi;$/;"	m	struct:state	typeref:struct:state::wif	file:
s_wpafd	src/besside-ng.c	/^	int		s_wpafd;$/;"	m	struct:state	file:
safe_read	src/aircrack-ng.c	/^int safe_read( int fd, void *buf, size_t len )$/;"	f
safe_write	src/aircrack-ng.c	/^int safe_write( int fd, void *buf, size_t len )$/;"	f
sanitize_xml	src/airodump-ng.c	/^char * sanitize_xml(unsigned char * text, int length)$/;"	f
save_gps	src/airodump-ng.h	/^    int save_gps;           \/* keep gps file flag   *\/$/;"	m	struct:globals
save_key	src/wesside-ng.c	/^static void save_key(unsigned char *key, int len)$/;"	f	file:
save_log	src/besside-ng.c	/^static void save_log(void)$/;"	f	file:
save_network	src/besside-ng.c	/^static void save_network(FILE *f, struct network *n)$/;"	f	file:
save_network	src/wpaclean.c	/^static void save_network(struct network *n)$/;"	f	file:
save_prga	src/aireplay-ng.c	/^void save_prga(char *filename, unsigned char *iv, unsigned char *prga, int prgalen)$/;"	f
save_prga	src/easside-ng.c	/^void save_prga(struct east_state *es)$/;"	f
save_prga	src/tkiptun-ng.c	/^void save_prga(char *filename, unsigned char *iv, unsigned char *prga, int prgalen)$/;"	f
sb	lib/csharp/MonoExample/NDesk-dbus/Introspection.cs	/^		public StringBuilder sb;$/;"	f	class:NDesk.DBus.Introspector
sbindir	common.mak	/^sbindir         = $(prefix)\/sbin$/;"	m
scan_start	src/besside-ng.c	/^static void scan_start(void)$/;"	f	file:
schan	src/include/ieee80211.h	/^	u_int8_t schan;			\/* starting channel *\/$/;"	m	struct:ieee80211_band
scripts	scripts/airdrop-ng/setup.py	/^      scripts=['airdrop-ng'],$/;"	v
scripts	scripts/airgraph-ng/setup.py	/^      scripts=['dump-join', 'airgraph-ng'],$/;"	v
searchInside	src/osdep/linux.c	/^static char * searchInside(const char * dir, const char * filename)$/;"	f	file:
security	src/airodump-ng.h	/^    int security;             \/* ENC_*, AUTH_*, STD_*     *\/$/;"	m	struct:AP_info
seen_iv	src/aircrack-ptw-lib.h	/^        uint8_t seen_iv[PTW_IVTABLELEN];$/;"	m	struct:__anon41
selected_ap	src/airodump-ng.h	/^    int selected_ap;$/;"	m	struct:globals
selected_bssid	src/airodump-ng.h	/^    unsigned char selected_bssid[6];	\/* bssid that is selected *\/$/;"	m	struct:globals
selected_sta	src/airodump-ng.h	/^    int selected_sta;$/;"	m	struct:globals
selection_ap	src/airodump-ng.h	/^    int selection_ap;$/;"	m	struct:globals
selection_sta	src/airodump-ng.h	/^    int selection_sta;$/;"	m	struct:globals
sendMethodCallMethod	lib/csharp/MonoExample/NDesk-dbus/TypeImplementer.cs	/^		static MethodInfo sendMethodCallMethod = typeof (BusObject).GetMethod ("SendMethodCall");$/;"	f	class:NDesk.DBus.TypeImplementer	file:
sendSignalMethod	lib/csharp/MonoExample/NDesk-dbus/TypeImplementer.cs	/^		static MethodInfo sendSignalMethod = typeof (BusObject).GetMethod ("SendSignal");$/;"	f	class:NDesk.DBus.TypeImplementer	file:
send_ack	src/wesside-ng.c	/^static void send_ack(struct wstate *ws)$/;"	f	file:
send_arp	src/wesside-ng.c	/^static void send_arp(struct wstate *ws, unsigned short op, char* srcip,$/;"	f	file:
send_assoc	src/easside-ng.c	/^void send_assoc(struct east_state *es, struct timeval *tv)$/;"	f
send_assoc	src/wesside-ng.c	/^static void send_assoc(struct wstate *ws)$/;"	f	file:
send_auth	src/besside-ng.c	/^static void send_auth(struct network *n)$/;"	f	file:
send_auth	src/easside-ng.c	/^void send_auth(struct east_state *es, struct timeval *tv)$/;"	f
send_auth	src/wesside-ng.c	/^static void send_auth(struct wstate *ws)$/;"	f	file:
send_cap	scripts/dcrack.py	/^def send_cap():$/;"	f
send_dict	scripts/dcrack.py	/^def send_dict():$/;"	f
send_fragment	src/wesside-ng.c	/^static void send_fragment(struct wstate *ws, struct frag_state* fs,$/;"	f	file:
send_fragments	src/aireplay-ng.c	/^void send_fragments(unsigned char *packet, int packet_len, unsigned char *iv, unsigned char *keystream, int fragsize, int ska)$/;"	f
send_fragments	src/tkiptun-ng.c	/^void send_fragments(unsigned char *packet, int packet_len, unsigned char *iv, unsigned char *keystream, int fragsize, int ska)$/;"	f
send_frame	src/easside-ng.c	/^void send_frame(struct east_state *es, void *buf, int len)$/;"	f
send_frame	src/wesside-ng.c	/^static void send_frame(struct wstate *ws, unsigned char* buf, int len)$/;"	f	file:
send_packet	src/airbase-ng.c	/^int send_packet(void *buf, size_t count)$/;"	f
send_packet	src/aireplay-ng.c	/^int send_packet(void *buf, size_t count)$/;"	f
send_packet	src/airtun-ng.c	/^int send_packet(void *buf, size_t count)$/;"	f
send_packet	src/tkiptun-ng.c	/^int send_packet(void *buf, size_t count)$/;"	f
send_probe_request	src/airodump-ng.c	/^int send_probe_request(struct wif *wi)$/;"	f
send_probe_requests	src/airodump-ng.c	/^int send_probe_requests(struct wif *wi[], int cards)$/;"	f
send_whohas	src/easside-ng.c	/^void send_whohas(struct east_state *es, struct timeval *tv)$/;"	f
sendeapol	src/airbase-ng.c	/^    int sendeapol;$/;"	m	struct:options	file:
sendmsg	lib/csharp/MonoExample/NDesk-dbus/UnixNativeTransport.cs	/^			public static extern int sendmsg (int s, IntPtr msg, int flags);$/;"	m	class:NDesk.DBus.Transports.UnixSocket	file:
seq	test/pingreply.c	/^    unsigned short seq;$/;"	m	struct:icmp_hdr	file:
sequence	src/airbase-ng.c	/^    unsigned short  sequence;$/;"	m	struct:Fragment_list	file:
sequence	src/airtun-ng.c	/^    unsigned short  sequence;$/;"	m	struct:Fragment_list	file:
sequence_number	src/airdecloak-ng.h	/^    int sequence_number;$/;"	m	struct:packet_elt
serial	lib/csharp/MonoExample/NDesk-dbus/Connection.cs	/^		int serial = 0;$/;"	f	class:NDesk.DBus.Connection	file:
serv	src/airserv-ng.c	/^static void serv(struct sstate *ss, char *dev, int port, int chan)$/;"	f	file:
serve_file	scripts/dcrack.py	/^	def serve_file(s, fn):$/;"	m	class:ServerHandler
server	scripts/dcrack.py	/^def server():$/;"	f
sessionBus	lib/csharp/MonoExample/NDesk-dbus/Bus.cs	/^		static Bus sessionBus = null;$/;"	f	class:NDesk.DBus.Bus	file:
sessions	src/aircrack-ptw-lib.h	/^        PTW_session sessions[PTW_CONTROLSESSIONS];$/;"	m	struct:__anon41
sessions_collected	src/aircrack-ptw-lib.h	/^        int sessions_collected;$/;"	m	struct:__anon41
set	src/aireplay-ng.c	/^    unsigned char set;$/;"	m	struct:APt	file:
set	src/tkiptun-ng.c	/^    unsigned char set;$/;"	m	struct:APt	file:
setDictValue	lib/csharp/WirelessPanda/Coordinates.cs	/^        private void setDictValue(string elem, double value)$/;"	m	class:WirelessPanda.Coordinates	file:
setDictValue	lib/csharp/WirelessPanda/WirelessDevice.cs	/^        protected void setDictValue(string key, object value)$/;"	m	class:WirelessPanda.WirelessDevice
setW	src/sha1-git.c	89;"	d	file:
setW	src/sha1-git.c	91;"	d	file:
setW	src/sha1-git.c	93;"	d	file:
setWEP	src/airbase-ng.c	/^    int setWEP;$/;"	m	struct:options	file:
set_IVidx	src/airbase-ng.c	/^int set_IVidx(unsigned char* packet)$/;"	f
set_IVidx	src/airtun-ng.c	/^int set_IVidx(unsigned char* packet, int data_begin)$/;"	f
set_IVidx	src/packetforge-ng.c	/^int set_IVidx(unsigned char* packet)$/;"	f
set_bitrate	src/aireplay-ng.c	/^int set_bitrate(struct wif *wi, int rate)$/;"	f
set_bitrate	src/tkiptun-ng.c	/^int set_bitrate(struct wif *wi, int rate)$/;"	f
set_bssid	src/packetforge-ng.c	/^int set_bssid(unsigned char* packet)$/;"	f
set_chan	contrib/peek/omnipeek.c	/^static int set_chan(struct pstate *ps, int channel)$/;"	f	file:
set_chan	src/easside-ng.c	/^void set_chan(struct east_state *es)$/;"	f
set_chan	src/wesside-ng.c	/^static void set_chan(struct wstate *ws, int c)$/;"	f	file:
set_clear_arp	src/airbase-ng.c	/^int set_clear_arp(unsigned char *buf, unsigned char *smac, unsigned char *dmac) \/\/set first 22 bytes$/;"	f
set_clear_arp	src/aireplay-ng.c	/^int set_clear_arp(unsigned char *buf, unsigned char *smac, unsigned char *dmac) \/\/set first 22 bytes$/;"	f
set_clear_arp	src/tkiptun-ng.c	/^int set_clear_arp(unsigned char *buf, unsigned char *smac, unsigned char *dmac) \/\/set first 22 bytes$/;"	f
set_clear_ip	src/airbase-ng.c	/^int set_clear_ip(unsigned char *buf, int ip_len) \/\/set first 9 bytes$/;"	f
set_clear_ip	src/aireplay-ng.c	/^int set_clear_ip(unsigned char *buf, int ip_len) \/\/set first 9 bytes$/;"	f
set_clear_ip	src/tkiptun-ng.c	/^int set_clear_ip(unsigned char *buf, int ip_len) \/\/set first 9 bytes$/;"	f
set_dicts	src/aircrack-ng.c	/^int set_dicts(char* optargs)$/;"	f
set_dip	src/packetforge-ng.c	/^int set_dip(unsigned char* packet, int offset)$/;"	f
set_dmac	src/packetforge-ng.c	/^int set_dmac(unsigned char* packet)$/;"	f
set_dport	src/packetforge-ng.c	/^int set_dport(unsigned char* packet)$/;"	f
set_encryption_filter	src/airodump-ng.c	/^int set_encryption_filter(const char* input)$/;"	f
set_entry	src/airtun-ng.c	/^void set_entry(unsigned char *adress, unsigned char network) {$/;"	f
set_final_arp	src/airbase-ng.c	/^int set_final_arp(unsigned char *buf, unsigned char *mymac)$/;"	f
set_final_arp	src/aireplay-ng.c	/^int set_final_arp(unsigned char *buf, unsigned char *mymac)$/;"	f
set_final_ip	src/airbase-ng.c	/^int set_final_ip(unsigned char *buf, unsigned char *mymac)$/;"	f
set_final_ip	src/aireplay-ng.c	/^int set_final_ip(unsigned char *buf, unsigned char *mymac)$/;"	f
set_ip_ttl	src/packetforge-ng.c	/^int set_ip_ttl(unsigned char* packet)$/;"	f
set_ipid	src/packetforge-ng.c	/^int set_ipid(unsigned char* packet, int offset)$/;"	f
set_key	src/wpapsk.c	/^static void set_key(char *key, int index, wpapsk_password *in)$/;"	f	file:
set_mac	src/besside-ng.c	/^static void set_mac(void *mac)$/;"	f	file:
set_mac	src/easside-ng.c	/^void set_mac(struct east_state *es)$/;"	f
set_monitor	src/osdep/linux.c	/^int set_monitor( struct priv_linux *dev, char *iface, int fd )$/;"	f
set_node_complete	src/airdecloak-ng.c	/^void set_node_complete() {$/;"	f
set_prga	src/wesside-ng.c	/^static void set_prga(struct wstate *ws, unsigned char* iv,$/;"	f	file:
set_sip	src/packetforge-ng.c	/^int set_sip(unsigned char* packet, int offset)$/;"	f
set_smac	src/packetforge-ng.c	/^int set_smac(unsigned char* packet)$/;"	f
set_sport	src/packetforge-ng.c	/^int set_sport(unsigned char* packet)$/;"	f
set_tap_ip	src/easside-ng.c	/^void set_tap_ip(struct east_state *es)$/;"	f
set_tofromds	src/packetforge-ng.c	/^int set_tofromds(unsigned char* packet)$/;"	f
set_url	scripts/dcrack.py	/^def set_url():$/;"	f
setsockopt	lib/csharp/MonoExample/NDesk-dbus/UnixNativeTransport.cs	/^			protected static extern int setsockopt (int s, int optname, IntPtr optval, uint optlen);$/;"	m	class:NDesk.DBus.Transports.UnixSocket	file:
setup_card	src/airodump-ng.c	/^int setup_card(char *iface, struct wif **wis)$/;"	f
setup_dict	scripts/dcrack.py	/^def setup_dict(crack):$/;"	f
setup_internet	src/easside-ng.c	/^void setup_internet(struct east_state *es)$/;"	f
sha1_reverse	src/simd-intrinsics.c	/^void sha1_reverse(uint32_t *hash)$/;"	f
sha1_unreverse	src/simd-intrinsics.c	/^void sha1_unreverse(uint32_t *hash)$/;"	f
sha224_reverse	src/simd-intrinsics.c	/^void sha224_reverse(uint32_t *hash)$/;"	f
sha224_unreverse	src/simd-intrinsics.c	/^void sha224_unreverse(uint32_t *hash)$/;"	f
sha256_reverse	src/simd-intrinsics.c	/^void sha256_reverse(uint32_t *hash)$/;"	f
sha256_unreverse	src/simd-intrinsics.c	/^void sha256_unreverse()$/;"	f
sha384_reverse	src/simd-intrinsics.c	/^void sha384_reverse(ARCH_WORD_64 *hash)$/;"	f
sha384_unreverse	src/simd-intrinsics.c	/^void sha384_unreverse(ARCH_WORD_64 *hash)$/;"	f
sha512_reverse	src/simd-intrinsics.c	/^void sha512_reverse(uint64_t *hash)$/;"	f
sha512_unreverse	src/simd-intrinsics.c	/^void sha512_unreverse()$/;"	f
sharedkey	src/airbase-ng.c	/^    unsigned char sharedkey[3][4096]; \/* array for 3 packets with a size of \\$/;"	m	struct:options	file:
sharedkey	src/airodump-ng.h	/^    unsigned char sharedkey[3][4096]; \/* array for 3 packets with a size of \\$/;"	m	struct:globals
shasse2_cpuid	src/sha1-sse2.S	/^ shasse2_cpuid:$/;"	l
shasse2_data	src/sha1-sse2.S	/^ shasse2_data:$/;"	l
shasse2_ends	src/sha1-sse2.S	/^ shasse2_ends:$/;"	l
shasse2_init	src/sha1-sse2.S	/^ shasse2_init:$/;"	l
should_attack	src/besside-ng.c	/^static int should_attack(struct network *n)$/;"	f	file:
showASCII	src/aircrack-ng.h	/^	int showASCII;				 \/* Show ASCII version of*\/$/;"	m	struct:options
show_ack	src/airodump-ng.h	/^    int show_ack;$/;"	m	struct:globals
show_ap	src/airodump-ng.h	/^    int show_ap;$/;"	m	struct:globals
show_manufacturer	src/airodump-ng.h	/^    int show_manufacturer;$/;"	m	struct:globals
show_result	src/sha1-sse2.h	/^void show_result(char* key, unsigned char* pmk)$/;"	f
show_sta	src/airodump-ng.h	/^    int show_sta;$/;"	m	struct:globals
show_stats	src/airolib-ng.c	/^void show_stats(sqlite3* db, int precise) {$/;"	f
show_uptime	src/airodump-ng.h	/^    int show_uptime;$/;"	m	struct:globals
show_wep_stats	src/aircrack-ng.c	/^void show_wep_stats( int B, int force, PTW_tableentry table[PTW_KEYHSBYTES][PTW_n], int choices[KEYHSBYTES], int depth[KEYHSBYTES], int prod )$/;"	f
show_wep_stats	src/besside-ng.c	/^void show_wep_stats(int UNUSED(B), int UNUSED(force),$/;"	f
show_wep_stats	src/wesside-ng.c	/^void show_wep_stats( int B, int force, PTW_tableentry table[PTW_KEYHSBYTES][PTW_n], int choices[KEYHSBYTES], int depth[KEYHSBYTES], int prod, int keylimit )$/;"	f
show_wpa_stats	src/aircrack-ng.c	/^void show_wpa_stats( char *key, int keylen, unsigned char pmk[32], unsigned char ptk[64],$/;"	f
show_wps	src/airodump-ng.h	/^    int show_wps;$/;"	m	struct:globals
sigchild	src/wesside-ng.c	/^static void sigchild(int x)$/;"	f	file:
sigfigs	src/pcap.h	/^    uint32_t sigfigs;$/;"	m	struct:pcap_file_header
sighand	src/easside-ng.c	/^void sighand(int sig)$/;"	f
sighandler	src/airbase-ng.c	/^void sighandler( int signum )$/;"	f
sighandler	src/aircrack-ng.c	/^void sighandler( int signum )$/;"	f
sighandler	src/aireplay-ng.c	/^void sighandler( int signum )$/;"	f
sighandler	src/airodump-ng.c	/^void sighandler( int signum)$/;"	f
sighandler	src/airserv-ng.c	/^void sighandler( int signum )$/;"	f
sighandler	src/airtun-ng.c	/^void sighandler( int signum )$/;"	f
sighandler	src/tkiptun-ng.c	/^void sighandler( int signum )$/;"	f
signal_quality	src/airdecloak-ng.h	/^    int signal_quality;$/;"	m	struct:packet_elt
simdsize	src/aircrack-ng.h	/^	int simdsize;				\/* SIMD size		*\/$/;"	m	struct:_cpuinfo
singlechan	src/airodump-ng.h	/^    int singlechan;         \/* channel hopping set 1*\/$/;"	m	struct:globals
singlefreq	src/airodump-ng.h	/^    int singlefreq;         \/* frequency hopping: 1 *\/$/;"	m	struct:globals
sip	src/packetforge-ng.c	/^    unsigned char sip[4];$/;"	m	struct:options	file:
size	src/osdep/radiotap/radiotap_iter.h	/^	uint8_t align:4, size:4;$/;"	m	struct:radiotap_align_size
size	src/osdep/radiotap/radiotap_iter.h	/^	uint8_t align:4, size:4;$/;"	m	struct:radiotap_override
size	src/packetforge-ng.c	/^    int size;$/;"	m	struct:options	file:
size	src/sha1-git.h	/^	unsigned long long size;$/;"	m	struct:__anon14
sk_len	src/airbase-ng.c	/^    int sk_len;$/;"	m	struct:options	file:
sk_len	src/airodump-ng.h	/^    int sk_len;$/;"	m	struct:globals
sk_len2	src/airbase-ng.c	/^    int sk_len2;$/;"	m	struct:options	file:
sk_len2	src/airodump-ng.h	/^    int sk_len2;$/;"	m	struct:globals
sk_start	src/airbase-ng.c	/^    time_t sk_start;$/;"	m	struct:options	file:
sk_start	src/airodump-ng.h	/^    time_t sk_start;$/;"	m	struct:globals
ska_auth1	src/aireplay-ng.c	/^unsigned char ska_auth1[]     = "\\xb0\\x00\\x3a\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00"$/;"	v
ska_auth1	src/tkiptun-ng.c	/^unsigned char ska_auth1[]     = "\\xb0\\x00\\x3a\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00"$/;"	v
ska_auth3	src/aireplay-ng.c	/^unsigned char ska_auth3[4096] = "\\xb0\\x40\\x3a\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00"$/;"	v
ska_auth3	src/tkiptun-ng.c	/^unsigned char ska_auth3[4096] = "\\xb0\\x40\\x3a\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00"$/;"	v
skalen	src/airbase-ng.c	/^    int skalen;$/;"	m	struct:options	file:
skip_columns	src/airodump-ng.h	/^    int skip_columns;$/;"	m	struct:globals
smac	src/packetforge-ng.c	/^    unsigned char smac[6];$/;"	m	struct:options	file:
smandir	common.mak	/^smandir         = $(prefix)\/share\/man\/man8$/;"	m
snaplen	src/pcap.h	/^    uint32_t snaplen;$/;"	m	struct:pcap_file_header
snonce	src/crypto.h	/^    unsigned char snonce[32];           \/* supplicant nonce             *\/$/;"	m	struct:WPA_ST_info
snonce	src/include/eapol.h	/^    uint8_t snonce[32];   \/* supplicant nonce         *\/$/;"	m	struct:WPA_hdsk
socket	lib/csharp/MonoExample/NDesk-dbus/SocketTransport.cs	/^		protected Socket socket;$/;"	f	class:NDesk.DBus.Transports.SocketTransport
socket	lib/csharp/MonoExample/NDesk-dbus/UnixNativeTransport.cs	/^			protected static extern int socket (int domain, int type, int protocol);$/;"	m	class:NDesk.DBus.Transports.UnixSocket	file:
socket	lib/csharp/MonoExample/NDesk-dbus/UnixNativeTransport.cs	/^		protected UnixSocket socket;$/;"	f	class:NDesk.DBus.Transports.UnixNativeTransport
sort_by	src/airodump-ng.h	/^    int sort_by;$/;"	m	struct:globals
sort_inv	src/airodump-ng.h	/^    int sort_inv;$/;"	m	struct:globals
sorthelper	src/aircrack-ptw-lib.c	/^} sorthelper;$/;"	t	typeref:struct:__anon21	file:
source	src/airbase-ng.c	/^    unsigned char   source[6];$/;"	m	struct:Fragment_list	file:
source	src/airdecloak-ng.h	/^    unsigned char  source[6];$/;"	m	struct:packet_elt
source	src/airtun-ng.c	/^    unsigned char   source[6];$/;"	m	struct:Fragment_list	file:
sp	src/MD5_std.h	/^		MD5_block p, sp, pp, spp;$/;"	m	struct:__anon26::__anon28
speed	src/besside-ng.c	/^struct speed {$/;"	s	file:
speed_add	src/besside-ng.c	/^static void speed_add(struct speed *s)$/;"	f	file:
speed_calculate	src/besside-ng.c	/^static void speed_calculate(struct speed *s)$/;"	f	file:
sport	src/packetforge-ng.c	/^    unsigned short sport;$/;"	m	struct:options	file:
spp	src/MD5_std.h	/^		MD5_block p, sp, pp, spp;$/;"	m	struct:__anon26::__anon28
sprintcat	src/cpuid.c	/^void sprintcat(char *dest, const char *src, size_t len) {$/;"	f
sql_calcpmk	src/airolib-ng.c	/^void sql_calcpmk(sqlite3_context* context, int argc, sqlite3_value** values) {$/;"	f
sql_error	src/airolib-ng.c	/^void sql_error(sqlite3* db) {$/;"	f
sql_exec	src/airolib-ng.c	/^int sql_exec(sqlite3* db, const char *sql) {$/;"	f
sql_exec_cb	src/airolib-ng.c	/^int sql_exec_cb(sqlite3* db, const char *sql, void* callback, void* cb_arg) {$/;"	f
sql_exportcow	src/airolib-ng.c	/^int sql_exportcow(void* arg, int ccount, char** values, char** columnnames) {$/;"	f
sql_prepare	src/airolib-ng.c	/^int sql_prepare(sqlite3 *db, const char *sql, sqlite3_stmt **ppStmt, int wait) {$/;"	f
sql_stdout	src/airolib-ng.c	/^int sql_stdout(sqlite3* db, const char* sql, int* rowcount) {$/;"	f
sql_step	src/airolib-ng.c	/^int sql_step(sqlite3_stmt* stmt, int wait) {$/;"	f
sql_verify_essid	src/airolib-ng.c	/^void sql_verify_essid(sqlite3_context* context, int argc, sqlite3_value** values) {$/;"	f
sql_verify_passwd	src/airolib-ng.c	/^void sql_verify_passwd(sqlite3_context* context, int argc, sqlite3_value** values) {$/;"	f
sql_wpacallback	src/aircrack-ng.c	/^int sql_wpacallback(void* arg, int ccount, char** values, char** columnnames ) {$/;"	f
sqlite_regexp	src/airolib-ng.c	/^void sqlite_regexp(sqlite3_context* context, int argc, sqlite3_value** values) {$/;"	f
srand	src/common.h	45;"	d
srand	src/common.h	46;"	d
src	test/pingreply.c	/^    unsigned char src[4];$/;"	m	struct:ip_hdr	file:
src	test/pingreply.c	/^    unsigned char src[6];$/;"	m	struct:eth_hdr	file:
srcbuf	src/airbase-ng.c	/^unsigned char srcbuf[4096];$/;"	v
srcbuf	src/aireplay-ng.c	/^unsigned char srcbuf[4096];$/;"	v
srcbuf	src/airtun-ng.c	/^unsigned char srcbuf[4096];$/;"	v
srcbuf	src/tkiptun-ng.c	/^unsigned char srcbuf[4096];$/;"	v
ss_clients	src/airserv-ng.c	/^	struct client	ss_clients;$/;"	m	struct:sstate	typeref:struct:sstate::client	file:
ss_level	src/airserv-ng.c	/^	int		ss_level;$/;"	m	struct:sstate	file:
ss_s	src/airserv-ng.c	/^	int		ss_s;$/;"	m	struct:sstate	file:
ss_wi	src/airserv-ng.c	/^	struct wif	*ss_wi;$/;"	m	struct:sstate	typeref:struct:sstate::wif	file:
ssid	src/aircrack-ng.h	/^	uint8_t ssid[32];$/;"	m	struct:hashdb_head
ssid_length	src/airbase-ng.c	/^    int ssid_length[NB_PRB]; \/* ssid lengths ring buffer  *\/$/;"	m	struct:ST_info	file:
ssid_length	src/airodump-ng.h	/^    int ssid_length;          \/* length of ssid           *\/$/;"	m	struct:AP_info
ssid_length	src/airodump-ng.h	/^    int ssid_length[NB_PRB]; \/* ssid lengths ring buffer  *\/$/;"	m	struct:ST_info
ssid_length	src/ivstools.c	/^    int ssid_length;          \/* length of ssid           *\/$/;"	m	struct:AP_info	file:
ssidlen	src/aircrack-ng.h	/^	uint8_t ssidlen;$/;"	m	struct:hashdb_head
sstate	src/airserv-ng.c	/^static struct sstate {$/;"	s	file:
st_1st	src/airbase-ng.c	/^    struct ST_info *st_1st, *st_end;$/;"	m	struct:options	typeref:struct:options::ST_info	file:
st_1st	src/aircrack-ng.h	/^	struct ST_info *st_1st;		 \/* linked list of stations      *\/$/;"	m	struct:AP_info	typeref:struct:AP_info::ST_info
st_1st	src/airodump-ng.h	/^    struct ST_info *st_1st, *st_end;$/;"	m	struct:globals	typeref:struct:globals::ST_info
st_1st	src/airtun-ng.c	/^struct WPA_ST_info *st_1st = NULL;$/;"	v	typeref:struct:WPA_ST_info
st_1st	src/ivstools.c	/^    struct ST_info *st_1st, *st_end;$/;"	m	struct:globals	typeref:struct:globals::ST_info	file:
st_end	src/airbase-ng.c	/^    struct ST_info *st_1st, *st_end;$/;"	m	struct:options	typeref:struct:options::	file:
st_end	src/airodump-ng.h	/^    struct ST_info *st_1st, *st_end;$/;"	m	struct:globals	typeref:struct:globals::
st_end	src/ivstools.c	/^    struct ST_info *st_1st, *st_end;$/;"	m	struct:globals	typeref:struct:globals::	file:
start	src/wesside-ng.c	/^static void start(struct wstate *ws, char *dev)$/;"	f	file:
startAirdop	scripts/airdrop-ng/airdrop-ng	/^def startAirdop():$/;"	f
start_flood	src/besside-ng.c	/^static void start_flood(struct network *n)$/;"	f	file:
start_print_ap	src/airodump-ng.h	/^    int start_print_ap;$/;"	m	struct:globals
start_print_sta	src/airodump-ng.h	/^    int start_print_sta;$/;"	m	struct:globals
start_reader	src/osdep/cygwin_tap.c	/^static int start_reader(struct tip_cygwin *priv)$/;"	f	file:
starterBus	lib/csharp/MonoExample/NDesk-dbus/Bus.cs	/^		static Bus starterBus = null;$/;"	f	class:NDesk.DBus.Bus	file:
state	src/aircrack-ptw-lib.c	157;"	d	file:
state	src/aircrack-ptw-lib.c	271;"	d	file:
state	src/airodump-ng.h	/^    unsigned char state;      \/* Current WPS state *\/$/;"	m	struct:WPS_info
state	src/besside-ng.c	/^struct state {$/;"	s	file:
state	src/include/eapol.h	/^    uint8_t state;        \/* handshake completion     *\/$/;"	m	struct:WPA_hdsk
state	src/osdep/linux.c	/^struct nl80211_state state;$/;"	v	typeref:struct:nl80211_state
stats	src/airdecap-ng.c	/^stats;$/;"	v	typeref:struct:decap_stats
stats	src/airdecloak-ng.c	/^struct decloak_stats stats;$/;"	v	typeref:struct:decloak_stats
stats_caps	src/besside-ng-crawler.c	/^uint32_t stats_caps = 0;$/;"	v
stats_dirs	src/besside-ng-crawler.c	/^uint32_t stats_dirs = 0;$/;"	v
stats_eapols	src/besside-ng-crawler.c	/^uint32_t stats_eapols = 0;$/;"	v
stats_files	src/besside-ng-crawler.c	/^uint32_t stats_files = 0;$/;"	v
stats_networks	src/besside-ng-crawler.c	/^uint32_t stats_networks = 0;$/;"	v
stats_noncaps	src/besside-ng-crawler.c	/^uint32_t stats_noncaps = 0;$/;"	v
stats_packets	src/besside-ng-crawler.c	/^uint32_t stats_packets = 0;$/;"	v
status_format	src/airdecloak-ng.c	/^char * status_format(int status) {$/;"	f
stdin_dict	src/aircrack-ng.h	/^	int stdin_dict;$/;"	m	struct:options
stmac	src/airbase-ng.c	/^    unsigned char stmac[6];  \/* the client's MAC address  *\/$/;"	m	struct:ST_info	file:
stmac	src/aircrack-ng.h	/^	unsigned char stmac[6];		 \/* client MAC address           *\/$/;"	m	struct:ST_info
stmac	src/airodump-ng.h	/^    unsigned char stmac[6];  \/* the client's MAC address  *\/$/;"	m	struct:ST_info
stmac	src/crypto.h	/^    unsigned char stmac[6];             \/* supplicant MAC               *\/$/;"	m	struct:WPA_ST_info
stmac	src/include/eapol.h	/^    uint8_t stmac[6];     \/* supplicant MAC           *\/$/;"	m	struct:WPA_hdsk
stmac	src/ivstools.c	/^    unsigned char stmac[6];  \/* the client's MAC address  *\/$/;"	m	struct:ST_info	file:
stmt_stdout	src/airolib-ng.c	/^int stmt_stdout(sqlite3_stmt* stmt, int* rowcount) {$/;"	f
stop_reader	src/osdep/cygwin_tap.c	/^static int stop_reader(struct tip_cygwin *priv)$/;"	f	file:
store_bad	src/airdecap-ng.c	/^    int store_bad;$/;"	m	struct:options	file:
store_wpa_handshake	src/airbase-ng.c	/^int store_wpa_handshake(struct ST_info *st_cur)$/;"	f
str	src/osdep/cygwin.c	41;"	d	file:
str2mac	src/easside-ng.c	/^int str2mac(unsigned char *mac, char *str)$/;"	f
str2mac	src/wesside-ng.c	/^static void str2mac(unsigned char* dst, char* mac)$/;"	f	file:
str_alloc_copy	src/memory.h	153;"	d
str_alloc_copy	src/memory.h	162;"	d
str_alloc_copy_func	src/memory.c	/^char *str_alloc_copy_func(char *src$/;"	f
strbuf	src/airbase-ng.c	/^char strbuf[512];$/;"	v
strbuf	src/aireplay-ng.c	/^char strbuf[512];$/;"	v
strbuf	src/airtun-ng.c	/^char strbuf[512];$/;"	v
strbuf	src/tkiptun-ng.c	/^char strbuf[512];$/;"	v
strchr_n	src/airodump-ng.c	/^static char *strchr_n(char *str, int c, size_t n)$/;"	f	file:
strdup	src/memdbg.h	144;"	d
strdup	src/memdbg.h	156;"	d
strdup	src/memory.h	188;"	d
strdup_MSVC	src/memory.c	/^char *strdup_MSVC(const char *str)$/;"	f
stream	lib/csharp/MonoExample/NDesk-dbus/MessageWriter.cs	/^		protected MemoryStream stream;$/;"	f	class:NDesk.DBus.MessageWriter
strip_spaces	src/besside-ng.c	/^static char *strip_spaces(char *p)$/;"	f	file:
stristr	src/osdep/cygwin.c	/^char *stristr(const char *String, const char *Pattern)$/;"	f
stuff_for_net	src/wesside-ng.c	/^static void stuff_for_net(struct wstate *ws, struct ieee80211_frame* wh, int rd)$/;"	f	file:
stuff_for_us	src/wesside-ng.c	/^static void stuff_for_us(struct wstate *ws, struct ieee80211_frame* wh, int len)$/;"	f	file:
subGraph	scripts/airgraph-ng/graphviz/lib_Airgraphviz.py	/^def subGraph(items,graphName,graphType,tracked,parse): #OLDNAME subgraph$/;"	f
subRoundX	src/sha1-sse2.S	/^#define subRoundX(a, b, c, d, e, f, k, data)    \\$/;"	d
subRoundY	src/sha1-sse2.S	/^#define subRoundY(a, b, c, d, e, f, k, data)    \\$/;"	d
subns	src/osdep/radiotap/radiotap_iter.h	/^	uint8_t subns;$/;"	m	struct:ieee80211_radiotap_namespace
swap_endian64_mask	src/pseudo_intrinsics.h	380;"	d
swap_endian64_mask	src/pseudo_intrinsics.h	510;"	d
swap_endian64_mask	src/sse-intrinsics.c	176;"	d	file:
swap_endian_mask	src/pseudo_intrinsics.h	376;"	d
swap_endian_mask	src/pseudo_intrinsics.h	506;"	d
swap_endian_mask	src/sse-intrinsics.c	174;"	d	file:
swap_ra_ta	src/airtun-ng.c	/^void swap_ra_ta(unsigned char *h80211) {$/;"	f
sysfs_inject	src/osdep/linux.c	/^    int sysfs_inject;$/;"	m	struct:priv_linux	file:
systemBus	lib/csharp/MonoExample/NDesk-dbus/Bus.cs	/^		static Bus systemBus = null;$/;"	f	class:NDesk.DBus.Bus	file:
szaDriverTypes	src/osdep/linux.c	/^static const char * szaDriverTypes[] = {$/;"	v	file:
t_arg	src/besside-ng.c	/^	void		*t_arg;$/;"	m	struct:timer	file:
t_begin	src/aircrack-ng.c	/^struct timeval t_begin;			 \/* time at start of attack      *\/$/;"	v	typeref:struct:timeval
t_begin	src/wesside-ng.c	/^struct timeval t_begin;			 \/* time at start of attack      *\/$/;"	v	typeref:struct:timeval
t_cb	src/besside-ng.c	/^	timer_cb	t_cb;$/;"	m	struct:timer	file:
t_crc	src/crypto.h	/^    unsigned long t_crc;        \/* last ToDS   frame CRC        *\/$/;"	m	struct:WPA_ST_info
t_dictup	src/aircrack-ng.c	/^struct timeval t_dictup;		\/* next dictionary total read   *\/$/;"	v	typeref:struct:timeval
t_kprev	src/aircrack-ng.c	/^struct timeval t_kprev;			 \/* time at start of window      *\/$/;"	v	typeref:struct:timeval
t_next	src/besside-ng.c	/^	struct timer	*t_next;$/;"	m	struct:timer	typeref:struct:timer::timer	file:
t_stats	src/aircrack-ng.c	/^struct timeval t_stats;			 \/* time since last update       *\/$/;"	v	typeref:struct:timeval
t_stats	src/wesside-ng.c	/^struct timeval t_stats;			 \/* time since last update       *\/$/;"	v	typeref:struct:timeval
t_tv	src/besside-ng.c	/^	struct timeval	t_tv;$/;"	m	struct:timer	typeref:struct:timer::timeval	file:
table	src/aircrack-ptw-lib.h	/^        PTW_tableentry table[PTW_KEYHSBYTES][PTW_n];$/;"	m	struct:__anon41
target	src/aircrack-ng.h	/^	int target;					 \/* flag set if AP is a target   *\/$/;"	m	struct:AP_info
tc_guid	src/osdep/cygwin_tap.c	/^	char		tc_guid[256];$/;"	m	struct:tip_cygwin	file:
tc_h	src/osdep/cygwin_tap.c	/^	HANDLE		tc_h;$/;"	m	struct:tip_cygwin	file:
tc_key	src/osdep/cygwin_tap.c	/^	HKEY		tc_key;$/;"	m	struct:tip_cygwin	file:
tc_mtx	src/osdep/cygwin_tap.c	/^	pthread_mutex_t	tc_mtx;$/;"	m	struct:tip_cygwin	file:
tc_name	src/osdep/cygwin_tap.c	/^	char		tc_name[MAX_IFACE_NAME];$/;"	m	struct:tip_cygwin	file:
tc_pipe	src/osdep/cygwin_tap.c	/^	int		tc_pipe[2]; \/* reader -> parent *\/$/;"	m	struct:tip_cygwin	file:
tc_reader	src/osdep/cygwin_tap.c	/^	pthread_t	tc_reader;$/;"	m	struct:tip_cygwin	file:
tc_running	src/osdep/cygwin_tap.c	/^	volatile int	tc_running;$/;"	m	struct:tip_cygwin	file:
tcp_test	src/aireplay-ng.c	/^int tcp_test(const char* ip_str, const short port)$/;"	f
test	test/cryptounittest/tests.h	/^int test (unsigned char *computed, unsigned char *expected, int length, char* name)$/;"	f
textcolor	src/airodump-ng.c	/^void textcolor(int attr, int fg, int bg)$/;"	f
textcolor_bg	src/airodump-ng.c	/^void textcolor_bg(int bg)$/;"	f
textcolor_fg	src/airodump-ng.c	/^void textcolor_fg(int fg)$/;"	f
textstyle	src/airodump-ng.c	/^void textstyle(int attr)$/;"	f
tf_destroy	src/osdep/darwin_tap.c	/^    int        tf_destroy;$/;"	m	struct:tip_darwin	file:
tf_destroy	src/osdep/freebsd_tap.c	/^	int		tf_destroy;$/;"	m	struct:tip_fbsd	file:
tf_fd	src/osdep/darwin_tap.c	/^    int        tf_fd;$/;"	m	struct:tip_darwin	file:
tf_fd	src/osdep/freebsd_tap.c	/^	int		tf_fd;$/;"	m	struct:tip_fbsd	file:
tf_ifr	src/osdep/darwin_tap.c	/^    struct ifreq    tf_ifr;$/;"	m	struct:tip_darwin	typeref:struct:tip_darwin::ifreq	file:
tf_ifr	src/osdep/freebsd_tap.c	/^	struct ifreq	tf_ifr;$/;"	m	struct:tip_fbsd	typeref:struct:tip_fbsd::ifreq	file:
tf_ioctls	src/osdep/darwin_tap.c	/^    int        tf_ioctls;$/;"	m	struct:tip_darwin	file:
tf_ioctls	src/osdep/freebsd_tap.c	/^	int		tf_ioctls;$/;"	m	struct:tip_fbsd	file:
tf_name	src/osdep/darwin_tap.c	/^    char        tf_name[MAX_IFACE_NAME];$/;"	m	struct:tip_darwin	file:
tf_name	src/osdep/freebsd_tap.c	/^	char		tf_name[MAX_IFACE_NAME];$/;"	m	struct:tip_fbsd	file:
this_arg	src/osdep/radiotap/radiotap_iter.h	/^	unsigned char *this_arg;$/;"	m	struct:ieee80211_radiotap_iterator
this_arg_index	src/osdep/radiotap/radiotap_iter.h	/^	int this_arg_index;$/;"	m	struct:ieee80211_radiotap_iterator
this_arg_size	src/osdep/radiotap/radiotap_iter.h	/^	int this_arg_size;$/;"	m	struct:ieee80211_radiotap_iterator
thiszone	src/pcap.h	/^    int32_t thiszone;$/;"	m	struct:pcap_file_header
thread	src/aircrack-ng.h	/^	int	thread;						\/* number of this thread *\/$/;"	m	struct:WPA_data
threadid	src/aircrack-ng.h	/^	int	threadid;						\/* id of this thread *\/$/;"	m	struct:WPA_data
threadxnt	src/wpapsk.h	/^int threadxnt;$/;"	v
ti_alloc	src/osdep/osdep.c	/^struct tif *ti_alloc(int sz)$/;"	f
ti_close	src/osdep/osdep.c	/^void ti_close(struct tif *ti)$/;"	f
ti_close	src/osdep/osdep.h	/^	void	(*ti_close)(struct tif *ti);$/;"	m	struct:tif
ti_close_cygwin	src/osdep/cygwin_tap.c	/^static void ti_close_cygwin(struct tif *ti)$/;"	f	file:
ti_close_darwin	src/osdep/darwin_tap.c	/^static void ti_close_darwin(struct tif *ti) {$/;"	f	file:
ti_close_fbsd	src/osdep/freebsd_tap.c	/^static void ti_close_fbsd(struct tif *ti)$/;"	f	file:
ti_close_linux	src/osdep/linux_tap.c	/^static void ti_close_linux(struct tif *ti)$/;"	f	file:
ti_close_nbsd	src/osdep/netbsd_tap.c	/^static void ti_close_nbsd(struct tif *ti)$/;"	f	file:
ti_close_obsd	src/osdep/openbsd_tap.c	/^static void ti_close_obsd(struct tif *ti)$/;"	f	file:
ti_destroy	src/osdep/darwin_tap.c	/^static void ti_destroy(struct tip_darwin *priv) {$/;"	f	file:
ti_destroy	src/osdep/freebsd_tap.c	/^static void ti_destroy(struct tip_fbsd *priv)$/;"	f	file:
ti_destroy	src/osdep/netbsd_tap.c	/^static void ti_destroy(struct tip_nbsd *priv)$/;"	f	file:
ti_destroy	src/osdep/openbsd_tap.c	/^static void ti_destroy(struct tip_obsd *priv)$/;"	f	file:
ti_do_free	src/osdep/cygwin_tap.c	/^static void ti_do_free(struct tif *ti)$/;"	f	file:
ti_do_free	src/osdep/darwin_tap.c	/^static void ti_do_free(struct tif *ti) {$/;"	f	file:
ti_do_free	src/osdep/freebsd_tap.c	/^static void ti_do_free(struct tif *ti)$/;"	f	file:
ti_do_free	src/osdep/linux_tap.c	/^static void ti_do_free(struct tif *ti)$/;"	f	file:
ti_do_free	src/osdep/netbsd_tap.c	/^static void ti_do_free(struct tif *ti)$/;"	f	file:
ti_do_free	src/osdep/openbsd_tap.c	/^static void ti_do_free(struct tif *ti)$/;"	f	file:
ti_do_io	src/osdep/cygwin_tap.c	/^static int ti_do_io(struct tip_cygwin *priv, void *buf, int len,$/;"	f	file:
ti_do_io_lock	src/osdep/cygwin_tap.c	/^static int ti_do_io_lock(struct tip_cygwin *priv, void *buf, int len,$/;"	f	file:
ti_do_open_cygwin	src/osdep/cygwin_tap.c	/^static int ti_do_open_cygwin(struct tip_cygwin *priv)$/;"	f	file:
ti_do_open_darwin	src/osdep/darwin_tap.c	/^static int ti_do_open_darwin(struct tif *ti, char *name) {$/;"	f	file:
ti_do_open_fbsd	src/osdep/freebsd_tap.c	/^static int ti_do_open_fbsd(struct tif *ti, char *name)$/;"	f	file:
ti_do_open_linux	src/osdep/linux_tap.c	/^static int ti_do_open_linux(struct tif *ti, char *name)$/;"	f	file:
ti_do_open_nbsd	src/osdep/netbsd_tap.c	/^static int ti_do_open_nbsd(struct tif *ti, char *name)$/;"	f	file:
ti_do_open_obsd	src/osdep/openbsd_tap.c	/^static int ti_do_open_obsd(struct tif *ti, char *name)$/;"	f	file:
ti_do_reset	src/osdep/cygwin_tap.c	/^static int ti_do_reset(HDEVINFO *hdi, SP_DEVINFO_DATA *did)$/;"	f	file:
ti_fd	src/osdep/osdep.c	/^int ti_fd(struct tif *ti)$/;"	f
ti_fd	src/osdep/osdep.h	/^	int	(*ti_fd)(struct tif *ti);$/;"	m	struct:tif
ti_fd_cygwin	src/osdep/cygwin_tap.c	/^static int ti_fd_cygwin(struct tif *ti)$/;"	f	file:
ti_fd_darwin	src/osdep/darwin_tap.c	/^static int ti_fd_darwin(struct tif *ti) {$/;"	f	file:
ti_fd_fbsd	src/osdep/freebsd_tap.c	/^static int ti_fd_fbsd(struct tif *ti)$/;"	f	file:
ti_fd_linux	src/osdep/linux_tap.c	/^static int ti_fd_linux(struct tif *ti)$/;"	f	file:
ti_fd_nbsd	src/osdep/netbsd_tap.c	/^static int ti_fd_nbsd(struct tif *ti)$/;"	f	file:
ti_fd_obsd	src/osdep/openbsd_tap.c	/^static int ti_fd_obsd(struct tif *ti)$/;"	f	file:
ti_get_devs_component	src/osdep/cygwin_tap.c	/^static int ti_get_devs_component(struct tip_cygwin *priv, char *name)$/;"	f	file:
ti_get_mtu	src/osdep/osdep.c	/^int ti_get_mtu(struct tif *ti)$/;"	f
ti_get_mtu	src/osdep/osdep.h	/^	int	(*ti_get_mtu)(struct tif *ti);$/;"	m	struct:tif
ti_get_mtu_linux	src/osdep/linux_tap.c	/^static int ti_get_mtu_linux(struct tif *ti)$/;"	f	file:
ti_is_us	src/osdep/cygwin_tap.c	/^static int ti_is_us(struct tip_cygwin *priv, HDEVINFO *hdi,$/;"	f	file:
ti_media_status	src/osdep/cygwin_tap.c	/^static int ti_media_status(struct tip_cygwin *priv, int on)$/;"	f	file:
ti_mtu	src/airbase-ng.c	/^    int ti_mtu;         \/\/MTU of tun\/tap interface$/;"	m	struct:options	file:
ti_name	src/osdep/osdep.c	/^char *ti_name(struct tif *ti)$/;"	f
ti_name	src/osdep/osdep.h	/^	char	*(*ti_name)(struct tif *ti);$/;"	m	struct:tif
ti_name_cygwin	src/osdep/cygwin_tap.c	/^static char *ti_name_cygwin(struct tif *ti)$/;"	f	file:
ti_name_darwin	src/osdep/darwin_tap.c	/^static char *ti_name_darwin(struct tif *ti) {$/;"	f	file:
ti_name_fbsd	src/osdep/freebsd_tap.c	/^static char *ti_name_fbsd(struct tif *ti)$/;"	f	file:
ti_name_linux	src/osdep/linux_tap.c	/^static char *ti_name_linux(struct tif *ti)$/;"	f	file:
ti_name_nbsd	src/osdep/netbsd_tap.c	/^static char *ti_name_nbsd(struct tif *ti)$/;"	f	file:
ti_name_obsd	src/osdep/openbsd_tap.c	/^static char *ti_name_obsd(struct tif *ti)$/;"	f	file:
ti_open	src/osdep/cygwin_tap.c	/^struct tif *ti_open(char *iface)$/;"	f
ti_open	src/osdep/darwin_tap.c	/^struct tif *ti_open(char *iface) {$/;"	f
ti_open	src/osdep/dummy_tap.c	/^struct tif *ti_open(char *iface)$/;"	f
ti_open	src/osdep/freebsd_tap.c	/^struct tif *ti_open(char *iface)$/;"	f
ti_open	src/osdep/linux_tap.c	/^struct tif *ti_open(char *iface)$/;"	f
ti_open	src/osdep/netbsd_tap.c	/^struct tif *ti_open(char *iface)$/;"	f
ti_open	src/osdep/openbsd_tap.c	/^struct tif *ti_open(char *iface)$/;"	f
ti_open_cygwin	src/osdep/cygwin_tap.c	/^static struct tif *ti_open_cygwin(char *iface)$/;"	f	file:
ti_open_darwin	src/osdep/darwin_tap.c	/^static struct tif *ti_open_darwin(char *iface) {$/;"	f	file:
ti_open_dummy	src/osdep/dummy_tap.c	/^static struct tif *ti_open_dummy(char *iface)$/;"	f	file:
ti_open_fbsd	src/osdep/freebsd_tap.c	/^static struct tif *ti_open_fbsd(char *iface)$/;"	f	file:
ti_open_linux	src/osdep/linux_tap.c	/^static struct tif *ti_open_linux(char *iface)$/;"	f	file:
ti_open_nbsd	src/osdep/netbsd_tap.c	/^static struct tif *ti_open_nbsd(char *iface)$/;"	f	file:
ti_open_obsd	src/osdep/openbsd_tap.c	/^static struct tif *ti_open_obsd(char *iface)$/;"	f	file:
ti_priv	src/osdep/osdep.c	/^void *ti_priv(struct tif *ti)$/;"	f
ti_priv	src/osdep/osdep.h	/^	void	*ti_priv;$/;"	m	struct:tif
ti_rate	src/osdep/osdep.h	/^        unsigned int     ti_rate;$/;"	m	struct:tx_info
ti_read	src/osdep/osdep.c	/^int ti_read(struct tif *ti, void *buf, int len)$/;"	f
ti_read	src/osdep/osdep.h	/^	int	(*ti_read)(struct tif *ti, void *buf, int len);$/;"	m	struct:tif
ti_read_cygwin	src/osdep/cygwin_tap.c	/^static int ti_read_cygwin(struct tif *ti, void *buf, int len)$/;"	f	file:
ti_read_darwin	src/osdep/darwin_tap.c	/^static int ti_read_darwin(struct tif *ti, void *buf, int len) {$/;"	f	file:
ti_read_fbsd	src/osdep/freebsd_tap.c	/^static int ti_read_fbsd(struct tif *ti, void *buf, int len)$/;"	f	file:
ti_read_linux	src/osdep/linux_tap.c	/^static int ti_read_linux(struct tif *ti, void *buf, int len)$/;"	f	file:
ti_read_nbsd	src/osdep/netbsd_tap.c	/^static int ti_read_nbsd(struct tif *ti, void *buf, int len)$/;"	f	file:
ti_read_obsd	src/osdep/openbsd_tap.c	/^static int ti_read_obsd(struct tif *ti, void *buf, int len)$/;"	f	file:
ti_read_packet	src/osdep/cygwin_tap.c	/^static int ti_read_packet(struct tip_cygwin *priv, void *buf, int len)$/;"	f	file:
ti_read_reg	src/osdep/cygwin_tap.c	/^static int ti_read_reg(struct tip_cygwin *priv, char *key, char *res, int len)$/;"	f	file:
ti_reader	src/osdep/cygwin_tap.c	/^static void *ti_reader(void *arg)$/;"	f	file:
ti_reset	src/osdep/cygwin_tap.c	/^static int ti_reset(struct tip_cygwin *priv)$/;"	f	file:
ti_reset_state	src/osdep/cygwin_tap.c	/^static int ti_reset_state(HDEVINFO *hdi, SP_DEVINFO_DATA *did, DWORD state)$/;"	f	file:
ti_restart	src/osdep/cygwin_tap.c	/^static int ti_restart(struct tip_cygwin *priv)$/;"	f	file:
ti_set_ip	src/osdep/osdep.c	/^int ti_set_ip(struct tif *ti, struct in_addr *ip)$/;"	f
ti_set_ip	src/osdep/osdep.h	/^	int	(*ti_set_ip)(struct tif *ti, struct in_addr *ip);$/;"	m	struct:tif
ti_set_ip_cygwin	src/osdep/cygwin_tap.c	/^static int ti_set_ip_cygwin(struct tif *ti, struct in_addr *ip)$/;"	f	file:
ti_set_ip_darwin	src/osdep/darwin_tap.c	/^static int ti_set_ip_darwin(struct tif *ti, struct in_addr *ip) {$/;"	f	file:
ti_set_ip_fbsd	src/osdep/freebsd_tap.c	/^static int ti_set_ip_fbsd(struct tif *ti, struct in_addr *ip)$/;"	f	file:
ti_set_ip_linux	src/osdep/linux_tap.c	/^static int ti_set_ip_linux(struct tif *ti, struct in_addr *ip)$/;"	f	file:
ti_set_ip_nbsd	src/osdep/netbsd_tap.c	/^static int ti_set_ip_nbsd(struct tif *ti, struct in_addr *ip)$/;"	f	file:
ti_set_ip_obsd	src/osdep/openbsd_tap.c	/^static int ti_set_ip_obsd(struct tif *ti, struct in_addr *ip)$/;"	f	file:
ti_set_mac	src/osdep/osdep.c	/^int ti_set_mac(struct tif *ti, unsigned char *mac)$/;"	f
ti_set_mac	src/osdep/osdep.h	/^	int	(*ti_set_mac)(struct tif *ti, unsigned char *mac);$/;"	m	struct:tif
ti_set_mac_cygwin	src/osdep/cygwin_tap.c	/^static int ti_set_mac_cygwin(struct tif *ti, unsigned char *mac)$/;"	f	file:
ti_set_mac_darwin	src/osdep/darwin_tap.c	/^static int ti_set_mac_darwin(struct tif *ti, unsigned char *mac) {$/;"	f	file:
ti_set_mac_fbsd	src/osdep/freebsd_tap.c	/^static int ti_set_mac_fbsd(struct tif *ti, unsigned char *mac)$/;"	f	file:
ti_set_mac_linux	src/osdep/linux_tap.c	/^static int ti_set_mac_linux(struct tif *ti, unsigned char *mac)$/;"	f	file:
ti_set_mac_nbsd	src/osdep/netbsd_tap.c	/^static int ti_set_mac_nbsd(struct tif *ti, unsigned char *mac)$/;"	f	file:
ti_set_mac_obsd	src/osdep/openbsd_tap.c	/^static int ti_set_mac_obsd(struct tif *ti, unsigned char *mac)$/;"	f	file:
ti_set_mtu	src/osdep/osdep.c	/^int ti_set_mtu(struct tif *ti, int mtu)$/;"	f
ti_set_mtu	src/osdep/osdep.h	/^	int	(*ti_set_mtu)(struct tif *ti, int mtu);$/;"	m	struct:tif
ti_set_mtu_cygwin	src/osdep/cygwin_tap.c	/^static int ti_set_mtu_cygwin(struct tif *ti, int mtu)$/;"	f	file:
ti_set_mtu_darwin	src/osdep/darwin_tap.c	/^static int ti_set_mtu_darwin(struct tif *ti, int mtu) {$/;"	f	file:
ti_set_mtu_fbsd	src/osdep/freebsd_tap.c	/^static int ti_set_mtu_fbsd(struct tif *ti, int mtu)$/;"	f	file:
ti_set_mtu_linux	src/osdep/linux_tap.c	/^static int ti_set_mtu_linux(struct tif *ti, int mtu)$/;"	f	file:
ti_set_mtu_nbsd	src/osdep/netbsd_tap.c	/^static int ti_set_mtu_nbsd(struct tif *ti, int mtu)$/;"	f	file:
ti_set_mtu_obsd	src/osdep/openbsd_tap.c	/^static int ti_set_mtu_obsd(struct tif *ti, int mtu)$/;"	f	file:
ti_try_open	src/osdep/cygwin_tap.c	/^static int ti_try_open(struct tip_cygwin *priv, char *guid)$/;"	f	file:
ti_wait_complete	src/osdep/cygwin_tap.c	/^static int ti_wait_complete(struct tip_cygwin *priv, OVERLAPPED *o)$/;"	f	file:
ti_write	src/osdep/osdep.c	/^int ti_write(struct tif *ti, void *buf, int len)$/;"	f
ti_write	src/osdep/osdep.h	/^	int	(*ti_write)(struct tif *ti, void *buf, int len);$/;"	m	struct:tif
ti_write_cygwin	src/osdep/cygwin_tap.c	/^static int ti_write_cygwin(struct tif *ti, void *buf, int len)$/;"	f	file:
ti_write_darwin	src/osdep/darwin_tap.c	/^static int ti_write_darwin(struct tif *ti, void *buf, int len) {$/;"	f	file:
ti_write_fbsd	src/osdep/freebsd_tap.c	/^static int ti_write_fbsd(struct tif *ti, void *buf, int len)$/;"	f	file:
ti_write_linux	src/osdep/linux_tap.c	/^static int ti_write_linux(struct tif *ti, void *buf, int len)$/;"	f	file:
ti_write_nbsd	src/osdep/netbsd_tap.c	/^static int ti_write_nbsd(struct tif *ti, void *buf, int len)$/;"	f	file:
ti_write_obsd	src/osdep/openbsd_tap.c	/^static int ti_write_obsd(struct tif *ti, void *buf, int len)$/;"	f	file:
tid	src/aircrack-ng.c	/^pthread_t tid[MAX_THREADS];$/;"	v
tif	src/osdep/osdep.h	/^struct tif {$/;"	s
tim_bitctl	src/include/ieee80211.h	/^	u_int8_t	tim_bitctl;		\/* bitmap control *\/$/;"	m	struct:ieee80211_tim_ie
tim_bitmap	src/include/ieee80211.h	/^	u_int8_t	tim_bitmap[1];		\/* variable-length bitmap *\/$/;"	m	struct:ieee80211_tim_ie
tim_count	src/include/ieee80211.h	/^	u_int8_t	tim_count;		\/* DTIM count *\/$/;"	m	struct:ieee80211_tim_ie
tim_ie	src/include/ieee80211.h	/^	u_int8_t	tim_ie;			\/* IEEE80211_ELEMID_TIM *\/$/;"	m	struct:ieee80211_tim_ie
tim_len	src/include/ieee80211.h	/^	u_int8_t	tim_len;$/;"	m	struct:ieee80211_tim_ie
tim_period	src/include/ieee80211.h	/^	u_int8_t	tim_period;		\/* DTIM period *\/$/;"	m	struct:ieee80211_tim_ie
time_diff	src/besside-ng.c	/^static int time_diff(struct timeval *past, struct timeval *now)$/;"	f	file:
time_print	src/wesside-ng.c	/^static void time_print(char* fmt, ...)$/;"	f	file:
time_printf	src/besside-ng.c	/^static void time_printf(int verb, char *fmt, ...)$/;"	f	file:
timeoutFrag	src/airbase-ng.c	/^int timeoutFrag()$/;"	f
timeoutFrag	src/airtun-ng.c	/^int timeoutFrag()$/;"	f
timeouts	src/include/if_arp.h	/^	uint64_t timeouts;	\/* # of times with entries removed *\/$/;"	m	struct:arpstat
timer	src/besside-ng.c	/^struct timer {$/;"	s	file:
timer_cb	src/besside-ng.c	/^typedef void (*timer_cb)(void*);$/;"	t	file:
timer_cb2str	src/besside-ng.c	/^static const char *timer_cb2str(timer_cb cb)$/;"	f	file:
timer_check	src/besside-ng.c	/^static void timer_check(void)$/;"	f	file:
timer_in	src/besside-ng.c	/^static void timer_in(int us, timer_cb cb, void *arg)$/;"	f	file:
timer_next	src/besside-ng.c	/^static void timer_next(struct timeval *tv)$/;"	f	file:
timestamp	src/airodump-ng.h	/^    unsigned long long timestamp;$/;"	m	struct:AP_info
tinit	src/airbase-ng.c	/^    time_t tinit, tlast;     \/* first and last time seen  *\/$/;"	m	struct:ST_info	file:
tinit	src/airodump-ng.h	/^    time_t tinit, tlast;      \/* first and last time seen *\/$/;"	m	struct:AP_info
tinit	src/airodump-ng.h	/^    time_t tinit, tlast;     \/* first and last time seen  *\/$/;"	m	struct:NA_info
tinit	src/airodump-ng.h	/^    time_t tinit, tlast;     \/* first and last time seen  *\/$/;"	m	struct:ST_info
tip_cygwin	src/osdep/cygwin_tap.c	/^struct tip_cygwin {$/;"	s	file:
tip_darwin	src/osdep/darwin_tap.c	/^struct tip_darwin {$/;"	s	file:
tip_fbsd	src/osdep/freebsd_tap.c	/^struct tip_fbsd {$/;"	s	file:
tip_linux	src/osdep/linux_tap.c	/^struct tip_linux {$/;"	s	file:
tip_nbsd	src/osdep/netbsd_tap.c	/^struct tip_nbsd {$/;"	s	file:
tip_obsd	src/osdep/openbsd_tap.c	/^struct tip_obsd {$/;"	s	file:
tl_fd	src/osdep/linux_tap.c	/^	int		tl_fd;$/;"	m	struct:tip_linux	file:
tl_ifr	src/osdep/linux_tap.c	/^	struct ifreq	tl_ifr;$/;"	m	struct:tip_linux	typeref:struct:tip_linux::ifreq	file:
tl_ioctls	src/osdep/linux_tap.c	/^	int		tl_ioctls;$/;"	m	struct:tip_linux	file:
tl_name	src/osdep/linux_tap.c	/^	char		tl_name[MAX_IFACE_NAME];$/;"	m	struct:tip_linux	file:
tlast	src/airbase-ng.c	/^    time_t tinit, tlast;     \/* first and last time seen  *\/$/;"	m	struct:ST_info	file:
tlast	src/airodump-ng.h	/^    time_t tinit, tlast;      \/* first and last time seen *\/$/;"	m	struct:AP_info
tlast	src/airodump-ng.h	/^    time_t tinit, tlast;     \/* first and last time seen  *\/$/;"	m	struct:NA_info
tlast	src/airodump-ng.h	/^    time_t tinit, tlast;     \/* first and last time seen  *\/$/;"	m	struct:ST_info
tls	scripts/dcrack.py	/^tls = threading.local()$/;"	v
tmp1	src/sha1-sse2.S	/^#define tmp1 %xmm5$/;"	d
tmp2	src/sha1-sse2.S	/^#define tmp2 %xmm6$/;"	d
tmp3	src/sha1-sse2.S	/^#define tmp3 %xmm7$/;"	d
tmp4	src/sha1-sse2.S	/^#define tmp4 ctxa$/;"	d
tmp5	src/sha1-sse2.S	/^#define tmp5 ctxb$/;"	d
tmpbuf	src/airbase-ng.c	/^unsigned char tmpbuf[4096];$/;"	v
tmpbuf	src/aireplay-ng.c	/^unsigned char tmpbuf[4096];$/;"	v
tmpbuf	src/airtun-ng.c	/^unsigned char tmpbuf[4096];$/;"	v
tmpbuf	src/packetforge-ng.c	/^unsigned char tmpbuf[2048];$/;"	v
tmpbuf	src/tkiptun-ng.c	/^unsigned char tmpbuf[4096];$/;"	v
tn_destroy	src/osdep/netbsd_tap.c	/^	int		tn_destroy;$/;"	m	struct:tip_nbsd	file:
tn_fd	src/osdep/netbsd_tap.c	/^	int		tn_fd;$/;"	m	struct:tip_nbsd	file:
tn_ifr	src/osdep/netbsd_tap.c	/^	struct ifreq	tn_ifr;$/;"	m	struct:tip_nbsd	typeref:struct:tip_nbsd::ifreq	file:
tn_ioctls	src/osdep/netbsd_tap.c	/^	int		tn_ioctls;$/;"	m	struct:tip_nbsd	file:
tn_name	src/osdep/netbsd_tap.c	/^	char		tn_name[MAX_IFACE_NAME];$/;"	m	struct:tip_nbsd	file:
toDS	src/airdecloak-ng.h	/^    int toDS;$/;"	m	struct:packet_elt
to_destroy	src/osdep/openbsd_tap.c	/^	int		to_destroy;$/;"	m	struct:tip_obsd	file:
to_fd	src/osdep/openbsd_tap.c	/^	int		to_fd;$/;"	m	struct:tip_obsd	file:
to_ifr	src/osdep/openbsd_tap.c	/^	struct ifreq	to_ifr;$/;"	m	struct:tip_obsd	typeref:struct:tip_obsd::ifreq	file:
to_ioctls	src/osdep/openbsd_tap.c	/^	int		to_ioctls;$/;"	m	struct:tip_obsd	file:
to_me	src/easside-ng.c	/^int to_me(struct east_state *es, struct ieee80211_frame *wh)$/;"	f
to_name	src/osdep/openbsd_tap.c	/^	char		to_name[MAX_IFACE_NAME];$/;"	m	struct:tip_obsd	file:
tods	src/airbase-ng.c	/^    int tods;$/;"	m	struct:options	file:
tods	src/airtun-ng.c	/^    int tods;$/;"	m	struct:options	file:
tods	src/packetforge-ng.c	/^    char tods;$/;"	m	struct:options	file:
toggleSignalMethod	lib/csharp/MonoExample/NDesk-dbus/TypeImplementer.cs	/^		static MethodInfo toggleSignalMethod = typeof (BusObject).GetMethod ("ToggleSignal");$/;"	f	class:NDesk.DBus.TypeImplementer	file:
too_early	src/easside-ng.c	/^int too_early(struct timeval *tv, int to, struct timeval *last_sent)$/;"	f
tos	test/pingreply.c	/^    unsigned char tos;$/;"	m	struct:ip_hdr	file:
totaldicts	src/aircrack-ng.h	/^	int totaldicts;				\/* total loaded dictionaries	*\/$/;"	m	struct:options
translateOUI	scripts/airdrop-ng/airdrop-ng	/^    def translateOUI(self,ouiLst,flag):$/;"	m	class:parseFiles
transport	lib/csharp/MonoExample/NDesk-dbus/Connection.cs	/^		Transport transport;$/;"	f	class:NDesk.DBus.Connection	file:
tried	src/aircrack-ptw-lib.c	/^int tried, max_tries;$/;"	v
trim	src/airodump-ng.c	/^void trim(char *str)$/;"	f
true	src/airdecloak-ng.h	/^typedef enum {false, true} BOOLEAN;$/;"	e	enum:__anon38
try_crack	src/wesside-ng.c	/^static void try_crack(struct wstate *ws)$/;"	f	file:
try_network	scripts/dcrack.py	/^	def try_network(s, net, d):$/;"	m	class:ServerHandler
try_ping	scripts/dcrack.py	/^def try_ping(speed):$/;"	f
ts_delay	src/include/ieee80211.h	/^	u_int8_t	ts_delay[4];$/;"	m	struct:ieee80211_wme_tspec
ts_id	src/include/ieee80211.h	/^	u_int8_t	ts_id;$/;"	m	struct:ieee80211_wme_tspec
ts_inactv_intv	src/include/ieee80211.h	/^	u_int8_t	ts_inactv_intv[4];$/;"	m	struct:ieee80211_wme_tspec
ts_len	src/include/ieee80211.h	/^	u_int8_t	ts_len;$/;"	m	struct:ieee80211_wme_tspec
ts_max_burst	src/include/ieee80211.h	/^	u_int8_t	ts_max_burst[4];$/;"	m	struct:ieee80211_wme_tspec
ts_max_msdu	src/include/ieee80211.h	/^	u_int8_t	ts_max_msdu[2];$/;"	m	struct:ieee80211_wme_tspec
ts_max_svc	src/include/ieee80211.h	/^	u_int8_t	ts_max_svc[4];$/;"	m	struct:ieee80211_wme_tspec
ts_mean_rate	src/include/ieee80211.h	/^	u_int8_t	ts_mean_rate[4];$/;"	m	struct:ieee80211_wme_tspec
ts_medium_time	src/include/ieee80211.h	/^	u_int8_t	ts_medium_time[2];$/;"	m	struct:ieee80211_wme_tspec
ts_min_phy	src/include/ieee80211.h	/^	u_int8_t	ts_min_phy[4];$/;"	m	struct:ieee80211_wme_tspec
ts_min_rate	src/include/ieee80211.h	/^	u_int8_t	ts_min_rate[4];$/;"	m	struct:ieee80211_wme_tspec
ts_min_svc	src/include/ieee80211.h	/^	u_int8_t	ts_min_svc[4];$/;"	m	struct:ieee80211_wme_tspec
ts_nom_msdu	src/include/ieee80211.h	/^	u_int8_t	ts_nom_msdu[2];$/;"	m	struct:ieee80211_wme_tspec
ts_oui	src/include/ieee80211.h	/^	u_int8_t	ts_oui[3];$/;"	m	struct:ieee80211_wme_tspec
ts_oui_subtype	src/include/ieee80211.h	/^	u_int8_t	ts_oui_subtype;$/;"	m	struct:ieee80211_wme_tspec
ts_oui_type	src/include/ieee80211.h	/^	u_int8_t	ts_oui_type;$/;"	m	struct:ieee80211_wme_tspec
ts_peak_rate	src/include/ieee80211.h	/^	u_int8_t	ts_peak_rate[4];$/;"	m	struct:ieee80211_wme_tspec
ts_start_svc	src/include/ieee80211.h	/^	u_int8_t	ts_start_svc[4];$/;"	m	struct:ieee80211_wme_tspec
ts_surplus	src/include/ieee80211.h	/^	u_int8_t	ts_surplus[2];$/;"	m	struct:ieee80211_wme_tspec
ts_susp_intv	src/include/ieee80211.h	/^	u_int8_t	ts_susp_intv[4];$/;"	m	struct:ieee80211_wme_tspec
ts_tsinfo	src/include/ieee80211.h	/^	u_int8_t	ts_tsinfo[3];$/;"	m	struct:ieee80211_wme_tspec
ts_version	src/include/ieee80211.h	/^	u_int8_t	ts_version;$/;"	m	struct:ieee80211_wme_tspec
ttl	src/packetforge-ng.c	/^    int ttl;$/;"	m	struct:options	file:
ttl	test/pingreply.c	/^    unsigned char ttl;$/;"	m	struct:ip_hdr	file:
tv	src/airodump-ng.h	/^    struct timeval tv;        \/* time for data per second *\/$/;"	m	struct:AP_info	typeref:struct:AP_info::timeval
tv	src/airodump-ng.h	/^    struct timeval tv;       \/* time for ack per second   *\/$/;"	m	struct:NA_info	typeref:struct:NA_info::timeval
tv_sec	src/pcap.h	/^    int32_t tv_sec;$/;"	m	struct:pcap_pkthdr
tv_usec	src/pcap.h	/^    int32_t tv_usec;$/;"	m	struct:pcap_pkthdr
tx_info	src/osdep/osdep.h	/^struct tx_info {$/;"	s
tx_power	src/osdep/linux.c	/^    int tx_power;$/;"	m	struct:priv_linux	file:
txreplies	src/include/if_arp.h	/^	uint64_t txreplies;	\/* # of ARP replies sent by this host. *\/$/;"	m	struct:arpstat
txrequests	src/include/if_arp.h	/^	uint64_t txrequests;	\/* # of ARP requests sent by this host. *\/$/;"	m	struct:arpstat
type	test/pingreply.c	/^    unsigned char type;$/;"	m	struct:icmp_hdr	file:
type	test/pingreply.c	/^    unsigned short type;$/;"	m	struct:eth_hdr	file:
type_frmr	src/include/if_llc.h	/^	    } type_frmr \/* XXX __packed ??? *\/;$/;"	m	union:llc::__anon6	typeref:struct:llc::__anon6::__anon10
type_i	src/include/if_llc.h	/^	    } type_i \/* XXX __packed ??? *\/;$/;"	m	union:llc::__anon6	typeref:struct:llc::__anon6::__anon8
type_raw	src/include/if_llc.h	/^	    } type_raw \/* XXX __packed ??? *\/;$/;"	m	union:llc::__anon6	typeref:struct:llc::__anon6::__anon12
type_s	src/include/if_llc.h	/^	    } type_s \/* XXX __packed ??? *\/;$/;"	m	union:llc::__anon6	typeref:struct:llc::__anon6::__anon9
type_u	src/include/if_llc.h	/^	    } type_u \/* XXX __packed ??? *\/;$/;"	m	union:llc::__anon6	typeref:struct:llc::__anon6::__anon7
u_int16_t	src/osdep/byteorder.h	/^			typedef uint16_t u_int16_t;$/;"	t
u_int16_t	src/osdep/byteorder.h	/^	typedef uint16_t u_int16_t;$/;"	t
u_int32_t	src/osdep/byteorder.h	/^			typedef uint32_t u_int32_t;$/;"	t
u_int32_t	src/osdep/byteorder.h	/^	typedef uint32_t u_int32_t;$/;"	t
u_int64_t	src/osdep/byteorder.h	/^			typedef uint64_t u_int64_t;$/;"	t
u_int64_t	src/osdep/byteorder.h	/^	typedef uint64_t u_int64_t;$/;"	t
u_int8_t	src/osdep/byteorder.h	/^			typedef uint8_t  u_int8_t;$/;"	t
u_int8_t	src/osdep/byteorder.h	/^	typedef uint8_t  u_int8_t;$/;"	t
uint	src/osdep/byteorder.h	229;"	d
uiv_root	src/aircrack-ng.h	/^	unsigned char **uiv_root;			 \/* IV uniqueness root struct    *\/$/;"	m	struct:AP_info
uiv_root	src/airodump-ng.h	/^    unsigned char **uiv_root; \/* unique iv root structure *\/$/;"	m	struct:AP_info
uiv_root	src/ivstools.c	/^    unsigned char **uiv_root; \/* unique iv root structure *\/$/;"	m	struct:AP_info	file:
unique_name	lib/csharp/MonoExample/NDesk-dbus/Bus.cs	/^		string unique_name = null;$/;"	f	class:NDesk.DBus.Bus	file:
uniqueiv_check	src/uniqueiv.c	/^int uniqueiv_check( unsigned char **uiv_root, unsigned char IV[3] )$/;"	f
uniqueiv_init	src/uniqueiv.c	/^unsigned char **uniqueiv_init( void )$/;"	f
uniqueiv_mark	src/uniqueiv.c	/^int uniqueiv_mark( unsigned char **uiv_root, unsigned char IV[3] )$/;"	f
uniqueiv_wipe	src/uniqueiv.c	/^void uniqueiv_wipe( unsigned char **uiv_root )$/;"	f
unused	src/aircrack-ng.h	/^	char unused[2];				 \/* Alignment *\/$/;"	m	struct:mergeBSSID
update_dataps	src/airodump-ng.c	/^int update_dataps()$/;"	f
update_ivbuf	src/aircrack-ng.c	/^int update_ivbuf( void )$/;"	f
update_rx_quality	src/airodump-ng.c	/^void update_rx_quality( )$/;"	f
update_s	src/airodump-ng.h	/^    int update_s;	    \/* update delay in sec  *\/$/;"	m	struct:globals
upload_file	scripts/dcrack.py	/^def upload_file(url, f):$/;"	f
url	scripts/airdrop-ng/setup.py	/^      url='http:\/\/aircrack-ng.org',$/;"	v
url	scripts/airgraph-ng/setup.py	/^      url='http:\/\/aircrack-ng.org',$/;"	v
url	scripts/dcrack.py	/^url = None$/;"	v
usage	scripts/airdrop-ng/airdrop-ng	/^def usage():$/;"	f
usage	scripts/dcrack.py	/^def usage():$/;"	f
usage	src/airbase-ng.c	/^char usage[] =$/;"	v
usage	src/aircrack-ng.c	/^char usage[] =$/;"	v
usage	src/airdecap-ng.c	/^char usage[] =$/;"	v
usage	src/airdecloak-ng.c	/^void usage() {$/;"	f
usage	src/aireplay-ng.c	/^char usage[] =$/;"	v
usage	src/airodump-ng.c	/^char usage[] =$/;"	v
usage	src/airserv-ng.c	/^static void usage(char *p)$/;"	f	file:
usage	src/airtun-ng.c	/^char usage[] =$/;"	v
usage	src/besside-ng.c	/^static void usage(char *prog)$/;"	f	file:
usage	src/buddy-ng.c	/^void usage()$/;"	f
usage	src/easside-ng.c	/^void usage(char *p)$/;"	f
usage	src/ivstools.c	/^void usage(int what)$/;"	f
usage	src/makeivs-ng.c	/^char usage[] =$/;"	v
usage	src/packetforge-ng.c	/^char usage[] =$/;"	v
usage	src/tkiptun-ng.c	/^char usage[] =$/;"	v
usage	src/wesside-ng.c	/^static void usage(char* pname)$/;"	f	file:
useDll	src/osdep/cygwin.c	/^	int		useDll;$/;"	m	struct:priv_cygwin	file:
use_fixed_nonce	src/airbase-ng.c	/^    int use_fixed_nonce;$/;"	m	struct:options	file:
usegpsd	src/airodump-ng.h	/^    int usegpsd;            \/* do we use GPSd?      *\/$/;"	m	struct:globals
ushort	src/osdep/byteorder.h	228;"	d
v	src/wpapsk.h	/^	uint8_t  v[PLAINTEXT_LENGTH + 1];$/;"	m	struct:__anon34
v	src/wpapsk.h	/^	uint8_t  v[PLAINTEXT_LENGTH + 1];$/;"	m	struct:wpapsk_password
v0X	lib/csharp/WirelessPanda/Readers/csvReader.cs	/^            v0X,$/;"	e	enum:WirelessPanda.Readers.CsvReader.CSVFileFormat	file:
v1X	lib/csharp/WirelessPanda/Readers/csvReader.cs	/^            v1X,$/;"	e	enum:WirelessPanda.Readers.CsvReader.CSVFileFormat	file:
v32	src/pseudo_intrinsics.h	/^	vtype32 v32;$/;"	m	union:__anon23
v64	src/pseudo_intrinsics.h	/^	vtype64 v64;$/;"	m	union:__anon23
vacuum	src/airolib-ng.c	/^void vacuum(sqlite3* db, int deep) {$/;"	f
vadd_epi32	src/pseudo_intrinsics.h	144;"	d
vadd_epi32	src/pseudo_intrinsics.h	187;"	d
vadd_epi32	src/pseudo_intrinsics.h	329;"	d
vadd_epi32	src/pseudo_intrinsics.h	433;"	d
vadd_epi32	src/pseudo_intrinsics.h	86;"	d
vadd_epi64	src/pseudo_intrinsics.h	145;"	d
vadd_epi64	src/pseudo_intrinsics.h	188;"	d
vadd_epi64	src/pseudo_intrinsics.h	330;"	d
vadd_epi64	src/pseudo_intrinsics.h	434;"	d
vadd_epi64	src/pseudo_intrinsics.h	87;"	d
val	src/aircrack-ng.h	/^typedef struct { int idx, val; }$/;"	m	struct:__anon42
val	src/kstats.c	/^typedef struct { int idx, val; } vote;$/;"	m	struct:__anon13	file:
validChk	scripts/airdrop-ng/airdrop-ng	/^    def validChk(self,rule):$/;"	m	class:parseFiles
validMacChk	scripts/airdrop-ng/airdrop-ng	/^    def validMacChk(self,mac):$/;"	m	class:parseFiles
valid_ptk	src/crypto.h	/^    int keyver, valid_ptk;$/;"	m	struct:WPA_ST_info
value	src/aircrack-ptw-lib.c	/^	uint8_t value;$/;"	m	struct:__anon21	file:
vand	src/pseudo_intrinsics.h	146;"	d
vand	src/pseudo_intrinsics.h	189;"	d
vand	src/pseudo_intrinsics.h	331;"	d
vand	src/pseudo_intrinsics.h	435;"	d
vand	src/pseudo_intrinsics.h	88;"	d
vandnot	src/pseudo_intrinsics.h	147;"	d
vandnot	src/pseudo_intrinsics.h	190;"	d
vandnot	src/pseudo_intrinsics.h	332;"	d
vandnot	src/pseudo_intrinsics.h	436;"	d
vandnot	src/pseudo_intrinsics.h	89;"	d
vanyeq_epi32	src/pseudo_intrinsics.h	/^static inline int vanyeq_epi32(vtype x, vtype y)$/;"	f
vanyeq_epi32	src/pseudo_intrinsics.h	174;"	d
vanyeq_epi32	src/pseudo_intrinsics.h	226;"	d
vanyeq_epi32	src/pseudo_intrinsics.h	374;"	d
vanyeq_epi32	src/pseudo_intrinsics.h	502;"	d
vcmov	src/pseudo_intrinsics.h	148;"	d
vcmov	src/pseudo_intrinsics.h	191;"	d
vcmov	src/pseudo_intrinsics.h	262;"	d
vcmov	src/pseudo_intrinsics.h	264;"	d
vcmov	src/pseudo_intrinsics.h	333;"	d
vcmov	src/pseudo_intrinsics.h	438;"	d
vcmov	src/pseudo_intrinsics.h	440;"	d
vcmov	src/pseudo_intrinsics.h	90;"	d
vcmov_emu	src/pseudo_intrinsics.h	642;"	d
vcmov_emu	src/pseudo_intrinsics.h	644;"	d
vcmpeq_epi32	src/pseudo_intrinsics.h	336;"	d
vcmpeq_epi32	src/pseudo_intrinsics.h	444;"	d
vcmpeq_epi8_mask	src/pseudo_intrinsics.h	269;"	d
vcmpeq_epi8_mask	src/pseudo_intrinsics.h	335;"	d
vcmpeq_epi8_mask	src/pseudo_intrinsics.h	443;"	d
vcvtsi32	src/pseudo_intrinsics.h	337;"	d
vcvtsi32	src/pseudo_intrinsics.h	446;"	d
verbose	src/airbase-ng.c	/^    int verbose;$/;"	m	struct:options	file:
verify	src/airolib-ng.c	/^void verify(sqlite3* db, int complete) {$/;"	f
verify_essid	src/airolib-ng.c	/^int verify_essid(char* essid) {$/;"	f
verify_passwd	src/airolib-ng.c	/^int verify_passwd(char* passwd) {$/;"	f
version	scripts/airdrop-ng/setup.py	/^      version='1.1',$/;"	v
version	scripts/airgraph-ng/setup.py	/^      version='1.1',$/;"	v
version	src/airodump-ng.h	/^    unsigned char version;    \/* WPS Version *\/$/;"	m	struct:WPS_info
version	src/pcap.h	/^    uint16_t version;$/;"	m	struct:ivs2_filehdr
version_major	src/pcap.h	/^    uint16_t version_major;$/;"	m	struct:pcap_file_header
version_minor	src/pcap.h	/^    uint16_t version_minor;$/;"	m	struct:pcap_file_header
version_type_subtype	src/airdecloak-ng.h	/^    unsigned char version_type_subtype; \/\/ First byte$/;"	m	struct:packet_elt
vgather_epi32	src/pseudo_intrinsics.h	197;"	d
vgather_epi32	src/pseudo_intrinsics.h	338;"	d
vgather_epi64	src/pseudo_intrinsics.h	198;"	d
vgather_epi64	src/pseudo_intrinsics.h	339;"	d
vhl	test/pingreply.c	/^    unsigned char vhl;$/;"	m	struct:ip_hdr	file:
vinsert_epi32	src/pseudo_intrinsics.h	340;"	d
vinsert_epi32	src/pseudo_intrinsics.h	448;"	d
visual_inspection	src/aircrack-ng.h	/^	int visual_inspection;       \/* Enabling\/disabling visual    *\/$/;"	m	struct:options
vload	src/pseudo_intrinsics.h	149;"	d
vload	src/pseudo_intrinsics.h	199;"	d
vload	src/pseudo_intrinsics.h	341;"	d
vload	src/pseudo_intrinsics.h	449;"	d
vload	src/pseudo_intrinsics.h	91;"	d
vloadu	src/pseudo_intrinsics.h	150;"	d
vloadu	src/pseudo_intrinsics.h	200;"	d
vloadu	src/pseudo_intrinsics.h	342;"	d
vloadu	src/pseudo_intrinsics.h	450;"	d
vloadu	src/pseudo_intrinsics.h	92;"	d
vloadu_emu	src/pseudo_intrinsics.h	/^static INLINE vtype vloadu_emu(const void *addr)$/;"	f
vmovemask_epi8	src/pseudo_intrinsics.h	343;"	d
vmovemask_epi8	src/pseudo_intrinsics.h	451;"	d
vns	src/osdep/radiotap/parse.c	/^static const struct ieee80211_radiotap_vendor_namespaces vns = {$/;"	v	typeref:struct:ieee80211_radiotap_vendor_namespaces	file:
vns_array	src/osdep/radiotap/parse.c	/^static const struct ieee80211_radiotap_namespace vns_array[] = {$/;"	v	typeref:struct:ieee80211_radiotap_namespace	file:
vor	src/pseudo_intrinsics.h	152;"	d
vor	src/pseudo_intrinsics.h	201;"	d
vor	src/pseudo_intrinsics.h	344;"	d
vor	src/pseudo_intrinsics.h	452;"	d
vor	src/pseudo_intrinsics.h	94;"	d
vorn	src/pseudo_intrinsics.h	95;"	d
vote	src/aircrack-ng.h	/^vote;$/;"	t	typeref:struct:__anon42
vote	src/kstats.c	/^typedef struct { int idx, val; } vote;$/;"	t	typeref:struct:__anon13	file:
votes	src/aircrack-ng.h	/^	int votes[N_ATTACKS];			\/* votes for korek attacks *\/$/;"	m	struct:options
votes	src/aircrack-ptw-lib.h	/^	int votes;$/;"	m	struct:__anon39
vpermute2x128	src/pseudo_intrinsics.h	345;"	d
vpermute2x128	src/pseudo_intrinsics.h	454;"	d
vpermute4x64_epi64	src/pseudo_intrinsics.h	346;"	d
vpermute4x64_epi64	src/pseudo_intrinsics.h	453;"	d
vroti16_epi32	src/pseudo_intrinsics.h	100;"	d
vroti16_epi32	src/pseudo_intrinsics.h	155;"	d
vroti16_epi32	src/pseudo_intrinsics.h	204;"	d
vroti16_epi32	src/pseudo_intrinsics.h	349;"	d
vroti16_epi32	src/pseudo_intrinsics.h	457;"	d
vroti16_epi32	src/pseudo_intrinsics.h	464;"	d
vroti16_epi32	src/pseudo_intrinsics.h	466;"	d
vroti16_epi32	src/pseudo_intrinsics.h	468;"	d
vroti_epi32	src/pseudo_intrinsics.h	153;"	d
vroti_epi32	src/pseudo_intrinsics.h	202;"	d
vroti_epi32	src/pseudo_intrinsics.h	347;"	d
vroti_epi32	src/pseudo_intrinsics.h	456;"	d
vroti_epi32	src/pseudo_intrinsics.h	460;"	d
vroti_epi32	src/pseudo_intrinsics.h	96;"	d
vroti_epi32_emu	src/pseudo_intrinsics.h	662;"	d
vroti_epi64	src/pseudo_intrinsics.h	154;"	d
vroti_epi64	src/pseudo_intrinsics.h	203;"	d
vroti_epi64	src/pseudo_intrinsics.h	348;"	d
vroti_epi64	src/pseudo_intrinsics.h	458;"	d
vroti_epi64	src/pseudo_intrinsics.h	461;"	d
vroti_epi64	src/pseudo_intrinsics.h	98;"	d
vroti_epi64_emu	src/pseudo_intrinsics.h	666;"	d
vscatter_epi32	src/pseudo_intrinsics.h	205;"	d
vscatter_epi64	src/pseudo_intrinsics.h	206;"	d
vset1_epi32	src/pseudo_intrinsics.h	101;"	d
vset1_epi32	src/pseudo_intrinsics.h	156;"	d
vset1_epi32	src/pseudo_intrinsics.h	208;"	d
vset1_epi32	src/pseudo_intrinsics.h	351;"	d
vset1_epi32	src/pseudo_intrinsics.h	473;"	d
vset1_epi64	src/pseudo_intrinsics.h	102;"	d
vset1_epi64	src/pseudo_intrinsics.h	157;"	d
vset1_epi64	src/pseudo_intrinsics.h	209;"	d
vset1_epi64	src/pseudo_intrinsics.h	352;"	d
vset1_epi64	src/pseudo_intrinsics.h	475;"	d
vset1_epi64	src/pseudo_intrinsics.h	478;"	d
vset1_epi64x	src/pseudo_intrinsics.h	580;"	d
vset1_epi8	src/pseudo_intrinsics.h	207;"	d
vset1_epi8	src/pseudo_intrinsics.h	350;"	d
vset1_epi8	src/pseudo_intrinsics.h	472;"	d
vset_epi32	src/pseudo_intrinsics.h	103;"	d
vset_epi32	src/pseudo_intrinsics.h	158;"	d
vset_epi32	src/pseudo_intrinsics.h	210;"	d
vset_epi32	src/pseudo_intrinsics.h	353;"	d
vset_epi32	src/pseudo_intrinsics.h	471;"	d
vset_epi64	src/pseudo_intrinsics.h	104;"	d
vset_epi64	src/pseudo_intrinsics.h	159;"	d
vset_epi64	src/pseudo_intrinsics.h	211;"	d
vset_epi64	src/pseudo_intrinsics.h	354;"	d
vset_epi64	src/pseudo_intrinsics.h	476;"	d
vset_epi64	src/pseudo_intrinsics.h	479;"	d
vset_epi64x	src/pseudo_intrinsics.h	581;"	d
vsetzero	src/pseudo_intrinsics.h	105;"	d
vsetzero	src/pseudo_intrinsics.h	160;"	d
vsetzero	src/pseudo_intrinsics.h	212;"	d
vsetzero	src/pseudo_intrinsics.h	355;"	d
vsetzero	src/pseudo_intrinsics.h	481;"	d
vshuffle_epi32	src/pseudo_intrinsics.h	213;"	d
vshuffle_epi32	src/pseudo_intrinsics.h	357;"	d
vshuffle_epi32	src/pseudo_intrinsics.h	485;"	d
vshuffle_epi8	src/pseudo_intrinsics.h	270;"	d
vshuffle_epi8	src/pseudo_intrinsics.h	356;"	d
vshuffle_epi8	src/pseudo_intrinsics.h	483;"	d
vshufflehi_epi16	src/pseudo_intrinsics.h	271;"	d
vshufflehi_epi16	src/pseudo_intrinsics.h	358;"	d
vshufflehi_epi16	src/pseudo_intrinsics.h	486;"	d
vshufflelo_epi16	src/pseudo_intrinsics.h	272;"	d
vshufflelo_epi16	src/pseudo_intrinsics.h	359;"	d
vshufflelo_epi16	src/pseudo_intrinsics.h	487;"	d
vslli_epi16	src/pseudo_intrinsics.h	273;"	d
vslli_epi16	src/pseudo_intrinsics.h	360;"	d
vslli_epi16	src/pseudo_intrinsics.h	488;"	d
vslli_epi32	src/pseudo_intrinsics.h	106;"	d
vslli_epi32	src/pseudo_intrinsics.h	161;"	d
vslli_epi32	src/pseudo_intrinsics.h	214;"	d
vslli_epi32	src/pseudo_intrinsics.h	361;"	d
vslli_epi32	src/pseudo_intrinsics.h	489;"	d
vslli_epi64	src/pseudo_intrinsics.h	107;"	d
vslli_epi64	src/pseudo_intrinsics.h	162;"	d
vslli_epi64	src/pseudo_intrinsics.h	215;"	d
vslli_epi64	src/pseudo_intrinsics.h	362;"	d
vslli_epi64	src/pseudo_intrinsics.h	490;"	d
vslli_epi64a	src/pseudo_intrinsics.h	649;"	d
vslli_epi64a	src/pseudo_intrinsics.h	653;"	d
vsrli_epi16	src/pseudo_intrinsics.h	274;"	d
vsrli_epi16	src/pseudo_intrinsics.h	363;"	d
vsrli_epi16	src/pseudo_intrinsics.h	491;"	d
vsrli_epi32	src/pseudo_intrinsics.h	108;"	d
vsrli_epi32	src/pseudo_intrinsics.h	163;"	d
vsrli_epi32	src/pseudo_intrinsics.h	216;"	d
vsrli_epi32	src/pseudo_intrinsics.h	364;"	d
vsrli_epi32	src/pseudo_intrinsics.h	492;"	d
vsrli_epi64	src/pseudo_intrinsics.h	109;"	d
vsrli_epi64	src/pseudo_intrinsics.h	164;"	d
vsrli_epi64	src/pseudo_intrinsics.h	217;"	d
vsrli_epi64	src/pseudo_intrinsics.h	365;"	d
vsrli_epi64	src/pseudo_intrinsics.h	493;"	d
vstore	src/pseudo_intrinsics.h	110;"	d
vstore	src/pseudo_intrinsics.h	165;"	d
vstore	src/pseudo_intrinsics.h	218;"	d
vstore	src/pseudo_intrinsics.h	366;"	d
vstore	src/pseudo_intrinsics.h	494;"	d
vstoreu	src/pseudo_intrinsics.h	111;"	d
vstoreu	src/pseudo_intrinsics.h	166;"	d
vstoreu	src/pseudo_intrinsics.h	219;"	d
vstoreu	src/pseudo_intrinsics.h	367;"	d
vstoreu	src/pseudo_intrinsics.h	495;"	d
vstoreu_emu	src/pseudo_intrinsics.h	/^static INLINE void vstoreu_emu(void *addr, vtype v)$/;"	f
vswap32	src/pseudo_intrinsics.h	126;"	d
vswap32	src/pseudo_intrinsics.h	176;"	d
vswap32	src/pseudo_intrinsics.h	276;"	d
vswap32	src/pseudo_intrinsics.h	295;"	d
vswap32	src/pseudo_intrinsics.h	384;"	d
vswap32	src/pseudo_intrinsics.h	508;"	d
vswap32	src/pseudo_intrinsics.h	516;"	d
vswap32_emu	src/pseudo_intrinsics.h	632;"	d
vswap64	src/pseudo_intrinsics.h	127;"	d
vswap64	src/pseudo_intrinsics.h	177;"	d
vswap64	src/pseudo_intrinsics.h	285;"	d
vswap64	src/pseudo_intrinsics.h	296;"	d
vswap64	src/pseudo_intrinsics.h	387;"	d
vswap64	src/pseudo_intrinsics.h	512;"	d
vswap64	src/pseudo_intrinsics.h	522;"	d
vswap64_emu	src/pseudo_intrinsics.h	637;"	d
vternarylogic	src/pseudo_intrinsics.h	265;"	d
vtype	src/pseudo_intrinsics.h	/^typedef __m128i vtype;$/;"	t
vtype	src/pseudo_intrinsics.h	/^typedef __m256i vtype;$/;"	t
vtype	src/pseudo_intrinsics.h	/^typedef __m512i vtype;$/;"	t
vtype	src/pseudo_intrinsics.h	/^typedef __m64i vtype;$/;"	t
vtype	src/pseudo_intrinsics.h	/^typedef uint32x4_t vtype; \/* the default one *\/$/;"	t
vtype	src/pseudo_intrinsics.h	/^} vtype;$/;"	t	typeref:union:__anon23
vtype	src/simd-intrinsics.h	176;"	d
vtype	src/simd-intrinsics.h	65;"	d
vtype32	src/pseudo_intrinsics.h	/^typedef vector unsigned int vtype32;$/;"	t
vtype64	src/pseudo_intrinsics.h	/^typedef uint64x2_t vtype64;$/;"	t
vtype64	src/pseudo_intrinsics.h	/^typedef vector unsigned long vtype64;$/;"	t
vtype8	src/pseudo_intrinsics.h	/^typedef uint8x16_t vtype8;$/;"	t
vunpackhi_epi32	src/pseudo_intrinsics.h	113;"	d
vunpackhi_epi32	src/pseudo_intrinsics.h	168;"	d
vunpackhi_epi32	src/pseudo_intrinsics.h	220;"	d
vunpackhi_epi32	src/pseudo_intrinsics.h	368;"	d
vunpackhi_epi32	src/pseudo_intrinsics.h	496;"	d
vunpackhi_epi64	src/pseudo_intrinsics.h	114;"	d
vunpackhi_epi64	src/pseudo_intrinsics.h	169;"	d
vunpackhi_epi64	src/pseudo_intrinsics.h	221;"	d
vunpackhi_epi64	src/pseudo_intrinsics.h	369;"	d
vunpackhi_epi64	src/pseudo_intrinsics.h	497;"	d
vunpacklo_epi32	src/pseudo_intrinsics.h	115;"	d
vunpacklo_epi32	src/pseudo_intrinsics.h	170;"	d
vunpacklo_epi32	src/pseudo_intrinsics.h	222;"	d
vunpacklo_epi32	src/pseudo_intrinsics.h	370;"	d
vunpacklo_epi32	src/pseudo_intrinsics.h	498;"	d
vunpacklo_epi64	src/pseudo_intrinsics.h	116;"	d
vunpacklo_epi64	src/pseudo_intrinsics.h	171;"	d
vunpacklo_epi64	src/pseudo_intrinsics.h	223;"	d
vunpacklo_epi64	src/pseudo_intrinsics.h	371;"	d
vunpacklo_epi64	src/pseudo_intrinsics.h	499;"	d
vxor	src/pseudo_intrinsics.h	117;"	d
vxor	src/pseudo_intrinsics.h	172;"	d
vxor	src/pseudo_intrinsics.h	224;"	d
vxor	src/pseudo_intrinsics.h	372;"	d
vxor	src/pseudo_intrinsics.h	500;"	d
w	src/MD5_std.h	/^	MD5_word w[15];$/;"	m	union:__anon24
wait_for_beacon	src/aireplay-ng.c	/^int wait_for_beacon(unsigned char *bssid, unsigned char *capa, char *essid)$/;"	f
wait_for_beacon	src/tkiptun-ng.c	/^int wait_for_beacon(unsigned char *bssid, unsigned char *capa, char *essid)$/;"	f
waiters	lib/csharp/MonoExample/NDesk-dbus/PendingCall.cs	/^		int waiters = 0;$/;"	f	class:NDesk.DBus.PendingCall	file:
watchdog_next	src/besside-ng.c	/^static int watchdog_next(struct network *n)$/;"	f	file:
weight	src/aircrack-ptw-lib.h	/^	int weight;$/;"	m	struct:__anon40
wep	src/airbase-ng.c	/^    char            wep;$/;"	m	struct:Fragment_list	file:
wep	src/airbase-ng.c	/^    int wep;                 \/* capability encryption bit *\/$/;"	m	struct:ST_info	file:
wep	src/aircrack-ng.h	/^} wep;$/;"	v	typeref:struct:WEP_data
wep	src/airtun-ng.c	/^    char            wep;$/;"	m	struct:Fragment_list	file:
wep_crack	src/besside-ng.c	/^static void wep_crack(struct network *n)$/;"	f	file:
wep_crack_start	src/besside-ng.c	/^static void wep_crack_start(struct network *n)$/;"	f	file:
wep_decloak	src/aircrack-ng.h	/^	int wep_decloak;$/;"	m	struct:options
wep_flood	src/besside-ng.c	/^static void wep_flood(void *a)$/;"	f	file:
wepify	src/wesside-ng.c	/^static void wepify(struct wstate *ws, unsigned char* body, int dlen)$/;"	f	file:
wepkey	src/airbase-ng.c	/^    unsigned char wepkey[64];$/;"	m	struct:options	file:
wepkey	src/airdecap-ng.c	/^    unsigned char wepkey[64];$/;"	m	struct:options	file:
wepkey	src/airtun-ng.c	/^    unsigned char wepkey[64];$/;"	m	struct:options	file:
wepkey_crack_success	src/aircrack-ng.c	/^int wepkey_crack_success = 0;$/;"	v
weplen	src/airbase-ng.c	/^    int weplen, crypt;$/;"	m	struct:options	file:
weplen	src/airdecap-ng.c	/^    int weplen, crypt;$/;"	m	struct:options	file:
weplen	src/airtun-ng.c	/^    int weplen, crypt;$/;"	m	struct:options	file:
wiToolsPath	src/osdep/linux.c	/^static char * wiToolsPath(const char * tool)$/;"	f	file:
wi_alloc	src/osdep/osdep.c	/^struct wif *wi_alloc(int sz)$/;"	f
wi_close	src/osdep/osdep.c	/^void wi_close(struct wif *wi)$/;"	f
wi_close	src/osdep/osdep.h	/^	void	(*wi_close)(struct wif *wi);$/;"	m	struct:wif
wi_fd	src/osdep/osdep.c	/^int wi_fd(struct wif *wi)$/;"	f
wi_fd	src/osdep/osdep.h	/^	int	(*wi_fd)(struct wif *wi);$/;"	m	struct:wif
wi_get_channel	src/osdep/osdep.c	/^int wi_get_channel(struct wif *wi)$/;"	f
wi_get_channel	src/osdep/osdep.h	/^        int     (*wi_get_channel)(struct wif *wi);$/;"	m	struct:wif
wi_get_freq	src/osdep/osdep.c	/^int wi_get_freq(struct wif *wi)$/;"	f
wi_get_freq	src/osdep/osdep.h	/^        int     (*wi_get_freq)(struct wif *wi);$/;"	m	struct:wif
wi_get_ifname	src/osdep/osdep.c	/^char *wi_get_ifname(struct wif *wi)$/;"	f
wi_get_mac	src/osdep/osdep.c	/^int wi_get_mac(struct wif *wi, unsigned char *mac)$/;"	f
wi_get_mac	src/osdep/osdep.h	/^	int	(*wi_get_mac)(struct wif *wi, unsigned char *mac);$/;"	m	struct:wif
wi_get_monitor	src/osdep/osdep.c	/^int wi_get_monitor(struct wif *wi)$/;"	f
wi_get_monitor	src/osdep/osdep.h	/^        int     (*wi_get_monitor)(struct wif *wi);$/;"	m	struct:wif
wi_get_mtu	src/osdep/osdep.c	/^int wi_get_mtu(struct wif *wi)$/;"	f
wi_get_mtu	src/osdep/osdep.h	/^	int	(*wi_get_mtu)(struct wif *wi);$/;"	m	struct:wif
wi_get_rate	src/osdep/osdep.c	/^int wi_get_rate(struct wif *wi)$/;"	f
wi_get_rate	src/osdep/osdep.h	/^	int	(*wi_get_rate)(struct wif *wi);$/;"	m	struct:wif
wi_interface	src/osdep/osdep.h	/^        char	wi_interface[MAX_IFACE_NAME];$/;"	m	struct:wif
wi_open	src/osdep/osdep.c	/^struct wif *wi_open(char *iface)$/;"	f
wi_open_osdep	src/osdep/cygwin.c	/^struct wif *wi_open_osdep(char *iface)$/;"	f
wi_open_osdep	src/osdep/darwin.c	/^struct wif *wi_open_osdep(char *iface)$/;"	f
wi_open_osdep	src/osdep/dummy.c	/^struct wif *wi_open_osdep(char *iface)$/;"	f
wi_open_osdep	src/osdep/freebsd.c	/^struct wif *wi_open_osdep(char *iface)$/;"	f
wi_open_osdep	src/osdep/linux.c	/^struct wif *wi_open_osdep(char *iface)$/;"	f
wi_open_osdep	src/osdep/netbsd.c	/^struct wif *wi_open_osdep(char *iface)$/;"	f
wi_open_osdep	src/osdep/openbsd.c	/^struct wif *wi_open_osdep(char *iface)$/;"	f
wi_priv	src/osdep/osdep.c	/^void *wi_priv(struct wif *wi)$/;"	f
wi_priv	src/osdep/osdep.h	/^        void	*wi_priv;$/;"	m	struct:wif
wi_read	src/osdep/osdep.c	/^int wi_read(struct wif *wi, unsigned char *h80211, int len, struct rx_info *ri)$/;"	f
wi_read	src/osdep/osdep.h	/^        int     (*wi_read)(struct wif *wi, unsigned char *h80211, int len,$/;"	m	struct:wif
wi_set_channel	src/osdep/osdep.c	/^int wi_set_channel(struct wif *wi, int chan)$/;"	f
wi_set_channel	src/osdep/osdep.h	/^        int     (*wi_set_channel)(struct wif *wi, int chan);$/;"	m	struct:wif
wi_set_freq	src/osdep/osdep.c	/^int wi_set_freq(struct wif *wi, int freq)$/;"	f
wi_set_freq	src/osdep/osdep.h	/^        int     (*wi_set_freq)(struct wif *wi, int freq);$/;"	m	struct:wif
wi_set_mac	src/osdep/osdep.c	/^int wi_set_mac(struct wif *wi, unsigned char *mac)$/;"	f
wi_set_mac	src/osdep/osdep.h	/^	int	(*wi_set_mac)(struct wif *wi, unsigned char *mac);$/;"	m	struct:wif
wi_set_mtu	src/osdep/osdep.c	/^int wi_set_mtu(struct wif *wi, int mtu)$/;"	f
wi_set_mtu	src/osdep/osdep.h	/^	int	(*wi_set_mtu)(struct wif *wi, int mtu);$/;"	m	struct:wif
wi_set_rate	src/osdep/osdep.c	/^int wi_set_rate(struct wif *wi, int rate)$/;"	f
wi_set_rate	src/osdep/osdep.h	/^	int	(*wi_set_rate)(struct wif *wi, int rate);$/;"	m	struct:wif
wi_write	src/osdep/osdep.c	/^int wi_write(struct wif *wi, unsigned char *h80211, int len,$/;"	f
wi_write	src/osdep/osdep.h	/^        int     (*wi_write)(struct wif *wi, unsigned char *h80211, int len,$/;"	m	struct:wif
wif	src/osdep/osdep.h	/^struct wif {$/;"	s
wif_mtu	src/airbase-ng.c	/^    int wif_mtu;        \/\/MTU of wireless interface$/;"	m	struct:options	file:
wifi_assoc_resp	src/besside-ng.c	/^static void wifi_assoc_resp(struct network *n, struct ieee80211_frame *wh,$/;"	f	file:
wifi_auth	src/besside-ng.c	/^static void wifi_auth(struct network *n, struct ieee80211_frame *wh,$/;"	f	file:
wifi_beacon	src/besside-ng.c	/^static void wifi_beacon(struct network *n, struct ieee80211_frame *wh,$/;"	f	file:
wifi_ctl	src/besside-ng.c	/^static void wifi_ctl(struct ieee80211_frame *wh, int len)$/;"	f	file:
wifi_data	src/besside-ng.c	/^static void wifi_data(struct network *n, struct ieee80211_frame *wh, int len)$/;"	f	file:
wifi_mgt	src/besside-ng.c	/^static void wifi_mgt(struct network *n, struct ieee80211_frame *wh, int len)$/;"	f	file:
wifi_read	src/besside-ng.c	/^static void wifi_read(void)$/;"	f	file:
wifi_send	src/besside-ng.c	/^static void wifi_send(void *p, int len)$/;"	f	file:
window_x2	src/include/if_llc.h	/^		uint8_t window_x2;$/;"	m	struct:llc::__anon6::__anon7
wkp	src/aircrack-ng.h	/^	char * wkp;					 \/* EWSA Project file *\/$/;"	m	struct:options
wkp_frame	src/wkp-frame.h	/^char wkp_frame[WKP_FRAME_LENGTH] = {$/;"	v
wl	src/airodump-ng.h	/^    char * wl;$/;"	m	struct:globals
wl	src/osdep/linux.c	/^    char *wl;$/;"	m	struct:priv_linux	file:
wlanctlng	src/airodump-ng.h	/^    char * wlanctlng;$/;"	m	struct:globals
wlanctlng	src/osdep/linux.c	/^    char *wlanctlng; \/* XXX never set *\/$/;"	m	struct:priv_linux	file:
wme_id	src/include/ieee80211.h	/^	u_int8_t	wme_id;		\/* IEEE80211_ELEMID_VENDOR *\/$/;"	m	struct:ieee80211_wme_info
wme_info	src/include/ieee80211.h	/^	u_int8_t	wme_info;	\/* QoS info *\/$/;"	m	struct:ieee80211_wme_info
wme_len	src/include/ieee80211.h	/^	u_int8_t	wme_len;	\/* length in bytes *\/$/;"	m	struct:ieee80211_wme_info
wme_oui	src/include/ieee80211.h	/^	u_int8_t	wme_oui[3];	\/* 0x00, 0x50, 0xf2 *\/$/;"	m	struct:ieee80211_wme_info
wme_subtype	src/include/ieee80211.h	/^	u_int8_t	wme_subtype;	\/* OUI subtype *\/$/;"	m	struct:ieee80211_wme_info
wme_type	src/include/ieee80211.h	/^	u_int8_t	wme_type;	\/* OUI type *\/$/;"	m	struct:ieee80211_wme_info
wme_version	src/include/ieee80211.h	/^	u_int8_t	wme_version;	\/* spec revision *\/$/;"	m	struct:ieee80211_wme_info
word	src/aircrack-ng.h	/^	char *word;$/;"	m	struct:hashdb_rec
wordcount	src/aircrack-ng.h	/^	long long int wordcount;		\/* Total wordcount for all dicts*\/$/;"	m	struct:options
wordcount	src/aircrack-ng.h	/^	off_t	wordcount;			\/* Total amount of words in dict file *\/$/;"	m	struct:dictfiles
worker	scripts/dcrack.py	/^def worker():$/;"	f
wpa	src/airbase-ng.c	/^    struct WPA_hdsk wpa;     \/* WPA handshake data        *\/$/;"	m	struct:ST_info	typeref:struct:ST_info::WPA_hdsk	file:
wpa	src/aircrack-ng.h	/^	struct WPA_hdsk wpa;		 \/* WPA handshake data           *\/$/;"	m	struct:ST_info	typeref:struct:ST_info::WPA_hdsk
wpa	src/aircrack-ng.h	/^	struct WPA_hdsk wpa;		 \/* valid WPA handshake data     *\/$/;"	m	struct:AP_info	typeref:struct:AP_info::WPA_hdsk
wpa	src/airodump-ng.h	/^    struct WPA_hdsk wpa;     \/* WPA handshake data        *\/$/;"	m	struct:ST_info	typeref:struct:ST_info::WPA_hdsk
wpa	src/ivstools.c	/^    struct WPA_hdsk wpa;     \/* WPA handshake data        *\/$/;"	m	struct:ST_info	typeref:struct:ST_info::WPA_hdsk	file:
wpa	src/tkiptun-ng.c	/^    struct WPA_hdsk wpa;    \/* valid WPA handshake data     *\/$/;"	m	struct:options	typeref:struct:options::WPA_hdsk	file:
wpa1type	src/airbase-ng.c	/^    int wpa1type;$/;"	m	struct:options	file:
wpa2type	src/airbase-ng.c	/^    int wpa2type;$/;"	m	struct:options	file:
wpa_authselcnt	src/include/ieee80211.h	/^	u_int16_t	wpa_authselcnt;	\/* authentication selector cnt*\/$/;"	m	struct:ieee80211_ie_wpa
wpa_authsels	src/include/ieee80211.h	/^	u_int32_t	wpa_authsels[8];\/* selectors *\/$/;"	m	struct:ieee80211_ie_wpa
wpa_bssid	src/airodump-ng.h	/^    unsigned char wpa_bssid[6];   \/* the wpa handshake bssid   *\/$/;"	m	struct:globals
wpa_caps	src/include/ieee80211.h	/^	u_int16_t	wpa_caps;	\/* 802.11i capabilities *\/$/;"	m	struct:ieee80211_ie_wpa
wpa_client	src/airbase-ng.c	/^int wpa_client(struct ST_info *st_cur,unsigned char* tag, int length)$/;"	f
wpa_crack	src/besside-ng.c	/^static void wpa_crack(struct network *n)$/;"	f	file:
wpa_data	src/aircrack-ng.c	/^struct WPA_data wpa_data[MAX_THREADS];$/;"	v	typeref:struct:WPA_data
wpa_essid	src/tkiptun-ng.c	/^    char  wpa_essid[256];   \/* essid used for calculating the pmk out of the psk *\/$/;"	m	struct:options	file:
wpa_id	src/include/ieee80211.h	/^	u_int8_t	wpa_id;		\/* IEEE80211_ELEMID_VENDOR *\/$/;"	m	struct:ieee80211_ie_wpa
wpa_len	src/include/ieee80211.h	/^	u_int8_t	wpa_len;	\/* length in bytes *\/$/;"	m	struct:ieee80211_ie_wpa
wpa_mcipher	src/include/ieee80211.h	/^	u_int32_t	wpa_mcipher[1];	\/* multicast\/group key cipher *\/$/;"	m	struct:ieee80211_ie_wpa
wpa_oui	src/include/ieee80211.h	/^	u_int8_t	wpa_oui[3];	\/* 0x00, 0x50, 0xf2 *\/$/;"	m	struct:ieee80211_ie_wpa
wpa_pmkidcnt	src/include/ieee80211.h	/^	u_int16_t	wpa_pmkidcnt;	\/* 802.11i pmkid count *\/$/;"	m	struct:ieee80211_ie_wpa
wpa_pmkids	src/include/ieee80211.h	/^	u_int16_t	wpa_pmkids[8];	\/* 802.11i pmkids *\/$/;"	m	struct:ieee80211_ie_wpa
wpa_receive_passphrase	src/aircrack-ng.c	/^inline int wpa_receive_passphrase(char *key, struct WPA_data* data)$/;"	f
wpa_send_passphrase	src/aircrack-ng.c	/^inline int wpa_send_passphrase(char *key, struct WPA_data* data, int lock)$/;"	f
wpa_sta	src/tkiptun-ng.c	/^    struct WPA_ST_info wpa_sta; \/* used to calculate the pmk *\/$/;"	m	struct:options	typeref:struct:options::WPA_ST_info	file:
wpa_stored	src/ivstools.c	/^    int wpa_stored;           \/* wpa stored in ivs file?   *\/$/;"	m	struct:AP_info	file:
wpa_time	src/tkiptun-ng.c	/^    time_t wpa_time;           \/* time when the wpa handshake arrived *\/$/;"	m	struct:options	file:
wpa_type	src/include/ieee80211.h	/^	u_int8_t	wpa_type;	\/* OUI type *\/$/;"	m	struct:ieee80211_ie_wpa
wpa_uciphercnt	src/include/ieee80211.h	/^	u_int16_t	wpa_uciphercnt;	\/* # pairwise key ciphers *\/$/;"	m	struct:ieee80211_ie_wpa
wpa_uciphers	src/include/ieee80211.h	/^	u_int32_t	wpa_uciphers[8];\/* ciphers *\/$/;"	m	struct:ieee80211_ie_wpa
wpa_upload	src/besside-ng.c	/^static void wpa_upload(void)$/;"	f	file:
wpa_version	src/include/ieee80211.h	/^	u_int16_t	wpa_version;	\/* spec revision *\/$/;"	m	struct:ieee80211_ie_wpa
wpa_wordlists_done	src/aircrack-ng.c	/^int wpa_wordlists_done = 0;$/;"	v
wpahash	src/airbase-ng.c	/^    int wpahash;             \/* 1=md5(tkip) 2=sha1(ccmp)  *\/$/;"	m	struct:ST_info	file:
wpapass	src/wpapsk.c	/^wpapsk_password *wpapass[128]	= { 0 };$/;"	v
wpapsk_password	src/wpapsk.h	/^struct wpapsk_password {$/;"	s
wpapsk_password	src/wpapsk.h	/^} wpapsk_password;$/;"	t	typeref:struct:__anon34
wpapsk_sse	src/wpapsk.c	/^static MAYBE_INLINE void wpapsk_sse(int threadid, int count, char *salt, wpapsk_password * in)$/;"	f	file:
wpatype	src/airbase-ng.c	/^    int wpatype;             \/* 1=wpa1 2=wpa2             *\/$/;"	m	struct:ST_info	file:
wps	src/airodump-ng.h	/^    struct WPS_info wps;$/;"	m	struct:AP_info	typeref:struct:AP_info::WPS_info
wrap	src/buddy-ng.c	/^int wrap;$/;"	v
writeLock	lib/csharp/MonoExample/NDesk-dbus/Connection.cs	/^		object writeLock = new object ();$/;"	f	class:NDesk.DBus.Connection	file:
writeMethods	lib/csharp/MonoExample/NDesk-dbus/TypeImplementer.cs	/^		static Dictionary<Type,MethodInfo> writeMethods = new Dictionary<Type,MethodInfo> ();$/;"	f	class:NDesk.DBus.TypeImplementer	file:
write_cap_packet	src/packetforge-ng.c	/^int write_cap_packet(unsigned char* packet, int length)$/;"	f
write_packet	src/airdecap-ng.c	/^int write_packet( FILE *f_out, struct pcap_pkthdr *pkh, unsigned char *h80211 )$/;"	f
write_packet	src/airdecloak-ng.c	/^BOOLEAN write_packet(FILE * file, struct packet_elt * packet)$/;"	f
write_packets	src/airdecloak-ng.c	/^BOOLEAN write_packets() {$/;"	f
write_pcap	src/besside-ng.c	/^static void write_pcap(int fd, void *p, int len)$/;"	f	file:
write_pcap	src/wpaclean.c	/^static void write_pcap(int fd, void *p, int len)$/;"	f	file:
writer	lib/csharp/MonoExample/NDesk-dbus/Introspection.cs	/^		protected XmlWriter writer;$/;"	f	class:NDesk.DBus.Introspector
ws	src/airodump-ng.h	/^    struct winsize ws;      \/* console window size  *\/$/;"	m	struct:globals	typeref:struct:globals::winsize
ws_ack_timeout	src/wesside-ng.c	/^	unsigned int		ws_ack_timeout;$/;"	m	struct:wstate	file:
ws_apchan	src/wesside-ng.c	/^	int			ws_apchan;$/;"	m	struct:wstate	file:
ws_arpsend	src/wesside-ng.c	/^	struct timeval		ws_arpsend;$/;"	m	struct:wstate	typeref:struct:wstate::timeval	file:
ws_bss	src/wesside-ng.c	/^	unsigned char		ws_bss[6];$/;"	m	struct:wstate	file:
ws_chan	src/wesside-ng.c	/^	int			ws_chan;$/;"	m	struct:wstate	file:
ws_cipher	src/wesside-ng.c	/^	unsigned char		*ws_cipher;$/;"	m	struct:wstate	file:
ws_clen	src/wesside-ng.c	/^	int			ws_clen;$/;"	m	struct:wstate	file:
ws_crack_dur	src/wesside-ng.c	/^	int			ws_crack_dur;$/;"	m	struct:wstate	file:
ws_crack_pid	src/wesside-ng.c	/^	int			ws_crack_pid;$/;"	m	struct:wstate	file:
ws_crack_start	src/wesside-ng.c	/^	struct timeval		ws_crack_start;$/;"	m	struct:wstate	typeref:struct:wstate::timeval	file:
ws_dfs	src/wesside-ng.c	/^	struct frag_state	ws_dfs;$/;"	m	struct:wstate	typeref:struct:wstate::frag_state	file:
ws_dpi	src/wesside-ng.c	/^	struct prga_info	ws_dpi;$/;"	m	struct:wstate	typeref:struct:wstate::prga_info	file:
ws_fd	src/wesside-ng.c	/^	int			ws_fd;$/;"	m	struct:wstate	file:
ws_fs	src/wesside-ng.c	/^	struct frag_state	ws_fs;$/;"	m	struct:wstate	typeref:struct:wstate::frag_state	file:
ws_have_mac	src/wesside-ng.c	/^	int			ws_have_mac;$/;"	m	struct:wstate	file:
ws_ignore_ack	src/wesside-ng.c	/^	int			ws_ignore_ack;$/;"	m	struct:wstate	file:
ws_iv	src/wesside-ng.c	/^	unsigned char		ws_iv[3];$/;"	m	struct:wstate	file:
ws_last_wcount	src/wesside-ng.c	/^	struct timeval		ws_last_wcount;$/;"	m	struct:wstate	typeref:struct:wstate::timeval	file:
ws_last_wep_count	src/wesside-ng.c	/^	unsigned int		ws_last_wep_count;$/;"	m	struct:wstate	file:
ws_lasthop	src/wesside-ng.c	/^	struct timeval		ws_lasthop;$/;"	m	struct:wstate	typeref:struct:wstate::timeval	file:
ws_max_chan	src/wesside-ng.c	/^	int			ws_max_chan;$/;"	m	struct:wstate	file:
ws_min_prga	src/wesside-ng.c	/^	int			ws_min_prga;$/;"	m	struct:wstate	file:
ws_myip	src/wesside-ng.c	/^	char			ws_myip[16];$/;"	m	struct:wstate	file:
ws_mymac	src/wesside-ng.c	/^	unsigned char		ws_mymac[6];$/;"	m	struct:wstate	file:
ws_netip	src/wesside-ng.c	/^	char			*ws_netip;$/;"	m	struct:wstate	file:
ws_netip_arg	src/wesside-ng.c	/^	int			ws_netip_arg;$/;"	m	struct:wstate	file:
ws_packets	src/wesside-ng.c	/^	unsigned int		ws_packets;$/;"	m	struct:wstate	file:
ws_pi	src/wesside-ng.c	/^	struct prga_info	ws_pi;$/;"	m	struct:wstate	typeref:struct:wstate::prga_info	file:
ws_psent	src/wesside-ng.c	/^	unsigned int		ws_psent;$/;"	m	struct:wstate	file:
ws_ptw	src/wesside-ng.c	/^	PTW_attackstate		*ws_ptw;$/;"	m	struct:wstate	file:
ws_rate	src/wesside-ng.c	/^	unsigned int		ws_rate;$/;"	m	struct:wstate	file:
ws_real_start	src/wesside-ng.c	/^	struct timeval		ws_real_start;$/;"	m	struct:wstate	typeref:struct:wstate::timeval	file:
ws_retries	src/wesside-ng.c	/^	int			ws_retries;$/;"	m	struct:wstate	file:
ws_rtrmac	src/wesside-ng.c	/^	unsigned char		*ws_rtrmac;$/;"	m	struct:wstate	file:
ws_ssid	src/wesside-ng.c	/^	char			*ws_ssid;$/;"	m	struct:wstate	file:
ws_state	src/wesside-ng.c	/^	int			ws_state;$/;"	m	struct:wstate	file:
ws_thresh_incr	src/wesside-ng.c	/^	int			ws_thresh_incr;$/;"	m	struct:wstate	file:
ws_tsent	src/wesside-ng.c	/^	struct timeval		ws_tsent;$/;"	m	struct:wstate	typeref:struct:wstate::timeval	file:
ws_victim_mac	src/wesside-ng.c	/^	unsigned char		*ws_victim_mac;$/;"	m	struct:wstate	file:
ws_waiting_ack	src/wesside-ng.c	/^	int			ws_waiting_ack;$/;"	m	struct:wstate	file:
ws_wep_thresh	src/wesside-ng.c	/^	int			ws_wep_thresh;$/;"	m	struct:wstate	file:
ws_wi	src/wesside-ng.c	/^	struct wif		*ws_wi;$/;"	m	struct:wstate	typeref:struct:wstate::wif	file:
wstate	src/wesside-ng.c	/^struct wstate {$/;"	s	file:
wstate2str	src/besside-ng.c	/^static const char *wstate2str(int astate)$/;"	f	file:
x	scripts/airdrop-ng/airdrop/libOuiParse.py	/^    x = macOUI_lookup()$/;"	v	class:macOUI_lookup
x	src/crypto.h	/^    int x, y, m[256];$/;"	m	struct:rc4_state
x0123	src/aircrack-ptw-lib.c	/^static const uint32_t __attribute__((used)) __attribute__((aligned (16))) x0123 [4] = { 0, 1, 2, 3 };$/;"	v	file:
x4444	src/aircrack-ptw-lib.c	/^static const uint32_t __attribute__((used)) __attribute__((aligned (16))) x4444 [4] = { 4, 4, 4, 4 };$/;"	v	file:
xmalloc	src/besside-ng.c	/^static void *xmalloc(size_t sz)$/;"	f	file:
xmitcount	src/airbase-ng.c	/^    int             xmitcount;      \/* how often was this frame sent *\/$/;"	m	struct:CF_packet	file:
xml	lib/csharp/MonoExample/NDesk-dbus/Introspection.cs	/^		public string xml;$/;"	f	class:NDesk.DBus.Introspector
xor	src/easside-ng.c	/^void xor(void *out, void *clear, void *cipher, int len)$/;"	f
xor_keystream	src/airbase-ng.c	/^int xor_keystream(unsigned char *ph80211, unsigned char *keystream, int len)$/;"	f
xor_keystream	src/aireplay-ng.c	/^int xor_keystream(unsigned char *ph80211, unsigned char *keystream, int len)$/;"	f
xor_keystream	src/airtun-ng.c	/^int xor_keystream(unsigned char *ph80211, unsigned char *keystream, int len)$/;"	f
xor_keystream	src/tkiptun-ng.c	/^int xor_keystream(unsigned char *ph80211, unsigned char *keystream, int len)$/;"	f
xpmk1	src/wpapsk.c	/^unsigned char *xpmk1[128]	= { NULL };$/;"	v
xpmk2	src/wpapsk.c	/^unsigned char *xpmk2[128]	= { NULL };$/;"	v
xpmk3	src/wpapsk.c	/^unsigned char *xpmk3[128]	= { NULL };$/;"	v
xpmk4	src/wpapsk.c	/^unsigned char *xpmk4[128]	= { NULL };$/;"	v
xpmk5	src/wpapsk.c	/^unsigned char *xpmk5[128]	= { NULL };$/;"	v
xpmk6	src/wpapsk.c	/^unsigned char *xpmk6[128]	= { NULL };$/;"	v
xpmk7	src/wpapsk.c	/^unsigned char *xpmk7[128]	= { NULL };$/;"	v
xpmk8	src/wpapsk.c	/^unsigned char *xpmk8[128]	= { NULL };$/;"	v
xsse_crypt1	src/wpapsk.c	/^unsigned char *xsse_crypt1[128] = { NULL };$/;"	v
xsse_crypt2	src/wpapsk.c	/^unsigned char *xsse_crypt2[128] = { NULL };$/;"	v
xsse_hash1	src/wpapsk.c	/^unsigned char *xsse_hash1[128]	= { NULL };$/;"	v
xstr	src/osdep/cygwin.c	40;"	d	file:
y	src/crypto.h	/^    int x, y, m[256];$/;"	m	struct:rc4_state
yno	scripts/airdrop-ng/old-installers/install.py	/^yno = raw_input ("Clean up? (y\/n): ")$/;"	v
yno	scripts/airdrop-ng/old-installers/uninstall.py	/^yno = raw_input ("You shouldn't need this. Remove? (y\/n): ")$/;"	v
~DProxy	lib/csharp/MonoExample/NDesk-dbus/DProxy.cs	/^		~DProxy ()$/;"	m	class:NDesk.DBus.DProxy	file:
