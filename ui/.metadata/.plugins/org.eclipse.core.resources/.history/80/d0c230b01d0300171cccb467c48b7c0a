<%@page import="java.io.ByteArrayOutputStream"%>
<%@page import="java.io.FileWriter"%>
<%@page import="java.io.ByteArrayInputStream"%>
<%@page import="java.util.Base64"%>
<%@page import="java.util.Base64.Decoder"%>
<%@page import="air.wips.inspect.error.GoodBad"%>
<%@page import="com.google.gson.Gson"%>
<%@page import="air.wips.inspect.servlet.HttpGet"%><%@
page language="java" contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"%><%
	
try {
	HttpGet.debugRequestParameterValues(request);

	String [] chartImgs = HttpGet.vals(request, "chart_img");
	String [] configIds = HttpGet.vals(request, "config_id");
	String profileId = HttpGet.get(request, "profile_id");
	
	if (profileId == null) {
		throw new Exception("Unknown profile id");
	}
	if (chartImgs == null) {
		throw new Exception("empty chart images");
	}
	if (configIds == null) {
		throw new Exception("empty config id list");
	}
	if (chartImgs.length != configIds.length) {
		throw new Exception("mismatch chart and config count");
	}
	
	for (int i=0; i<chartImgs.length; i++) {
		String imgDataBase64 = chartImgs[i].replaceAll("data:image/png;base64,", "");
		byte [] imgDataRow = Base64.getDecoder().decode(imgDataBase64);
		FileWriter fw = new FileWriter(new ByteArrayInputStream(imgDataRow));
	}
	
	
} catch (Exception e) {
	response.getWriter().print(new Gson().toJson(new GoodBad().bad(e)));
}
%>