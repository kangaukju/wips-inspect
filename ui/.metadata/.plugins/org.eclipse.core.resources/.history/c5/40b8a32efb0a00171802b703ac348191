package air.wips.inspect.utils;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.FilenameFilter;
import java.io.IOError;
import java.io.IOException;
import java.nio.channels.FileChannel;
import java.util.List;

import air.wips.inspect.conf.XmlAirConfEnv;

public class FileUtil {

	
	public static String getContent(final String filename) {
		File f = new File(filename);
		if (!f.exists()) {
			return "";
		}
		String line = null;
		BufferedReader br = null;
		StringBuffer sb = new StringBuffer();
		try {
			br = new BufferedReader(new FileReader(f));
			while ((line = br.readLine()) != null) {
				sb.append(line);
				sb.append("\n");
			}
		} catch (Exception e) {
			e.printStackTrace();
		} finally {
			try {
				if (br != null) { br.close(); }
			} catch (Exception e) {}
		}
		return sb.toString();
	}
	
	static public boolean copy(String from, String to) {
		FileInputStream is = null;
		FileOutputStream os = null;
		FileChannel fcin = null;
		FileChannel fcout = null;
		
		if (new File(from).exists() == false) {
			return false;
		}
		try {
			is = new FileInputStream(new File(from));
			os = new FileOutputStream(new File(to));
			fcin = is.getChannel();
			fcout = os.getChannel();
			
			fcin.transferTo(0, fcin.size(), fcout);
			
		} catch (IOException e) {
			e.printStackTrace();
			return false;
		} finally {
			try {
				if (fcout != null) fcout.close();
				if (fcin != null) fcin.close();
				if (is != null) is.close();
				if (os != null) os.close();
			} catch (IOException e) { }
		}
		return true;
	}
	
	String[] scanFile(String home, String regex) {
		File directory = new File(home);
		if (!directory.isDirectory()) {
			return null;
		}
		
		return directory.list(new FilenameFilter() {
			public boolean accept(File dir, String name) {
				// TODO Auto-generated method stub
				return false;
			}
		});
	}
	
	public static void main(String [] args) {
		FileUtil.copy("/home/kinow/git/wips-inspect/tomcat/history/1489732309825/C_1489725017171.pcap", "/tmp/kaka.pcap");
	}
}
