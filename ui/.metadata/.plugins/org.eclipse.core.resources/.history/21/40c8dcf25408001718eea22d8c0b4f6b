package test;

import java.io.BufferedReader;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.PrintStream;

import com.example.tutorial.AddressBookProtos.AddressBook;
import com.example.tutorial.AddressBookProtos.Person;
import com.example.tutorial.AddressBookProtos.Person.PhoneType;

public class AddressBookTest {

	public static void main(String[] args) {
		// TODO Auto-generated method stub

		/*
		Person kaka = 
				Person.newBuilder()
				.setId(0)
				.setName("kaka")
				.setEmail("kinow@naver.com")
				.addPhone(
						Person.PhoneNumber.newBuilder()
						.setNumber("010-7239-0421")
						.setType(PhoneType.HOME))
				.build();
		
		System.out.println(kaka);
		System.out.println(kaka.isInitialized());
		*/
		
		String file = "";
		
		AddressBook.Builder addressBook = AddressBook.newBuilder();
		try {
			addressBook.mergeFrom(new FileInputStream(file));
		} catch (IOException e) {
			e.printStackTrace();
		}
		
		addressBook.addPerson(
				
				)
	}

	
	 static class AddPerson {
		public static Person PromptForAddress(BufferedReader stdin, PrintStream stdout) throws IOException {
			Person.Builder person = Person.newBuilder();
			
			stdout.print("Enter person ID: ");
			person.setId(Integer.valueOf(stdin.readLine()));
			
			stdout.print("Enter name: ");
			person.setName(stdin.readLine());
			
			stdout.print("Enter email address (blank for none):");
			String email = stdin.readLine();
			if (email.length() > 0) {
				person.setEmail(email);
			}
			
			while (true) {
				stdout.print("Enter a phone number (or leave blank to finish):");
				String number = stdin.readLine();
				if (number.length() == 0) {
					break;
				}
				

				Person.PhoneNumber.Builder phoneNumber = Person.PhoneNumber.newBuilder();
				phoneNumber.setNumber(number);
				
				stdout.print("Is this a mobile, home, or work phone?");
				String type = stdin.readLine();
				if ("mobile".equalsIgnoreCase(type)) {
					phoneNumber.setType(PhoneType.MOBILE);
				} else if ("home".equalsIgnoreCase(type)) {
					phoneNumber.setType(PhoneType.HOME);
				} else if ("work".equalsIgnoreCase(type)) {
					phoneNumber.setType(PhoneType.WORK);
				} else {
					stdout.println("Unknown phone type. Using default.");
				}				
				person.addPhone(phoneNumber);
			}
			return person.build();
		}
	}
}
