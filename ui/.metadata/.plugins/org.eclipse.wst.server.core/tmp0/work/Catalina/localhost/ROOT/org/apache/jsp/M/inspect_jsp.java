/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.0.M15
 * Generated at: 2017-03-05 11:38:55 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.M;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class inspect_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/M/header.jsp", Long.valueOf(1488709943000L));
    _jspx_dependants.put("/M/footer.jsp", Long.valueOf(1488556500000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("<meta charset=\"UTF-8\">\n");
      out.write("\n");
      out.write("\n");
      out.write("<head>\n");
      out.write("\t<meta charset=\"UTF-8\">\n");
      out.write("\t<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n");
      out.write("\t<title>Wips-Inspect</title>\n");
      out.write("\t<!-- jquery -->\n");
      out.write("\t<script type=\"text/javascript\" src=\"/js/jquery/1.11.1/jquery-1.11.1.min.js\"></script>\n");
      out.write("\t<link rel=\"stylesheet\" href=\"/js/jquery/ui/jquery-ui-1.12.1/jquery-ui.css\">\n");
      out.write("\t<script type=\"text/javascript\" src=\"/js/jquery/ui/jquery-ui-1.12.1/jquery-ui.js\"></script>\n");
      out.write("\t<!-- json2html -->\t\n");
      out.write("\t<script type=\"text/javascript\" src=\"/js/jquery.json2html.js\"></script>\n");
      out.write("\t<script type=\"text/javascript\" src=\"/js/json2html.js\"></script>\t\t\n");
      out.write("\t<!-- https://cdnjs.com/libraries/c3  -->\n");
      out.write("\t<link rel=\"stylesheet\" href=\"/js/c3/0.4.11/c3.min.css\"/>\t\n");
      out.write("\t<script type=\"text/javascript\" src=\"/js/d3/d3.v3.min.js\"></script>\n");
      out.write("\t<script type=\"text/javascript\" src=\"/js/c3/0.4.11/c3.min.js\"></script>\n");
      out.write("\t<!-- icheck -->\n");
      out.write("\t<script type=\"text/javascript\" src=\"/js/icheck/icheck.min.js\"></script>\n");
      out.write("\t<link rel=\"stylesheet\" href=\"/js/icheck/skins/all.css\">\n");
      out.write("\t<!-- tablesorter -->\n");
      out.write("\t<link rel=\"stylesheet\" href=\"/js/tablesorter-master/css/theme.default.css\">\n");
      out.write("\t<script type=\"text/javascript\" src=\"/js/tablesorter-master/js/jquery.tablesorter.js\"></script>\n");
      out.write("\t<script type=\"text/javascript\" src=\"/js/tablesorter-master/js/jquery.tablesorter.widgets.js\"></script>\n");
      out.write("\t<!-- loading -->\n");
      out.write("\t<script src=\"/js/loading/jquery.loading.min.js\"></script>\n");
      out.write("\t<link rel=\"stylesheet\" href=\"/js/loading/jquery.loading.min.css\">\n");
      out.write("\t<!-- animatedModal -->\n");
      out.write("\t<script src=\"/js/animatedModal/animatedModal.js\"></script>\n");
      out.write("\t<link rel=\"stylesheet\" href=\"/js/animatedModal/normalize.min.css\">\n");
      out.write("\t<link rel=\"stylesheet\" href=\"/js/animatedModal/animate.min.css\">\n");
      out.write("\t<!-- my js -->\n");
      out.write("\t<script src=\"/js/multiCharts.js\"></script>\n");
      out.write("\t<script src=\"/js/get_set.js\"></script>\n");
      out.write("\t<script src=\"/js/err.js\"></script>\n");
      out.write("\t<script src=\"/js/wifi_protocol.js\"></script>\t\n");
      out.write("\t<script src=\"/js/inspectChart.js\"></script>\n");
      out.write("\t<style type=\"text/css\">\n");
      out.write("\t* {\n");
      out.write("\t\tfont: 13px/18px Arial, Sans-serif;\n");
      out.write("\t\tfont-weight: bold;\n");
      out.write("\t}\n");
      out.write("\ttable.tablesorter thead tr th {\n");
      out.write("\t\tbackground: #407bbf;\n");
      out.write("\t\tcolor: #fff;\n");
      out.write("\t}\n");
      out.write("\ttable.tablesorter_r thead tr th {\n");
      out.write("\t\tbackground: #ffa31a;\n");
      out.write("\t\tcolor: #fff;\n");
      out.write("\t}\n");
      out.write("\ttable.tablesorter thead tr, table.tablesorter tbody tr {\n");
      out.write("\t\tcursor: pointer;\n");
      out.write("\t\theight: 35px;\n");
      out.write("\t}\n");
      out.write("\ttable.tablesorter tbody tr.selected td {\n");
      out.write("   \tbackground: none repeat scroll 0 0 #ffa31a;\n");
      out.write("   \tcolor: #fff;\n");
      out.write("\t}\n");
      out.write("\ttable.tablesorter_r tbody tr.selected td {\n");
      out.write("   \tbackground: none repeat scroll 0 0 #407bbf;\n");
      out.write("   \tcolor: #fff;\n");
      out.write("\t}\n");
      out.write("\timg {\n");
      out.write("\t\tvertical-align: middle;\n");
      out.write("\t}\n");
      out.write("\tinput {\n");
      out.write("\t\tvertical-align: middle;\n");
      out.write("\t}\n");
      out.write("\tinput[type=text], select {\n");
      out.write("    width: 90%;\n");
      out.write("    padding: 3px 5px;\n");
      out.write("    display: inline-block;\n");
      out.write("    border: 1px solid #ccc;\n");
      out.write("    border-radius: 4px;\n");
      out.write("    box-sizing: border-box;\n");
      out.write("    background: #fff;\n");
      out.write("\t}\n");
      out.write("\t.head_img {\n");
      out.write("\t\twidth: 20px;\n");
      out.write("\t}\n");
      out.write("\t.action_img {\n");
      out.write("\t\tcursor: pointer;\n");
      out.write("\t\twidth: 30px;\n");
      out.write("\t}\n");
      out.write("\t.table_img {\n");
      out.write("\t\tpadding: 0px;\n");
      out.write("\t\tmargin: 0px;\n");
      out.write("\t\tcursor: pointer;\n");
      out.write("\t\twidth: 20px;\n");
      out.write("\t}\n");
      out.write("\t.main_fieldset {\n");
      out.write("\t\tbackground: #ddd;\n");
      out.write("\t\tborder: 2px solid #407bbf;\n");
      out.write("\t\tborder-radius: 5px;\n");
      out.write("\t\tmargin-top: 10px;\n");
      out.write("\t\tmargin-bottom: 10px;\n");
      out.write("\t\tpadding: 10px;\n");
      out.write("\t}\n");
      out.write("\t.main_fieldset > legend {\n");
      out.write("\t\tbackground: #407bbf;\n");
      out.write("    color: #fff;\n");
      out.write("    padding: 5px 10px ;\n");
      out.write("    font-size: 18px;\n");
      out.write("    border-radius: 5px;\n");
      out.write("    box-shadow: 0 0 0 5px #ddd;\n");
      out.write("    margin-left: 20px;\n");
      out.write("\t}\n");
      out.write("\t.main_fieldset > legend > span {\n");
      out.write("\t\tfont-size: 18px;\n");
      out.write("\t}\n");
      out.write("\t.sub_fieldset {\n");
      out.write("\t\tbackground: #ddd;\n");
      out.write("\t\tborder: 2px solid #666C73;\n");
      out.write("\t\tborder-radius: 5px;\n");
      out.write("\t\tmargin-top: 10px;\n");
      out.write("\t\tmargin-bottom: 10px;\n");
      out.write("\t\tpadding: 10px;\n");
      out.write("\t}\n");
      out.write("\t.sub_fieldset > legend {\n");
      out.write("\t\tbackground: #666C73;\n");
      out.write("\t\tcolor: #fff;\n");
      out.write("\t\tpadding: 5px 10px ;\n");
      out.write("\t\tfont-size: 15px;\n");
      out.write("\t\tborder-radius: 5px;\n");
      out.write("\t\tbox-shadow: 0 0 0 5px #ddd;\n");
      out.write("\t\tmargin-left: 20px;\n");
      out.write("\t}\n");
      out.write("\t.sub_fieldset > legend > span {\n");
      out.write("\t\tfont-size: 15px;\n");
      out.write("\t}\n");
      out.write("\t.main_fieldset_r {\n");
      out.write("\t\tbackground: #ddd;\n");
      out.write("\t\tborder: 2px solid #ffa31a;\n");
      out.write("\t\tborder-radius: 5px;\n");
      out.write("\t\tmargin-top: 10px;\n");
      out.write("\t\tmargin-bottom: 10px;\n");
      out.write("\t\tpadding: 10px;\n");
      out.write("\t}\n");
      out.write("\t.main_fieldset_r > legend {\n");
      out.write("\t\tbackground: #ffa31a;\n");
      out.write("    color: #fff;\n");
      out.write("    padding: 5px 10px ;\n");
      out.write("    font-size: 18px;\n");
      out.write("    border-radius: 5px;\n");
      out.write("    box-shadow: 0 0 0 5px #ddd;\n");
      out.write("    margin-left: 20px;\n");
      out.write("\t}\n");
      out.write("\t.main_fieldset_r > legend > span {\n");
      out.write("\t\tfont-size: 18px;\n");
      out.write("\t}\n");
      out.write("\t.sub_fieldset_r {\n");
      out.write("\t\tbackground: #ddd;\n");
      out.write("\t\tborder: 2px solid #666C73;\n");
      out.write("\t\tborder-radius: 5px;\n");
      out.write("\t\tmargin-top: 10px;\n");
      out.write("\t\tmargin-bottom: 10px;\n");
      out.write("\t\tpadding: 10px;\n");
      out.write("\t}\n");
      out.write("\t.sub_fieldset_r > legend {\n");
      out.write("\t\tbackground: #666C73;\n");
      out.write("\t\tcolor: #fff;\n");
      out.write("\t\tpadding: 5px 10px ;\n");
      out.write("\t\tfont-size: 15px;\n");
      out.write("\t\tborder-radius: 5px;\n");
      out.write("\t\tbox-shadow: 0 0 0 5px #ddd;\n");
      out.write("\t\tmargin-left: 20px;\n");
      out.write("\t}\n");
      out.write("\t.sub_fieldset_r > legend > span {\n");
      out.write("\t\tfont-size: 15px;\n");
      out.write("\t}\n");
      out.write("\t.title {\n");
      out.write("\t\tcursor: pointer;\n");
      out.write("\t\tvertical-align: middle;\n");
      out.write("\t\ttext-align: center;\n");
      out.write("\t\tpadding: 5px;\n");
      out.write("\t}\n");
      out.write("\t.title_img {\t\t\n");
      out.write("\t\twidth: 30px;\n");
      out.write("\t}\n");
      out.write("\t.hidden {\n");
      out.write("\t\tdisplay: none;\n");
      out.write("\t}\n");
      out.write("\t.head_link_img {\n");
      out.write("\t\twidth: 25px;\n");
      out.write("\t\tcursor: pointer;\n");
      out.write("\t}\n");
      out.write("\t.icon_img {\n");
      out.write("\t\twidth: 25px;\n");
      out.write("\t\theight: 25px;\n");
      out.write("\t\tvertical-align: middle;\n");
      out.write("\t\tcursor: pointer;\n");
      out.write("\t}\n");
      out.write("\t.pop_error {\n");
      out.write("\t\tfont: 18px Arial, Sans-serif;\n");
      out.write("\t\tfont-weight: bold;\n");
      out.write("\t\tpadding: 20px;\n");
      out.write("\t\tbackground-color: #f44336; /* Red */\n");
      out.write("\t\tcolor: white;\n");
      out.write("\t\tmargin-bottom: 15px;\n");
      out.write("\t}\n");
      out.write("\t.pop_success {\n");
      out.write("\t\tfont: 18px Arial, Sans-serif;\n");
      out.write("\t\tfont-weight: bold;\n");
      out.write("\t\tpadding: 20px;\n");
      out.write("\t\tbackground-color: #4CAF50; /* Green */\n");
      out.write("\t\tcolor: white;\n");
      out.write("\t\tmargin-bottom: 15px;\n");
      out.write("\t}\n");
      out.write("\t.pop_info {\n");
      out.write("\t\tfont: 18px Arial, Sans-serif;\n");
      out.write("\t\tfont-weight: bold;\n");
      out.write("\t\tpadding: 20px;\n");
      out.write("\t\tbackground-color: #2196F3; /* Blue */\n");
      out.write("\t\tcolor: white;\n");
      out.write("\t\tmargin-bottom: 15px;\n");
      out.write("\t}\n");
      out.write("\t.pop_warning {\n");
      out.write("\t\tfont: 18px Arial, Sans-serif;\n");
      out.write("\t\tfont-weight: bold;\n");
      out.write("\t\tpadding: 20px;\n");
      out.write("\t\tbackground-color: #ff9800; /* Yellow */\n");
      out.write("\t\tcolor: white;\n");
      out.write("\t\tmargin-bottom: 15px;\n");
      out.write("\t}\n");
      out.write("\t</style>\n");
      out.write("\t<link rel=\"shortcut icon\" href=\"/img/M/wifi.ico\">\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("<table style=\"width: 100%;\">\n");
      out.write("\t<tr>\n");
      out.write("\t\t<td class=\"title\" width=\"150px;\">\n");
      out.write("\t\t\t<img class=\"title_img\" src=\"/img/M/wifi.svg\">&nbsp;&nbsp;<b>WIPS INSPECTOR</b>\n");
      out.write("\t\t</td>\n");
      out.write("\t\t<td align=\"right\">\n");
      out.write("\t\t\t<img class=\"head_link_img home_link_inspect\"      src=\"/img/M/analytics_balls.svg\">\n");
      out.write("\t\t\t<img class=\"head_link_img home_link_profile_list\" src=\"/img/M/edit2.svg\">\n");
      out.write("\t\t\t<img class=\"head_link_img home_link_config_list\"  src=\"/img/M/config4.svg\">\n");
      out.write("\t\t\t<img class=\"head_link_img home_link_setting_list\" src=\"/img/M/setting2.svg\">\n");
      out.write("\t\t</td>\n");
      out.write("\t</tr>\n");
      out.write("</table>\n");
      out.write("<script type=\"text/javascript\">\n");
      out.write("function CtrlAlt() {\n");
      out.write("\tif (event.keyCode == 17) { return false; }\n");
      out.write("\tif (event.keyCode == 18) { return false; }\n");
      out.write("\tif (event.keyCode == 91) { event.keyCode = 505; }\n");
      out.write("\tif (event.keyCode > 112 && event.keyCode < 123){ event.keyCode = 505; }\n");
      out.write("\tif (event.keyCode == 505) { return false; }\n");
      out.write("\tif(event.keyCode === 37 || event.keyCode === 38 || event.keyCode === 39 || event.keyCode === 40) {\n");
      out.write("\t\treturn false;\n");
      out.write("\t}\n");
      out.write("}\n");
      out.write("if (0) {\n");
      out.write("\tdocument.onkeydown = CtrlAlt;\n");
      out.write("\tdocument.onmousedown = CtrlAlt;\n");
      out.write("\t\n");
      out.write("\t$(window.document).ready(function(){\n");
      out.write("\t\t$(window.document).on(\"contextmenu\", function(event){return false;});\t//우클릭방지\n");
      out.write("\t\t$(window.document).on(\"selectstart\", function(event){return false;});\t//더블클릭을 통한 선택방지\n");
      out.write("\t\t$(window.document).on(\"dragstart\"\t, function(event){return false;});\t//드래그\n");
      out.write("\t});\n");
      out.write("\t\n");
      out.write("\t$(document).keydown(function (e) {\n");
      out.write("\t\t// F5, ctrl + F5, ctrl + r 새로고침 막기\n");
      out.write("\t\tvar allowPageList   = new Array('/a.php', '/b.php');\n");
      out.write("\t\tvar bBlockF5Key     = true;\n");
      out.write("\t\tfor (number in allowPageList) {\n");
      out.write("\t\t\tvar regExp = new RegExp('^' + allowPageList[number] + '.*', 'i');\n");
      out.write("\t\t\tif (regExp.test(document.location.pathname)) {\n");
      out.write("\t\t\t\tbBlockF5Key = false;\n");
      out.write("\t\t\t\tbreak;\n");
      out.write("\t\t\t}\n");
      out.write("\t\t}\n");
      out.write("\t     \n");
      out.write("\t\tif (bBlockF5Key) {\n");
      out.write("\t\t\tif (e.which === 116) {\n");
      out.write("\t\t\t\tif (typeof event == \"object\") {\n");
      out.write("\t\t\t\t\tevent.keyCode = 0;\n");
      out.write("\t\t\t\t}\n");
      out.write("\t\t\t\treturn false;\n");
      out.write("\t\t\t} else if (e.which === 82 && e.ctrlKey) {\n");
      out.write("\t\t\t\treturn false;\n");
      out.write("\t\t\t}\n");
      out.write("\t\t}\n");
      out.write("\t});\n");
      out.write("}\n");
      out.write("\n");
      out.write("$(function() {\n");
      out.write("\t$(\".title\").click(function() {\n");
      out.write("\t\tgogo(\"/M/index.jsp\");\n");
      out.write("\t});\n");
      out.write("\t$(\".home_link_inspect\").click(function() {\n");
      out.write("\t\tgogo(\"/M/inspect.jsp\");\n");
      out.write("\t});\n");
      out.write("\t$(\".home_link_profile_list\").click(function() {\n");
      out.write("\t\tgogo(\"/M/profile_list.jsp\");\n");
      out.write("\t});\n");
      out.write("\t$(\".home_link_config_list\").click(function() {\n");
      out.write("\t\tgogo(\"/M/config_list.jsp\");\n");
      out.write("\t});\n");
      out.write("\t$(\".home_link_setting_list\").click(function() {\n");
      out.write("\t\tgogo(\"/M/setting.jsp\");\n");
      out.write("\t});\n");
      out.write("});\n");
      out.write("\n");
      out.write("function _defined_(v) {\n");
      out.write("\treturn (typeof v != \"undefined\");\n");
      out.write("}\n");
      out.write("\n");
      out.write("function pop(msg, config) {\n");
      out.write("\tvar c = {};\n");
      out.write("\t\n");
      out.write("\tif (_defined_(config)) {\n");
      out.write("\t\tc = config;\n");
      out.write("\t}\n");
      out.write("\t\n");
      out.write("\tif (1) {\n");
      out.write("\t\tvar css = \"pop_error\";\n");
      out.write("\t\tif (_defined_(c.type)) {\n");
      out.write("\t\t\tif (c.type == \"info\") {\n");
      out.write("\t\t\t\tcss = \"pop_info\";\n");
      out.write("\t\t\t} else if (c.type == \"success\") {\n");
      out.write("\t\t\t\tcss = \"pop_success\";\n");
      out.write("\t\t\t} else if (c.type == \"warning\") {\n");
      out.write("\t\t\t\tcss = \"pop_warning\";\n");
      out.write("\t\t\t}\n");
      out.write("\t\t}\n");
      out.write("\t\tvar box_msg = \"<div class='\"+css+\"'>\"+msg+\"</div>\";\n");
      out.write("\t\t\n");
      out.write("\t\t$(\"body\").loading({\n");
      out.write("\t\t\ttheme: 'dark',\n");
      out.write("\t\t\tmessage: box_msg,\n");
      out.write("\t\t\tonStart: function(loading) {\n");
      out.write("\t\t\t\tloading.overlay.slideDown(350);\n");
      out.write("\t\t\t},\n");
      out.write("\t\t\tonClick: function(loading) {\n");
      out.write("\t\t\t\tloading.overlay.slideUp(250);\n");
      out.write("\t\t\t\tif (_defined_(c.focus)) {\n");
      out.write("\t\t\t\t\tc.focus.focus();\n");
      out.write("\t\t\t\t}\n");
      out.write("\t\t\t\tif (_defined_(c.page)) {\n");
      out.write("\t\t\t\t\tgogo(c.page);\n");
      out.write("\t\t\t\t}\n");
      out.write("\t\t\t}\n");
      out.write("\t\t});\n");
      out.write("\t\t$(\"body\").loading();\n");
      out.write("\t} else {\t\t\n");
      out.write("\t\talert(msg);\n");
      out.write("\t\tif (typeof $focus != \"undefined\") {\n");
      out.write("\t\t\t$focus.focus();\n");
      out.write("\t\t}\n");
      out.write("\t}\n");
      out.write("}\n");
      out.write("\n");
      out.write("function gogo(page) {\n");
      out.write("\t$(\"body\").animate({\n");
      out.write("\t\t\"opacity\": \"0\",\n");
      out.write("\t\t\"top\": \"10px\"\n");
      out.write("\t},400, function () {\n");
      out.write("\t\tlocation.href = page;\n");
      out.write("\t});\n");
      out.write("}\n");
      out.write("\n");
      out.write("function pN($this, n) {\n");
      out.write("\tvar p = $this;\n");
      out.write("\tfor (var i=0; i<n; i++) {\n");
      out.write("\t\tp = p.parent();\n");
      out.write("\t}\n");
      out.write("\treturn p;\n");
      out.write("}\n");
      out.write("</script>\n");
      out.write("</body>");
      out.write("\n");
      out.write("<style type=\"text/css\">\n");
      out.write("\n");
      out.write("</style>\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("\t<fieldset class=\"main_fieldset\">\n");
      out.write("\t\t<legend>\n");
      out.write("\t\t\t<img class=\"head_img\" src=\"/img/M/list_banner.svg\">\n");
      out.write("\t\t\t<span>Profile List</span>\n");
      out.write("\t\t</legend>\n");
      out.write("\t\t\n");
      out.write("\t\t<div>\n");
      out.write("\t\t\t<img class=\"action_img\" src=\"/img/M/clock.svg\">\n");
      out.write("\t\t\t<select id=\"inspect_timer\" style=\"width: 100px;\">\n");
      out.write("\t\t\t\t<option value=\"5\">5</option>\n");
      out.write("\t\t\t\t<option value=\"10\">10</option>\n");
      out.write("\t\t\t\t<option value=\"15\">15</option>\n");
      out.write("\t\t\t\t<option value=\"20\">20</option>\n");
      out.write("\t\t\t\t<option value=\"25\">25</option>\n");
      out.write("\t\t\t\t<option value=\"30\">30</option>\n");
      out.write("\t\t\t</select>\n");
      out.write("\t\t\t<img class=\"action_img\" src=\"/img/M/play4.svg\" id=\"inspect_run_img\">\n");
      out.write("\t\t</div>\n");
      out.write("\t\t\n");
      out.write("\t\t<table id=\"profile_list_table\" class=\"tablesorter\">\n");
      out.write("\t\t\t<thead>\n");
      out.write("\t\t\t\t<tr>\n");
      out.write("\t\t\t\t\t<th width=\"20px;\"></th>\n");
      out.write("\t\t\t\t\t<th>name</th>\n");
      out.write("\t\t\t\t\t<th>selected configs</th>\n");
      out.write("\t\t\t\t\t<th>updated</th>\n");
      out.write("\t\t\t\t\t<th></th>\n");
      out.write("\t\t\t\t</tr>\n");
      out.write("\t\t\t</thead>\n");
      out.write("\t\t\t<tbody></tbody>\n");
      out.write("\t\t</table>\n");
      out.write("\t</fieldset>\n");
      out.write("\t\n");
      out.write("\t<fieldset class=\"main_fieldset\">\n");
      out.write("\t\t<legend>Config List</legend>\n");
      out.write("\t\t<table id=\"config_list_table\">\n");
      out.write("\t\t\t<thead>\n");
      out.write("\t\t\t\t<tr>\n");
      out.write("\t\t\t\t\t<th width=\"20px;\"></th>\n");
      out.write("\t\t\t\t\t<th>name</th>\n");
      out.write("\t\t\t\t\t<th>capture</th>\n");
      out.write("\t\t\t\t\t<th>shooter</th>\n");
      out.write("\t\t\t\t\t<th>updated</th>\n");
      out.write("\t\t\t\t\t<th></th>\n");
      out.write("\t\t\t\t</tr>\n");
      out.write("\t\t\t</thead>\n");
      out.write("\t\t\t<tbody></tbody>\n");
      out.write("\t\t</table>\n");
      out.write("\t</fieldset>\n");
      out.write("\t\n");
      out.write("\t<fieldset class=\"main_fieldset\">\n");
      out.write("\t\t<legend id=\"inspect_results_legend\">Inspect Results</legend>\n");
      out.write("\t\t<div id=\"inspect_results_div\">\n");
      out.write("\t\t</div>\n");
      out.write("\t</fieldset>\n");
      out.write("\t\n");
      out.write("\t<fieldset id=\"sample_inspect\" class=\"sub_fieldset hidden\">\n");
      out.write("\t\t<legend></legend>\n");
      out.write("\t\t<table style=\"width: 100%;\">\n");
      out.write("\t\t\t<tr>\n");
      out.write("\t\t\t\t<td>progressbar</td>\n");
      out.write("\t\t\t</tr>\n");
      out.write("\t\t\t<tr>\n");
      out.write("\t\t\t\t<td>\n");
      out.write("\t\t\t\t\t<img config_id=\"\" class=\"icon_img detail_log_img\" align=\"left\" src=\"/img/list2.svg\" target=\"inspect_log_table_\"/>\n");
      out.write("\t\t\t\t\t<img config_id=\"\" class=\"icon_img detail_ana_img\" align=\"left\" src=\"/img/ana.png\" />\n");
      out.write("\t\t\t\t\t<img config_id=\"\" class=\"icon_img wireshark_img\"  align=\"left\" src=\"/img/wireshark.png\" />\n");
      out.write("\t\t\t\t</td>\n");
      out.write("\t\t\t</tr>\n");
      out.write("\t\t\t<tr>\n");
      out.write("\t\t\t\t<td>\n");
      out.write("\t\t\t\t\t<div style=\"overflow-x: hidden; height: 100px;\" id=\"inspect_log_div_\" class=\"inspect_log_div\">\n");
      out.write("\t\t\t\t\t\t<table id=\"inspect_log_table_\" class=\"inspect_log_table color_over_table tablesorter\">\n");
      out.write("\t\t\t\t\t\t\t<thead>\n");
      out.write("\t\t\t\t\t\t\t\t<tr>\n");
      out.write("\t\t\t\t\t\t\t\t\t<th>xid</th>\n");
      out.write("\t\t\t\t\t\t\t\t\t<th>elapsed</th>\n");
      out.write("\t\t\t\t\t\t\t\t\t<th>pwr</th>\n");
      out.write("\t\t\t\t\t\t\t\t\t<th>subtype</th>\n");
      out.write("\t\t\t\t\t\t\t\t\t<th>ds</th>\n");
      out.write("\t\t\t\t\t\t\t\t\t<th>addr1</th>\n");
      out.write("\t\t\t\t\t\t\t\t\t<th>addr2</th>\n");
      out.write("\t\t\t\t\t\t\t\t\t<th>addr3</th>\n");
      out.write("\t\t\t\t\t\t\t\t\t<th>addr4</th>\n");
      out.write("\t\t\t\t\t\t\t\t\t<th>seq</th>\n");
      out.write("\t\t\t\t\t\t\t\t</tr>\n");
      out.write("\t\t\t\t\t\t\t</thead>\n");
      out.write("\t\t\t\t\t\t\t<tbody></tbody>\n");
      out.write("\t\t\t\t\t\t</table>\n");
      out.write("\t\t\t\t\t</div>\n");
      out.write("\t\t\t\t</td>\n");
      out.write("\t\t\t</tr>\n");
      out.write("\t\t\t<tr>\n");
      out.write("\t\t\t\t<td>\n");
      out.write("\t\t\t\t\t<div class=\"inspect_chart\" id=\"inspect_chart_\"></div>\n");
      out.write("\t\t\t\t</td>\n");
      out.write("\t\t\t</tr>\n");
      out.write("\t\t</table>\n");
      out.write("\t</fieldset>\n");
      out.write("\t\n");
      out.write("</body>\n");
      out.write("\n");
      out.write("<script type=\"text/javascript\">\n");
      out.write("var profile_list_table_xlat = {\n");
      out.write("\t\ttag: \"tr\",\n");
      out.write("\t\tid: \"$\\{id\\}\",\n");
      out.write("\t\tclass:\"pointer\",\n");
      out.write("\t\tchildren: [\n");
      out.write("\t\t\t{tag:\"td\", html:\"<img class='profile_check_img hidden table_img' src='/img/M/profile.svg' id='img_$\\{id\\}'>\"},\n");
      out.write("\t\t\t{tag:\"td\", html:\"$\\{name\\}\"},\n");
      out.write("\t\t\t{tag:\"td\", html:\"$\\{configListNames\\}\"},\n");
      out.write("\t\t\t{tag:\"td\", html:\"$\\{updated\\}\"},\n");
      out.write("\t\t\t{tag:\"td\", html:\"<img class='profile_log_img table_img' src='/img/M/Graph-Magnifier.svg' id='$\\{id\\}'>\"},\n");
      out.write("\t\t]\n");
      out.write("};\n");
      out.write("\n");
      out.write("var config_list_table_xlat = {\n");
      out.write("\t\ttag: \"tr\",\n");
      out.write("\t\tid: \"$\\{id\\}\",\n");
      out.write("\t\tclass:\"pointer\",\n");
      out.write("\t\tchildren: [\n");
      out.write("\t\t\t{tag:\"td\", html:\"<img class='config_check_img table_img' src='/img/M/menu.svg' id='img_$\\{id\\}'>\"},\n");
      out.write("\t\t\t{tag:\"td\", html:\"$\\{name\\}\"},\n");
      out.write("\t\t\t{tag:\"td\", html:\"$\\{captureAirConfDescs\\}\"},\n");
      out.write("\t\t\t{tag:\"td\", html:\"$\\{shooterAirConfDescs\\}\"},\n");
      out.write("\t\t\t{tag:\"td\", html:\"$\\{updated\\}\"},\n");
      out.write("\t\t\t{tag:\"td\", html:\"<img class='profile_del_img table_img' src='/img/M/trash.svg' id='$\\{id\\}'>\"},\n");
      out.write("\t\t\t{tag:\"input\", value:\"$\\{id\\}\", type:\"hidden\", name:\"config_id\"},\n");
      out.write("\t\t]\n");
      out.write("};\n");
      out.write("\n");
      out.write("function get_inspect_log_table_html(data) {\n");
      out.write("\tvar html = \n");
      out.write("\t\"<tr>\"+\n");
      out.write("\t\t\"<td>\"+data.xid+\"</td>\"+\n");
      out.write("\t\t\"<td>\"+data.elapsed+\"</td>\"+\n");
      out.write("\t\t\"<td>\"+data.pwr+\"</td>\"+\n");
      out.write("\t\t\"<td>\"+get_framesubtype_string(data.type, data.subtype)+\"</td>\"+\n");
      out.write("\t\t\"<td>\"+get_ds_string(data.ds, (data.type == 2))+\"</td>\"+\n");
      out.write("\t\t\"<td>\"+data.addr1+\"</td>\"+\n");
      out.write("\t\t\"<td>\"+data.addr2+\"</td>\"+\n");
      out.write("\t\t\"<td>\"+data.addr3+\"</td>\"+\n");
      out.write("\t\t\"<td>\"+data.addr4+\"</td>\"+\n");
      out.write("\t\t\"<td>\"+data.seq+\"</td>\"+\n");
      out.write("\t\"</tr>\";\n");
      out.write("\treturn html;\n");
      out.write("}\n");
      out.write("\n");
      out.write("function load_config_list(profile_id) {\n");
      out.write("\tvar $t = $(\"#config_list_table\");\n");
      out.write("\tvar xlat = config_list_table_xlat;\n");
      out.write("\t\n");
      out.write("\tjQuery.ajax({\n");
      out.write("\t\turl: \"/get_selected_config.jsp\",\n");
      out.write("\t\tdata: {\n");
      out.write("\t\t\tdetail: 'true',\n");
      out.write("\t\t\tselected: 'true',\n");
      out.write("\t\t\tprofile_id: profile_id,\n");
      out.write("\t\t},\n");
      out.write("\t\tcache: false,\n");
      out.write("\t\tbeforeSend: function() {\n");
      out.write("\t\t\t$t.find(\"tbody\").empty();\n");
      out.write("\t\t},\n");
      out.write("\t\tdataType: \"json\",\n");
      out.write("\t\tsuccess: function(result) {\n");
      out.write("\t\t\tif (result.good == false) {\n");
      out.write("\t\t\t\tpop(\"Error load config list: \"+result.cause);\n");
      out.write("\t\t\t\treturn;\n");
      out.write("\t\t\t}\t\t\t\n");
      out.write("\t\t\t$t.find(\"tbody\").html(\n");
      out.write("\t\t\t\tjson2html.transform(result, xlat)\n");
      out.write("\t\t\t);\n");
      out.write("\t\t\t$t.tablesorter({\n");
      out.write("\t\t\t\theaders: {\n");
      out.write("\t\t\t\t\t0: {sorter: false},\n");
      out.write("\t\t\t\t\t2: {sorter: false},\n");
      out.write("\t\t\t\t\t3: {sorter: false},\n");
      out.write("\t\t\t\t\t5: {sorter: false},\n");
      out.write("\t\t\t\t}\n");
      out.write("\t\t\t}).trigger(\"update\");\n");
      out.write("\t\t\t\n");
      out.write("\t\t\t$(\"#inspect_results_div\").empty();\n");
      out.write("\t\t\tinspect_config_keys = {};\n");
      out.write("\t\t\t$.each(result, function(i, v) {\n");
      out.write("\t\t\t\tvar c = $(\"#sample_inspect\").clone(true);\n");
      out.write("\t\t\t\tc.find(\"legend\").html(v.name);\t\t\t\n");
      out.write("\t\t\t\tc.find(\".detail_log_img\").attr(\"config_id\", v.id);\n");
      out.write("\t\t\t\tc.find(\".detail_log_img\").attr(\"target\", \"inspect_log_table_\"+v.id);\n");
      out.write("\t\t\t\tc.find(\".detail_ana_img\").attr(\"config_id\", v.id);\n");
      out.write("\t\t\t\tc.find(\".wireshark_img\").attr(\"config_id\", v.id);\n");
      out.write("\t\t\t\tc.find(\".inspect_log_div\").attr(\"id\", \"inspect_log_div_\"+v.id);\n");
      out.write("\t\t\t\tc.find(\".inspect_log_table\").attr(\"id\", \"inspect_log_table_\"+v.id);\n");
      out.write("\t\t\t\tc.find(\".inspect_log_table\").tablesorter();\n");
      out.write("\t\t\t\tc.find(\".inspect_chart\").attr(\"id\", \"inspect_chart_\"+v.id);\n");
      out.write("\t\t\t\tc.removeClass(\"hidden\");\n");
      out.write("\t\t\t\tc.appendTo($(\"#inspect_results_div\"));\n");
      out.write("\t\t\t\t\n");
      out.write("\t\t\t\t/* mapping config key to config desc */\n");
      out.write("\t\t\t\tinspect_config_keys[v.id] = {};\n");
      out.write("\t\t\t\t$.each(v.captureXmlAirConfList, function(ii, vv) {\n");
      out.write("\t\t\t\t\tinspect_config_keys[v.id][vv.key] = vv.desc;\n");
      out.write("\t\t\t\t});\n");
      out.write("\t\t\t\t$.each(v.shooterXmlAirConfList, function(ii, vv) {\n");
      out.write("\t\t\t\t\tinspect_config_keys[v.id][vv.key] = vv.desc;\n");
      out.write("\t\t\t\t});\n");
      out.write("\t\t\t});\n");
      out.write("\t\t},\n");
      out.write("\t\terror: function(e) {\n");
      out.write("\t\t\t//ajax_err_handle(e);\n");
      out.write("\t\t\tpop(\"Error loading for config.\\nplease retry...\");\n");
      out.write("\t\t}\n");
      out.write("\t});\n");
      out.write("}\n");
      out.write("\n");
      out.write("function load_profile_list() {\n");
      out.write("\tjQuery.ajax({\n");
      out.write("\t\turl: \"/get_profile.jsp\",\n");
      out.write("\t\tdata: {detail: 'true'},\n");
      out.write("\t\tcache: false,\n");
      out.write("\t\tbeforeSend: function() {\n");
      out.write("\t\t\t$(\"#profile_list_table > tbody\").empty();\n");
      out.write("\t\t},\n");
      out.write("\t\tdataType: \"json\",\n");
      out.write("\t\tsuccess: function(result) {\n");
      out.write("\t\t\tif (result.good == false) {\n");
      out.write("\t\t\t\tpop(\"Error load profile list: \"+result.cause);\n");
      out.write("\t\t\t\treturn;\n");
      out.write("\t\t\t}\n");
      out.write("\t\t\t$(\"#profile_list_table > tbody\").html(\n");
      out.write("\t\t\t\tjson2html.transform(result, profile_list_table_xlat)\n");
      out.write("\t\t\t);\n");
      out.write("\t\t\t$(\"#profile_list_table\").tablesorter({\n");
      out.write("\t\t\t\theaders: {\n");
      out.write("\t\t\t\t\t0: {sorter: false},\n");
      out.write("\t\t\t\t\t2: {sorter: false},\n");
      out.write("\t\t\t\t\t4: {sorter: false},\n");
      out.write("\t\t\t\t}\n");
      out.write("\t\t\t}).trigger(\"update\");\n");
      out.write("\t\t\t$(\"#profile_list_table > tbody > tr\").click(function(e) {\n");
      out.write("\t\t\t\t$(\"#profile_list_table > tbody > tr\").removeClass('selected');\t\t\t\t\n");
      out.write("\t\t\t\t$(this).toggleClass('selected');\n");
      out.write("\t\t\t\t$(\".profile_check_img\").addClass('hidden');\n");
      out.write("\t\t\t\t$(\"#img_\"+$(this).attr(\"id\")).toggleClass('hidden');\n");
      out.write("\t\t\t\t\n");
      out.write("\t\t\t\tload_config_list($(this).attr(\"id\"));\n");
      out.write("\t\t\t});\n");
      out.write("\t\t},\n");
      out.write("\t\terror: function(e) {\n");
      out.write("\t\t\t//ajax_err_handle(e);\n");
      out.write("\t\t\tpop(\"Error loading for profile.\\nplease retry...\");\n");
      out.write("\t\t}\n");
      out.write("\t});\n");
      out.write("}\n");
      out.write("\n");
      out.write("var inspect_config_keys = {};\n");
      out.write("var inspect_charts = {};\n");
      out.write("var inspect_refresh_times = {};\n");
      out.write("var inspect_render_time = 500; // msec\n");
      out.write("var ws_raise_error;\n");
      out.write("var ws;\n");
      out.write("var host = '");
      out.print(request.getHeader("host"));
      out.write("';\n");
      out.write("\n");
      out.write("$(document).ready(function() {\n");
      out.write("\tload_profile_list();\n");
      out.write("\n");
      out.write("\t$(\"#profile_list_table\").tablesorter({\n");
      out.write("\t\theaders: {\n");
      out.write("\t\t\t0: {sorter: false},\n");
      out.write("\t\t\t2: {sorter: false},\n");
      out.write("\t\t\t4: {sorter: false},\n");
      out.write("\t\t}\n");
      out.write("\t});\n");
      out.write("\t$(\"#config_list_table\").tablesorter({\n");
      out.write("\t\theaders: {\n");
      out.write("\t\t\t0: {sorter: false},\n");
      out.write("\t\t\t2: {sorter: false},\n");
      out.write("\t\t\t3: {sorter: false},\n");
      out.write("\t\t\t5: {sorter: false},\n");
      out.write("\t\t}\n");
      out.write("\t});\n");
      out.write("\t\n");
      out.write("\t$(\"#inspect_run_img\").click(function() {\n");
      out.write("\t\tvar $img = $(this);\n");
      out.write("\t\tws_raise_error = false;\n");
      out.write("\t\tvar running = ($img.attr(\"src\") == \"/img/M/play4.svg\") ? false : true;\n");
      out.write("\t\tif (running) {\n");
      out.write("\t\t\t$img.attr(\"src\", \"/img/M/play4.svg\");\n");
      out.write("\t\t\t\n");
      out.write("\t\t} else {\n");
      out.write("\t\t\tvar profile_id = $(\"#profile_list_table > tbody .selected\").attr(\"id\");\n");
      out.write("\t\t\tif (!_defined_(profile_id)) {\n");
      out.write("\t\t\t\treturn;\n");
      out.write("\t\t\t}\n");
      out.write("\t\t\t\n");
      out.write("\t\t\tws = new WebSocket(\"ws://\"+host+\"/inspect\");\n");
      out.write("\t\t\t/* onopen */\n");
      out.write("\t\t\tws.onopen = function(msg) {\n");
      out.write("\t\t\t\t// for clear config list data\n");
      out.write("\t\t\t\tload_config_list(profile_id);\n");
      out.write("\t\t\t\t\n");
      out.write("\t\t\t\t$.each(inspect_charts, function(i, v){\n");
      out.write("\t\t\t\t\tv.empty();\n");
      out.write("\t\t\t\t});\n");
      out.write("\t\t\t\t$(\".inspect_log_table > tbody\").empty();\n");
      out.write("\t\t\t\t\n");
      out.write("\t\t\t\tinspect_charts = {};\n");
      out.write("\t\t\t\tinspect_refresh_times = {0:0, 1:0};\n");
      out.write("\t\t\t\t\n");
      out.write("\t\t\t\tws.send(JSON.stringify({\n");
      out.write("\t\t\t\t\tstate: \"start\",\n");
      out.write("\t\t\t\t\ttimer: $(\"#inspect_timer\").val(),\n");
      out.write("\t\t\t\t\tprofileId: profile_id\n");
      out.write("\t\t\t\t}));\n");
      out.write("\t\t\t\t$img.attr(\"src\", \"/img/M/stop4.svg\");\n");
      out.write("\t\t\t}\n");
      out.write("\t\t\t/* onmessage */\n");
      out.write("\t\t\tws.onmessage = function(msg) {\n");
      out.write("\t\t\t\tif (_isnull(msg.data)) {\n");
      out.write("\t\t\t\t\treturn;\n");
      out.write("\t\t\t\t}\n");
      out.write("\t\t\t\tvar result = JSON.parse(msg.data);\n");
      out.write("\t\t\t\tif (result.good == false) {\n");
      out.write("\t\t\t\t\tpop(\"Error inspect: \"+result.cause);\n");
      out.write("\t\t\t\t\t$img.attr(\"src\", \"/img/M/play4.svg\");\n");
      out.write("\t\t\t\t\tws_raise_error = true;\n");
      out.write("\t\t\t\t\tws.close();\n");
      out.write("\t\t\t\t\treturn;\n");
      out.write("\t\t\t\t}\n");
      out.write("\t\t\t\tif (result.good == true) {\n");
      out.write("\t\t\t\t\treturn;\n");
      out.write("\t\t\t\t}\n");
      out.write("\t\t\t\t/* dynamic logging table */\n");
      out.write("\t\t\t\tif (0) {\n");
      out.write("\t\t\t\t\t$(\"#inspect_log_table_\"+result.conf+\" > tbody:last\")\n");
      out.write("\t\t\t\t\t\t.append(get_inspect_log_table_html(result));\t\t\t\t\t\t\n");
      out.write("\t\t\t\t\t$(\"#inspect_log_table_\"+result.conf)\n");
      out.write("\t\t\t\t\t\t.tablesorter({widgets: [\"zebra\"]})\n");
      out.write("\t\t\t\t\t\t.trigger(\"update\");\n");
      out.write("\t\t\t\t\t\n");
      out.write("\t\t\t\t\t/* for scroll inspect log table */\n");
      out.write("\t\t\t\t\tvar scroll_div = $(\"#inspect_log_div_\"+result.conf);\n");
      out.write("\t\t\t\t\tscroll_div.scrollTop(scroll_div[0].scrollHeight);\n");
      out.write("\t\t\t\t}\n");
      out.write("\t\t\t\t/* dynamic char drawing */\n");
      out.write("\t\t\t\tif (1) {\n");
      out.write("\t\t\t\t\t// append capture data to chart\n");
      out.write("\t\t\t\t\tif (!_defined_(inspect_charts[result.conf])) {\n");
      out.write("\t\t\t\t\t\tvar items = new Array();\n");
      out.write("\t\t\t\t\t\t$.each(inspect_config_keys[result.conf], function(i, v) {\n");
      out.write("\t\t\t\t\t\t\titems.push(v);\n");
      out.write("\t\t\t\t\t\t});\n");
      out.write("\t\t\t\t\t\tconsole.log(items);\n");
      out.write("\t\t\t\t\t\tvar max_sec = parseInt($(\"#inspect_timer\").val()) + 2;\n");
      out.write("\t\t\t\t\t\tinspect_charts[result.conf] \n");
      out.write("\t\t\t\t\t\t\t= inspectChart.generate(\n");
      out.write("\t\t\t\t\t\t\t\t\t\"inspect_chart_\"+result.conf, {\n");
      out.write("\t\t\t\t\t\t\t\t\t\titems: items,\n");
      out.write("\t\t\t\t\t\t\t\t\t\tmax_sec: max_sec,\n");
      out.write("\t\t\t\t\t\t\t\t\t}\n");
      out.write("\t\t\t\t\t\t\t\t);\n");
      out.write("\t\t\t\t\t}\n");
      out.write("\t\t\t\t\t// capture or shooter result\n");
      out.write("\t\t\t\t\tvar x = result.elapsed;\n");
      out.write("\t\t\t\t\tvar y = result.pwr;\n");
      out.write("\t\t\t\t\tvar now = new Date().getTime();\n");
      out.write("\t\t\t\t\t\n");
      out.write("\t\t\t\t\tvar item = inspect_config_keys[result.conf][result.key];\n");
      out.write("\t\t\t\t\tif (_defined_(item)) {\n");
      out.write("\t\t\t\t\t\tinspect_charts[result.conf].push(item, x, y, false);\n");
      out.write("\t\t\t\t\t\tif (now - inspect_refresh_times[0] > inspect_render_time) {\n");
      out.write("\t\t\t\t\t\t\tconsole.log(result);\n");
      out.write("\t\t\t\t\t\t\tinspect_refresh_times[0] = now;\n");
      out.write("\t\t\t\t\t\t\tinspect_charts[result.conf].refresh(item);\n");
      out.write("\t\t\t\t\t\t}\n");
      out.write("\t\t\t\t\t}\n");
      out.write("\t\t\t\t}\n");
      out.write("\t\t\t}\n");
      out.write("\t\t\t/* onerror */\n");
      out.write("\t\t\tws.onerror = function(msg) {\n");
      out.write("\t\t\t\t$img.attr(\"src\", \"/img/M/play4.svg\");\n");
      out.write("\t\t\t\tpop(\"Error inspect: \"+msg);\n");
      out.write("\t\t\t\tws_raise_error = true;\n");
      out.write("\t\t\t}\n");
      out.write("\t\t\t/* onerror */\n");
      out.write("\t\t\tws.onclose = function() {\n");
      out.write("\t\t\t\t$img.attr(\"src\", \"/img/M/play4.svg\");\n");
      out.write("\t\t\t\tif (ws_raise_error == false) {\n");
      out.write("\t\t\t\t\tpop(\"Finished inspect\", {type:\"success\"});\n");
      out.write("\t\t\t\t}\n");
      out.write("\t\t\t}\n");
      out.write("\t\t}\n");
      out.write("\t});\n");
      out.write("});\n");
      out.write("</script>\n");
      out.write("\n");
      out.write("<script type=\"text/javascript\">\n");
      out.write("$(function() {\n");
      out.write("\t$(\".link\").click(function() {\n");
      out.write("\t\tvar param = \"\";\n");
      out.write("\t\tvar call = $(this).attr(\"call\");\n");
      out.write("\t\tif (call != undefined) {\n");
      out.write("\t\t\tparam = eval(call+\"()\")\n");
      out.write("\t\t\tparam = \"?\"+eval(call+\"()\");\n");
      out.write("\t\t}\n");
      out.write("\t\tvar page = $(this).attr(\"page\");\n");
      out.write("\t\tif (page != undefined) {\n");
      out.write("\t\t\t$(\"body\").animate({\n");
      out.write("\t\t\t\t\"opacity\": \"0\",\n");
      out.write("\t\t\t\t\"top\": \"10px\"\n");
      out.write("\t\t\t},400, function () {\n");
      out.write("\t\t\t\tlocation.href = page+param;\n");
      out.write("\t\t\t});\n");
      out.write("\t\t}\n");
      out.write("\t});\n");
      out.write("});\n");
      out.write("\n");
      out.write("</script>");
      out.write("\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
