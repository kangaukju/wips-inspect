/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.0.M15
 * Generated at: 2017-02-24 09:59:48 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import air.wips.inspect.osdep.Tools;

public final class inspect_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("air.wips.inspect.osdep.Tools");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("\t<meta charset=\"utf-8\">\n");
      out.write("\t<style type=\"text/css\">\n");
      out.write("    .color_over_table tbody tr:hover td {\n");
      out.write("\t\tbackground: none repeat scroll 0 0 #FFCF8B;\n");
      out.write("\t\tcolor: #000000;\n");
      out.write("\t\tcursor: pointer;\n");
      out.write("    }\n");
      out.write("\t.inspect_progress_label {\n");
      out.write("\t\tposition: absolute;\n");
      out.write("\t\tleft: 50%;\n");
      out.write("\t\ttop: 4px;\n");
      out.write("\t\tfont-weight: bold;\n");
      out.write("\t\ttext-shadow: 1px 1px 0 #fff;\n");
      out.write("\t}\n");
      out.write("\t</style>\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("\t<fieldset id=\"wifidev_fieldset\" class=\"main_fieldset\">\n");
      out.write("\t\t<legend>\n");
      out.write("\t\t\t<img class=\"legend_img toggleable_img\" target=\"wifidev_table\">\n");
      out.write("\t\t\t Wi-Fi Drivers \n");
      out.write("\t\t\t<img class=\"closeable_img\" target=\"wifidev_fieldset\">\n");
      out.write("\t\t</legend>\n");
      out.write("\t\t<div id=\"wifidev\">\n");
      out.write("\t\t\t<table id=\"wifidev_table\" class=\"table color_over_table\">\n");
      out.write("\t\t\t\t<thead>\n");
      out.write("\t\t\t\t\t<tr>\n");
      out.write("\t\t\t\t\t\t<th>PHY</th>\n");
      out.write("\t\t\t\t\t\t<th>INTERFACE</th>\n");
      out.write("\t\t\t\t\t\t<th>DRIVER</th>\n");
      out.write("\t\t\t\t\t\t<th>CHIPSEET</th>\n");
      out.write("\t\t\t\t\t\t<th>MONITOR</th>\n");
      out.write("\t\t\t\t\t</tr>\n");
      out.write("\t\t\t\t</thead>\n");
      out.write("\t\t\t\t<tbody/>\n");
      out.write("\t\t\t</table>\n");
      out.write("\t\t</div>\n");
      out.write("\t</fieldset>\n");
      out.write("\t\n");
      out.write("\t<fieldset class=\"tree main_fieldset\">\n");
      out.write("\t\t<legend>All Profile List</legend>\n");
      out.write("\t\t<div>\n");
      out.write("\t\t\t<select data-placeholder=\"Choose Profile...\" id=\"profile_select\"></select>\n");
      out.write("\t\t</div>\n");
      out.write("\t</fieldset>\n");
      out.write("\t\n");
      out.write("\t<fieldset id=\"profile_fieldset\" class=\"tree main_fieldset\">\n");
      out.write("\t\t<legend>\n");
      out.write("\t\t\t<img class=\"legend_img toggleable_img\" target=\"profile_tree\">\n");
      out.write("\t\t\t All Profile List \t\t\t\n");
      out.write("\t\t\t<img class=\"closeable_img\" target=\"profile_fieldset\">\n");
      out.write("\t\t</legend>\n");
      out.write("\t\t<div id=\"profile_tree\">\n");
      out.write("\t\t</div>\n");
      out.write("\t</fieldset>\n");
      out.write("\t\t\n");
      out.write("\t<fieldset class=\"main_fieldset\">\n");
      out.write("\t\t<legend id=\"select_config_legend\">Inspect Process</legend>\n");
      out.write("\t\t<div>\n");
      out.write("\t\t\t<img src=\"img/timer.svg\" class=\"input_img\">\n");
      out.write("\t\t\t<select id=\"inspect_timer\" class=\"number_selectbox\" style=\"width: 100px;\">\n");
      out.write("\t\t\t\t<option value=\"5\">5</option>\n");
      out.write("\t\t\t\t<option value=\"10\">10</option>\n");
      out.write("\t\t\t\t<option value=\"15\">15</option>\n");
      out.write("\t\t\t\t<option value=\"20\">20</option>\n");
      out.write("\t\t\t\t<option value=\"25\">25</option>\n");
      out.write("\t\t\t\t<option value=\"30\">30</option>\n");
      out.write("\t\t\t</select>\n");
      out.write("\t\t\t<a href=\"#\" class=\"btn btn-inline btn-small btn-primary\" id=\"inspect_run_button\"><span>start</span></a>\n");
      out.write("\t\t</div>\n");
      out.write("\n");
      out.write("\t\t<table id=\"selected_config_table\" class=\"table\">\t\t\n");
      out.write("\t\t\t<thead>\n");
      out.write("\t\t\t\t<tr>\n");
      out.write("\t\t\t\t\t<th>id</th>\n");
      out.write("\t\t\t\t\t<th>name</th>\n");
      out.write("\t\t\t\t\t<th>capture</th>\n");
      out.write("\t\t\t\t\t<th>shooter</th>\n");
      out.write("\t\t\t\t\t<th>created</th>\n");
      out.write("\t\t\t\t\t<th>updated</th>\n");
      out.write("\t\t\t\t</tr>\n");
      out.write("\t\t\t</thead>\n");
      out.write("\t\t\t<tbody></tbody>\n");
      out.write("\t\t</table>\t\n");
      out.write("\t</fieldset>\n");
      out.write("\t\n");
      out.write("\t<fieldset class=\"main_fieldset\">\n");
      out.write("\t\t<legend id=\"inspect_results_legend\">Inspect Results</legend>\n");
      out.write("\t\t<div id=\"inspect_results_div\">\n");
      out.write("\t\t</div>\n");
      out.write("\t</fieldset>\n");
      out.write("\t\n");
      out.write("\t<div id=\"detail_log_dialog\">\n");
      out.write("\t\t");
      out.write("\n");
      out.write("\t</div>\n");
      out.write("</body>\n");
      out.write("<script type=\"text/javascript\">\n");
      out.write("\n");
      out.write("var profile_select_xlat = {\n");
      out.write("\t\ttag: \"option\",\n");
      out.write("\t\thtml: \"$\\{name\\}\",\n");
      out.write("\t\tvalue: \"$\\{id\\}\",\n");
      out.write("};\n");
      out.write("\n");
      out.write("/**\n");
      out.write("*\n");
      out.write("*/\n");
      out.write("var config_xlat = {\n");
      out.write("\t\ttag: \"tr\",\n");
      out.write("\t\tclass:\"pointer\",\n");
      out.write("\t\tchildren: [\n");
      out.write("\t\t\t{tag:\"td\", html:\"$\\{id\\}\"},\n");
      out.write("\t\t\t{tag:\"td\", html:\"$\\{name\\}\"},\n");
      out.write("\t\t\t{tag:\"td\", html:\"$\\{capturexml\\}\", \"class\":\"capture_xml\"},\n");
      out.write("\t\t\t{tag:\"td\", html:\"$\\{shooterxml\\}\", \"class\":\"shooter_xml\"},\n");
      out.write("\t\t\t{tag:\"td\", html:\"$\\{created\\}\"},\n");
      out.write("\t\t\t{tag:\"td\", html:\"$\\{updated\\}\"},\n");
      out.write("\t\t]\n");
      out.write("};\n");
      out.write("\n");
      out.write("/**\n");
      out.write("*\n");
      out.write("*/\n");
      out.write("var detail_log_xlat = {\n");
      out.write("\t\ttag: \"tr\",\n");
      out.write("\t\tclass:\"pointer\",\n");
      out.write("\t\tchildren: [\n");
      out.write("\t\t\t{tag:\"td\", html:\"$\\{xid\\}\"},\n");
      out.write("\t\t\t{tag:\"td\", html:\"$\\{elapsed\\}\"},\n");
      out.write("\t\t\t{tag:\"td\", html:\"$\\{pwr\\}\"},\n");
      out.write("\t\t\t{tag:\"td\", html:get_framesubtype_string(\"$\\{type\\}\", \"$\\{subtype\\}\")},\n");
      out.write("\t\t\t{tag:\"td\", html:get_ds_string(\"$\\{ds\\}\", (\"$\\{ds\\}\" == 2))},\n");
      out.write("\t\t\t{tag:\"td\", html:\"$\\{addr1\\}\"},\n");
      out.write("\t\t\t{tag:\"td\", html:\"$\\{addr2\\}\"},\n");
      out.write("\t\t\t{tag:\"td\", html:\"$\\{addr3\\}\"},\n");
      out.write("\t\t\t{tag:\"td\", html:\"$\\{addr4\\}\"},\n");
      out.write("\t\t\t{tag:\"td\", html:\"$\\{seq\\}\"},\n");
      out.write("\t\t]\n");
      out.write("};\n");
      out.write("\n");
      out.write("/**\n");
      out.write("*\n");
      out.write("*/\n");
      out.write("var inspect_results_xlat = {\n");
      out.write("\t\ttag: \"fieldset\",\n");
      out.write("\t\tid: \"$\\{id\\}\",\n");
      out.write("\t\tclass:\"sub_fieldset\",\n");
      out.write("\t\tchildren: [\n");
      out.write("\t\t\t{tag:\"legend\", html:\"$\\{name\\}\"},\n");
      out.write("\t\t\t{tag:\"table\",  html:inspect_results_table_html(\"$\\{id\\}\")},\n");
      out.write("\t\t]\n");
      out.write("};\n");
      out.write("\n");
      out.write("/**\n");
      out.write("*\n");
      out.write("*/\n");
      out.write("function inspect_results_table_html(id) {\n");
      out.write("\tvar height = 100;\n");
      out.write("\tvar html = \n");
      out.write("\t\"<tr>\"+\n");
      out.write("\t\t\"<td>progressbar</td>\"+\n");
      out.write("\t\"</tr>\"+\n");
      out.write("\t\"<tr>\"+\n");
      out.write("\t\t\"<td>\"+\n");
      out.write("\t\t\t\"<img class='icon_img detail_log_img' src='img/list2.svg' align='left' target='inspect_log_table_\"+id+\"' target_id='\"+id+\"' />\"+\n");
      out.write("\t\t\t\"<img class='icon_img detail_ana_img' src='img/ana.png' align='left' config_id='\"+id+\"'/>\"+\n");
      out.write("\t\t\t\"<img class='icon_img' src='img/wireshart_icon.png' align='left' />\"+\n");
      out.write("\t\t\"</td>\"+\n");
      out.write("\t\"</tr>\"+\n");
      out.write("\t\"<tr>\"+\n");
      out.write("\t\t\"<td>\"+\n");
      out.write("\t\t\t\"<div id='inspect_log_div_\"+id+\"' style='height: \"+height+\"px; overflow-x: hidden;'>\"+\n");
      out.write("\t\t\t\t\"<table id='inspect_log_table_\"+id+\"' class='inspect_log_table'>\"+\n");
      out.write("\t\t\t\t\t\"<thead>\"+\n");
      out.write("\t\t\t\t\t\t\"<tr>\"+\n");
      out.write("\t\t\t\t\t\t\t\"<th>xid</th>\"+\n");
      out.write("\t\t\t\t\t\t\t\"<th>elapsed</th>\"+\n");
      out.write("\t\t\t\t\t\t\t\"<th>pwr</th>\"+\n");
      out.write("\t\t\t\t\t\t\t\"<th>subtype</th>\"+\n");
      out.write("\t\t\t\t\t\t\t\"<th>ds</th>\"+\n");
      out.write("\t\t\t\t\t\t\t\"<th>addr1</th>\"+\n");
      out.write("\t\t\t\t\t\t\t\"<th>addr2</th>\"+\n");
      out.write("\t\t\t\t\t\t\t\"<th>addr3</th>\"+\n");
      out.write("\t\t\t\t\t\t\t\"<th>addr4</th>\"+\n");
      out.write("\t\t\t\t\t\t\t\"<th>seq</th>\"+\n");
      out.write("\t\t\t\t\t\t\"</tr>\"+\n");
      out.write("\t\t\t\t\t\"</thead>\"+\n");
      out.write("\t\t\t\t\t\"<tbody></tbody>\"+\n");
      out.write("\t\t\t\t\"</table>\"+\n");
      out.write("\t\t\t\"</div>\"+\n");
      out.write("\t\t\"</td>\"+\n");
      out.write("\t\"</tr>\"+\n");
      out.write("\t\"<tr>\"+\n");
      out.write("\t\t\"<td>\"+\n");
      out.write("\t\t\t\"<div class='inspect_chart' id='inspect_chart_\"+id+\"' config='\"+id+\"'></div>\"+\n");
      out.write("\t\t\"</td>\"+\n");
      out.write("\t\"</tr>\";\n");
      out.write("\treturn html;\n");
      out.write("}\n");
      out.write("\n");
      out.write("/**\n");
      out.write("*\n");
      out.write("*/\n");
      out.write("function get_inspect_log_table_html(data) {\n");
      out.write("\tvar html = \n");
      out.write("\t\"<tr>\"+\n");
      out.write("\t\t\"<td>\"+data.xid+\"</td>\"+\n");
      out.write("\t\t\"<td>\"+data.elapsed+\"</td>\"+\n");
      out.write("\t\t\"<td>\"+data.pwr+\"</td>\"+\n");
      out.write("\t\t\"<td>\"+get_framesubtype_string(data.type, data.subtype)+\"</td>\"+\n");
      out.write("\t\t\"<td>\"+get_ds_string(data.ds, (data.type == 2))+\"</td>\"+\n");
      out.write("\t\t\"<td>\"+data.addr1+\"</td>\"+\n");
      out.write("\t\t\"<td>\"+data.addr2+\"</td>\"+\n");
      out.write("\t\t\"<td>\"+data.addr3+\"</td>\"+\n");
      out.write("\t\t\"<td>\"+data.addr4+\"</td>\"+\n");
      out.write("\t\t\"<td>\"+data.seq+\"</td>\"+\n");
      out.write("\t\"</tr>\";\n");
      out.write("\treturn html;\n");
      out.write("}\n");
      out.write("\n");
      out.write("/**\n");
      out.write("*\n");
      out.write("*/\n");
      out.write("function load_selected_profile(profile_id) {\n");
      out.write("\tjQuery.ajax({\n");
      out.write("\t\turl: \"get_profile.jsp\",\n");
      out.write("\t\tdata: {id: profile_id},\n");
      out.write("\t\tcache: false,\n");
      out.write("\t\tbeforeSend: function() {\n");
      out.write("\t\t\t$(\"#selected_config_table > tbody\").empty();\n");
      out.write("\t\t},\n");
      out.write("\t\tdataType: \"json\",\n");
      out.write("\t\tsuccess: function(result) {\n");
      out.write("\t\t\tif (result.good == false) {\n");
      out.write("\t\t\t\talert(\"load_selected_profile: \"+result.cause);\n");
      out.write("\t\t\t\treturn;\n");
      out.write("\t\t\t}\n");
      out.write("\t\t\t$(\"#select_config_legend\").html(\"Inspect Process [\"+result.name+\"]\");\t\t\t\n");
      out.write("\t\t\t$(\"#selected_config_table > tbody\").html(json2html.transform(result.configList, config_xlat));\n");
      out.write("\t\t\t$(\"#selected_config_table\").tablesorter({widgets: [\"zebra\"]}).trigger(\"update\");\t\t\t\n");
      out.write("\t\t\t$(\"#inspect_results_div\").html(\"\");\t\t\t\n");
      out.write("\t\t\t$(\"#inspect_results_div\").html(json2html.transform(result.configList, inspect_results_xlat));\n");
      out.write("\t\t\t\n");
      out.write("\t\t\tbind_detail_log();\n");
      out.write("\t\t\tdetail_ana_log();\n");
      out.write("\t\t},\n");
      out.write("\t\terror: function(e) {\n");
      out.write("\t\t\tajax_err_handle(e);\n");
      out.write("\t\t}\n");
      out.write("\t});\n");
      out.write("}\n");
      out.write("\n");
      out.write("/**\n");
      out.write("*\n");
      out.write("*/\n");
      out.write("function load_profile() {\n");
      out.write("\tjQuery.ajax({\n");
      out.write("\t\turl: \"get_profile.jsp\",\n");
      out.write("\t\tcache: false,\n");
      out.write("\t\tdataType: \"json\",\n");
      out.write("\t\tsuccess: function(result) {\n");
      out.write("\t\t\tif (result.good == false) {\n");
      out.write("\t\t\t\talert(\"load_profile: \"+result.cause);\n");
      out.write("\t\t\t\treturn;\n");
      out.write("\t\t\t}\n");
      out.write("\t\t\t\n");
      out.write("\t\t\tif (\"profile_select\" == \"profile_select\") {\n");
      out.write("\t\t\t\t$(\"#profile_select\").html(json2html.transform(result, profile_select_xlat));\n");
      out.write("\t\t\t\t$(\"#profile_select\").change();\n");
      out.write("//\t\t\t\t$(\"#profile_select\").val('').trigger(\"chosen:updated\");\n");
      out.write("\t\t\t}\n");
      out.write("\t\t\t\n");
      out.write("\t\t\tif (\"profile_tree\" == \"profile_tree\") {\n");
      out.write("\t\t\t\tvar id = 0;\n");
      out.write("\t\t\t\tvar data = [];\n");
      out.write("\t\t\t\t$.each(result, function(i, profile){\n");
      out.write("\t\t\t\t\tdata.push({\n");
      out.write("\t\t\t\t\t\tid: \"p_\"+profile.id,\n");
      out.write("\t\t\t\t\t\tparent: '#',\n");
      out.write("\t\t\t\t\t\ttext: profile.name,\n");
      out.write("\t\t\t\t\t});\n");
      out.write("\t\t\t\t\t$.each(profile.configList, function(k, config){\n");
      out.write("\t\t\t\t\t\tdata.push({\n");
      out.write("\t\t\t\t\t\t\tid: \"c_\"+profile.id+\"_\"+config.id,\n");
      out.write("\t\t\t\t\t\t\ttext: config.name,\n");
      out.write("\t\t\t\t\t\t\tparent: \"p_\"+profile.id,\n");
      out.write("\t\t\t\t\t\t});\n");
      out.write("\t\t\t\t\t});\n");
      out.write("\t\t\t\t});\n");
      out.write("\t\t\t\t\n");
      out.write("\t\t\t\t$(\"#profile_tree\").jstree(\"destroy\")\n");
      out.write("\t\t\t\t.jstree({\n");
      out.write("\t\t\t\t\tplugins: [\"themes\",\"html_data\",\"ui\",\"crrm\",\"search\",\"types\",\"hotkeys\",\"contextmenu\"],\n");
      out.write("\t\t\t   \t\tthemes: {'theme' : 'default', 'dots' : false, 'icons' : true},\n");
      out.write("\t\t\t\t\tsearch : {'case_insensitive' : true},\n");
      out.write("\t\t\t\t\tcore: {\n");
      out.write("\t\t\t\t\t\tdata: data,\n");
      out.write("\t\t\t\t\t},\n");
      out.write("\t\t\t\t\t/*\n");
      out.write("\t\t\t        'types': {\n");
      out.write("\t\t\t            'selectable': {\n");
      out.write("\t\t\t                'icon': 'http://elpidio.tools4software.com/images/icon-ok-small.png'\n");
      out.write("\t\t\t            },\n");
      out.write("\t\t\t            'default': {\n");
      out.write("\t\t\t                'icon': 'http://www.fabulatech.com/printer-for-remote-desktop-server-help/img/icons/warning-small.gif'\n");
      out.write("\t\t\t            }\n");
      out.write("\t\t\t        },\n");
      out.write("\t\t\t        */\n");
      out.write("\t\t\t\t})\n");
      out.write("\t\t\t\t.bind('loaded.jstree', function(event, data){\n");
      out.write("\t\t            //트리 로딩 롼료 이벤트\n");
      out.write("\t\t\t\t})\n");
      out.write("\t\t\t\t.bind('select_node.jstree', function(event, data){\n");
      out.write("\t\t\t\t\t//노드 선택 이벤트\n");
      out.write("\t\t\t\t\tvar profile_id = extract_profile_id(data.selected[0]);\n");
      out.write("\t\t\t\t\tvar config_id = extract_config_id(data.selected[0]);\n");
      out.write("\t\t\t\t\tif (config_id != \"\") {\n");
      out.write("\t\t\t\t\t\t\n");
      out.write("\t\t\t\t\t} else  if (profile_id != \"\") {\n");
      out.write("\t\t\t\t\t\tload_selected_profile(profile_id);\n");
      out.write("\t\t\t\t\t}\n");
      out.write("\t\t\t\t})\n");
      out.write("\t\t\t}\n");
      out.write("\t\t},\n");
      out.write("\t\terror: function(e) {\n");
      out.write("\t\t\tajax_err_handle(e);\n");
      out.write("\t\t}\n");
      out.write("\t});\n");
      out.write("}\n");
      out.write("\n");
      out.write("/**\n");
      out.write("*\n");
      out.write("*/\n");
      out.write("var wifidev_ifname_xlat = {\n");
      out.write("\t\t\"tag\":\"option\",\"value\":\"$\\{ifname\\}\",\"html\":\"$\\{ifname\\}\"};\t\t\n");
      out.write("var wifidev_list_xlat = {\n");
      out.write("\ttag: \"tr\",\n");
      out.write("\tchildren: [\n");
      out.write("\t\t{\"tag\":\"td\",\"html\":\"$\\{phy\\}\"},\n");
      out.write("\t\t{\"tag\":\"td\",\"html\":\"$\\{ifname\\}\"},\n");
      out.write("\t\t{\"tag\":\"td\",\"html\":\"$\\{driver\\}\"},\n");
      out.write("\t\t{\"tag\":\"td\",\"html\":\"$\\{chipset\\}\"},\n");
      out.write("\t\t{\"tag\":\"td\",\"html\":\"$\\{monitor\\}\"},\n");
      out.write("\t]\n");
      out.write("};\n");
      out.write("\n");
      out.write("/**\n");
      out.write("*\n");
      out.write("*/\n");
      out.write("function clear_wifidev() {\n");
      out.write("\t$(\"#wifidev_table > tbody\").empty();\n");
      out.write("}\n");
      out.write("\n");
      out.write("/**\n");
      out.write("*\n");
      out.write("*/\n");
      out.write("function load_wifidev() {\n");
      out.write("\tjQuery.ajax({\n");
      out.write("\t\turl: \"wifidriver_json.jsp\",\n");
      out.write("\t\tcache: false,\n");
      out.write("\t\tbeforeSend: clear_wifidev,\n");
      out.write("\t\tdataType: \"json\",\n");
      out.write("\t\tsuccess: function(result) {\n");
      out.write("\t\t\tif (result.good == false) {\n");
      out.write("\t\t\t\talert(\"load_wifidev: \"+result.cause);\n");
      out.write("\t\t\t\treturn;\n");
      out.write("\t\t\t}\n");
      out.write("\t\t\t$(\"#wifidev_table > tbody\")\n");
      out.write("\t\t\t.html(json2html.transform(result, wifidev_list_xlat));\n");
      out.write("\t\t},\n");
      out.write("\t\terror: function(e) {\n");
      out.write("\t\t\talert(\"load_wifidev: \"+e.responseText);  \n");
      out.write("\t\t}\n");
      out.write("\t});\n");
      out.write("}\t\n");
      out.write("\n");
      out.write("/**\n");
      out.write("*\n");
      out.write("*/\n");
      out.write("function inspect_process_table(id, name, progress, progress_label) {\n");
      out.write("\treturn\n");
      out.write("\t\"<td>\"+id+\"</td>\"+\n");
      out.write("\t\"<td>\"+name+\"</td>\"+\n");
      out.write("\t\"<td>\"+\n");
      out.write("\t\t\"<div id='\"+progress+\"'>\"+\n");
      out.write("\t\t\t\"<div id='\"+progress_label+\"'>Ready...</div>\"+\n");
      out.write("\t\t\"</div>\"+\n");
      out.write("\t\"</td>\"+\n");
      out.write("\t\"<td></td>\";\n");
      out.write("}\n");
      out.write("\n");
      out.write("function detail_ana_log() {\t\n");
      out.write("\t$(\".detail_ana_img\").each(function() {\n");
      out.write("\t\t$(this).click(function() {\t\t\t\n");
      out.write("\t\t\tconfig_id = $(this).attr(\"config_id\");\n");
      out.write("\t\t\tjQuery.ajax({\n");
      out.write("\t\t\t\turl: \"inspect_analyze.jsp\",\n");
      out.write("\t\t\t\tdata: {config_id: config_id},\n");
      out.write("\t\t\t\tcache: false,\n");
      out.write("\t\t\t\tbeforeSend: function() {\n");
      out.write("\t\t\t\t},\n");
      out.write("\t\t\t\tdataType: \"json\",\n");
      out.write("\t\t\t\tsuccess: function(result) {\n");
      out.write("\t\t\t\t\tif (result.good == false) {\n");
      out.write("\t\t\t\t\t\talert(\"detail_ana_log: \"+result.cause);\n");
      out.write("\t\t\t\t\t\treturn;\n");
      out.write("\t\t\t\t\t}\n");
      out.write("\t\t\t\t\t\n");
      out.write("\t\t\t\t\t\n");
      out.write("\t\t\t\t},\n");
      out.write("\t\t\t\terror: function(e) {\n");
      out.write("\t\t\t\t\tajax_err_handle(e);\n");
      out.write("\t\t\t\t}\n");
      out.write("\t\t\t});\n");
      out.write("\t\t});\n");
      out.write("\t});\n");
      out.write("}\n");
      out.write("\n");
      out.write("/**\n");
      out.write("*\n");
      out.write("*/\n");
      out.write("function bind_detail_log() {\n");
      out.write("\t$(\".detail_log_img\").each(function() {\n");
      out.write("\t\t$(this).click(function() {\t\t\t\n");
      out.write("\t\t\ttarget_id = $(this).attr(\"target_id\");\n");
      out.write("\t\t\ttitle = $(\"#\"+target_id).children(\"legend\").text();\n");
      out.write("\t\t\t$(\"#detail_log_dialog\").dialog(\"option\", \"title\", title);\n");
      out.write("\t\t\t$(\"#detail_log_dialog\").dialog(\"option\", \"target\", $(this).attr(\"target\"));\n");
      out.write("\t\t\t$(\"#detail_log_dialog\").dialog(\"open\");\t\n");
      out.write("\t\t});\n");
      out.write("\t});\n");
      out.write("}\n");
      out.write("\n");
      out.write("var inspect_charts = {};\n");
      out.write("\n");
      out.write("$(document).ready(function() {\n");
      out.write("\t$(\".table\").tablesorter({widgets: [\"zebra\"]});\n");
      out.write("\t$(\".number_selectbox\").chosen();\n");
      out.write("\t\n");
      out.write("\tload_wifidev();\n");
      out.write("\tload_profile();\n");
      out.write("\t\n");
      out.write("\t/**\n");
      out.write("\t*\n");
      out.write("\t*/\n");
      out.write("\t$(\"#detail_log_dialog\").dialog({\n");
      out.write("\t\tautoOpen: false,\n");
      out.write("\t\tmodal: true,\n");
      out.write("\t\topen: function(event, ui) {\n");
      out.write("\t\t\t/*\n");
      out.write("\t\t    var t = $(this).parent(), w = window;\n");
      out.write("\t\t    t.offset({\n");
      out.write("\t\t    \ttop: (w.height() / 2) - (t.height() / 2),\n");
      out.write("\t\t    \tleft: (w.width() / 2) - (t.width() / 2)\n");
      out.write("\t\t    });\n");
      out.write("\t\t    */\n");
      out.write("\t\t\t\n");
      out.write("\t\t\t$(\"#detail_log_dialog\").empty();\n");
      out.write("\t\t\tvar table = $(\"#detail_log_dialog\").dialog(\"option\", \"target\");\n");
      out.write("\t\t\tvar new_table = $(\"#\"+table).clone().prependTo($(\"#detail_log_dialog\"));\n");
      out.write("\t\t\tnew_table.tablesorter({widgets: [\"zebra\"]}).trigger(\"update\");\n");
      out.write("\t\t},\n");
      out.write("\t\tshow: {\n");
      out.write("\t\t\teffect: \"blind\",\n");
      out.write("\t\t\tduration: 100\n");
      out.write("\t\t},\n");
      out.write("\t\thide: {\n");
      out.write("\t\t\teffect: \"explode\",\n");
      out.write("\t\t\tduration: 100\n");
      out.write("\t\t},\n");
      out.write("\t\twidth: \"90%\",\n");
      out.write("\t\theight: \"300\"\n");
      out.write("\t});\n");
      out.write("\t\n");
      out.write("\t/**\n");
      out.write("\t*\n");
      out.write("\t*/\n");
      out.write("\t$(\".closeable_img\").each(function() {\n");
      out.write("\t\tvar target = $(this).attr(\"target\");\n");
      out.write("\t\t$(this).attr({\"src\" : \"img/remove.svg\"});\n");
      out.write("\t\t$(this).click(function() {\n");
      out.write("\t\t\t$(\"#\"+target).toggle(\"slow\");\n");
      out.write("\t\t});\n");
      out.write("\t});\n");
      out.write("\t\n");
      out.write("\t\n");
      out.write("\t/**\n");
      out.write("\t*\n");
      out.write("\t*/\n");
      out.write("\t$(\".toggleable_img\").each(function() {\n");
      out.write("\t\tvar target = $(this).attr(\"target\");\t\t\n");
      out.write("\t\t$(this).attr({\"src\" : \"img/arrow-down.svg\"});\t\t\n");
      out.write("\t\t$(this).click(function() {\n");
      out.write("\t\t\tvar img = $(this);\n");
      out.write("\t\t\t$(\"#\"+target).toggle(\"slow\", function() {\n");
      out.write("\t\t\t\tif (img.attr(\"src\") == \"img/arrow-down.svg\") {\n");
      out.write("\t\t\t\t\timg.attr({\"src\" : \"img/arrow-up.svg\"});\n");
      out.write("\t\t\t\t} else {\n");
      out.write("\t\t\t\t\timg.attr({\"src\" : \"img/arrow-down.svg\"});\n");
      out.write("\t\t\t\t}\n");
      out.write("\t\t\t});\n");
      out.write("\t\t});\n");
      out.write("\t});\n");
      out.write("\t\n");
      out.write("\t/**\n");
      out.write("\t*\n");
      out.write("\t*/\t\n");
      out.write("\tvar ws;\n");
      out.write("\tvar host = '");
      out.print(request.getHeader("host"));
      out.write("';\n");
      out.write("\t$(\"#inspect_run_button\").click(function() {\n");
      out.write("\t\t\n");
      out.write("\t\tvar status = $(this).find(\"span\").html();\n");
      out.write("\t\tif (\"start\" == status) {\n");
      out.write("\t\t\tvar profile_id = $('#profile_tree').jstree('get_selected');\n");
      out.write("\t\t\tif (_isnull(profile_id)) {\n");
      out.write("\t\t\t\talert(\"please select the profile you want to inspect\");\n");
      out.write("\t\t\t\treturn;\n");
      out.write("\t\t\t}\n");
      out.write("\t\t\t\n");
      out.write("\t\t\t//ws = new WebSocket(\"ws://localhost:8080/wips-inspect/inspect\");\n");
      out.write("\t\t\tws = new WebSocket(\"ws://\"+host+\"/wips-inspect/inspect\");\n");
      out.write("\t\t\tws.onopen = function(msg) {\n");
      out.write("\t\t\t\t$(\"#inspect_run_button\").find(\"span\").html(\"stop\");\n");
      out.write("\t\t\t\t$(\".inspect_log_table > tbody\").empty();\t\t\t\t\n");
      out.write("\t\t\t\t// clear child div\n");
      out.write("\t\t\t\tfor (var div in inspect_charts) {\n");
      out.write("\t\t\t\t\tinspect_charts[div].empty();\n");
      out.write("\t\t\t\t}\n");
      out.write("\t\t\t\tinspect_charts = {};\n");
      out.write("\t\t\t\t\n");
      out.write("\t\t\t\tif (0) {\n");
      out.write("\t\t\t\t\tvar max_sec = parseInt($(\"#inspect_timer\").val()) + 2;\n");
      out.write("\t\t\t\t\t$(\".inspect_chart\").each(function(i){\n");
      out.write("\t\t\t\t\t\tvar id = $(this).attr(\"config\");\n");
      out.write("\t\t\t\t\t\tinspect_charts[id] \n");
      out.write("\t\t\t\t\t\t\t= inspectChart.generate(\"inspect_chart_\"+id, {\n");
      out.write("\t\t\t\t\t\t\t\t\titems: [\"shooter\", \"capture\"],\n");
      out.write("\t\t\t\t\t\t\t\t\tmax_sec: max_sec,\n");
      out.write("\t\t\t\t\t\t\t\t});\n");
      out.write("\t\t\t\t\t});\n");
      out.write("\t\t\t\t}\n");
      out.write("\t\t\t\t\n");
      out.write("\t\t\t\tvar params = {\n");
      out.write("\t\t\t\t\tstate: \"start\",\n");
      out.write("\t\t\t\t\ttimer: $(\"#inspect_timer\").val(),\n");
      out.write("\t\t\t\t\tprofileId: extract_profile_id(profile_id[0])\n");
      out.write("\t\t\t\t};\n");
      out.write("\t\t\t\tws.send(JSON.stringify(params));\n");
      out.write("\t\t\t}\n");
      out.write("\t\t\tws.onmessage = function(msg){\n");
      out.write("\t\t\t\tif (!_isnull(msg.data)) {\n");
      out.write("\t\t\t\t\tvar result = JSON.parse(msg.data);\n");
      out.write("\t\t\t\t\tif (result.good == false) {\n");
      out.write("\t\t\t\t\t\talert(\"inspect websocket: \"+result.cause);\n");
      out.write("\t\t\t\t\t\treturn;\n");
      out.write("\t\t\t\t\t}\n");
      out.write("\t\t\t\t\tif (result.good == true) {\n");
      out.write("\t\t\t\t\t\treturn;\n");
      out.write("\t\t\t\t\t}\n");
      out.write("\t\t\t\t\t\n");
      out.write("\t\t\t\t\t// append capture data to log-table\n");
      out.write("\t\t\t\t\tif (1) {\n");
      out.write("\t\t\t\t\t\t$(\"#inspect_log_table_\"+result.conf+\" > tbody:last\").append(get_inspect_log_table_html(result));\t\t\t\t\t\t\n");
      out.write("\t\t\t\t\t\t$(\"#inspect_log_table_\"+result.conf).tablesorter({widgets: [\"zebra\"]}).trigger(\"update\");\n");
      out.write("\t\t\t\t\t\t\n");
      out.write("\t\t\t\t\t\tvar _div = $(\"#inspect_log_div_\"+result.conf);\n");
      out.write("\t\t\t\t\t\t_div.scrollTop(_div[0].scrollHeight);\n");
      out.write("\t\t\t\t\t}\n");
      out.write("\t\t\t\t\t\n");
      out.write("\t\t\t\t\tif (1) {\n");
      out.write("\t\t\t\t\t\t// append capture data to chart\n");
      out.write("\t\t\t\t\t\tif (inspect_charts[result.conf] == undefined) {\n");
      out.write("\t\t\t\t\t\t\tvar max_sec = parseInt($(\"#inspect_timer\").val()) + 2;\n");
      out.write("\t\t\t\t\t\t\tinspect_charts[result.conf] \n");
      out.write("\t\t\t\t\t\t\t\t= inspectChart.generate(\"inspect_chart_\"+result.conf, {\n");
      out.write("\t\t\t\t\t\t\t\t\t\titems: [\"shooter\", \"capture\"],\n");
      out.write("\t\t\t\t\t\t\t\t\t\tmax_sec: max_sec,\n");
      out.write("\t\t\t\t\t\t\t\t\t});\n");
      out.write("\t\t\t\t\t\t}\n");
      out.write("\t\t\t\t\t\t// capture or shooter result\n");
      out.write("\t\t\t\t\t\tvar x = result.elapsed;\n");
      out.write("\t\t\t\t\t\tvar y = result.pwr;\n");
      out.write("\t\t\t\t\t\tif (result.key == 1) {\n");
      out.write("\t\t\t\t\t\t\t// capture chart\n");
      out.write("\t\t\t\t\t\t\tinspect_charts[result.conf].push(\"capture\", x, y);\n");
      out.write("\t\t\t\t\t\t} else if (result.key == 2) {\n");
      out.write("\t\t\t\t\t\t\t// shooter chart\n");
      out.write("\t\t\t\t\t\t\tinspect_charts[result.conf].push(\"shooter\", x, y);\n");
      out.write("\t\t\t\t\t\t}\n");
      out.write("\t\t\t\t\t}\n");
      out.write("\t\t\t\t}\n");
      out.write("\t\t\t}\n");
      out.write("\t\t\t\n");
      out.write("\t\t\tws.onerror = function(msg) {\n");
      out.write("\t\t\t\t$(\"#inspect_run_button\").find(\"span\").html(\"start\");\n");
      out.write("\t\t\t\tif (_isnull(msg) || \"error\" == msg.type) {\n");
      out.write("\t\t\t\t\talert(\"wins-inspect not running.\");\n");
      out.write("\t\t\t\t}\n");
      out.write("\t\t\t}\n");
      out.write("\t\t\tws.onclose = function() {\n");
      out.write("\t\t\t\t$(\"#inspect_run_button\").find(\"span\").html(\"start\");\n");
      out.write("\t\t\t}\n");
      out.write("\t\t}\n");
      out.write("\t\telse if (\"stop\" == status) {\n");
      out.write("\t\t\t$(this).find(\"span\").html(\"start\");\n");
      out.write("\t\t\tws.close();\n");
      out.write("\t\t}\n");
      out.write("\t});\n");
      out.write("\t\n");
      out.write("\t$(\"#profile_select\").change(function() {\n");
      out.write("\t\tvar profile_id = $(\"#profile_select option:selected\").val();\n");
      out.write("\t\tload_selected_profile(profile_id);\n");
      out.write("\t});\n");
      out.write("});\n");
      out.write("\n");
      out.write("</script>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
