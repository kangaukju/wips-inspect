/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.0.M15
 * Generated at: 2017-03-01 03:04:50 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class profile_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("\t<meta charset=\"utf-8\">\t\n");
      out.write("\t<style type=\"text/css\">\n");
      out.write("\t#all_config_table tbody tr.selected td {\n");
      out.write("\t\tbackground: none repeat scroll 0 0 #FFCF8B;\n");
      out.write("\t\tcolor: #000000;\n");
      out.write("\t}    \n");
      out.write("\t#selected_config_table tbody tr:hover td {\n");
      out.write("\t\tbackground: none repeat scroll 0 0 #FFCF8B;\n");
      out.write("\t\tcolor: #000000;\n");
      out.write("\t}\n");
      out.write("\t.pointer {\n");
      out.write("\t\tcursor: pointer;\n");
      out.write("\t}\n");
      out.write("\t.new_profile {\n");
      out.write("\t\twidth: 100%;\n");
      out.write("\t\tmargin-bottom: 10px;\n");
      out.write("\t}\n");
      out.write("\t.ui-widget, .ui-widget .ui-widget {                \n");
      out.write("\t\tfont-size: 12px !important;\n");
      out.write("\t}\n");
      out.write("\t</style>\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("\t<fieldset id=\"profile_fieldset_select\" class=\"tree main_fieldset\">\n");
      out.write("\t\t<legend>All Profile List</legend>\n");
      out.write("\t\t<div>\n");
      out.write("\t\t\t<select data-placeholder=\"Choose Profile...\" id=\"profile_select\"></select>\n");
      out.write("\t\t</div>\n");
      out.write("\t</fieldset>\n");
      out.write("\t\n");
      out.write("\t<fieldset id=\"profile_fieldset_jstree\" class=\"tree main_fieldset\">\n");
      out.write("\t\t<legend>All Profile List</legend>\n");
      out.write("\t\t<table>\n");
      out.write("\t\t\t<tr>\n");
      out.write("\t\t\t\t<td align=\"left\">\n");
      out.write("\t\t\t\t\t<a href=\"#\" class=\"btn btn-inline btn-mini\" id=\"jstree_expand\"><span>Expand</span></a> \n");
      out.write("\t\t\t\t\t<a href=\"#\" class=\"btn btn-inline btn-mini\" id=\"jstree_collapse\"><span>Collapse</span></a>\n");
      out.write("\t\t\t\t</td>\n");
      out.write("\t\t\t</tr>\n");
      out.write("\t\t</table>\n");
      out.write("\t\t<!-- <div style=\"overflow:scroll; overflow-x: hidden; height:150px;\"> -->\n");
      out.write("\t\t<div>\n");
      out.write("\t\t\t<div id=\"profile_tree\">\n");
      out.write("\t\t\t</div>\n");
      out.write("\t\t</div>\n");
      out.write("\t\t<div class=\"new_profile\" align=\"right\">\n");
      out.write("\t\t\tname <input type=\"text\" id=\"add_profile_text\" style=\"width: 200px;\">\n");
      out.write("\t\t\t<a href=\"#\" class=\"btn btn-inline btn-mini btn-success\" id=\"add_profile_button\"><span>New Profile</span></a>\n");
      out.write("\t\t\t<a href=\"#\" class=\"btn btn-inline btn-mini btn-danger\" id=\"delete\"><span>Delete</span></a>\n");
      out.write("\t\t</div>\n");
      out.write("\t\t<fieldset class=\"selected_config sub_fieldset\">\n");
      out.write("\t\t\t<legend id=\"select_config_legend\">Selected config</legend>\n");
      out.write("\t\t\t<table id=\"selected_config_table\" class=\"table\">\n");
      out.write("\t\t\t\t<thead>\n");
      out.write("\t\t\t\t\t<tr>\n");
      out.write("\t\t\t\t\t\t<th>id</th>\n");
      out.write("\t\t\t\t\t\t<th>name</th>\n");
      out.write("\t\t\t\t\t\t<th data-sorter=\"false\">capture</th>\n");
      out.write("\t\t\t\t\t\t<th data-sorter=\"false\">shooter</th>\n");
      out.write("\t\t\t\t\t\t<th data-sorter=\"false\">created</th>\n");
      out.write("\t\t\t\t\t\t<th data-sorter=\"false\">updated</th>\n");
      out.write("\t\t\t\t\t</tr>\n");
      out.write("\t\t\t\t</thead>\n");
      out.write("\t\t\t\t<tbody></tbody>\n");
      out.write("\t\t\t</table>\n");
      out.write("\t\t</fieldset>\n");
      out.write("\t</fieldset>\n");
      out.write("\n");
      out.write("\t<fieldset class=\"all_config main_fieldset\">\n");
      out.write("\t\t<legend>All Config List</legend>\n");
      out.write("\t\t<table>\n");
      out.write("\t\t\t<tr>\n");
      out.write("\t\t\t\t<td align=\"right\">\n");
      out.write("\t\t\t\t\t<a href=\"#\" class=\"btn btn-inline btn-mini btn-success\" id=\"add_config_button\"><span>Add Config</span></a>\n");
      out.write("\t\t\t\t</td>\n");
      out.write("\t\t\t</tr>\n");
      out.write("\t\t</table>\n");
      out.write("\t\t<table id=\"all_config_table\" class=\"table\">\t\t\n");
      out.write("\t\t\t<thead>\n");
      out.write("\t\t\t\t<tr>\n");
      out.write("\t\t\t\t\t<th>id</th>\n");
      out.write("\t\t\t\t\t<th>name</th>\n");
      out.write("\t\t\t\t\t<th data-sorter=\"false\">capture</th>\n");
      out.write("\t\t\t\t\t<th data-sorter=\"false\">shooter</th>\n");
      out.write("\t\t\t\t\t<th data-sorter=\"false\">created</th>\n");
      out.write("\t\t\t\t\t<th data-sorter=\"false\">updated</th>\n");
      out.write("\t\t\t\t</tr>\n");
      out.write("\t\t\t</thead>\n");
      out.write("\t\t\t<tbody></tbody>\n");
      out.write("\t\t</table>\n");
      out.write("\t</fieldset>\n");
      out.write("</body>\n");
      out.write("\n");
      out.write("<script type=\"text/javascript\">\n");
      out.write("\n");
      out.write("var profile_select_xlat = {\n");
      out.write("\t\ttag: \"option\",\n");
      out.write("\t\thtml: \"$\\{name\\}\",\n");
      out.write("\t\tvalue: \"$\\{id\\}\",\n");
      out.write("};\n");
      out.write("\n");
      out.write("var config_xlat = {\n");
      out.write("\t\ttag: \"tr\",\n");
      out.write("\t\tid: \"$\\{id\\}\",\n");
      out.write("\t\tname: \"$\\{name\\}\",\n");
      out.write("\t\tclass:\"pointer\",\n");
      out.write("\t\tchildren: [\n");
      out.write("\t\t\t{\"tag\":\"td\", \"html\":\"$\\{id\\}\"},\n");
      out.write("\t\t\t{\"tag\":\"td\", \"html\":\"$\\{name\\}\"},\n");
      out.write("\t\t\t{\"tag\":\"td\", \"html\":\"$\\{capturexml\\}\", \"class\":\"capture_xml\"},\n");
      out.write("\t\t\t{\"tag\":\"td\", \"html\":\"$\\{shooterxml\\}\", \"class\":\"shooter_xml\"},\n");
      out.write("\t\t\t{\"tag\":\"td\", \"html\":\"$\\{created\\}\"},\n");
      out.write("\t\t\t{\"tag\":\"td\", \"html\":\"$\\{updated\\}\"},\n");
      out.write("\t\t]\n");
      out.write("};\n");
      out.write("\n");
      out.write("function load_selected_config(config_id) {\n");
      out.write("\tjQuery.ajax({\n");
      out.write("\t\turl: \"get_config.jsp\",\n");
      out.write("\t\tdata: {id: config_id},\n");
      out.write("\t\tcache: false,\n");
      out.write("\t\tbeforeSend: function() {\n");
      out.write("\t\t\t$(\"#selected_config_table > tbody\").empty();\n");
      out.write("\t\t},\n");
      out.write("\t\tdataType: \"json\",\n");
      out.write("\t\tsuccess: function(result) {\n");
      out.write("\t\t\tif (result.good == false) {\n");
      out.write("\t\t\t\talert(result.cause);\n");
      out.write("\t\t\t\treturn;\n");
      out.write("\t\t\t}\n");
      out.write("\t\t\t\n");
      out.write("\t\t\t$(\"#select_config_legend\").html(\"Selected Config [\"+result.name+\"]\");\n");
      out.write("\t\t\t\n");
      out.write("\t\t\t$(\"#selected_config_table > tbody\").html(json2html.transform(result, config_xlat));\n");
      out.write("\n");
      out.write("\t\t\t$(\"#selected_config_table\").tablesorter({\n");
      out.write("\t\t\t\twidgets: ['zebra'],\n");
      out.write("\t\t\t}).trigger(\"update\");\n");
      out.write("\t\t},\n");
      out.write("\t\terror: function(e) {\n");
      out.write("\t\t\tajax_err_handle(e);\n");
      out.write("\t\t}\n");
      out.write("\t});\n");
      out.write("}\n");
      out.write("\n");
      out.write("function load_selected_profile(profile_id) {\n");
      out.write("\tjQuery.ajax({\n");
      out.write("\t\turl: \"get_profile.jsp\",\n");
      out.write("\t\tdata: {id: profile_id},\n");
      out.write("\t\tcache: false,\n");
      out.write("\t\tbeforeSend: function() {\n");
      out.write("\t\t\t$(\"#selected_config_table > tbody\").empty();\n");
      out.write("\t\t},\n");
      out.write("\t\tdataType: \"json\",\n");
      out.write("\t\tsuccess: function(result) {\n");
      out.write("\t\t\tif (result.good == false) {\n");
      out.write("\t\t\t\talert(result.cause);\n");
      out.write("\t\t\t\treturn;\n");
      out.write("\t\t\t}\n");
      out.write("\t\t\t\n");
      out.write("\t\t\t$(\"#select_config_legend\").html(\"Selected Profile [\"+result.name+\"]\");\n");
      out.write("\t\t\t\n");
      out.write("\t\t\t$(\"#selected_config_table > tbody\").html(json2html.transform(result.configList, config_xlat));\n");
      out.write("\n");
      out.write("\t\t\t$(\"#selected_config_table\").tablesorter({\n");
      out.write("\t\t\t\twidgets: ['zebra'],\n");
      out.write("\t\t\t}).trigger(\"update\");\n");
      out.write("\t\t},\n");
      out.write("\t\terror: function(e) {\n");
      out.write("\t\t\tajax_err_handle(e);\n");
      out.write("\t\t}\n");
      out.write("\t});\n");
      out.write("}\n");
      out.write("\n");
      out.write("function load_all_config() {\n");
      out.write("\tjQuery.ajax({\n");
      out.write("\t\turl: \"get_config.jsp\",\n");
      out.write("\t\tcache: false,\n");
      out.write("\t\tbeforeSend: function() {\n");
      out.write("\t\t\t$(\"#all_config_table > tbody\").empty();\n");
      out.write("\t\t},\n");
      out.write("\t\tdataType: \"json\",\n");
      out.write("\t\tsuccess: function(result) {\n");
      out.write("\t\t\tif (result.good == false) {\n");
      out.write("\t\t\t\talert(result.cause);\n");
      out.write("\t\t\t\treturn;\n");
      out.write("\t\t\t}\n");
      out.write("\t\t\t\n");
      out.write("\t\t\t$(\"#all_config_table > tbody\").html(json2html.transform(result, config_xlat));\n");
      out.write("\n");
      out.write("\t\t\t$(\"#all_config_table\").tablesorter({\n");
      out.write("\t\t\t\twidgets: ['zebra'],\n");
      out.write("\t\t\t}).trigger(\"update\");\n");
      out.write("\t\t\t\n");
      out.write("\t\t\t$(\"#all_config_table tr\").on('click', function(evt) {        \n");
      out.write("\t\t\t\t$(this).toggleClass('selected'); \n");
      out.write("\t\t\t});\n");
      out.write("\t\t},\n");
      out.write("\t\terror: function(e) {\n");
      out.write("\t\t\tajax_err_handle(e);\n");
      out.write("\t\t}\n");
      out.write("\t});\n");
      out.write("}\n");
      out.write("\n");
      out.write("function load_profile() {\n");
      out.write("\tjQuery.ajax({\n");
      out.write("\t\turl: \"get_profile.jsp\",\n");
      out.write("\t\tcache: false,\n");
      out.write("\t\tdataType: \"json\",\n");
      out.write("\t\tsuccess: function(result) {\n");
      out.write("\t\t\tif (result.good == false) {\n");
      out.write("\t\t\t\talert(\"load_profile: \"+result.cause);\n");
      out.write("\t\t\t\treturn;\n");
      out.write("\t\t\t}\n");
      out.write("\t\t\t\n");
      out.write("\t\t\t/* profile list to select box */\n");
      out.write("\t\t\tif (1) {\n");
      out.write("\t\t\t\t$(\"#profile_select\").html(json2html.transform(result, profile_select_xlat));\n");
      out.write("\t\t\t\t$(\"#profile_select\").change();\n");
      out.write("\t\t\t} else {\n");
      out.write("\t\t\t\t$(\"#profile_fieldset_select\").hide();\n");
      out.write("\t\t\t}\n");
      out.write("\t\t\t\n");
      out.write("\t\t\t/* profile list to jstree */\n");
      out.write("\t\t\tif (1) {\n");
      out.write("\t\t\t\tvar id = 0;\n");
      out.write("\t\t\t\tvar data = [];\n");
      out.write("\t\t\t\t$.each(result, function(i, profile){\n");
      out.write("\t\t\t\t\tdata.push({\n");
      out.write("\t\t\t\t\t\tid: \"p_\"+profile.id,\n");
      out.write("\t\t\t\t\t\tparent: '#',\n");
      out.write("\t\t\t\t\t\ttext: profile.name,\n");
      out.write("\t\t\t\t\t});\n");
      out.write("\t\t\t\t\t$.each(profile.configList, function(k, config){\n");
      out.write("\t\t\t\t\t\tdata.push({\n");
      out.write("\t\t\t\t\t\t\tid: \"c_\"+profile.id+\"_\"+config.id,\n");
      out.write("\t\t\t\t\t\t\ttext: config.name,\n");
      out.write("\t\t\t\t\t\t\tparent: \"p_\"+profile.id,\n");
      out.write("\t\t\t\t\t\t});\n");
      out.write("\t\t\t\t\t});\n");
      out.write("\t\t\t\t});\n");
      out.write("\t\t\t\t\n");
      out.write("\t\t\t\t$(\"#profile_tree\").jstree(\"destroy\").jstree({\n");
      out.write("\t\t\t\t\tplugins: [\"themes\",\"html_data\",\"ui\",\"crrm\",\"search\",\"types\",\"hotkeys\",\"contextmenu\"],\n");
      out.write("\t\t\t   \t\tthemes: {'theme' : 'default', 'dots' : false, 'icons' : true},\n");
      out.write("\t\t\t\t\tsearch : {'case_insensitive' : true},\n");
      out.write("\t\t\t\t\tcore: {\n");
      out.write("\t\t\t\t\t\tdata: data,\n");
      out.write("\t\t\t\t\t},\n");
      out.write("\t\t\t\t\tcontextmenu: {\n");
      out.write("\t\t\t\t\t\t\"items\" : {}\n");
      out.write("\t\t\t\t\t},\n");
      out.write("\t\t\t\t})\n");
      out.write("\t\t\t\t.bind('loaded.jstree', function(event, data){\n");
      out.write("\t\t            //트리 로딩 롼료 이벤트\n");
      out.write("\t\t\t\t\t$(\"#profile_tree\").jstree(\"open_all\");\n");
      out.write("\t\t\t\t})\n");
      out.write("\t\t\t\t.bind('select_node.jstree', function(event, data){\n");
      out.write("\t\t\t\t\t//노드 선택 이벤트\n");
      out.write("\t\t\t\t\tvar profile_id = extract_profile_id(data.selected[0]);\n");
      out.write("\t\t\t\t\tvar config_id = extract_config_id(data.selected[0]);\n");
      out.write("\t\t\t\t\tif (config_id != \"\") {\n");
      out.write("\t\t\t\t\t\tload_selected_config(config_id)\n");
      out.write("\t\t\t\t\t} else if (profile_id != \"\") {\n");
      out.write("\t\t\t\t\t\tload_selected_profile(profile_id);\n");
      out.write("\t\t\t\t\t}\n");
      out.write("\t\t\t\t})\n");
      out.write("\t\t\t} else {\n");
      out.write("\t\t\t\t$(\"#profile_fieldset_jstree\").hide();\n");
      out.write("\t\t\t}\n");
      out.write("\t\t},\n");
      out.write("\t\terror: function(e) {\n");
      out.write("\t\t\tajax_err_handle(e);\n");
      out.write("\t\t}\n");
      out.write("\t});\n");
      out.write("}\n");
      out.write("\n");
      out.write("function add_profile(name) {\n");
      out.write("\tjQuery.ajax({\n");
      out.write("\t\turl: \"set_profile.jsp\",\n");
      out.write("\t\tdata: {name: name},\n");
      out.write("\t\tcache: false,\n");
      out.write("\t\tdataType: \"json\",\n");
      out.write("\t\tsuccess: function(result) {\n");
      out.write("\t\t\tif (result.good == false) {\n");
      out.write("\t\t\t\talert(result.cause);\n");
      out.write("\t\t\t\treturn;\n");
      out.write("\t\t\t}\n");
      out.write("\t\t\tload_profile();\n");
      out.write("\t\t\t$(\"#add_profile_text\").val(\"\");\n");
      out.write("\t\t},\n");
      out.write("\t\terror: function(e) {\n");
      out.write("\t\t\tajax_err_handle(e);\n");
      out.write("\t\t}\n");
      out.write("\t});\n");
      out.write("}\n");
      out.write("\n");
      out.write("function delete_profile_config(profile_id, config_id, reload) {\t\n");
      out.write("\tjQuery.ajax({\n");
      out.write("\t\turl: \"del_profile.jsp\",\n");
      out.write("\t\tdata: { \n");
      out.write("\t\t\tprofile_id: profile_id,\n");
      out.write("\t\t\tconfig_id: config_id,\n");
      out.write("\t\t},\n");
      out.write("\t\tcache: false,\n");
      out.write("\t\tdataType: \"json\",\n");
      out.write("\t\tsuccess: function(result) {\n");
      out.write("\t\t\tif (result.good == false) {\n");
      out.write("\t\t\t\talert(result.cause);\n");
      out.write("\t\t\t\treturn;\n");
      out.write("\t\t\t}\n");
      out.write("\t\t\tif (reload) {\n");
      out.write("\t\t\t\tload_profile();\n");
      out.write("\t\t\t}\n");
      out.write("\t\t},\n");
      out.write("\t\terror: function(e) {\n");
      out.write("\t\t\tajax_err_handle(e);\n");
      out.write("\t\t}\n");
      out.write("\t});\n");
      out.write("}\n");
      out.write("\n");
      out.write("$(document).ready(function() {\n");
      out.write("\t$(\".table\").tablesorter({\n");
      out.write("\t\twidgets: ['zebra'],\n");
      out.write("\t}).trigger(\"update\");\n");
      out.write("\t\n");
      out.write("\t/* profile list */\n");
      out.write("\tload_profile();\n");
      out.write("\t\n");
      out.write("\tload_all_config();\n");
      out.write("\t\n");
      out.write("\t$(\"#delete\").click(function() {\n");
      out.write("\t\tvar node = $('#profile_tree').jstree('get_selected');\n");
      out.write("\t\tif (_isnull(node)) {\n");
      out.write("\t\t\talert(\"please select the profile or config\");\n");
      out.write("\t\t\treturn;\n");
      out.write("\t\t}\n");
      out.write("\t\t\n");
      out.write("\t\tif (!confirm(\"Are you sure delete profile or config ?\")) {\n");
      out.write("\t\t\treturn;\n");
      out.write("\t\t}\n");
      out.write("\t\t\t\t\n");
      out.write("\t\tfor (var i=0; i<node.length; i++) {\n");
      out.write("\t\t\tvar profile_id = extract_profile_id(node[i]);\n");
      out.write("\t\t\tvar config_id = extract_config_id(node[i]);\n");
      out.write("\t\t\tvar reload = (i == node.length-1);\n");
      out.write("\t\t\tdelete_profile_config(profile_id, config_id, reload);\n");
      out.write("\t\t}\t\t\n");
      out.write("\t});\n");
      out.write("\t\n");
      out.write("\t$(\"#add_profile_button\").click(function() {\n");
      out.write("\t\tvar profile_name = $(\"#add_profile_text\").val();\n");
      out.write("\t\tif (profile_name != \"\") {\n");
      out.write("\t\t\tadd_profile(profile_name);\n");
      out.write("\t\t}\n");
      out.write("\t});\n");
      out.write("\t\n");
      out.write("\t$(\"#add_config_button\").click(function() {\n");
      out.write("\t\tvar configs = $(\"#all_config_table .selected\");\n");
      out.write("\t\tif (configs.length == 0) {\n");
      out.write("\t\t\talert(\"please select the config you want to add to profile\");\n");
      out.write("\t\t\treturn;\n");
      out.write("\t\t}\n");
      out.write("\t\tvar profile_id = $('#profile_tree').jstree('get_selected');\n");
      out.write("//\t\tif (profile_id == null || profile_id == undefined || profile_id.length == 0) {\n");
      out.write("\t\tif (_isnull(profile_id)) {\n");
      out.write("\t\t\talert(\"please select the profile you want to add to config\");\n");
      out.write("\t\t\treturn;\n");
      out.write("\t\t}\n");
      out.write("\t\t\n");
      out.write("\t\tprofile_id = extract_profile_id(profile_id[0]);\n");
      out.write("\t\tif (profile_id == \"\") {\n");
      out.write("\t\t\talert(\"please select the profile you want to add to config\");\n");
      out.write("\t\t\treturn;\n");
      out.write("\t\t}\n");
      out.write("\t\t\n");
      out.write("\t\tvar params = \"?profile_id=\"+profile_id;\n");
      out.write("\t\tfor (var i=0; i<configs.length; i++) {\n");
      out.write("\t\t\tparams += \"&config_id=\"+configs[i].id;\n");
      out.write("\t\t}\t\t\n");
      out.write("\t\tjQuery.ajax({\n");
      out.write("\t\t\turl: \"set_profile.jsp\"+params,\n");
      out.write("\t\t\tcache: false,\n");
      out.write("\t\t\tdataType: \"json\",\n");
      out.write("\t\t\tsuccess: function(result) {\n");
      out.write("\t\t\t\tif (result.good == false) {\n");
      out.write("\t\t\t\t\talert(result.cause);\n");
      out.write("\t\t\t\t\treturn;\n");
      out.write("\t\t\t\t}\n");
      out.write("\t\t\t\t\n");
      out.write("\t\t\t\tload_profile();\n");
      out.write("\t\t\t\t$(\"#add_profile_text\").val(\"\");\t\t\t\t\n");
      out.write("\t\t\t\t$(\"#all_config_table tr\").removeClass('selected');\n");
      out.write("\t\t\t},\n");
      out.write("\t\t\terror: function(e) {\n");
      out.write("\t\t\t\tajax_err_handle(e);\n");
      out.write("\t\t\t}\n");
      out.write("\t\t});\n");
      out.write("//\t\tconsole.log(configs);\n");
      out.write("\t});\n");
      out.write("\t\n");
      out.write("\t$(\"#jstree_collapse\").click(function(){\n");
      out.write("\t\t$(\"#profile_tree\").jstree(\"close_all\");\n");
      out.write("\t});\n");
      out.write("\t\n");
      out.write("\t$(\"#jstree_expand\").click(function(){\n");
      out.write("\t\t$(\"#profile_tree\").jstree(\"open_all\");\n");
      out.write("\t});\n");
      out.write("\t\n");
      out.write("\t$(\"#profile_select\").change(function() {\n");
      out.write("\t\tvar profile_id = $(\"#profile_select option:selected\").val();\n");
      out.write("\t\tload_selected_profile(profile_id);\n");
      out.write("\t});\n");
      out.write("});\n");
      out.write("</script>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
